<?php
/**
 *  Copyright 2015 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace {{invokerNamespace}};

class ApiConfiguration {

  private static $defaultConfiguration = null;

  /**
   * Associate array to store API key(s)
   */
  protected $apiKeys = array();

  /**
   * Associate array to store API prefix (e.g. Bearer)
   */
  protected $apiKeyPrefixes = array();

  /**
   * Username for HTTP basic authentication
   */
  protected $username = '';

  /**
   * Password for HTTP basic authentication
   */
  protected $password = '';

  /**
   * Debug switch (default set to false)
   */
  protected $debug = false;

  /**
   * Debug file location (log to STDOUT by default)
   */
  protected $debugFile = 'php://output';

  /**
   * @param string $key
   * @param string $value
   * @return ApiConfiguration
   */
  public function setApiKey($key, $value) {
    $this->apiKeys[$key] = $value;
    return $this;
  }

  /**
   * @param $key
   * @return string
   */
  public function getApiKey($key) {
    return isset($this->apiKeys[$key]) ? $this->apiKeys[$key] : null;
  }

  /**
   * @param string $key
   * @param string $value
   * @return ApiConfiguration
   */
  public function setApiKeyPrefix($key, $value) {
    $this->apiKeyPrefixes[$key] = $value;
    return $this;
  }

  /**
   * @param $key
   * @return string
   */
  public function getApiKeyPrefix($key) {
    return isset($this->apiKeyPrefixes[$key]) ? $this->apiKeyPrefixes[$key] : null;
  }

  /**
   * @param string $username
   * @return ApiConfiguration
   */
  public function setUsername($username) {
    $this->username = $username;
    return $this;
  }

  /**
   * @return string
   */
  public function getUsername() {
    return $this->username;
  }

  /**
   * @param string $password
   * @return ApiConfiguration
   */
  public function setPassword($password) {
    $this->password = $password;
    return $this;
  }

  /**
   * @return string
   */
  public function getPassword() {
    return $this->password;
  }

  /**
   * @param bool $debug
   * @return ApiConfiguration
   */
  public function setDebug($debug) {
    $this->debug = $debug;
    return $this;
  }

  /**
   * @return bool
   */
  public function getDebug() {
    return $this->debug;
  }

  /**
   * @param string $debugFile
   * @return ApiConfiguration
   */
  public function setDebugFile($debugFile) {
    $this->debugFile = $debugFile;
    return $this;
  }

  /**
   * @return string
   */
  public function getDebugFile() {
    return $this->debugFile;
  }

  /**
   * @return ApiConfiguration
   */
  public static function getDefaultConfiguration() {
    if (self::$defaultConfiguration == null) {
      return new ApiConfiguration();
    }

    return self::$defaultConfiguration;
  }

  public static function setDefaultConfiguration(ApiConfiguration $config) {
    self::$defaultConfiguration = $config;
  }
}
