# {{projectName}}

{{moduleName}} - JavaScript client for {{projectName}}

Version: {{projectVersion}}

Automatically generated by the JavaScript Swagger Codegen project:

- Build date: {{generatedDate}}
- Build package: {{generatorClass}}

## Installation

### Use in [Node.js](https://nodejs.org/)

The generated client is valid [npm](https://www.npmjs.com/) package, you can publish it as described
in [Publishing npm packages](https://docs.npmjs.com/getting-started/publishing-npm-packages).

After that, you can install it into your project via:

```shell
npm install {{{projectName}}} --save
```

You can also host the generated client as a git repository on github, e.g.
https://github.com/YOUR_USERNAME/{{projectName}}

Then you can install it via:

```shell
npm install YOUR_USERNAME/{{{projectName}}} --save
```

### Use in browser with [browserify](http://browserify.org/)

The client also works in browser environment via npm and browserify. After following
the above steps with Node.js and installing browserify with `npm install -g browserify`,
you can do this in your project (assuming *main.js* is your entry file):

```shell
browserify main.js > bundle.js
```

The generated *bundle.js* can now be included in your HTML pages.

## Getting Started

```javascript
var {{{moduleName}}} = require('{{{projectName}}}');

var defaultClient = {{{moduleName}}}.ApiClient.default;
defaultClient.timeout = 10 * 1000;
defaultClient.defaultHeaders['Test-Header'] = 'test_value';

// Assuming there's a `PetApi` containing a `getPetById` method
// which returns a model object:
var api = new {{{moduleName}}}.PetApi();
api.getPetById(2, function(err, pet, resp) {
  console.log('HTTP status code: ' + resp.status);
  console.log('Response Content-Type: ' + resp.get('Content-Type'));
  if (err) {
    console.error(err);
  } else {
    console.log(pet);
  }
});
```

## Documentation for API Endpoints

All URIs are relative to *{{basePath}}*

Class | Method | HTTP request | Description
------------ | ------------- | ------------- | -------------
{{#apiInfo}}{{#apis}}{{#operations}}{{#operation}}*{{moduleName}}.{{classname}}* | [**{{operationId}}**]({{apiDocPath}}{{classname}}.md#{{operationId}}) | **{{httpMethod}}** {{path}} | {{#summary}}{{summary}}{{/summary}}
{{/operation}}{{/operations}}{{/apis}}{{/apiInfo}}

## Documentation for Models

{{#models}}{{#model}} - [{{moduleName}}.{{classname}}]({{modelDocPath}}{{classname}}.md)
{{/model}}{{/models}}

## Documentation for Authorization

{{^authMethods}} All endpoints do not require authorization.
{{/authMethods}}{{#authMethods}}{{#last}} Authentication schemes defined for the API:{{/last}}{{/authMethods}}
{{#authMethods}}### {{name}}

{{#isApiKey}}- **Type**: API key
- **API key parameter name**: {{keyParamName}}
- **Location**: {{#isKeyInQuery}}URL query string{{/isKeyInQuery}}{{#isKeyInHeader}}HTTP header{{/isKeyInHeader}}
{{/isApiKey}}
{{#isBasic}}- **Type**: HTTP basic authentication
{{/isBasic}}
{{#isOAuth}}- **Type**: OAuth
- **Flow**: {{flow}}
- **Authorizatoin URL**: {{authorizationUrl}}
- **Scopes**: {{^scopes}}N/A{{/scopes}}
{{#scopes}}  - {{scope}}: {{description}}
{{/scopes}}
{{/isOAuth}}

{{/authMethods}}
