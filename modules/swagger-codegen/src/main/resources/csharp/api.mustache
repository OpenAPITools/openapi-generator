using System;
using System.Collections.Generic;
using RestSharp;
using {{invokerPackage}};
using {{modelPackage}};
{{#imports}}
{{/imports}}

namespace {{package}} {
  {{#operations}}
  public class {{classname}} {
    string basePath;
    private readonly ApiInvoker apiInvoker = ApiInvoker.GetInstance();
    protected RestClient _client;

    public {{classname}}(String basePath = "{{basePath}}")
    {
      this.basePath = basePath;
      _client = new RestClient(basePath);
    }

    public ApiInvoker getInvoker() {
      return apiInvoker;
    }

    // Sets the endpoint base url for the services being accessed
    public void setBasePath(string basePath) {
      this.basePath = basePath;
    }

    // Gets the endpoint base url for the services being accessed
    public String getBasePath() {
      return basePath;
    }

    {{#operation}}

    /// <summary>
    /// {{summary}} {{notes}}
    /// </summary>
    {{#allParams}}/// <param name="{{paramName}}">{{description}}</param>
    {{#hasMore}} {{/hasMore}}{{/allParams}}
    /// <returns></returns>
    public {{#returnType}}{{{returnType}}} {{/returnType}}{{^returnType}}void {{/returnType}} {{nickname}} ({{#allParams}}{{{dataType}}} {{paramName}}{{#hasMore}}, {{/hasMore}}{{/allParams}}) {

      var _request = new RestRequest("{{path}}", Method.{{httpMethod}});

      {{#requiredParams}}
      // verify required param {{paramName}} is set
      if ({{paramName}} == null) throw new ApiException(400, "missing required params {{paramName}}");
      {{/requiredParams}}

      // path (url segment) parameters
      _request.AddUrlSegment("format", "json"); // set format to json by default
      {{#pathParams}}_request.AddUrlSegment("{{baseName}}", apiInvoker.ParameterToString({{{paramName}}}));{{/pathParams}}
      // query parameters, if any
      {{#queryParams}} if ({{paramName}} != null) _request.AddParameter("{{baseName}}", {{paramName}});{{/queryParams}}
      // header parameters, if any
      {{#headerParams}} if ({{paramName}} != null) _request.AddHeader("{{baseName}}", {{paramName}});{{/headerParams}}
      // form parameters, if any
      {{#formParams}}if ({{paramName}} != null) {{#isFile}}_request.AddParameter("{{baseName}}", {{paramName}});{{/isFile}}{{^isFile}}_request.AddFile("{{baseName}}", {{paramName}});{{/isFile}}
      {{/formParams}}

      try {
        {{#returnType}}IRestResponse response = _client.Execute(_request);
        return ({{{returnType}}}) ApiInvoker.deserialize(response.Content, typeof({{{returnType}}}));
        //return ((object)response) as {{{returnType}}};{{/returnType}}
        {{^returnType}}_client.Execute(_request);
        return;{{/returnType}}
      } catch (Exception ex) {
        if(ex != null) {
          return {{#returnType}}null{{/returnType}};
        }
        else {
          throw ex;
        }
      }
    }
    {{/operation}}
  }
  {{/operations}}
}
