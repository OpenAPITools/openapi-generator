using Nancy;
using Nancy.ModelBinding;
using System.Collections.Generic;
using Sharpility.Net;
using {{packageName}}.Model;

namespace {{packageName}}.Module
{ {{#operations}}
    {{#operation}}{{#allParams}}{{#isEnum}}
    {{>innerEnum}}
    {{/isEnum}}{{/allParams}}{{/operation}}

    public sealed class {{classname}}Module : NancyModule
    {
        public {{classname}}Module({{classname}}Service service) : base("")
        { {{#operation}}
            {{httpMethod}}["{{path}}"] = parameters =>
            { {{#allParams}}{{#required}}
                if (parameters.{{paramName}} == null) {
                    throw new ApiException(400, "Missing the required parameter '{{paramName}}' when calling {{operationId}}");
                }
                {{/required}}{{/allParams}}{{#allParams}}{{#isBodyParam}}
                var {{paramName}} = this.Bind<{{&dataType}}>();
                {{/isBodyParam}}{{^isBodyParam}}{{&dataType}} {{paramName}} = parameters.{{paramName}};
                {{/isBodyParam}}{{/allParams}}
                {{#returnType}}return {{/returnType}}service.{{operationId}}(
                {{#allParams}}
                    {{paramName}}{{#hasMore}},{{/hasMore}}
                {{/allParams}}
                );{{^returnType}}
                return new Response { ContentType = "{{produces.0.mediaType}}"};{{/returnType}}
            };
{{/operation}}
        }
    }

    public interface {{classname}}Service
    { {{#operation}}
        {{#returnType}}{{&returnType}}{{/returnType}}{{^returnType}}void{{/returnType}} {{operationId}}({{#allParams}}{{>pathParam}}{{>queryParam}}{{>bodyParam}}{{>formParam}}{{>headerParam}}{{#hasMore}}, {{/hasMore}}{{/allParams}});
{{/operation}}
    }

{{/operations}}
}
