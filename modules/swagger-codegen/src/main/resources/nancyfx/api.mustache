using System;
using System.IO;
using Nancy;
using {{packageName}}.Models;

namespace {{packageName}}.Api
{ {{#operations}}

    public sealed class {{classname}}Module : NancyModule
    {
        public {{classname}}Module({{classname}}Service service) : base("")
        { {{#operation}}
            {{httpMethod}}["{{path}}"] = parameters =>
            {
                // existence validation of obligatory parameters
                {{#allParams}}{{#required}}
                if (parameters.{{paramName}} == null) {
                    throw new ApiException(400, "Missing the required parameter '{{paramName}}' when calling {{operationId}}");
                }
                {{/required}}{{/allParams}}
                {{#allParams}}{{#isBodyParam}}
                {{&dataType}} {{paramName}} = Bind<{{&dataType}}>();
                {{/isBodyParam}}{{#isPathParam}}{{&dataType}} {{paramName}} = parameters.{{paramName}};
                {{/isPathParam}}{{#isHeaderParam}}{{&dataType}} {{paramName}} = parameters.{{paramName}};
                {{/isHeaderParam}}{{#isQueryParam}}{{&dataType}} {{paramName}} = parameters.{{paramName}};
                {{/isQueryParam}}{{/allParams}}
                return service.{{operationId}}(
                {{#allParams}}
                    {{paramName}}{{#hasMore}},{{/hasMore}}
                {{/allParams}}
                );
            };
{{/operation}}
        }
    }

    interface {{classname}}Service
    { {{#operation}}
        public {{#returnType}}{{&returnType}}{{/returnType}}{{^returnType}}void{{/returnType}} {{operationId}}({{#allParams}}{{>pathParam}}{{>queryParam}}{{>bodyParam}}{{>formParam}}{{>headerParam}}{{#hasMore}}, {{/hasMore}}{{/allParams}});
{{/operation}}
    }

{{/operations}}
}
