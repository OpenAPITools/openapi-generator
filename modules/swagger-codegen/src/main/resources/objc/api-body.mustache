{{#operations}}
#import "{{classname}}.h"
#import "SWGFile.h"
#import "SWGApiClient.h"
{{#imports}}#import "{{import}}.h"
{{/imports}}
{{newline}}


@implementation {{classname}}
static NSString * basePath = @"{{basePath}}";

+({{classname}}*) apiWithHeader:(NSString*)headerValue key:(NSString*)key {
    static {{classname}}* singletonAPI = nil;

    if (singletonAPI == nil) {
        singletonAPI = [[{{classname}} alloc] init];
        [singletonAPI addHeader:headerValue forKey:key];
    }
    return singletonAPI;
}

+(void) setBasePath:(NSString*)path {
    basePath = path;
}

+(NSString*) getBasePath {
    return basePath;
}

-(SWGApiClient*) apiClient {
    return [SWGApiClient sharedClientFromPool:basePath];
}

-(void) addHeader:(NSString*)value forKey:(NSString*)key {
    [[self apiClient] setHeaderValue:value forKey:key];
}

-(id) init {
    self = [super init];
    [self apiClient];
    return self;
}

-(void) setHeaderValue:(NSString*) value
           forKey:(NSString*)key {
    [[self apiClient] setHeaderValue:value forKey:key];
}

-(unsigned long) requestQueueSize {
    return [SWGApiClient requestQueueSize];
}


{{#operation}}
-(NSNumber*) {{nickname}}WithCompletionBlock{{^allParams}}: {{/allParams}}{{#allParams}}{{#secondaryParam}} {{paramName}}{{/secondaryParam}}: ({{{dataType}}}) {{paramName}}
        {{/allParams}}
        {{#returnBaseType}}{{#hasParams}}completionHandler: {{/hasParams}}(void (^)({{returnType}} output, NSError* error))completionBlock{{/returnBaseType}}
        {{^returnBaseType}}{{#hasParams}}completionHandler: {{/hasParams}}(void (^)(NSError* error))completionBlock{{/returnBaseType}} {

    NSMutableString* requestUrl = [NSMutableString stringWithFormat:@"%@{{path}}", basePath];

    // remove format in URL if needed
    if ([requestUrl rangeOfString:@".{format}"].location != NSNotFound)
        [requestUrl replaceCharactersInRange: [requestUrl rangeOfString:@".{format}"] withString:@".json"];

    {{#pathParams}}[requestUrl replaceCharactersInRange: [requestUrl rangeOfString:[NSString stringWithFormat:@"%@%@%@", @"{", @"{{baseName}}", @"}"]] withString: [SWGApiClient escape:{{paramName}}]];
    {{/pathParams}}

    NSString* requestContentType = @"application/json";
    NSString* responseContentType = @"application/json";

    NSMutableDictionary* queryParams = [[NSMutableDictionary alloc] init];
    {{#queryParams}}if({{paramName}} != nil)
        queryParams[@"{{baseName}}"] = {{paramName}};
    {{/queryParams}}
    NSMutableDictionary* headerParams = [[NSMutableDictionary alloc] init];
    {{#headerParams}}if({{paramName}} != nil)
        headerParams[@"{{baseName}}"] = {{paramName}};
    {{/headerParams}}

    id bodyDictionary = nil;
    {{#bodyParam}}
    id __body = {{paramName}};

    if(__body != nil && [__body isKindOfClass:[NSArray class]]){
        NSMutableArray * objs = [[NSMutableArray alloc] init];
        for (id dict in (NSArray*)__body) {
            if([dict respondsToSelector:@selector(asDictionary)]) {
                [objs addObject:[(SWGObject*)dict asDictionary]];
            }
            else{
                [objs addObject:dict];
            }
        }
        bodyDictionary = objs;
    }
    else if([__body respondsToSelector:@selector(asDictionary)]) {
        bodyDictionary = [(SWGObject*)__body asDictionary];
    }
    else if([__body isKindOfClass:[NSString class]]) {
        // convert it to a dictionary
        NSError * error;
        NSString * str = (NSString*)__body;
        NSDictionary *JSON =
            [NSJSONSerialization JSONObjectWithData: [str dataUsingEncoding: NSUTF8StringEncoding]
                                            options: NSJSONReadingMutableContainers
                                              error: &error];
        bodyDictionary = JSON;
    }
    {{/bodyParam}}
    {{^bodyParam}}
    bodyDictionary = [[NSMutableArray alloc] init];

    NSMutableDictionary * formParams = [[NSMutableDictionary alloc]init]; 

    {{#formParams}}{{#notFile}}
    formParams[@"{{paramName}}"] = {{paramName}};
    {{/notFile}}{{#isFile}}
    requestContentType = @"multipart/form-data";
    [bodyDictionary addObject:{{paramName}}];
    {{paramName}}.paramName  = @"{{baseName}}";
    {{/isFile}}{{/formParams}}
    [bodyDictionary addObject:formParams];
    {{/bodyParam}}

    {{#requiredParamCount}}
    {{#requiredParams}}
    if({{paramName}} == nil) {
        // error
    }
    {{/requiredParams}}
    {{/requiredParamCount}}

    SWGApiClient* client = [SWGApiClient sharedClientFromPool:basePath];

    {{#returnContainer}}{{>apiBodyResponseWithContainer}}{{/returnContainer}}
    {{#returnSimpleType}}
    {{#returnTypeIsPrimitive}}{{>apiPrimitiveResponse}}{{/returnTypeIsPrimitive}}
    {{#returnBaseType}}{{>apiNonPrimitiveResponse}}{{/returnBaseType}}
    {{/returnSimpleType}}
}

{{/operation}}

{{newline}}
{{/operations}}
@end