// Models.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import SwiftyJSON

protocol JSONDecodable {
    static func decode(source: AnyObject) -> Self?
}

protocol JSONEncodable {
    func encode() -> AnyObject
}

class Response<T: JSONDecodable> {
    let statusCode: Int
    let header: [String: String]
    let body: T

    init(statusCode: Int, header: [String: String], body: T) {
        self.statusCode = statusCode
        self.header = header
        self.body = body
    }

    convenience init(response: NSHTTPURLResponse, body: T) {
        let rawHeader = response.allHeaderFields
        var header = [String:String]()
        for (key, value) in rawHeader {
            header[key as! String] = value as? String
        }
        self.init(statusCode: response.statusCode, header: header, body: body)
    }
}

final class Empty: JSONDecodable {
    private init() { }

    static let instance = Empty()

    static func decode(source: AnyObject) -> Empty? {
        return instance
    }
}
