// APIs.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import PromiseKit

class {{projectName}}API {
    static let basePath = "{{^basePathOverride}}{{basePath}}{{/basePathOverride}}{{basePathOverride}}"
    static var credential: NSURLCredential?
    static var requestBuilderFactory: RequestBuilderFactory = AlamofireRequestBuilderFactory()

    class APIBase {
    }
}

class RequestBuilder<T: JSONDecodable> {
    var credential: NSURLCredential?
    var headers: [String:String] = [:]
    let parameters: [String:AnyObject]?
    let isBody: Bool
    let method: String
    let URLString: String
    
    required init(method: String, URLString: String, parameters: [String:AnyObject]?, isBody: Bool) {
        self.method = method
        self.URLString = URLString
        self.parameters = parameters
        self.isBody = isBody
    }
    
    func execute() -> Promise<Response<T>>  { fatalError("Not implemented") }

    func addHeader(#name: String, value: String) -> Self {
        if !value.isEmpty {
            headers[name] = value
        }
        return self
    }
    
    func addCredential() -> Self {
        self.credential = {{projectName}}API.credential
        return self
    }
}

protocol RequestBuilderFactory {
    func getBuilder<T: JSONDecodable>() -> RequestBuilder<T>.Type
}

