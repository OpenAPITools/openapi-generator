{{>licenseInfo}}
#ifndef ModelFactory_H_
#define ModelFactory_H_

{{#models}}{{#model}}
#include "{{classname}}.h"{{/model}}{{/models}}

{{#cppNamespaceDeclarations}}
namespace {{this}} {
{{/cppNamespaceDeclarations}}

  inline void* create(QString type) {
    {{#models}}{{#model}}if(QString("{{classname}}").compare(type) == 0) {
      return new {{classname}}();
    }
    {{/model}}{{/models}}
    return nullptr;
  }

  inline void* create(QString json, QString type) {
    void* val = create(type);
    if(val != nullptr) {
      {{prefix}}Object* obj = static_cast<{{prefix}}Object*>(val);
      return obj->fromJson(json);
    }
    if(type.startsWith("QString")) {
      return new QString();
    }
    return nullptr;
  }

{{#cppNamespaceDeclarations}}
}
{{/cppNamespaceDeclarations}}

#endif /* ModelFactory_H_ */
