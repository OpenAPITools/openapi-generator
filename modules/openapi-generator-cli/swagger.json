{
  "openapi": "3.0.1",
  "info": {
    "title": "Test Store Management API",
    "description": "An API for managing a store. This is a multi tenant API, and all requests are in the context of a single store.",
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://localhost:7151",
      "description": "Development"
    }
  ],
  "paths": {
    "/Apps": {
      "post": {
        "tags": [
          "Apps"
        ],
        "summary": "Create App",
        "description": "Store apps allow you to connect your website and mobile apps to your One Basket store.",
        "operationId": "CreateApp",
        "parameters": [
          {
            "name": "X-OB-STORE-ID",
            "in": "header",
            "description": "The ID of the store that the request is operating on",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAppRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAppRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAppRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "The store app was created successfully.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/App"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/App"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/App"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Apps"
        ],
        "summary": "All Apps",
        "description": "Returns all the apps that have been created for the store.",
        "operationId": "GetApp",
        "parameters": [
          {
            "name": "X-OB-STORE-ID",
            "in": "header",
            "description": "The ID of the store that the request is operating on",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The apps.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/App"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/App"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/App"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Apps/{appId}/key": {
      "put": {
        "tags": [
          "Apps"
        ],
        "summary": "Generate sdk key",
        "description": "Generates an SDK key for the given app",
        "operationId": "GenerateSdkKey",
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-OB-STORE-ID",
            "in": "header",
            "description": "The ID of the store that the request is operating on",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The sdk key was created successfully.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SdkKey"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SdkKey"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SdkKey"
                }
              }
            }
          }
        }
      }
    },
    "/Stores": {
      "get": {
        "tags": [
          "Stores"
        ],
        "summary": "Get all stores",
        "description": "Returns all the stores that the authenticated user is a staff member of.",
        "operationId": "GetStore",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoreDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoreDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoreDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/supplier-connections": {
      "get": {
        "tags": [
          "SupplierConnections"
        ],
        "summary": "Get Supplier Connections",
        "description": "Gets all the supplier connections for the store",
        "operationId": "GetSupplierConnection",
        "parameters": [
          {
            "name": "X-OB-STORE-ID",
            "in": "header",
            "description": "The ID of the store that the request is operating on",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SupplierConnection"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SupplierConnection"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SupplierConnection"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SupplierConnections"
        ],
        "operationId": "ConnectToSupplier",
        "parameters": [
          {
            "name": "X-OB-STORE-ID",
            "in": "header",
            "description": "The ID of the store that the request is operating on",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectStoreToSupplierRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectStoreToSupplierRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectStoreToSupplierRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SupplierConnection"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplierConnection"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplierConnection"
                }
              }
            }
          }
        }
      }
    },
    "/supplier-connections/{supplierConnectionId}/set-parameter": {
      "put": {
        "tags": [
          "SupplierConnections"
        ],
        "operationId": "SetParameter",
        "parameters": [
          {
            "name": "supplierConnectionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-OB-STORE-ID",
            "in": "header",
            "description": "The ID of the store that the request is operating on",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetPluginParameterRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetPluginParameterRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetPluginParameterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Suppliers": {
      "get": {
        "tags": [
          "Suppliers"
        ],
        "operationId": "GetAllSuppliers",
        "parameters": [
          {
            "name": "X-OB-STORE-ID",
            "in": "header",
            "description": "The ID of the store that the request is operating on",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Supplier"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Supplier"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Supplier"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "App": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConnectStoreToSupplierRequest": {
        "type": "object",
        "properties": {
          "supplierId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateAppRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "SdkKey": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SetPluginParameterRequest": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StoreDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Supplier": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SupplierConnection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "supplierId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"Bearer {token}\"",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}