buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "com.github.jengelman.gradle.plugins:shadow:2.0.4"
  }

  ext.unversioned_jars_dir = "${buildDir}/current"
}

apply plugin: 'base'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'

mainClassName = "org.openapitools.codegen.OpenAPIGenerator"

description = 'openapi-generator (executable)'

dependencies {
  compile project(':openapi-generator')
    compile group: 'io.airlift', name: 'airline', version:'0.7'
    compile group: 'com.googlecode.lambdaj', name: 'lambdaj', version:'2.3.3'
    compile group: 'org.slf4j', name: 'slf4j-simple', version:'1.7.12'
    testCompile group: 'org.testng', name: 'testng', version:'6.9.6'
    testCompile group: 'org.jmockit', name: 'jmockit', version:'1.25'
}

test.useTestNG()

shadowJar {
  baseName = "openapi-generator-cli-$version"
  classifier = null
  version = null
}

runShadow {
  args 'help'
}

// This allows us to more easily maintain things like the Dockerfile
task copyUnversionedShadowedJar (type: Copy) {
  from shadowJar.destinationDir
  into unversioned_jars_dir
  rename { String filename ->
    println("Staging $filename without version suffix under $unversioned_jars_dir.")
    filename.replace("-$version", "")
  }
}

// After shadowJar has run, we want to copy
shadowJar.finalizedBy(copyUnversionedShadowedJar)

clean {
  // ensures that our copy artifacts are cleaned
  delete unversioned_jars_dir
}