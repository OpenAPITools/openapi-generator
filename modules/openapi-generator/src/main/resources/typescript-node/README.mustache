# Typescript API client  {{#packageName}}{{.}}{{/packageName}}

{{#appDescriptionWithNewLines}}
    {{{.}}}
{{/appDescriptionWithNewLines}}

## Overview
This API client was generated by the [OpenAPI Generator](https://openapi-generator.tech) project.  By using the [OpenAPI-spec](https://www.openapis.org/) from a remote server, you can easily generate an API client.

- API version: {{appVersion}}
{{#packageVersion}}- Package version: {{.}}{{/packageVersion}}
{{^hideGenerationTimestamp}}
    - Build date: {{generatedDate}}
{{/hideGenerationTimestamp}}
- Build package: {{generatorClass}}
{{#infoUrl}}
    For more information, please visit [{{{infoUrl}}}]({{{infoUrl}}})
{{/infoUrl}}

#### Building ####

To build and compile the typescript sources to javascript use:
```
npm install
npm run build
```

## Code Example

The default url is our production url, you can change it to staging url via
``` typescript
const apisInSameTags = new apis.apisInSameTags(STAGING_URL)
```


``` typescript
import * as models from './model/models'
import * as apis from './api/apis';

const YOUR_TOKEN = "YOUR_TOKEN"
const STAGING_URL = "https://api.segmentapis.build"

const workspaceApis = new apis.WorkspacesApi("https://api.segmentapis.com")
workspaceApis.accessToken = YOUR_TOKEN;
workspaceApis.getWorkspaceAlphaLatest()
.then((result) => {
console.log(`Result:\n ${JSON.stringify(result.body)}`);
})
.catch((error) => {
console.log("ERRO:\n" + error)
}
)

const testApis = new apis.TestingApi("https://api.segmentapis.com")
testApis.accessToken = YOUR_TOKEN;
testApis.echoAlphaLatest("Hello World")
.then((result) => {
console.log(`Result:\n ${JSON.stringify(result.body)}`);
})
.catch((error) => {
console.log("ERRO:\n" + error)
}
)

```

## Documentation For Authorization

{{^authMethods}} Endpoints do not require authorization.
{{/authMethods}}{{#authMethods}}{{#last}} Authentication schemes defined for the API:{{/last}}{{/authMethods}}
{{#authMethods}}

    ### {{{name}}}

    {{#isApiKey}}
        - **Type**: API key
        - **API key parameter name**: {{{keyParamName}}}
        - **Location**: {{#isKeyInQuery}}URL query string{{/isKeyInQuery}}{{#isKeyInHeader}}HTTP header{{/isKeyInHeader}}

        Note, each API key must be added to a map of `map[string]APIKey` where the key is: {{keyParamName}} and passed in as the auth context for each request.

    {{/isApiKey}}
    {{#isBasic}}
        {{#isBasicBearer}}
            - **Type**: HTTP Bearer token authentication

            Example

            ```typescript

            const getWorkspace =  async()=>{
            const workspaceAPIs = new api.WorkspacesAPIs()
            workspace.accessToken = 'YOUR_TOKEN';
            const result = await workspaceAPIs.getWorkspace()
            console.log(result.body)
            }
            ```

        {{/isBasicBearer}}
        {{#isBasicBasic}}
            - **Type**: HTTP basic authentication

            Example

            ```typescript
            const getWorkspace =  async()=>{
            const workspaceAPIs = new api.WorkspacesAPIs('YOUR_USERNAME','YOUR_PASSWORD')
            const result = await workspaceAPIs.getWorkspace()
            console.log(result.body)
            }
            ```

        {{/isBasicBasic}}
    {{/isBasic}}

{{/authMethods}}


## Documentation for API Endpoints

All URIs are relative to *{{basePath}}*

Class | Method | HTTP request | Description
------------ | ------------- | ------------- | -------------
{{#apiInfo}}{{#apis}}{{#operations}}{{#operation}}*{{classname}}* | [**{{operationId}}**]({{apiDocPath}}{{classname}}.md#{{operationIdLowerCase}}) | **{{httpMethod}}** {{path}} | {{summary}}
{{/operation}}{{/operations}}{{/apis}}{{/apiInfo}}

## Documentation For Models

{{#models}}{{#model}} - [{{{classname}}}]({{modelDocPath}}{{{classname}}}.md)
{{/model}}{{/models}}





