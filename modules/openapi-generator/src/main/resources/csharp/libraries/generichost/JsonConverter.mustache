    /// <summary>
    /// A Json converter for type <see cref="{{classname}}" />
    /// </summary>
    {{>visibility}} class {{classname}}JsonConverter : JsonConverter<{{classname}}>
    {
        {{#allVars}}
        {{#isDateTime}}
        /// <summary>
        /// The format to use to serialize {{name}}
        /// </summary>
        public static string {{name}}Format { get; set; } = "{{{dateTimeFormat}}}";

        {{/isDateTime}}
        {{#isDate}}
        /// <summary>
        /// The format to use to serialize {{name}}
        /// </summary>
        public static string {{name}}Format { get; set; } = "{{{dateFormat}}}";

        {{/isDate}}
        {{/allVars}}
        /// <summary>
        /// Deserializes json to <see cref="{{classname}}" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override {{classname}} Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            {{#lambda.trimTrailingWithNewLine}}
            {{#lambda.trimLineBreaks}}
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            {{#allVars}}
            Option<{{#isInnerEnum}}{{^isMap}}{{classname}}.{{/isMap}}{{/isInnerEnum}}{{{datatypeWithEnum}}}{{nrt?}}{{^nrt}}{{#vendorExtensions.x-is-value-type}}?{{/vendorExtensions.x-is-value-type}}{{/nrt}}> {{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}} = default;
            {{#-last}}

            {{/-last}}
            {{/allVars}}
            {{#model.discriminator}}
            {{#model.hasDiscriminatorWithNonEmptyMapping}}
            {{#mappedModels}}
            {{#model}}
            {{^vendorExtensions.x-duplicated-data-type}}
            {{classname}}{{nrt?}} {{#lambda.camelcase_sanitize_param}}{{classname}}{{/lambda.camelcase_sanitize_param}} = null;
            {{#-last}}

            {{/-last}}
            {{/vendorExtensions.x-duplicated-data-type}}
            {{/model}}
            {{/mappedModels}}
            Utf8JsonReader utf8JsonReaderDiscriminator = utf8JsonReader;
            while (utf8JsonReaderDiscriminator.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReaderDiscriminator.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReaderDiscriminator.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReaderDiscriminator.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReaderDiscriminator.CurrentDepth)
                    break;

                if (utf8JsonReaderDiscriminator.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReaderDiscriminator.CurrentDepth - 1)
                {
                    string{{nrt?}} localVarJsonPropertyName = utf8JsonReaderDiscriminator.GetString();
                    utf8JsonReaderDiscriminator.Read();
                    if (localVarJsonPropertyName{{nrt?}}.Equals("{{propertyBaseName}}"){{#nrt}} ?? false{{/nrt}})
                    {
                        string{{nrt?}} discriminator = utf8JsonReaderDiscriminator.GetString();
                        {{#mappedModels}}
                        if (discriminator{{nrt?}}.Equals("{{mappingName}}"){{#nrt}} ?? false{{/nrt}})
                        {
                            Utf8JsonReader utf8JsonReader{{model.classname}} = utf8JsonReader;
                            {{#lambda.camelcase_sanitize_param}}{{model.classname}}{{/lambda.camelcase_sanitize_param}} = JsonSerializer.Deserialize<{{{model.classname}}}>(ref utf8JsonReader{{model.classname}}, jsonSerializerOptions);
                        }
                        {{/mappedModels}}
                    }
                }
            }

            {{/model.hasDiscriminatorWithNonEmptyMapping}}
            {{/model.discriminator}}
            {{^model.discriminator}}
            {{#composedSchemas}}
            {{#oneOf}}
            {{^vendorExtensions.x-duplicated-data-type}}
            {{{datatypeWithEnum}}}{{nrt?}}{{^nrt}}{{#vendorExtensions.x-is-value-type}}?{{/vendorExtensions.x-is-value-type}}{{/nrt}} {{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}} = default;
            {{#-last}}

            Utf8JsonReader utf8JsonReaderOneOf = utf8JsonReader;
            while (utf8JsonReaderOneOf.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReaderOneOf.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReaderOneOf.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReaderOneOf.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReaderOneOf.CurrentDepth)
                    break;

                if (utf8JsonReaderOneOf.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReaderOneOf.CurrentDepth - 1)
                {
                    {{#oneOf}}
                    Utf8JsonReader utf8JsonReader{{name}} = utf8JsonReader;
                    ClientUtils.TryDeserialize<{{{datatypeWithEnum}}}{{nrt?}}{{^nrt}}{{#vendorExtensions.x-is-value-type}}?{{/vendorExtensions.x-is-value-type}}{{/nrt}}>(ref utf8JsonReader{{name}}, jsonSerializerOptions, out {{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}});
                    {{^-last}}

                    {{/-last}}
                    {{/oneOf}}
                }
            }
            {{/-last}}
            {{/vendorExtensions.x-duplicated-data-type}}
            {{/oneOf}}

            {{#anyOf}}
            {{^vendorExtensions.x-duplicated-data-type}}
            {{{datatypeWithEnum}}}{{nrt?}}{{^nrt}}{{#vendorExtensions.x-is-value-type}}?{{/vendorExtensions.x-is-value-type}}{{/nrt}} {{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}} = default;
            {{#-last}}

            Utf8JsonReader utf8JsonReaderAnyOf = utf8JsonReader;
            while (utf8JsonReaderAnyOf.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReaderAnyOf.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReaderAnyOf.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReaderAnyOf.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReaderAnyOf.CurrentDepth)
                    break;

                if (utf8JsonReaderAnyOf.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReaderAnyOf.CurrentDepth - 1)
                {
                    {{#anyOf}}
                    Utf8JsonReader utf8JsonReader{{name}} = utf8JsonReader;
                    ClientUtils.TryDeserialize<{{{datatypeWithEnum}}}{{nrt?}}{{^nrt}}{{#vendorExtensions.x-is-value-type}}?{{/vendorExtensions.x-is-value-type}}{{/nrt}}>(ref utf8JsonReader{{name}}, jsonSerializerOptions, out {{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}});
                    {{^-last}}

                    {{/-last}}
                    {{/anyOf}}
                }
            }
            {{/-last}}
            {{/vendorExtensions.x-duplicated-data-type}}
            {{/anyOf}}

            {{/composedSchemas}}
            {{/model.discriminator}}
            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string{{nrt?}} localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        {{#allVars}}
                        case "{{baseName}}":
                        {{#isString}}
                        {{^isMap}}
                        {{^isEnum}}
                        {{^isUuid}}
                            {{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}} = {{>OptionProperty}}utf8JsonReader.GetString(){{^isNullable}}{{nrt!}}{{/isNullable}});
                        {{/isUuid}}
                        {{/isEnum}}
                        {{/isMap}}
                        {{/isString}}
                        {{#isBoolean}}
                            if (utf8JsonReader.TokenType != JsonTokenType.Null)
                                {{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}} = {{>OptionProperty}}utf8JsonReader.GetBoolean());
                        {{/isBoolean}}
                        {{#isNumeric}}
                        {{^isEnum}}
                        {{#isDouble}}
                            if (utf8JsonReader.TokenType != JsonTokenType.Null)
                                {{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}} = {{>OptionProperty}}utf8JsonReader.GetDouble());
                        {{/isDouble}}
                        {{#isDecimal}}
                            if (utf8JsonReader.TokenType != JsonTokenType.Null)
                                {{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}} = {{>OptionProperty}}utf8JsonReader.GetDecimal());
                        {{/isDecimal}}
                        {{#isFloat}}
                            if (utf8JsonReader.TokenType != JsonTokenType.Null)
                                {{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}} = {{>OptionProperty}}(float)utf8JsonReader.GetDouble());
                        {{/isFloat}}
                        {{#isLong}}
                            if (utf8JsonReader.TokenType != JsonTokenType.Null)
                                {{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}} = {{>OptionProperty}}utf8JsonReader.Get{{#vendorExtensions.x-unsigned}}U{{/vendorExtensions.x-unsigned}}Int64());
                        {{/isLong}}
                        {{^isLong}}
                        {{^isFloat}}
                        {{^isDecimal}}
                        {{^isDouble}}
                            if (utf8JsonReader.TokenType != JsonTokenType.Null)
                                {{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}} = {{>OptionProperty}}utf8JsonReader.Get{{#vendorExtensions.x-unsigned}}U{{/vendorExtensions.x-unsigned}}Int32());
                        {{/isDouble}}
                        {{/isDecimal}}
                        {{/isFloat}}
                        {{/isLong}}
                        {{/isEnum}}
                        {{/isNumeric}}
                        {{#isDate}}
                            if (utf8JsonReader.TokenType != JsonTokenType.Null)
                                {{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}} = {{>OptionProperty}}JsonSerializer.Deserialize<{{#supportsDateOnly}}DateOnly{{/supportsDateOnly}}{{^supportsDateOnly}}DateTime{{/supportsDateOnly}}{{#isNullable}}?{{/isNullable}}>(ref utf8JsonReader, jsonSerializerOptions));
                        {{/isDate}}
                        {{#isDateTime}}
                            if (utf8JsonReader.TokenType != JsonTokenType.Null)
                                {{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}} = {{>OptionProperty}}JsonSerializer.Deserialize<DateTime{{#isNullable}}?{{/isNullable}}>(ref utf8JsonReader, jsonSerializerOptions));
                        {{/isDateTime}}
                        {{#isEnum}}
                        {{^isMap}}
                        {{#isNumeric}}
                            if (utf8JsonReader.TokenType != JsonTokenType.Null)
                                {{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}} = {{>OptionProperty}}({{#isInnerEnum}}{{classname}}.{{/isInnerEnum}}{{{datatypeWithEnum}}})utf8JsonReader.Get{{#vendorExtensions.x-unsigned}}U{{/vendorExtensions.x-unsigned}}Int32());
                        {{/isNumeric}}
                        {{^isNumeric}}
                            string{{nrt?}} {{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}}RawValue = utf8JsonReader.GetString();
                            {{^isInnerEnum}}
                            if ({{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}}RawValue != null)
                                {{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}} = {{>OptionProperty}}{{{datatypeWithEnum}}}ValueConverter.FromStringOrDefault({{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}}RawValue));
                            {{/isInnerEnum}}
                            {{#isInnerEnum}}
                            if ({{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}}RawValue != null)
                                {{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}} = {{>OptionProperty}}{{classname}}.{{{datatypeWithEnum}}}FromStringOrDefault({{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}}RawValue));
                            {{/isInnerEnum}}
                        {{/isNumeric}}
                        {{/isMap}}
                        {{/isEnum}}
                        {{#isUuid}}
                            if (utf8JsonReader.TokenType != JsonTokenType.Null)
                                {{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}} = {{>OptionProperty}}utf8JsonReader.GetGuid());
                        {{/isUuid}}
                        {{^isUuid}}
                        {{^isEnum}}
                        {{^isString}}
                        {{^isBoolean}}
                        {{^isNumeric}}
                        {{^isDate}}
                        {{^isDateTime}}
                            if (utf8JsonReader.TokenType != JsonTokenType.Null)
                                {{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}} = {{>OptionProperty}}JsonSerializer.Deserialize<{{{datatypeWithEnum}}}>(ref utf8JsonReader, jsonSerializerOptions){{^isNullable}}{{nrt!}}{{/isNullable}});
                        {{/isDateTime}}
                        {{/isDate}}
                        {{/isNumeric}}
                        {{/isBoolean}}
                        {{/isString}}
                        {{/isEnum}}
                        {{/isUuid}}
                            break;
                        {{/allVars}}
                        default:
                            break;
                    }
                }
            }

            {{#allVars}}
            {{#required}}
            if (!{{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}}.IsSet)
                throw new ArgumentException("Property is required for class {{classname}}.", nameof({{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}}));

            {{/required}}
            {{/allVars}}
            {{#allVars}}
            {{^isNullable}}
            if ({{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}}.IsSet && {{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}}.Value == null)
                throw new ArgumentNullException(nameof({{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}}), "Property is not nullable for class {{classname}}.");

            {{/isNullable}}
            {{/allVars}}
            {{^vendorExtensions.x-duplicated-data-type}}
            {{#model.discriminator}}
            {{#model.hasDiscriminatorWithNonEmptyMapping}}
            {{#mappedModels}}
            if ({{#lambda.camelcase_sanitize_param}}{{model.classname}}{{/lambda.camelcase_sanitize_param}} != null)
                return new {{classname}}({{#lambda.joinWithComma}}{{#lambda.camelcase_sanitize_param}}{{model.classname}}{{/lambda.camelcase_sanitize_param}}{{#vendorExtensions.x-is-value-type}}{{^isNullable}}.Value{{/isNullable}}{{/vendorExtensions.x-is-value-type}}  {{#model.composedSchemas.anyOf}}{{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}}{{#vendorExtensions.x-is-value-type}}{{^isNullable}}.Value{{/isNullable}}{{/vendorExtensions.x-is-value-type}}  {{/model.composedSchemas.anyOf}}{{#allVars}}{{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}}{{#required}}.Value{{nrt!}}{{^isNullable}}{{#vendorExtensions.x-is-value-type}}.Value{{/vendorExtensions.x-is-value-type}}{{/isNullable}}{{/required}}  {{/allVars}}{{/lambda.joinWithComma}});

            {{#-last}}
            throw new JsonException();
            {{/-last}}
            {{/mappedModels}}
            {{/model.hasDiscriminatorWithNonEmptyMapping}}
            {{/model.discriminator}}
            {{^composedSchemas.oneOf}}
            {{^required}}
            {{#model.composedSchemas.anyOf}}
            Option<{{baseType}}{{>NullConditionalProperty}}> {{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}}ParsedValue = {{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}} == null
                ? default
                : new Option<{{baseType}}{{>NullConditionalProperty}}>({{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}});
            {{/model.composedSchemas.anyOf}}
            {{#-last}}

            {{/-last}}
            {{/required}}
            return new {{classname}}({{#lambda.joinWithComma}}{{#model.composedSchemas.anyOf}}{{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}}ParsedValue{{#required}}.Value{{#vendorExtensions.x-is-value-type}}{{nrt!}}.Value{{nrt!}}{{/vendorExtensions.x-is-value-type}}{{/required}}  {{/model.composedSchemas.anyOf}}{{#allVars}}{{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}}{{#required}}.Value{{nrt!}}{{^isNullable}}{{#vendorExtensions.x-is-value-type}}.Value{{nrt!}}{{/vendorExtensions.x-is-value-type}}{{/isNullable}}{{/required}}  {{/allVars}}{{/lambda.joinWithComma}});
            {{/composedSchemas.oneOf}}
            {{^model.discriminator}}
            {{#composedSchemas}}
            {{#oneOf}}
            {{^vendorExtensions.x-duplicated-data-type}}
            if ({{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}} != null)
                return new {{classname}}({{#lambda.joinWithComma}}{{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}}{{#vendorExtensions.x-is-value-type}}.Value{{/vendorExtensions.x-is-value-type}}  {{#model.composedSchemas.anyOf}}{{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}}{{#vendorExtensions.x-is-value-type}}{{^isNullable}}.Value{{/isNullable}}{{/vendorExtensions.x-is-value-type}}  {{/model.composedSchemas.anyOf}}{{#allVars}}{{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}}{{#required}}ParsedValue{{/required}}  {{/allVars}}{{/lambda.joinWithComma}});

            {{/vendorExtensions.x-duplicated-data-type}}
            {{#-last}}
            throw new JsonException();
            {{/-last}}
            {{/oneOf}}
            {{/composedSchemas}}
            {{/model.discriminator}}
            {{/vendorExtensions.x-duplicated-data-type}}
            {{/lambda.trimLineBreaks}}
            {{/lambda.trimTrailingWithNewLine}}
        }

        /// <summary>
        /// Serializes a <see cref="{{classname}}" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="{{#lambda.camelcase_sanitize_param}}{{classname}}{{/lambda.camelcase_sanitize_param}}"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, {{classname}} {{#lambda.camelcase_sanitize_param}}{{classname}}{{/lambda.camelcase_sanitize_param}}, JsonSerializerOptions jsonSerializerOptions)
        {
            {{#lambda.trimLineBreaks}}
            writer.WriteStartObject();

            {{#model.discriminator}}
            {{#model.hasDiscriminatorWithNonEmptyMapping}}
            {{#composedSchemas.oneOf}}
            {{^vendorExtensions.x-duplicated-data-type}}
            if ({{#lambda.camelcase_sanitize_param}}{{classname}}{{/lambda.camelcase_sanitize_param}}.{{name}} != null) {
                {{baseType}}JsonConverter {{#lambda.camelcase_sanitize_param}}{{baseType}}JsonConverter{{/lambda.camelcase_sanitize_param}} = ({{baseType}}JsonConverter) jsonSerializerOptions.Converters.First(c => c.CanConvert({{#lambda.camelcase_sanitize_param}}{{classname}}{{/lambda.camelcase_sanitize_param}}.{{name}}.GetType()));
                {{#lambda.camelcase_sanitize_param}}{{baseType}}JsonConverter{{/lambda.camelcase_sanitize_param}}.WriteProperties(ref writer, {{#lambda.camelcase_sanitize_param}}{{classname}}{{/lambda.camelcase_sanitize_param}}.{{name}}, jsonSerializerOptions);
            }

            {{/vendorExtensions.x-duplicated-data-type}}
            {{/composedSchemas.oneOf}}
            {{/model.hasDiscriminatorWithNonEmptyMapping}}
            {{/model.discriminator}}
            {{^model.discriminator}}
            {{#composedSchemas}}
            {{#anyOf}}
            if ({{#lambda.joinWithAmpersand}}{{^required}}{{#lambda.camelcase_sanitize_param}}{{model.classname}}{{/lambda.camelcase_sanitize_param}}.{{name}}Option.IsSet  {{/required}}{{#lambda.camelcase_sanitize_param}}{{model.classname}}{{/lambda.camelcase_sanitize_param}}.{{name}}{{^required}}Option.Value{{/required}} != null{{/lambda.joinWithAmpersand}})
            {
                {{datatypeWithEnum}}JsonConverter {{datatypeWithEnum}}JsonConverter = ({{datatypeWithEnum}}JsonConverter) jsonSerializerOptions.Converters.First(c => c.CanConvert({{#lambda.camelcase_sanitize_param}}{{model.classname}}{{/lambda.camelcase_sanitize_param}}.{{name}}{{^required}}Option.Value{{/required}}.GetType()));
                {{datatypeWithEnum}}JsonConverter.WriteProperties(ref writer, {{#lambda.camelcase_sanitize_param}}{{model.classname}}{{/lambda.camelcase_sanitize_param}}.{{name}}{{^required}}Option.Value{{/required}}, jsonSerializerOptions);
            }

            {{/anyOf}}
            {{/composedSchemas}}
            {{/model.discriminator}}
            WriteProperties(ref writer, {{#lambda.camelcase_sanitize_param}}{{classname}}{{/lambda.camelcase_sanitize_param}}, jsonSerializerOptions);
            writer.WriteEndObject();
            {{/lambda.trimLineBreaks}}
        }

        /// <summary>
        /// Serializes the properties of <see cref="{{classname}}" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="{{#lambda.camelcase_sanitize_param}}{{classname}}{{/lambda.camelcase_sanitize_param}}"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(ref Utf8JsonWriter writer, {{classname}} {{#lambda.camelcase_sanitize_param}}{{classname}}{{/lambda.camelcase_sanitize_param}}, JsonSerializerOptions jsonSerializerOptions)
        {
            {{#lambda.trimTrailingWithNewLine}}
            {{#lambda.trimLineBreaks}}
            {{#allVars}}
            {{^isNullable}}
            {{#vendorExtensions.x-is-reference-type}}
            if ({{^required}}{{#lambda.camelcase_sanitize_param}}{{classname}}{{/lambda.camelcase_sanitize_param}}.{{name}}Option.IsSet && {{/required}}{{#lambda.camelcase_sanitize_param}}{{classname}}{{/lambda.camelcase_sanitize_param}}.{{name}} == null)
                throw new ArgumentNullException(nameof({{#lambda.camelcase_sanitize_param}}{{classname}}{{/lambda.camelcase_sanitize_param}}.{{name}}), "Property is required for class {{classname}}.");

            {{/vendorExtensions.x-is-reference-type}}
            {{/isNullable}}
            {{/allVars}}
            {{#allVars}}
            {{#isString}}
            {{^isMap}}
            {{^isEnum}}
            {{^isUuid}}
            {{#lambda.copy}}
            writer.WriteString("{{baseName}}", {{#lambda.camelcase_sanitize_param}}{{classname}}{{/lambda.camelcase_sanitize_param}}.{{name}});
            {{/lambda.copy}}
            {{#lambda.indent3}}
            {{>WriteProperty}}
            {{/lambda.indent3}}
            {{/isUuid}}
            {{/isEnum}}
            {{/isMap}}
            {{/isString}}
            {{#isBoolean}}
            {{#lambda.copy}}
            writer.WriteBoolean("{{baseName}}", {{#lambda.camelcase_sanitize_param}}{{classname}}{{/lambda.camelcase_sanitize_param}}.{{name}}{{^required}}Option.Value{{#vendorExtensions.x-is-value-type}}{{nrt!}}.Value{{/vendorExtensions.x-is-value-type}}{{/required}}{{#required}}{{#isNullable}}.Value{{/isNullable}}{{/required}});
            {{/lambda.copy}}
            {{#lambda.indent3}}
            {{>WriteProperty}}
            {{/lambda.indent3}}
            {{/isBoolean}}
            {{^isEnum}}
            {{#isNumeric}}
            {{#lambda.copy}}
            writer.WriteNumber("{{baseName}}", {{#lambda.camelcase_sanitize_param}}{{classname}}{{/lambda.camelcase_sanitize_param}}.{{name}}{{^required}}Option.Value{{#vendorExtensions.x-is-value-type}}{{nrt!}}.Value{{/vendorExtensions.x-is-value-type}}{{/required}}{{#required}}{{#isNullable}}.Value{{/isNullable}}{{/required}});
            {{/lambda.copy}}
            {{#lambda.indent3}}
            {{>WriteProperty}}
            {{/lambda.indent3}}
            {{/isNumeric}}
            {{/isEnum}}
            {{#isDate}}
            {{#lambda.copy}}
            writer.WriteString("{{baseName}}", {{#lambda.camelcase_sanitize_param}}{{classname}}{{/lambda.camelcase_sanitize_param}}.{{name}}{{^required}}Option.Value{{#vendorExtensions.x-is-value-type}}{{nrt!}}.Value{{/vendorExtensions.x-is-value-type}}{{/required}}{{#required}}{{#isNullable}}.Value{{/isNullable}}{{/required}}.ToString({{name}}Format));
            {{/lambda.copy}}
            {{#lambda.indent3}}
            {{>WriteProperty}}
            {{/lambda.indent3}}
            {{/isDate}}
            {{#isDateTime}}
            {{#lambda.copy}}
            writer.WriteString("{{baseName}}", {{#lambda.camelcase_sanitize_param}}{{classname}}{{/lambda.camelcase_sanitize_param}}.{{name}}{{^required}}Option.Value{{#vendorExtensions.x-is-value-type}}{{nrt!}}.Value{{/vendorExtensions.x-is-value-type}}{{/required}}{{#required}}{{#isNullable}}.Value{{/isNullable}}{{/required}}.ToString({{name}}Format));
            {{/lambda.copy}}
            {{#lambda.indent3}}
            {{>WriteProperty}}
            {{/lambda.indent3}}
            {{/isDateTime}}
            {{#isEnum}}
            {{#isNumeric}}
            {{#lambda.copy}}
            writer.WriteNumber("{{baseName}}", {{#isInnerEnum}}{{classname}}.{{/isInnerEnum}}{{{datatypeWithEnum}}}ToJsonValue({{#lambda.camelcase_sanitize_param}}{{classname}}{{/lambda.camelcase_sanitize_param}}.{{name}}{{^required}}Option.Value{{#vendorExtensions.x-is-value-type}}{{nrt!}}.Value{{/vendorExtensions.x-is-value-type}}{{/required}}{{#required}}{{#isNullable}}.Value{{/isNullable}}{{/required}}));
            {{/lambda.copy}}
            {{#lambda.indent3}}
            {{>WriteProperty}}
            {{/lambda.indent3}}
            {{/isNumeric}}
            {{^isMap}}
            {{^isNumeric}}
            {{#isInnerEnum}}
            {{#isNullable}}
            var {{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}}RawValue = {{classname}}.{{{datatypeWithEnum}}}ToJsonValue({{#lambda.camelcase_sanitize_param}}{{classname}}{{/lambda.camelcase_sanitize_param}}.{{name}}{{^required}}Option.Value{{#vendorExtensions.x-is-value-type}}{{nrt!}}.Value{{/vendorExtensions.x-is-value-type}}{{/required}}{{#required}}{{#isNullable}}{{nrt!}}.Value{{/isNullable}}{{/required}});
            if ({{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}}RawValue != null)
                writer.WriteString("{{baseName}}", {{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}}RawValue);
            else
                writer.WriteNull("{{baseName}}");

            {{/isNullable}}
            {{^isNullable}}
            var {{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}}RawValue = {{classname}}.{{{datatypeWithEnum}}}ToJsonValue({{#lambda.camelcase_sanitize_param}}{{classname}}{{/lambda.camelcase_sanitize_param}}.{{name}}{{^required}}Option.Value{{#vendorExtensions.x-is-value-type}}{{nrt!}}.Value{{/vendorExtensions.x-is-value-type}}{{/required}}{{#required}}{{#isNullable}}{{nrt!}}.Value{{/isNullable}}{{/required}});
            writer.WriteString("{{baseName}}", {{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}}RawValue);
            {{/isNullable}}
            {{/isInnerEnum}}
            {{^isInnerEnum}}
            {{#lambda.copy}}
            {{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}}
            {{/lambda.copy}}
            {{#required}}
            {{#isNullable}}
            if ({{#lambda.camelcase_sanitize_param}}{{classname}}{{/lambda.camelcase_sanitize_param}}.{{name}} == null)
                writer.WriteNull("{{baseName}}");
            else
            {
                var {{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}}RawValue = {{{datatypeWithEnum}}}ValueConverter.ToJsonValue({{#lambda.camelcase_sanitize_param}}{{classname}}{{/lambda.camelcase_sanitize_param}}.{{name}}.Value);
                {{#allowableValues}}
                {{#enumVars}}
                {{#-first}}
                {{#isString}}
                if ({{#lambda.pasteLine}}{{/lambda.pasteLine}}RawValue != null){{! we cant use name here because enumVar also has a name property, so use the paste lambda instead }}
                    writer.WriteString("{{baseName}}", {{#lambda.camelcase_sanitize_param}}{{nameInPascalCase}}{{/lambda.camelcase_sanitize_param}}RawValue);
                else
                    writer.WriteNull("{{baseName}}");
                {{/isString}}
                {{^isString}}
                writer.WriteNumber("{{baseName}}", {{#lambda.camelcase_sanitize_param}}{{nameInPascalCase}}{{/lambda.camelcase_sanitize_param}}RawValue);
                {{/isString}}
                {{/-first}}
                {{/enumVars}}
                {{/allowableValues}}
            }
            {{/isNullable}}
            {{^isNullable}}
            var {{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}}RawValue = {{{datatypeWithEnum}}}ValueConverter.ToJsonValue({{#lambda.camelcase_sanitize_param}}{{classname}}{{/lambda.camelcase_sanitize_param}}.{{name}});
            {{#allowableValues}}
            {{#enumVars}}
            {{#-first}}
            {{^isNumeric}}
            writer.WriteString("{{baseName}}", {{#lambda.pasteLine}}{{/lambda.pasteLine}}RawValue);
            {{/isNumeric}}
            {{#isNumeric}}
            writer.WriteNumber("{{baseName}}", {{#lambda.camelcase_sanitize_param}}{{#lambda.pasteLine}}{{/lambda.pasteLine}}{{/lambda.camelcase_sanitize_param}}RawValue);
            {{/isNumeric}}
            {{/-first}}
            {{/enumVars}}
            {{/allowableValues}}
            {{/isNullable}}

            {{/required}}
            {{^required}}
            if ({{#lambda.camelcase_sanitize_param}}{{classname}}{{/lambda.camelcase_sanitize_param}}.{{name}}Option.IsSet)
                {{#isNullable}}
                if ({{#lambda.camelcase_sanitize_param}}{{classname}}{{/lambda.camelcase_sanitize_param}}.{{name}}Option{{nrt!}}.Value != null)
                {
                    var {{#lambda.pasteLine}}{{/lambda.pasteLine}}RawValue = {{{datatypeWithEnum}}}ValueConverter.ToJsonValue({{#lambda.camelcase_sanitize_param}}{{classname}}{{/lambda.camelcase_sanitize_param}}.{{name}}Option.Value{{nrt!}}.Value);
                    writer.{{#lambda.first}}{{#allowableValues}}{{#enumVars}}{{^isNumeric}}WriteString  {{/isNumeric}}{{#isNumeric}}WriteNumber  {{/isNumeric}}{{/enumVars}}{{/allowableValues}}{{/lambda.first}}("{{baseName}}", {{#lambda.pasteLine}}{{/lambda.pasteLine}}RawValue);
                }
                else
                    writer.WriteNull("{{baseName}}");
                {{/isNullable}}
                {{^isNullable}}
            {
                var {{#lambda.pasteLine}}{{/lambda.pasteLine}}RawValue = {{{datatypeWithEnum}}}ValueConverter.ToJsonValue({{#lambda.camelcase_sanitize_param}}{{classname}}{{/lambda.camelcase_sanitize_param}}.{{name}}{{nrt!}}.Value);
                writer.{{#lambda.first}}{{#allowableValues}}{{#enumVars}}{{^isNumeric}}WriteString  {{/isNumeric}}{{#isNumeric}}WriteNumber  {{/isNumeric}}{{/enumVars}}{{/allowableValues}}{{/lambda.first}}("{{baseName}}", {{#lambda.pasteLine}}{{/lambda.pasteLine}}RawValue);
            }
                {{/isNullable}}
            {{/required}}
            {{/isInnerEnum}}
            {{/isNumeric}}
            {{/isMap}}
            {{/isEnum}}
            {{#isUuid}}
            {{#lambda.copy}}
            writer.WriteString("{{baseName}}", {{#lambda.camelcase_sanitize_param}}{{classname}}{{/lambda.camelcase_sanitize_param}}.{{name}}{{^required}}Option.Value{{#vendorExtensions.x-is-value-type}}{{nrt!}}.Value{{/vendorExtensions.x-is-value-type}}{{/required}}{{#required}}{{#isNullable}}.Value{{/isNullable}}{{/required}});
            {{/lambda.copy}}
            {{#lambda.indent3}}
            {{>WriteProperty}}
            {{/lambda.indent3}}
            {{/isUuid}}
            {{^isUuid}}
            {{^isEnum}}
            {{^isString}}
            {{^isBoolean}}
            {{^isNumeric}}
            {{^isDate}}
            {{^isDateTime}}
            {{#required}}
            {{#isNullable}}
            if ({{#lambda.camelcase_sanitize_param}}{{classname}}{{/lambda.camelcase_sanitize_param}}.{{name}} != null)
            {
                writer.WritePropertyName("{{baseName}}");
                JsonSerializer.Serialize(writer, {{#lambda.camelcase_sanitize_param}}{{classname}}{{/lambda.camelcase_sanitize_param}}.{{name}}, jsonSerializerOptions);
            }
            else
                writer.WriteNull("{{baseName}}");
            {{/isNullable}}
            {{^isNullable}}
            writer.WritePropertyName("{{baseName}}");
            JsonSerializer.Serialize(writer, {{#lambda.camelcase_sanitize_param}}{{classname}}{{/lambda.camelcase_sanitize_param}}.{{name}}, jsonSerializerOptions);
            {{/isNullable}}
            {{/required}}
            {{^required}}
            if ({{#lambda.camelcase_sanitize_param}}{{classname}}{{/lambda.camelcase_sanitize_param}}.{{name}}Option.IsSet)
            {{#isNullable}}
                if ({{#lambda.camelcase_sanitize_param}}{{classname}}{{/lambda.camelcase_sanitize_param}}.{{name}}Option.Value != null)
                {
                    writer.WritePropertyName("{{baseName}}");
                    JsonSerializer.Serialize(writer, {{#lambda.camelcase_sanitize_param}}{{classname}}{{/lambda.camelcase_sanitize_param}}.{{name}}, jsonSerializerOptions);
                }
                else
                    writer.WriteNull("{{baseName}}");
            {{/isNullable}}
            {{^isNullable}}
            {
                writer.WritePropertyName("{{baseName}}");
                JsonSerializer.Serialize(writer, {{#lambda.camelcase_sanitize_param}}{{classname}}{{/lambda.camelcase_sanitize_param}}.{{name}}, jsonSerializerOptions);
            }
            {{/isNullable}}
            {{/required}}
            {{/isDateTime}}
            {{/isDate}}
            {{/isNumeric}}
            {{/isBoolean}}
            {{/isString}}
            {{/isEnum}}
            {{/isUuid}}
            {{/allVars}}
            {{/lambda.trimLineBreaks}}
            {{/lambda.trimTrailingWithNewLine}}
        }
    }