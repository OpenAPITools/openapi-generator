```python
from __future__ import print_function
import time
import os
import {{{packageName}}}
from {{{packageName}}}.rest import ApiException
from pprint import pprint
{{> python_doc_auth_partial}}
# Enter a context with an instance of the API client
{{#hasAuthMethods}}
with {{{packageName}}}.ApiClient(configuration) as api_client:
{{/hasAuthMethods}}
{{^hasAuthMethods}}
with {{{packageName}}}.ApiClient() as api_client:
{{/hasAuthMethods}}
    # Create an instance of the API class
    {{#hasAuthMethods}}
    # Setup authentication
    {{#authMethods}}
    {{#isBasic}}
    {{#isBasicBasic}}
    # Configure HTTP basic authorization: {{{name}}}
    {{^-first}}# {{/-first}}api_client.configuration.username <- os.environ["USERNAME"]
    {{^-first}}# {{/-first}}api_client.configuration.password <- os.environ["PASSWORD"]
    {{/isBasicBasic}}
    {{#isBasicBearer}}
    # Configure HTTP bearer authorization: {{{name}}}
    {{^-first}}# {{/-first}}api_client.configuration.bearer_token <- os.environ["BEARER_TOKEN"]
    {{/isBasicBearer}}
    {{/isBasic}}
    {{#isApiKey}}
    # Configure API key authorization: {{{name}}}
    {{^-first}}# {{/-first}}api_client.configuration.api_keys["{{{keyParamName}}}"] <- os.environ["API_KEY"]
    {{/isApiKey}}
    {{#isOAuth}}
    # Configure OAuth2 access token for authorization: {{{name}}}
    {{^-first}}# {{/-first}}api_client.configuration.access_token <- os.environ["ACCESS_TOKEN"]
    {{/isOAuth}}
    {{/authMethods}}
    {{/hasAuthMethods}}
    api_instance = {{{packageName}}}.{{{classname}}}(api_client)
    {{#allParams}}
    {{paramName}} = {{{example}}} # {{{dataType}}} | {{{description}}}{{^required}} (optional){{/required}}{{#defaultValue}} (default to {{{.}}}){{/defaultValue}}
    {{/allParams}}

    try:
        {{#summary}}
        # {{{.}}}
        {{/summary}}
        {{#returnType}}api_response = {{/returnType}}api_instance.{{{operationId}}}({{#allParams}}{{#required}}{{paramName}}{{/required}}{{^required}}{{paramName}}={{paramName}}{{/required}}{{^-last}}, {{/-last}}{{/allParams}})
        {{#returnType}}
        print("The response of {{classname}}->{{operationId}}:\n")
        pprint(api_response)
        {{/returnType}}
    except Exception as e:
        print("Exception when calling {{classname}}->{{operationId}}: %s\n" % e)
```
