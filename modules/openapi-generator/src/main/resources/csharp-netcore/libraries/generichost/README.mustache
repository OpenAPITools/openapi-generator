# Created with Openapi Generator

<a name="cli"></a>
## Run the following powershell command to generate the library

```
java -jar "<path>/openapi-generator/modules/openapi-generator-cli/target/openapi-generator-cli.jar" generate `
    -g csharp-netcore `
    --library generichost `
    -i <your-swagger-file>.yml `
    -o <your-output-folder> `
    --additional-properties="packageName=YourPackageName,targetFramework=net5.0,validatable=false,nullableReferenceTypes=true"
```

<a name="usage"></a>
## Using the library in your project

```
cs
using System;
using System.Threading.Tasks;
using Microsoft.Extensions.Hosting;
using Microsoft.Extensions.DependencyInjection;
using {{packageName}}.Api;
using {{packageName}}.Client;
using {{packageName}}.Model;

namespace YourProject
{
    public class Program
    {
        public static async Task Main(string[] args)
        {
            var host = CreateHostBuilder(args).Build();

            var api = host.Services.GetRequiredService<{{#apiInfo}}{{#apis}}{{#-first}}{{#operations}}{{#-first}}{{#operation}}{{#-first}}{{operationId}}>();
            
            ApiResponse<{{#returnType}}{{{.}}}{{/returnType}}{{^returnType}}object{{/returnType}}{{#nullableReferenceTypes}}?{{/nullableReferenceTypes}}> foo = await api.{{operationId}}WithHttpInfoAsync("todo");{{/-first}}{{/operation}}{{/-first}}{{/operations}}{{/-first}}{{/apis}}{{/apiInfo}}
        }

        public static IHostBuilder CreateHostBuilder(string[] args) => Host.CreateDefaultBuilder(args)
          .Configure{{#projectName}}{{.}}{{/projectName}}{{^projectName}}Api{{/projectName}}((context, options) =>
          {
              // the type of token here depends on the api security specifications
              ApiKeyToken token = new(TimeSpan.FromSeconds(1), $"<your token>");
              options.AddTokens(token);

              options.ConfigureJsonOptions((jsonOptions) =>
              {
                  jsonOptions.Converters.Add(new DateTimeOffsetJsonConverter());
                  jsonOptions.Converters.Add(new JsonStringEnumConverter());
              });

              options.ConfigureClients(client => {{#supportsRetry}}client
                .AddRetryPolicy(2)
                .AddTimeoutPolicy(TimeSpan.FromSeconds(5))
                .AddCircuitBreakerPolicy(10, TimeSpan.FromSeconds(30)){{/supportsRetry}}
                // add whatever middleware you prefer
              );
          });
    }
}
```
<a name="questions"></a>
## Questions

- What about HttpRequest failures and retries?
  You can add Polly or any other middleware in the ConfigureClients method.
- What about rate limits?
  A token has a TimeSpan which controls how fast it will be reused.
- Does an HttpRequest throw an error when the server response is not Ok?
  It depends how you made the request. If the return type is ApiResponse<T> no error will be thrown, though the Content property will be null. 
  StatusCode and ReasonPhrase will contain information about the error.
  If the return type is T, then it will throw. If the return type is TOrDefault, it will return null.

<a name="notes"></a>
## Notes

- If you are not using .Net Standard, consider setting validatable to false in your generator-config.json due to this bug: https://github.com/dotnet/project-system/issues/3934
- If you want to override the provided mustache templates, provide generate the library with the -t parameter and the folder name which stores your templates.{{#netStandard}}

<a name="frameworks-supported"></a>
## Frameworks supported

- .NET Core >=1.0
- .NET Framework >=4.6
- Mono/Xamarin >=vNext{{/netStandard}}

<a name="dependencies"></a>
## Dependencies

- [Json.NET](https://www.nuget.org/packages/Newtonsoft.Json/) - 12.0.3 or later
- [JsonSubTypes](https://www.nuget.org/packages/JsonSubTypes/) - 1.7.0 or later{{#useCompareNetObjects}}
- [CompareNETObjects](https://www.nuget.org/packages/CompareNETObjects) - 4.61.0 or later{{/useCompareNetObjects}}{{#validatable}}
- [System.ComponentModel.Annotations](https://www.nuget.org/packages/System.ComponentModel.Annotations) - 4.7.0 or later{{/validatable}}

<a name="documentation-for-api-endpoints"></a>
## Documentation for API Endpoints

All URIs are relative to *{{{basePath}}}*

Class | Method | HTTP request | Description
------------ | ------------- | ------------- | -------------{{#apiInfo}}{{#apis}}{{#operations}}{{#operation}}
*{{classname}}* | [**{{operationId}}**]({{apiDocPath}}{{classname}}.md#{{operationIdLowerCase}}) | **{{httpMethod}}** {{path}} | {{#summary}}{{{summary}}}{{/summary}}{{/operation}}{{/operations}}{{/apis}}{{/apiInfo}}

<a name="documentation-for-models"></a>
## Documentation for Models

{{#modelPackage}}{{#models}}{{#model}} - [{{{modelPackage}}}.{{{classname}}}]({{modelDocPath}}{{{classname}}}.md){{/model}}{{/models}}{{/modelPackage}}
{{^modelPackage}}No model defined in this package{{/modelPackage}}

<a name="documentation-for-authorization"></a>
## Documentation for Authorization

{{^authMethods}}All endpoints do not require authorization.{{/authMethods}}{{#authMethods}}{{#-last}}Authentication schemes defined for the API:{{/-last}}{{/authMethods}}{{#authMethods}}

<a name="{{name}}"></a>
### {{name}}

{{#isApiKey}}- **Type**: API key
- **API key parameter name**: {{keyParamName}}
- **Location**: {{#isKeyInQuery}}URL query string{{/isKeyInQuery}}{{#isKeyInHeader}}HTTP header{{/isKeyInHeader}}{{/isApiKey}}{{#isBasicBasic}}
- **Type**: HTTP basic authentication{{/isBasicBasic}}{{#isBasicBearer}}
- **Type**: Bearer Authentication{{/isBasicBearer}}{{#isOAuth}}
- **Type**: OAuth
- **Flow**: {{flow}}
- **Authorization URL**: {{authorizationUrl}}
- **Scopes**: {{^scopes}}N/A{{/scopes}}{{#scopes}}  
- {{scope}}: {{description}}{{/scopes}}{{/isOAuth}}{{/authMethods}}

## Api Configuration
- appName: {{appName}}
- appVersion: {{appVersion}}
- appDescription: {{appDescription}}

## OpenApi Global properties
- debugOpenAPI: {{debugOpenAPI}}
- debugModels: {{debugModels}}
- debugOperations: {{debugOperations}}
- debugSupportingFiles: {{debugSupportingFiles}}
- verbose: {{verbose}}
- generateAliasAsModel: {{generateAliasAsModel}}
- org.openapitools.codegenutils.oncelogger.enabled: {{org.openapi.tools.codegenutils.oncelogger.enabled}}
- supportingFiles: {{supportingFiles}}
- models: omitted for brevity
- apis: omitted for brevity
- apiDocs: omitted for brevity
- modelDocs: {{modelDocs}}
- apiTests: omitted for brevity
- modelTests: {{modelTest}}
- withXml: {{withXml}}

## OpenApi Generator Parameteres
- SDK version: {{packageVersion}}{{^hideGenerationTimestamp}}
- Build date: {{generatedDate}}{{/hideGenerationTimestamp}}
- Build package: {{generatorClass}}
- Package name: {{packageName}}
- allowUnicodeIdentifiers {{allowUnicodeIdentifiers}}
- caseInsensitiveResponseHeaders {{caseInsensitiveResponseHeaders}}
- disallowAdditionalPropertiesIfNotPresent {{disallowAdditionalPropertiesIfNotPresent}}
- hideGenerationTimestamp: {{hideGenerationTimestamp}}
- interfacePrefix: {{interfacePrefix}}
- library: {{library}}
- licenseId: {{licenseId}}
- modelPropertyNaming: {{modelPropertyNaming}}
- netCoreProjectFile: {{netCoreProjectFile}}
- nonPublicApi: {{nonPublicApi}}
- nullableReferenceTypes: {{nullableReferenceTypes}}
- optionalAssemblyInfo: {{optionalAssemblyInfo}}
- optionalEmitDefaultValues: {{optionalEmitDefaultValues}}
- optionalMethodArgument: {{optionalMethodArgument}}
- optionalProjectFile: {{optionalProjectFile}}
- packageGuid: {{packageGuid}}
- packageName: {{packageName}}
- packageTags: {{packageTags}}
- packageVersion: {{packageVersion}}
- releaseNote: {{releaseNote}}
- returnICollection: {{returnICollection}}
- sortParamsByRequiredFlag: {{sortParamsByRequiredFlag}}
- sourceFolder: {{sourceFolder}}
- targetFramework: {{targetFramework}}
- useCollection: {{useCollection}}
- useDateTimeOffset: {{useDateTimeOffset}}
- useOneOfDiscriminatorLookup: {{useOneOfDiscriminatorLookup}}
- validatable: {{validatable}}{{#infoUrl}}
For more information, please visit [{{{infoUrl}}}]({{{infoUrl}}}){{/infoUrl}}

This C# SDK is automatically generated by the [OpenAPI Generator](https://openapi-generator.tech) project.