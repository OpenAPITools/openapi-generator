{{#models}}{{#model}}/*
 * {{classname}}.h
 *
 * {{description}}
 */

#ifndef _{{classname}}_H_
#define _{{classname}}_H_

#include <string.h>
{{#imports}}
#include "{{{.}}}.h"
{{/imports}}

typedef struct {{classname}}_t {
        {{#vars}}
        {{^isContainer}}
        {{^isPrimitiveType}}
        {{datatype}}_t *{{baseName}};
        {{/isPrimitiveType}}
        {{#isPrimitiveType}}
        {{#isNumeric}}
        {{datatype}} {{baseName}};
        {{/isNumeric}}
        {{#isString}}
        {{datatype}} *{{baseName}};
        {{/isString}}
        {{/isPrimitiveType}}
        {{/isContainer}}
        {{#isContainer}}
        {{#isListContainer}}
        {{#isPrimitiveType}}
        {{datatype}}_t *{{baseName}};
        {{/isPrimitiveType}}
        {{^isPrimitiveType}}
        {{datatype}}_t *{{baseName}};
        {{/isPrimitiveType}}
        {{/isListContainer}}
        {{#isMapContainer}}
// TODO map/hash not supported at the moment
        {{/isMapContainer}}
        {{/isContainer}}
        {{/vars}}
} {{classname}}_t;

{{classname}}_t *{{classname}}_create(
        {{#vars}}
        {{^isContainer}}
        {{^isPrimitiveType}}
        {{datatype}}_t *{{baseName}}{{#hasMore}},{{/hasMore}}
        {{/isPrimitiveType}}
        {{#isPrimitiveType}}
        {{#isNumeric}}
        {{datatype}} {{baseName}}{{#hasMore}},{{/hasMore}}
        {{/isNumeric}}
        {{#isString}}
        {{datatype}} *{{baseName}}{{#hasMore}},{{/hasMore}}
        {{/isString}}
        {{/isPrimitiveType}}
        {{/isContainer}}
        {{#isContainer}}
        {{#isListContainer}}
        {{#isPrimitiveType}}
        {{datatype}}_t *{{baseName}}{{#hasMore}},{{/hasMore}}
        {{/isPrimitiveType}}
        {{^isPrimitiveType}}
        {{datatype}}_t *{{baseName}}{{#hasMore}},{{/hasMore}}
        {{/isPrimitiveType}}
        {{/isListContainer}}
        {{#isMapContainer}}
        // TODO map/hash not supported at the moment
        {{/isMapContainer}}
        {{/isContainer}}
        {{/vars}}
);
		
void {{classname}}_free({{classname}}_t *{{classname}});

{{classname}}_t *{{classname}}_parseFromJSON(char *jsonString)

cJSON *{{classname}}_convertToJSON({{classname}}_t *{{classname}});



#endif /* _{{classname}}_H_ */
{{/model}}{{/models}}