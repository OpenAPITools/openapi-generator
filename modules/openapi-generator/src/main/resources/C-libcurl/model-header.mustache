{{#models}}
{{#model}}
/*
 * {{classname}}.h
 *
 * {{description}}
 */

#ifndef _{{classname}}_H_
#define _{{classname}}_H_

#include <string.h>
{{#imports}}
#include "{{{.}}}.h"
{{/imports}}

typedef struct {{classname}}_t {
	{{#vars}}
	{{#isPrimitiveType}}
	{{#isString}}
	{{dataType}}    {{name}};
	{{/isString}}
	{{^isString}} 
	{{dataType}}    {{name}}; //TODO can be modified for numeric in mustache
	{{/isString}}
	{{/isPrimitiveType}}
	{{^isPrimitiveType}}
	{{{dataType}}}_t {{#isContainer}}{{#items}}*{{/items}}{{/isContainer}}{{name}};
	{{/isPrimitiveType}}
	{{/vars}}
	
} {{classname}}_t;

{{classname}}_t *{{classname}}_create(
		{{#vars}}
        {{#isPrimitiveType}}
		{{{dataType}}}    {{{baseName}}}{{#hasMore}},{{/hasMore}}
        {{/isPrimitiveType}}
        {{^isPrimitiveType}}
        {{{dataType}}}_t {{#isContainer}}{{#items}}*{{/items}}{{/isContainer}}{{{baseName}}}{{#hasMore}},{{/hasMore}}
        {{/isPrimitiveType}}
		{{/vars}}
		);
		
void {{classname}}_free({{classname}}_t *{{classname}});

{{classname}}_t *{{classname}}_parseFromJSON(char *jsonString)

cJSON *{{classname}}_convertToJSON({{classname}}_t *{{classname}});

#endif /* _{{classname}}_H_ */
{{/model}}
{{/models}}
