<?php
{{#models}}{{#model}}/**
 * {{classname}}
 */
namespace {{modelPackage}};
use \InvalidArgumentException;

/**
 * {{classname}}
 */
class {{classname}} {

    {{#requiredVars}}
    /** @var {{dataType}} ${{name}} {{#description}}{{description}}{{/description}}*/
    private ${{name}};

    {{/requiredVars}}
    {{#optionalVars}}
    /** @var {{dataType}} ${{name}} (optional) {{#description}}{{description}}{{/description}}*/
    private ${{name}};

    {{/optionalVars}}
    /**
     * {{classname}} constructor
    {{#hasVars}}
     *
    {{#requiredVars}}
     * @param {{dataType}} ${{name}} {{#description}}{{description}}{{/description}}
    {{/requiredVars}}
    {{#optionalVars}}
     * @param {{dataType}}|null ${{name}} (optional) {{#description}}{{description}}{{/description}}
    {{/optionalVars}}
    {{/hasVars}}
     */
    {{#hasVars}}
    public function __construct(
        {{#requiredVars}}
        ${{name}}{{#hasMore}},{{/hasMore}}{{^hasMore}}{{#hasOptional}},{{/hasOptional}}{{/hasMore}}
        {{/requiredVars}}
        {{#optionalVars}}
        ${{name}} = null{{#hasMore}},{{/hasMore}}
        {{/optionalVars}}
    ) {
    {{/hasVars}}
    {{^hasVars}}
    public function __construct() {
    {{/hasVars}}
        {{#allVars}}
        $this->{{name}} = ${{name}};
        {{/allVars}}
    }

    /**
     * Alternative static class constructor
     *
     * @param mixed[]|null $data Associated array of property values initializing the model
     * @throws InvalidArgumentException when $data doesn't contain required constructor arguments
     * @example ${{classVarName}} = {{classname}}::createFromObject({{#hasVars}}[ {{#vars}}{{#-first}}'{{baseName}}' => 'foobar'{{/-first}}{{/vars}} ]{{/hasVars}});
     *
     * @return {{classname}}
     */
    public static function createFromObject(array $data = null) {
    {{#requiredVars}}
        if ($data['{{baseName}}'] === null) throw new InvalidArgumentException("'{{baseName}}' can't be null");
        ${{name}} = $data['{{baseName}}'];
    {{/requiredVars}}
    {{#optionalVars}}
        ${{name}} = (isset($data['{{baseName}}'])) ? $data['{{baseName}}'] : null;
    {{/optionalVars}}
        return new {{classname}}({{^hasVars}});{{/hasVars}}
    {{#hasVars}}
        {{#requiredVars}}
            ${{name}}{{#hasMore}},{{/hasMore}}{{^hasMore}}{{#hasOptional}},{{/hasOptional}}{{/hasMore}}
        {{/requiredVars}}
        {{#optionalVars}}
            ${{name}}{{#hasMore}},{{/hasMore}}
        {{/optionalVars}}
        );
    {{/hasVars}}
    }
}
{{/model}}{{/models}}