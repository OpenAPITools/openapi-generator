import { Controller{{#httpMethods}}, {{.}}{{/httpMethods}} } from '@nestjs/common';
import { {{classname}} } from '../{{apiPackage}}';
import { {{#tsImports}}{{classname}}, {{/tsImports}} } from '../{{modelPackage}}';

@Controller('{{baseName}}')
export class {{classname}}Controller {
  constructor(private readonly {{classVarName}}: {{classname}}) {}

{{#operations}}
{{#operation}}
  @{{#lambda.pascalcase}}{{#vendorExtensions.x-http-method}}{{.}}{{/vendorExtensions.x-http-method}}{{^vendorExtensions.x-http-method}}{{httpMethod}}{{/vendorExtensions.x-http-method}}{{/lambda.pascalcase}}('{{path}}')
  async {{operationId}}({{#allParams}}{{paramName}}: {{{dataType}}}, {{/allParams}}): Promise<{{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}any{{/returnType}}> {
    return this.{{classVarName}}.{{operationId}}({{#allParams}}{{paramName}}, {{/allParams}});
  }

{{/operation}}
{{/operations}}
} 