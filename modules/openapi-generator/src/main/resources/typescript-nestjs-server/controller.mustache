import { Controller{{#operations}}{{#operation}}, {{#vendorExtensions.x-http-method}}{{.}}{{/vendorExtensions.x-http-method}}{{^vendorExtensions.x-http-method}}{{httpMethod}}{{/vendorExtensions.x-http-method}}{{/operation}}{{/operations}} } from '@nestjs/common';
{{#operations}}
{{#operation}}
{{#allParams}}
import { {{dataType}} } from '../{{modelPackage}}/{{modelFilename}}';
{{/allParams}}
{{/operation}}
{{/operations}}
import { {{classname}}Api } from './{{classFilename}}.api';

@Controller('{{baseName}}')
export class {{classname}}Controller {
  constructor(private readonly {{classVarName}}Api: {{classname}}Api) {}

{{#operations}}
{{#operation}}
  @{{#vendorExtensions.x-http-method}}{{.}}{{/vendorExtensions.x-http-method}}{{^vendorExtensions.x-http-method}}{{httpMethod}}{{/vendorExtensions.x-http-method}}('{{path}}')
  async {{operationId}}({{#allParams}}{{#isBodyParam}}{{paramName}}: {{dataType}}{{/isBodyParam}}{{^isBodyParam}}{{paramName}}{{/isBodyParam}}{{#hasMore}}, {{/hasMore}}{{/allParams}}): Promise<{{#returnType}}{{returnType}}{{/returnType}}{{^returnType}}any{{/returnType}}> {
    return this.{{classVarName}}Api.{{operationId}}({{#allParams}}{{paramName}}{{#hasMore}}, {{/hasMore}}{{/allParams}});
  }

{{/operation}}
{{/operations}}
} 