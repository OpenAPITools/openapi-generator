{{>licenseInfo}}
#ifndef {{prefix}}_APIROUTER_H
#define {{prefix}}_APIROUTER_H

#include <QObject>
#include <QStringList>
#include <QSharedPointer>
#include <QList>

#include <qhttpengine/socket.h>
#include <qhttpengine/handler.h>
#include <qhttpengine/qobjecthandler.h>

{{#cppNamespaceDeclarations}}
namespace {{this}} {
{{/cppNamespaceDeclarations}}


class RequestHandler : public  QHttpEngine::QObjectHandler
{
    Q_OBJECT
signals:
    void requestReceived(QHttpEngine::Socket *socket);

protected:
    virtual void process(QHttpEngine::Socket *socket, const QString &path){
        Q_UNUSED(path);
        emit requestReceived(socket);
    }
};

class ApiRouter : public QObject
{
    Q_OBJECT
public:
    ApiRouter(QObject *parent);
    virtual ~ApiRouter();

    void onNewRequest(QHttpEngine::Socket *socket);
};

{{#cppNamespaceDeclarations}}
}
{{/cppNamespaceDeclarations}}

#endif // {{prefix}}_APIROUTER_H