{{#models}}
{{#model}}
#include <stdlib.h>
#include <string.h>
#include <stdio.h>
#include "cJSON.h"
{{#imports}}
#include "{{{.}}}h"
{{/imports}}


{{classname}}_t *{{classname}}_create(
		{{#vars}}
		{{{dataType}}}		*{{{baseName}}}{{#hasMore}},{{/hasMore}}
		{{/vars}}
		) {
	{{classname}}_t *{{classname}} = malloc(sizeof({{classname}}_t));
	{{#vars}}
	{{classname}}->{{{baseName}}} = {{{baseName}}};
	{{/vars}}

	return {{classname}};
}


void {{classname}}_free({{classname}}_t *{{classname}}) {
	listEntry_t *listEntry;

	{{#vars}}
	{{^isContainer}}
	{{^isPrimitiveType}}
	{{{name}}}_free({{{classname}}}->{{{baseName}}})
	{{/isPrimitiveType}}
	{{#isPrimitiveType}}
	free({{{classname}}}->{{{baseName}}})
	{{/isPrimitiveType}}
	{{/isContainer}}
	{{#isContainer}}
	{{#isListContainer}}
	{{#isPrimitiveType}}
	list_ForEach(listEntry, {{classname}}->{{baseName}}) {
		free(listEntry->data);
	}
	list_free({{classname}}->{{baseName}});
	{{/isPrimitiveType}}
	{{^isPrimitiveType}}
	list_ForEach(listEntry, {{classname}}->{{baseName}}) {
		{{baseName}}_free(listEntry->data);
	}
	list_free({{classname}}->{{baseName}});
	{{/isPrimitiveType}}
	{{/isListContainer}}
	{{#isMapContainer}}
	// TODO map/hash not supported at the moment
	{{/isMapContainer}}
	{{/isContainer}}

	{{/vars}}
	free({{classname}});
}
{{/model}}
{{/models}}