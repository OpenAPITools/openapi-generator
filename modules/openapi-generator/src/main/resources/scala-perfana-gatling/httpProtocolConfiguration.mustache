package {{ configurationPackage }}

import {{ configurationPackage }}._
import io.gatling.core.Predef._
import io.gatling.http.Predef._
import io.gatling.http.protocol.HttpProtocolBuilder


/**
* Definition of the httpProtocol, will be used for all requests in scenario
*/

object HttpProtocolConfiguration {

    val httpProtocol: HttpProtocolBuilder = {
    val protocol = http
    .baseUrl(TestConfiguration.targetBaseUrl)
    .inferHtmlResources()
    .acceptHeader("*/*")
    .acceptEncodingHeader("gzip, deflate, sdch")
    .acceptLanguageHeader("en-US,en;q=0.8")
    .contentTypeHeader("application/json")
    .userAgentHeader("Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.98 Safari/537.36")
    .shareConnections
    .header("perfana-test-run-id", TestConfiguration.testRunId)
    .header("X-Authorization", "#{JWT}")
    if (TestConfiguration.useProxy)
        protocol.proxy(Proxy("localhost", 8888))
    else
        protocol
}
}
