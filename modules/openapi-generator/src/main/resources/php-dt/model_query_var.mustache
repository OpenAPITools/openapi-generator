{{#isArray
}}{{#isPrimitiveType
}}     * @DTA\Strategy(subset="{{internal.parameterLocation}}", name="QueryStringScalarArray", options={"type":{{>list_item_type}}, "format":"{{internal.collectionFormat}}"})
     * @DTA\Validator(subset="{{internal.parameterLocation}}", name="QueryStringScalarArray", options={"type":{{>list_item_type}}, "format":"{{internal.collectionFormat}}"{{#minItems}}, "min_items":{{minItems}}{{/minItems}}{{#maxItems}}, "max_items":{{maxItems}}{{/maxItems}}})
{{/isPrimitiveType
}}{{^isPrimitiveType
}}     * TODO add validator(s) and strategy for list of {{>list_item_type}} and collection format {{internal.collectionFormat}} inside query string
{{/isPrimitiveType
}}{{/isArray
}}{{#isMap
}}     * TODO add validator(s) and strategy for map of {{>map_item_type}} and collection format {{internal.collectionFormat}} inside query string
{{/isMap
}}{{^isContainer
}}{{#isPrimitiveType
}}     * @DTA\Strategy(subset="{{internal.parameterLocation}}", name="QueryStringScalar", options={"type":"{{dataType}}"})
     * @DTA\Validator(subset="{{internal.parameterLocation}}", name="QueryStringScalar", options={"type":"{{dataType}}"})
{{/isPrimitiveType
}}{{#isDate
}}     * @DTA\Strategy(subset="{{internal.parameterLocation}}", name="Date")
     * @DTA\Validator(subset="{{internal.parameterLocation}}", name="Date")
{{/isDate
}}{{#isDateTime
}}     * @DTA\Strategy(subset="{{internal.parameterLocation}}", name="DateTime")
     * @DTA\Validator(subset="{{internal.parameterLocation}}", name="DateTime")
{{/isDateTime
}}{{^isPrimitiveType
}}{{^isDate}}{{^isDateTime
}}     * TODO add validator(s) and strategy for {{dataType}} inside query string
{{/isDateTime}}{{/isDate
}}{{/isPrimitiveType
}}{{/isContainer
}}{{#hasValidation
}}{{#minLength}}{{#maxLength
}}     * @DTA\Validator(subset="{{internal.parameterLocation}}", name="Length", options={"min":{{minLength}}, "max":{{maxLength}}})
{{/maxLength}}{{/minLength
}}{{^minLength}}{{#maxLength
}}     * @DTA\Validator(subset="{{internal.parameterLocation}}", name="Length", options={"max":{{maxLength}}})
{{/maxLength}}{{/minLength
}}{{#minLength}}{{^maxLength
}}     * @DTA\Validator(subset="{{internal.parameterLocation}}", name="Length", options={"min":{{minLength}}})
{{/maxLength}}{{/minLength
}}{{#minimum}}{{#maximum
}}     * @DTA\Validator(subset="{{internal.parameterLocation}}", name="Range", options={"min":{{minimum}}, "max":{{maximum}}{{#exclusiveMinimum}}, "exclude_min":true{{/exclusiveMinimum}}{{#exclusiveMaximum}}, "exclude_max":true{{/exclusiveMaximum}}})
{{/maximum}}{{/minimum
}}{{^minimum}}{{#maximum
}}     * @DTA\Validator(subset="{{internal.parameterLocation}}", name="Range", options={"max":{{maximum}}{{#exclusiveMaximum}}, "exclude_max":true{{/exclusiveMaximum}}})
{{/maximum}}{{/minimum
}}{{#minimum}}{{^maximum
}}     * @DTA\Validator(subset="{{internal.parameterLocation}}", name="Range", options={"min":{{minimum}}{{#exclusiveMinimum}}, "exclude_min":true{{/exclusiveMinimum}}})
{{/maximum}}{{/minimum
}}{{#pattern
}}     * @DTA\Validator(subset="{{internal.parameterLocation}}", name="Match", options={"pattern":"{{{pattern}}}"})
{{/pattern
}}{{/hasValidation}}