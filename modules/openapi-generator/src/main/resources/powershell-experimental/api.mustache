{{> partial_header}}
{{#operations}}
{{#operation}}
function Invoke-{{{classname}}}{{{operationId}}} {
    [CmdletBinding()]
    Param (
    {{#allParams}}
        [Parameter(Position = {{vendorExtensions.x-index}}, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true, Mandatory = {{#required}}$true{{/required}}{{^required}}$false{{/required}})]
        [{{^isContainer}}{{^isPrimitiveType}}{{^isFile}}{{{packageName}}}.Model.{{/isFile}}{{/isPrimitiveType}}{{/isContainer}}{{{dataType}}}]
        {{=<% %>=}}
        ${<%paramName%>}<%^-last%>,<%/-last%>
        <%={{ }}=%>
    {{/allParams}}
    )

    Process {
        'Calling method: {{{classname}}}-{{{operationId}}}' | Write-Host
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $LocalVarAccepts = @{}
        $LocalVarContentTypes = @{}
        $LocalVarQueryParameters = @{}
        $LocalVarHeaderParameters = @{}
        $LocalVarFormParameters = @{}
        $LocalVarBodyParameters = @{}
        $LocalVarPathParameters = @{}
        $LocalVarCookieParameters = @{}

        $Configuraiton = Get-{{{packageName}}}Configuration

        $LocalVarUri = '{{{path}}}'
        {{=< >=}}
        <#pathParams>
        $LocalVarUri = $LocalVarUri.replace('{<baseName>}', $<paramName>)
        </pathParams>
        <={{ }}=>
        #$LocalVarUri = $Configuration["BaseUrl"] + $LocalVarUri

        {{#headerParams}}
        {{#required}}
        {{^isNullable}}
        if (!${{{paramName}}}) {
            throw "Error! ${{{paramName}}} is required."
        }

        {{/isNullable}}
        {{/required}}
        $LocalVarHeaderParameters['{{baseName}}'] = ${{{paramName}}}

        {{/headerParams}}
        {{#queryParams}}
        {{#required}}
        {{^isNullable}}
        if (!${{{paramName}}}) {
            throw "Error! ${{{paramName}}} is required."
        }

        {{/isNullable}}
        {{/required}}
        $LocalVarQueryParameters['{{baseName}}'] = ${{{paramName}}}

        {{/queryParams}}
        {{#formParams}}
        {{#required}}
        {{^isNullable}}
        if (!${{{paramName}}}) {
            throw "Error! ${{{paramName}}} is required."
        }

        {{/isNullable}}
        {{/required}}
        $LocalVarFormParameters['{{baseName}}'] = ${{{paramName}}}

        {{/formParams}}

        {{#authMethods}}
        {{#isApiKey}}
        {{#isKeyInHeader}}
        if (!$Configuration["ApiKey"] -and $Configuration["ApiKey"]["{{{name}}}"]) {
            $LocalVarHeaderParameters['{{{name}}}'] = $Configuration["ApiKey"]["{{{name}}}"]
        }
        {{/isKeyInHeader}}
        {{#isKeyInQuery}}
        if (!$Configuration["ApiKey"] -and $Configuration["ApiKey"]["{{{name}}}"]) {
            $LocalVarQueryParameters['{{{name}}}'] = $Configuration["ApiKey"]["{{{name}}}"]
        }
        {{/isKeyInQuery}}
        {{#isKeyInCookie}}
        if ($Configuration["Cookie"]"]) {
            $LocalVarCookieParameters['{{{name}}}'] = $Configuration["Cookie"]
        }
        {{/isKeyInCookie}}
        {{/isApiKey}}
        {{#isBasicBasic}}
        if ($Configuration["Username"] -and $Configuration["Password"]]) {
            $LocalVarBytes = [System.Text.Encoding]::UTF8.GetBytes($Configuration["Username"] + ":" + $Configuration["Password"])
            $LocalVarBase64Text =[Convert]::ToBase64String($LocalVarBytes)
            $LocalVarHeaderParameters['Authorization'] = "Basic " + $LocalVarBase64Text
        }
        {{/isBasicBasic}}
        {{#isBasicBearer}}
        if ($Configuration["AccessToken"]) {
            $LocalVarHeaderParameters['Authorization'] = "Bearer " + $Configuration["AccessToken"]
        }
        {{/isBasicBearer}}

        {{/authMethods}}
        $LocalVarResult = Invoke-{{{packageName}}}APIClient -Method '{{httpMethod}}' `
                                -Uri $LocalVarUri `
                                -Accepts $LocalVarAccepts `
                                -ContentTypes $LocalVarContentTypes `
                                -Body $LocalVarBodyParameters `
                                -HeaderParameters $LocalVarHeaderParameters `
                                -QueryParameters $LocalVarQueryParameters `
                                -FormParameters $LocalVarFormParameters `
                                -CookieParameters $LocalVarCookieParameters `
                                -ReturnType "{{#returnType}}{{{.}}}{{/returnType}}"

        return $LocalVarResult["Response"]
    }
}

{{/operation}}
{{/operations}}
