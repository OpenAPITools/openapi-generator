{{> partial_header}}
function Set-OpenAPIConfiguration {

    [CmdletBinding()]
    Param(
        $BaseUrl,
        $Username,
        $Password,
        $ApiKey,
        $ApiSecret,
        $AccessToken,
        $AccessTokenSecret,
        [switch]$PassThru,
        [switch]$Force
    )
    Process {

        If (!BaseUrl) {
            [void]$Script:OpenAPIConfiguration.Add('BaseUrl', $BaseUrl)
        }

        #If ($OAuthSettings = Get-OpenAPIConfiguration) {
        #    If ($Force) {
        #        [void]$Script:OAuthCollection.Remove($OAuthSettings)
        #    } Else {
        #        Write-Warning "OAuthSettings with AccessToken '${AccessToken}' already exists."
        #    }
        #}

        #$OAuthSettings = @{
        #    ApiKey = $ApiKey
        #    ApiSecret = $ApiSecret
        #    AccessToken = $AccessToken
        #    AccessTokenSecret = $AccessTokenSecret
        #}

        #$RateLimitStatus = Get-TwitterApplication_RateLimitStatus
        #If ($RateLimitStatus.rate_limit_context.access_token -ne $AccessToken) { Throw 'RateLimitStatus was returned for the wrong AccessToken.'}
        #
        #$OAuthSettings['RateLimitStatus'] = ConvertFrom-RateLimitStatus -RateLimitStatus $RateLimitStatus

        #[void]$Script:OAuthCollection.Add($OAuthSettings)

        #If ($PassThru) { $OAuthSettings }

    }

}
