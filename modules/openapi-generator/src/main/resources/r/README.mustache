# R API client for {{packageName}}

{{#appDescriptionWithNewLines}}
{{{.}}}
{{/appDescriptionWithNewLines}}

## Overview
This API client was generated by the [OpenAPI Generator](https://openapi-generator.tech) project. By using the [OpenAPI spec](https://openapis.org) from a remote server, you can easily generate an API client.

- API version: {{appVersion}}
- Package version: {{packageVersion}}
{{^hideGenerationTimestamp}}
- Build date: {{generatedDate}}
{{/hideGenerationTimestamp}}
- Build package: {{generatorClass}}
{{#infoUrl}}
For more information, please visit [{{{infoUrl}}}]({{{infoUrl}}})
{{/infoUrl}}

## Installation

### Prerequisites

Install the dependencies

```R
install.packages("jsonlite")
install.packages("httr")
install.packages("base64enc")
```

### Build the package

```sh
git clone https://{{gitHost}}/{{{gitUserId}}}/{{{gitRepoId}}}
cd {{{gitRepoId}}}
R CMD build .
R CMD check {{{packageName}}}_{{{packageVersion}}}.tar.gz --no-manual
R CMD INSTALL --preclean {{{packageName}}}_{{{packageVersion}}}.tar.gz
```

### Install the package

```R
install.packages("{{{packageName}}}")
```

To install directly from Github, use `devtools`:
```R
install.packages("devtools")
library(devtools)
install_github("{{{gitUserId}}}/{{{gitRepoId}}}")
```

To install the package from a local file:
```R
install.packages("{{{packageName}}}_{{{packageVersion}}}.tar.gz", repos = NULL, type = "source")
```

### Usage

```R
library({{{packageName}}})
```

### Reformat code

To reformat code using [styler](https://styler.r-lib.org/index.html), please run the following in the R console:

```R
install.packages("remotes")
remotes::install_github("r-lib/styler@v1.7.0.9003")
library("styler")
style_dir()
```

## Documentation for API Endpoints

All URIs are relative to *{{basePath}}*

Class | Method | HTTP request | Description
------------ | ------------- | ------------- | -------------
{{#apiInfo}}{{#apis}}{{#operations}}{{#operation}}*{{classname}}* | [**{{operationId}}**]({{apiDocPath}}{{classname}}.md#{{operationId}}) | **{{httpMethod}}** {{path}} | {{{summary}}}
{{/operation}}{{/operations}}{{/apis}}{{/apiInfo}}

## Documentation for Models

{{#models}}{{#model}} - [{{classname}}]({{modelDocPath}}{{classname}}.md)
{{/model}}{{/models}}

## Documentation for Authorization

{{^authMethods}} All endpoints do not require authorization.
{{/authMethods}}{{#authMethods}}{{#last}} Authentication schemes defined for the API:{{/last}}{{/authMethods}}
{{#authMethods}}### {{name}}

{{#isApiKey}}
- **Type**: API key
- **API key parameter name**: {{keyParamName}}
- **Location**: {{#isKeyInQuery}}URL query string{{/isKeyInQuery}}{{#isKeyInHeader}}HTTP header{{/isKeyInHeader}}
{{/isApiKey}}
{{#isBasic}}
{{#isHttpSignature}}
- **Type**: HTTP signature authentication
{{/isHttpSignature}}
{{#isBasicBasic}}
- **Type**: HTTP basic authentication
{{/isBasicBasic}}
{{#isBasicBearer}}
- **Type**: Bearer authentication
{{#bearerFormat}}
- **Bearer Format**: {{{.}}}
{{/bearerFormat}}
{{/isBasicBearer}}
{{/isBasic}}
{{#isOAuth}}
- **Type**: OAuth
- **Flow**: {{flow}}
{{#authorizationUrl}}
- **Authorization URL**: {{authorizationUrl}}
{{/authorizationUrl}}
{{#tokenUrl}}
- **Token URL**: {{tokenUrl}}
{{/tokenUrl}}
{{#refreshUrl}}
- **Refresh URL**: {{refreshUrl}}
{{/refreshUrl}}
- **Scopes**: {{^scopes}}N/A{{/scopes}}
{{#scopes}}  - `{{scope}}`: {{description}}
{{/scopes}}
{{/isOAuth}}

{{/authMethods}}

{{#apiInfo}}
{{#apis}}
{{#-last}}
{{#infoEmail}}
## Author

{{{infoEmail}}}
{{/infoEmail}}
{{/-last}}
{{/apis}}
{{/apiInfo}}
