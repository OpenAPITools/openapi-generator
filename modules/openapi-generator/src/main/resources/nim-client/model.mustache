import json
import tables

{{#imports}}import {{import}}
{{/imports}}
{{#models}}{{#model}}{{#vars}}{{#isEnum}}
type {{enumName}}* {.pure.} = enum{{#allowableValues}}{{#enumVars}}
  {{{name}}}{{/enumVars}}{{/allowableValues}}
{{/isEnum}}{{/vars}}
type {{{classname}}}* = object
  ## {{{description}}}{{#vars}}
  {{{name}}}*: {{#isEnum}}{{{enumName}}}{{/isEnum}}{{^isEnum}}{{{dataType}}}{{/isEnum}}{{#description}} ## {{{description}}}{{/description}}{{/vars}}
{{#vars}}{{#isEnum}}
proc `%`*(v: {{enumName}}): JsonNode =
  let str = case v:{{#allowableValues}}{{#enumVars}}
    of {{{name}}}: {{{value}}}{{/enumVars}}{{/allowableValues}}

  JsonNode(kind: JString, str: str)
{{/isEnum}}{{/vars}}{{/model}}{{/models}}