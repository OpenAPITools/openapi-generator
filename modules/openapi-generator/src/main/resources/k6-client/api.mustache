// @ts-ignore
import http from 'k6/http';
// @ts-ignore
import { FileData } from 'k6/http';

{{#imports}}
    {{#import}}
import { {{classname}} } from './{{classname}}.js';
    {{/import}}
{{/imports}}

export class {{classname}} {

    constructor(private baseUrl: string) {}

    {{#operations}}
    {{#operation}}
    /**
    {{#responses}}
    * @returns { {{#dataType}}{{dataType}}{{/dataType}}{{^dataType}}undefined{{/dataType}} } - {{code}}
    {{/responses}}
    */
    public {{operationId}}({{#allParams}}{{{paramName}}}: {{dataType}}{{^-last}}, {{/-last}}{{/allParams}}): {
        code: number,
        headers: {
            [key: string]: string,
        },
        body?: {{#uniqueResponseTypes}}{{#isArray}}{{arrayModelType}}[]{{/isArray}}{{^isArray}}{{#dataType}}{{dataType}}{{/dataType}}{{^dataType}}undefined{{/dataType}}{{/isArray}}{{^-last}} | {{/-last}}{{/uniqueResponseTypes}},
    } {
        const url: string = `${this.baseUrl}{{#lambda.urlLambda}}{{path}}{{/lambda.urlLambda}}{{#hasQueryParams}}?{{/hasQueryParams}}{{#allParams}}{{#isQueryParam}}{{{paramName}}}=${{#lambda.braces}}{{paramName}}{{/lambda.braces}}{{^-last}}&{{/-last}}{{/isQueryParam}}{{/allParams}}`;
        {{#hasFormParams}}

        const form = {
            {{#formParams}}
            {{paramName}},
            {{/formParams}}
        };
        {{/hasFormParams}}
        {{#hasBodyParam}}

        const reqHeaders = {
            'Content-Type': `{{#consumes.0}}{{mediaType}}{{/consumes.0}}`
        };
        {{/hasBodyParam}}
        {{#hasFormParams}}

        const reqHeaders = {
            'Content-Type': `{{#consumes.0}}{{mediaType}}{{/consumes.0}}`
        };
        {{/hasFormParams}}

        const { code, headers: resHeaders, body } = http.{{#lambda.lower}}{{httpMethod}}{{/lambda.lower}}(url{{#hasBodyParam}}, {{#bodyParam}}{{paramName}}, { headers: reqHeaders }{{/bodyParam}}{{/hasBodyParam}}{{#hasFormParams}}, form, { headers: reqHeaders }{{/hasFormParams}});

        return { code, headers: resHeaders };
    }
    {{/operation}}
    {{/operations}}
}
