# {{{pubName}}}
{{#each appDescriptionWithNewLines}}
{{{.}}}
{{/each}}

This Dart package is automatically generated by the [OpenAPI Generator](https://openapi-generator.tech) project:

- API version: {{{appVersion}}}
{{#with artifactVersion}}
- Package version: {{{.}}}
{{/with}}
{{#unless hideGenerationTimestamp}}
- Build date: {{{generatedDate}}}
{{/unless}}
- Build package: {{{generatorClass}}}
{{#with infoUrl}}
For more information, please visit [{{{infoUrl}}}]({{{infoUrl}}})
{{/with}}

## Requirements

Dart 2.12 or later

## Installation & Usage

### Github
If this Dart package is published to Github, add the following dependency to your pubspec.yaml
```
dependencies:
  {{{pubName}}}:
    git: https://{{{gitHost}}}/{{{gitUserId}}}/{{{gitRepoId}}}.git
```

### Local
To use the package in your local drive, add the following dependency to your pubspec.yaml
```
dependencies:
  {{{pubName}}}:
    path: /path/to/{{{pubName}}}
```

## Tests

TODO

## Getting Started

Please follow the [installation procedure](#installation--usage) and then run the following:

```dart
import 'package:{{{pubName}}}/api.dart';
{{#with apiInfo}}{{#each apis}}{{#if @first}}{{#each operations}}{{#with operation}}{{#if @first}}
{{#if hasAuthMethods}}
{{#each authMethods}}
{{#if isBasic}}
{{#if isBasicBasic}}
// TODO Configure HTTP basic authorization: {{{name}}}
//default{{#with apiClientName}}{{.}}{{/with}}{{#unless apiClientName}}{{{modelNamePrefix}}}ApiClient{{{modelNameSuffix}}}{{/unless}}.getAuthentication<HttpBasicAuth>('{{{name}}}').username = 'YOUR_USERNAME'
//default{{#with apiClientName}}{{.}}{{/with}}{{#unless apiClientName}}{{{modelNamePrefix}}}ApiClient{{{modelNameSuffix}}}{{/unless}}.getAuthentication<HttpBasicAuth>('{{{name}}}').password = 'YOUR_PASSWORD';
{{/if}}
{{#if isBasicBearer}}
// TODO Configure HTTP Bearer authorization: {{{name}}}
// Case 1. Use String Token
//default{{#with apiClientName}}{{.}}{{/with}}{{#unless apiClientName}}{{{modelNamePrefix}}}ApiClient{{{modelNameSuffix}}}{{/unless}}.getAuthentication<HttpBearerAuth>('{{{name}}}').setAccessToken('YOUR_ACCESS_TOKEN');
// Case 2. Use Function which generate token.
// String yourTokenGeneratorFunction() { ... }
//default{{#with apiClientName}}{{.}}{{/with}}{{#unless apiClientName}}{{{modelNamePrefix}}}ApiClient{{{modelNameSuffix}}}{{/unless}}.getAuthentication<HttpBearerAuth>('{{{name}}}').setAccessToken(yourTokenGeneratorFunction);
{{/if}}
{{/if}}
{{#if isApiKey}}
// TODO Configure API key authorization: {{{name}}}
//default{{#with apiClientName}}{{.}}{{/with}}{{#unless apiClientName}}{{{modelNamePrefix}}}ApiClient{{{modelNameSuffix}}}{{/unless}}.getAuthentication<ApiKeyAuth>('{{{name}}}').apiKey = 'YOUR_API_KEY';
// uncomment below to setup prefix (e.g. Bearer) for API key, if needed
//default{{#with apiClientName}}{{.}}{{/with}}{{#unless apiClientName}}{{{modelNamePrefix}}}ApiClient{{{modelNameSuffix}}}{{/unless}}.getAuthentication<ApiKeyAuth>('{{{name}}}').apiKeyPrefix = 'Bearer';
{{/if}}
{{#if isOAuth}}
// TODO Configure OAuth2 access token for authorization: {{{name}}}
//default{{#with apiClientName}}{{.}}{{/with}}{{#unless apiClientName}}{{{modelNamePrefix}}}ApiClient{{{modelNameSuffix}}}{{/unless}}.getAuthentication<OAuth>('{{{name}}}').accessToken = 'YOUR_ACCESS_TOKEN';
{{/if}}
{{/each}}
{{/if}}

final api_instance = {{{classname}}}();
{{#each allParams}}
final {{{paramName}}} = {{#if isArray}}[{{/if}}{{#if isBodyParam}}{{{dataType}}}(){{/if}}{{#unless isBodyParam}}{{{example}}}{{/unless}}{{#if isArray}}]{{/if}}; // {{{dataType}}} | {{{description}}}
{{/each}}

try {
    {{#with returnType}}final result = {{/with}}api_instance.{{{operationId}}}({{#each allParams}}{{{paramName}}}{{#unless @last}}, {{/unless}}{{/each}});
    {{#with returnType}}
    print(result);
    {{/with}}
} catch (e) {
    print('Exception when calling {{{classname}}}->{{{operationId}}}: $e\n');
}
{{/if}}{{/with}}{{/each}}{{/if}}{{/each}}{{/with}}
```

## Documentation for API Endpoints

All URIs are relative to *{{{basePath}}}*

Class | Method | HTTP request | Description
------------ | ------------- | ------------- | -------------
{{#with apiInfo}}{{#each apis}}{{#each operations}}{{#with operation}}*{{{classname}}}* | [**{{{operationId}}}**]({{{apiDocPath}}}/{{{classname}}}.md#{{{operationIdLowerCase}}}) | **{{{httpMethod}}}** {{{path}}} | {{{summary}}}
{{/with}}{{/each}}{{/each}}{{/with}}

## Documentation For Models

{{#each models}}{{#with model}} - [{{{classname}}}]({{{modelDocPath}}}/{{{classname}}}.md)
{{/with}}{{/each}}

## Documentation For Authorization

{{#unless authMethods}} All endpoints do not require authorization.
{{/unless}}{{#each authMethods}}{{#with last}} Authentication schemes defined for the API:{{/with}}{{/each}}
{{#each authMethods}}## {{{name}}}

{{#if isApiKey}}- **Type**: API key
- **API key parameter name**: {{{keyParamName}}}
- **Location**: {{#if isKeyInQuery}}URL query string{{/if}}{{#if isKeyInHeader}}HTTP header{{/if}}
{{/if}}
{{#if isBasic}}
{{#if isBasicBasic}}
- **Type**: HTTP Basic authentication
{{/if}}
{{#if isBasicBearer}}
- **Type**: HTTP Bearer authentication
{{/if}}
{{/if}}
{{#if isOAuth}}- **Type**: OAuth
- **Flow**: {{{flow}}}
- **Authorization URL**: {{{authorizationUrl}}}
- **Scopes**: {{#unless scopes}}N/A{{/unless}}
{{#each scopes}} - **{{{scope}}}**: {{{description}}}
{{/each}}
{{/if}}

{{/each}}

## Author

{{#with apiInfo}}{{#each apis}}{{#if @last}}{{{infoEmail}}}
{{/if}}{{/each}}{{/with}}
