# coding: utf-8

from fastapi.testclient import TestClient

import json
import pytest

{{#imports}}{{import}}
{{/imports}}

{{#operations}}
{{#operation}}

{{#vendorExtensions.x-skip-test}}
@pytest.mark.skip("{{reason}}")
{{/vendorExtensions.x-skip-test}}
def test_{{operationId}}(client: TestClient):
    """Test case for {{{operationId}}}

    {{{summary}}}
    """
    {{#bodyParam}}
    {{paramName}} = {{#isContainer}}[{{/isContainer}}{{{example}}}{{#isContainer}}]{{/isContainer}}
    {{/bodyParam}}
    {{#queryParams}}
    {{#-first}}params = [{{/-first}}{{^-first}}                {{/-first}}("{{paramName}}", {{{example}}}){{^-last}},{{/-last}}{{#-last}}]{{/-last}}
    {{/queryParams}}
    headers = { {{#headerParams}}
        '{{paramName}}': {{{example}}},{{/headerParams}}{{#authMethods}}
        {{#isOAuth}}'Authorization': 'Bearer special-key',{{/isOAuth}}{{#isApiKey}}'{{name}}': 'special-key',{{/isApiKey}}{{#isBasicBasic}}'Authorization': 'BasicZm9vOmJhcg==',{{/isBasicBasic}}{{#isBasicBearer}}'Authorization': 'Bearer special-key',{{/isBasicBearer}}{{/authMethods}}
    }
    {{#formParams}}
    {{#-first}}
    data = {
    {{/-first}}
        '{{paramName}}': {{{example}}}{{^-last}},{{/-last}}
    {{#-last}}
    }
    {{/-last}}
    {{/formParams}}
    response = client.request(
        '{{httpMethod}}',
        '{{{path}}}'{{#pathParams}}{{#-first}}.format({{/-first}}{{baseName}}={{{example}}}{{^-last}}, {{/-last}}{{#-last}}){{/-last}}{{/pathParams}},
        headers=headers,{{#bodyParam}}
        json={{paramName}},{{/bodyParam}}{{#formParams}}{{#-first}}
        data=data,{{/-first}}{{/formParams}}{{#queryParams}}{{#-first}}
        params=params,{{/-first}}{{/queryParams}}
    )

    assert response.status_code == 200

{{/operation}}
{{/operations}}
