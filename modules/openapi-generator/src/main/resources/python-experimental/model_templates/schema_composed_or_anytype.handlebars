

class {{#if this.classname}}{{classname}}{{else}}{{#if nameInSnakeCase}}{{name}}{{else}}{{baseName}}{{/if}}{{/if}}(
{{#if hasValidation}}
    {{> model_templates/validations }}
{{/if}}
{{#if getIsAnyType}}
    {{#if composedSchemas}}
    schemas.ComposedSchema
    {{else}}
    schemas.AnyTypeSchema
    {{/if}}
{{else}}
    {{#if getHasMultipleTypes}}
    schemas.SchemaTypeCheckerClsFactory(typing.Union[{{#if isArray}}tuple, {{/if}}{{#if isMap}}frozendict, {{/if}}{{#if isNull}}schemas.NoneClass, {{/if}}{{#if isString}}str, {{/if}}{{#if isByteArray}}str, {{/if}}{{#if isUnboundedInteger}}decimal.Decimal, {{/if}}{{#if isShort}}decimal.Decimal, {{/if}}{{#if isLong}}decimal.Decimal, {{/if}}{{#if isFloat}}decimal.Decimal, {{/if}}{{#if isDouble}}decimal.Decimal, {{/if}}{{#if isNumber}}decimal.Decimal, {{/if}}{{#if isDate}}str, {{/if}}{{#if isDateTime}}str, {{/if}}{{#if isDecimal}}str, {{/if}}{{#if isBoolean}}schemas.BoolClass, {{/if}}]),
    {{/if}}
    {{#if composedSchemas}}
    schemas.ComposedBase,
    {{/if}}
    {{#if isEnum}}
    {{> model_templates/enum_value_to_name }}
    {{/if}}
    {{> model_templates/xbase_schema }}
{{/if}}
):
{{#if this.classname}}
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
{{#if description}}

    {{{unescapedDescription}}}
{{/if}}
    """
{{/if}}
{{#or isMap isAnyType}}
{{> model_templates/dict_partial }}
{{/or}}
{{#if composedSchemas}}

    {{> model_templates/composed_schemas }}
{{/if}}
{{#if isEnum}}
    {{> model_templates/enums }}
{{/if}}

    {{> model_templates/new }}
