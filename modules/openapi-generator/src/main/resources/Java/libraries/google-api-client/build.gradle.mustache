apply plugin: 'idea'
apply plugin: 'eclipse'

group = '{{groupId}}'
version = '{{artifactVersion}}'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.5.+'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'
    }
}

repositories {
    jcenter()
}


if(hasProperty('target') && target == 'android') {

    apply plugin: 'com.android.library'
    apply plugin: 'com.github.dcendents.android-maven'
    
    android {
        compileSdkVersion 23
        buildToolsVersion '23.0.2'
        defaultConfig {
            minSdkVersion 14
            targetSdkVersion 22
        }
        compileOptions {
            {{#supportJava6}}
            sourceCompatibility JavaVersion.VERSION_1_6
            targetCompatibility JavaVersion.VERSION_1_6
            {{/supportJava6}}
            {{^supportJava6}}
            {{#java8}}
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
            {{/java8}}
            {{^java8}}
            sourceCompatibility JavaVersion.VERSION_1_7
            targetCompatibility JavaVersion.VERSION_1_7
            {{/java8}}
            {{/supportJava6}}
        }
    
        // Rename the aar correctly
        libraryVariants.all { variant ->
            variant.outputs.each { output ->
                def outputFile = output.outputFile
                if (outputFile != null && outputFile.name.endsWith('.aar')) {
                    def fileName = "${project.name}-${variant.baseName}-${version}.aar"
                    output.outputFile = new File(outputFile.parent, fileName)
                }
            }
        }

        dependencies {
            provided 'javax.annotation:jsr250-api:1.0'
        }
    }
    
    afterEvaluate {
        android.libraryVariants.all { variant ->
            def task = project.tasks.create "jar${variant.name.capitalize()}", Jar
            task.description = "Create jar artifact for ${variant.name}"
            task.dependsOn variant.javaCompile
            task.from variant.javaCompile.destinationDir
            task.destinationDir = project.file("${project.buildDir}/outputs/jar")
            task.archiveName = "${project.name}-${variant.baseName}-${version}.jar"
            artifacts.add('archives', task);
        }
    }
    
    task sourcesJar(type: Jar) {
        from android.sourceSets.main.java.srcDirs
        classifier = 'sources'
    }
    
    artifacts {
        archives sourcesJar
    }

} else {

    apply plugin: 'java'
    apply plugin: 'maven'

    {{#supportJava6}}
    sourceCompatibility = JavaVersion.VERSION_1_6
    targetCompatibility = JavaVersion.VERSION_1_6
    {{/supportJava6}}
    {{^supportJava6}}
    {{#java8}}
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    {{/java8}}
    {{^java8}}
    sourceCompatibility = JavaVersion.VERSION_1_7
    targetCompatibility = JavaVersion.VERSION_1_7
    {{/java8}}
    {{/supportJava6}}

    install {
        repositories.mavenInstaller {
            pom.artifactId = '{{artifactId}}'
        }
    }
    
    task execute(type:JavaExec) {
       main = System.getProperty('mainClass')
       classpath = sourceSets.main.runtimeClasspath
    }
}

ext {
    swagger_annotations_version = "1.5.17"
    jackson_version = "2.8.9"
    google_api_client_version = "1.23.0"
    jersey_common_version = "2.25.1"
    jodatime_version = "2.9.9"
    junit_version = "4.12"
    {{#threetenbp}}
    jackson_threeten_version = "2.6.4"
    {{/threetenbp}}
}

dependencies {
    compile "io.swagger:swagger-annotations:$swagger_annotations_version"
    compile "com.google.api-client:google-api-client:${google_api_client_version}"
    compile "org.glassfish.jersey.core:jersey-common:${jersey_common_version}"
    compile "com.fasterxml.jackson.core:jackson-core:$jackson_version"
    compile "com.fasterxml.jackson.core:jackson-annotations:$jackson_version"
    compile "com.fasterxml.jackson.core:jackson-databind:$jackson_version"
    compile "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:$jackson_version"
    {{#java8}}
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jackson_version"
    {{/java8}}
    {{#joda}}
    compile "com.fasterxml.jackson.datatype:jackson-datatype-joda:$jackson_version"
    compile "joda-time:joda-time:$jodatime_version"
    {{/joda}}
    {{#threetenbp}}
    compile "com.github.joschi.jackson:jackson-datatype-threetenbp:$jackson_threeten_version"
    {{/threetenbp}}
    {{#withXml}}
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:$jackson_version"
    {{/withXml}}
    testCompile "junit:junit:$junit_version"
}
