{{>licenseInfo}}

package {{invokerPackage}}.model;

import org.openapitools.client.ApiException;
import java.lang.reflect.Type;
import java.util.Map;
import javax.ws.rs.core.GenericType;

/**
 * Abstract class for oneOf,anyOf schemas defined in OpenAPI spec
 */
{{>additionalModelTypeAnnotations}}{{>generatedAnnotation}}
public abstract class AbstractOpenApiSchema {

    // store the actual instance of the schema/object
    private Object instance;

    // schema type (e.g. oneOf, anyOf)
    private final String schemaType;

    public AbstractOpenApiSchema(String schemaType) {
        this.schemaType = schemaType;
    }

    /***
     * Get the list of schemas allowed to be stored in this object
     *
     * @return an instance of the actual schema/object
     */
    public abstract Map<String, GenericType> getSchemas();

    /***
     * Get the actual instance
     *
     * @return an instance of the actual schema/object
     */
    public Object getActualInstance() {return instance;}

    /***
     * Set the actual instance
     *
     * @param instance the actual instance of the schema/object
     */
    public void setActualInstance(Object instance) {this.instance = instance;}

    /***
     * Get the schema type (e.g. anyOf, oneOf)
     *
     * @return the schema type
     */
    public String getSchemaType() {
        return schemaType;
    }
}
