package {{package}};


{{#imports}}import {{import}};
{{/imports}}
import io.micronaut.test.extensions.junit5.annotation.MicronautTest;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Assertions;
import javax.inject.Inject;
import io.reactivex.Single;

{{^fullJavaUtil}}
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
{{/fullJavaUtil}}


/**
 * API tests for {{classname}}
 */
@MicronautTest
public class {{classname}}Test {

    @Inject
    {{classname}} api;

    {{#operations}}{{#operation}}
    /**
     * {{summary}}
     {{#notes}}*
     * {{notes}}
     {{/notes}}*/
    @Test
    public void {{operationId}}Test() {
        {{#allParams}}
        {{^isQueryParam}}{{{dataType}}} {{paramName}} = null;{{/isQueryParam}}{{#isQueryParam}}{{#collectionFormat}}{{#isCollectionFormatMulti}}{{{dataType}}} {{paramName}} = null;{{/isCollectionFormatMulti}}{{^isCollectionFormatMulti}}{{{collectionFormat.toUpperCase}}}Params {{paramName}} = new {{{collectionFormat.toUpperCase}}}Params();{{/isCollectionFormatMulti}}{{/collectionFormat}}{{^collectionFormat}}{{{dataType}}} {{paramName}} = null;{{/collectionFormat}}{{/isQueryParam}}
        {{/allParams}}
        // {{#returnType}}{{{returnType}}} response = {{/returnType}}api.{{operationId}}Blocking({{#allParams}}{{paramName}}{{^-last}}, {{/-last}}{{/allParams}});
        {{#returnType}}// Single<{{{returnType}}}> asyncResponse = api.{{operationId}}({{#allParams}}{{paramName}}{{^-last}}, {{/-last}}{{/allParams}}); {{/returnType}}
        // TODO: test validations
    }

    {{/operation}}{{/operations}}
}
