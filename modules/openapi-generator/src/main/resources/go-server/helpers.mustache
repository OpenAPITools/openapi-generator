{{>partial_header}}
package {{packageName}}

import "net/http"

// Response returns a ImplResponse struct filled
func Response(code int, body interface{}, opts ...ResponseOpt) ImplResponse {
	res := ImplResponse {
		Code: code,
		Body: body,
	}

	for _, f := range opts {
		f(&res)
	}

	return res
}
{{#addResponseHeaders}}

// ResponseWithHeaders return a ImplResponse struct filled, including headers
func ResponseWithHeaders(code int, headers map[string][]string, body interface{}) ImplResponse {
	return ImplResponse {
		Code: code,
		Headers: headers,
		Body: body,
	}
}
{{/addResponseHeaders}}

type ResponseOpt func(r *ImplResponse)

// WithCookie adds a cookie to the response.
func WithCookie(c *http.Cookie) ResponseOpt {
	return func(r *ImplResponse) {
		r.Cookies = append(r.Cookies, c)
	}
}

// WithHeader sets a header in the response.
func WithHeader(name, value string) ResponseOpt {
	return func(r *ImplResponse) {
		if r.Headers == nil {
			r.Headers = make(map[string][]string)
		}
		r.Headers[name] = []string{value}
	}
}

// WithAddedHeader adds a header value to the response.
func WithAddedHeader(name, value string) ResponseOpt {
	return func(r *ImplResponse) {
		if r.Headers == nil {
			r.Headers = make(map[string][]string)
		}
		r.Headers[name] = append(r.Headers[name], value)
	}
}
