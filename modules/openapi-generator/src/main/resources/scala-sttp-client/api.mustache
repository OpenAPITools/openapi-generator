{{>licenseInfo}}
package {{package}}

{{#imports}}
import {{import}}
{{/imports}}
import {{mainPackage}}.core._
import alias._
import sttp.client._
import sttp.model.Method

{{#operations}}
object {{classname}} {

  def apply(baseUrl: String = "{{{basePath}}}")(implicit serializer: SttpSerializer) = new {{classname}}(baseUrl)
}

class {{classname}}(baseUrl: String)(implicit serializer: SttpSerializer) {

  import Helpers._
  import serializer._

{{#operation}}
{{#javadocRenderer}}
{{>javadoc}}
{{/javadocRenderer}}
  def {{operationId}}({{>methodParameters}}): ApiRequestT[{{>operationReturnType}}] =
    basicRequest
      .method(Method.{{httpMethod.toUpperCase}}, uri"$baseUrl{{{path}}}{{#queryParams.0}}?{{#queryParams}}{{baseName}}=${{{paramName}}}{{^-last}}&{{/-last}}{{/queryParams}}{{/queryParams.0}}")
      .contentType({{#consumes.0}}"{{{mediaType}}}"{{/consumes.0}}{{^consumes}}"application/json"{{/consumes}}){{#headerParams}}
      .header({{>paramCreation}}){{/headerParams}}{{#authMethods}}{{#isApiKey}}
      {{#isKeyInQuery}}{{/isKeyInQuery}}{{#isKeyInHeader}}.header("{{keyParamName}}", apiKey.value){{/isKeyInHeader}}{{#isKeyInCookie}}.cookie("{{keyParamName}}", apiKey.value){{/isKeyInCookie}}{{/isApiKey}}{{/authMethods}}{{#formParams.0}}
      .body(Map({{#formParams}}
        {{>paramFormCreation}},{{/formParams}}
      )){{/formParams.0}}{{#bodyParam}}
      .body({{paramName}}){{/bodyParam}}
      .response(asJson[{{>operationReturnType}}])


{{#x-skip-this}}


      {{#authMethods}}{{#isApiKey}}.withApiKey(apiKey, "{{keyParamName}}", {{#isKeyInQuery}}QUERY{{/isKeyInQuery}}{{#isKeyInHeader}}HEADER{{/isKeyInHeader}}{{#isKeyInCookie}}COOKIE{{/isKeyInCookie}})
      {{/isApiKey}}{{#isBasic}}{{#isBasicBasic}}.withCredentials(basicAuth){{/isBasicBasic}}{{#isBasicBearer}}.withCredentials(bearerToken){{/isBasicBearer}}{{/isBasic}}{{/authMethods}}

{{#responses}}{{^isWildcard}}{{#dataType}}.with{{>responseState}}Response[{{dataType}}]({{code}})
      {{/dataType}}{{^dataType}}.with{{>responseState}}Response[Unit]({{code}})
      {{/dataType}}{{/isWildcard}}{{/responses}}{{#responses}}{{#isWildcard}}{{#dataType}}.withDefault{{>responseState}}Response[{{dataType}}]
      {{/dataType}}{{^dataType}}.withDefault{{>responseState}}Response[Unit]
      {{/dataType}}{{/isWildcard}}{{/responses}}
{{/x-skip-this}}

{{/operation}}

}

{{/operations}}
