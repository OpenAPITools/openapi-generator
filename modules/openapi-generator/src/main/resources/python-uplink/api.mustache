from uplink import (
    Consumer,
    get,
    Path,
    Query,
    Body,
    post,
    get,
    patch,
    put,
    delete,
    Header,
    returns,
    json,
)

from typing import Dict, List, Optional, Union # noqa: F401

{{#imports}}
{{{import}}}
{{/imports}}


{{#operations}}
class {{classname}}(Consumer):
{{#operation}}

    async def {{operationId}}(self{{#hasParams}}, *{{#allParams}}, {{>public_method_argument_definition}}{{/allParams}}{{/hasParams}}){{#returnType}} -> {{{returnType}}}{{/returnType}}{{^returnType}}{{/returnType}}:
        """{{{summary}}}"""
        return await self.__{{operationId}}(
            {{#allParams}}
            {{#isPathParam}}
            {{baseName}}={{paramName}},
            {{/isPathParam}}
            {{^isPathParam}}
            {{paramName}}={{paramName}},
            {{/isPathParam}}
            {{/allParams}}
        )
{{/operation}}
{{#operation}}

{{#vendorExtensions.x-operation-produces}}
    @returns.{{.}}
{{/vendorExtensions.x-operation-produces}}
{{#vendorExtensions.x-operation-consumes}}
    @{{.}}
{{/vendorExtensions.x-operation-consumes}}
    @{{#lambda.lowercase}}{{httpMethod}}{{/lambda.lowercase}}("{{path}}")
    def __{{operationId}}(self{{#hasParams}}, *{{#allParams}}, {{>endpoint_argument_definition}}{{/allParams}}{{/hasParams}}){{#returnType}} -> {{{returnType}}}{{/returnType}}{{^returnType}}{{/returnType}}:
        """Internal uplink method for {{operationId}}"""
{{/operation}}
{{/operations}}