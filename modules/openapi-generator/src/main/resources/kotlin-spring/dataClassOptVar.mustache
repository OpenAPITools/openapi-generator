{{! comments are used to break long lines into multiple lines for better readability }}
{{#useBeanValidation}}{{>beanValidation}}{{>beanValidationModel}}{{/useBeanValidation}}{{!
}}{{#swagger2AnnotationLibrary}}
    @Schema({{#example}}example = "{{#lambdaRemoveLineBreak}}{{#lambdaEscapeInNormalString}}{{{.}}}{{/lambdaEscapeInNormalString}}{{/lambdaRemoveLineBreak}}", {{/example}}required = false, {{#isReadOnly}}readOnly = {{{isReadOnly}}}, {{/isReadOnly}}description = "{{{description}}}"){{!
}}{{/swagger2AnnotationLibrary}}{{!
}}{{#swagger1AnnotationLibrary}}
    @ApiModelProperty({{#example}}example = "{{#lambdaRemoveLineBreak}}{{#lambdaEscapeInNormalString}}{{{.}}}{{/lambdaEscapeInNormalString}}{{/lambdaRemoveLineBreak}}", {{/example}}required = false, {{#isReadOnly}}readOnly = {{{isReadOnly}}}, {{/isReadOnly}}value = "{{{description}}}"){{!
}}{{/swagger1AnnotationLibrary}}{{!
}}{{#deprecated}}
    @Deprecated(message = ""){{!
}}{{/deprecated}}{{!
}}{{#vendorExtensions.x-field-extra-annotation}}
    {{{.}}}{{!
}}{{/vendorExtensions.x-field-extra-annotation}}
    @get:JsonProperty("{{{baseName}}}", required = false)
    {{#isInherited}}{{!
}}override {{/isInherited}}{{>modelMutable}} {{{name}}}: {{!
}}{{#isEnum}}{{#isArray}}{{baseType}}<{{/isArray}}{{classname}}.{{{nameInPascalCase}}}{{#isArray}}>{{/isArray}}{{/isEnum}}{{!
}}{{^isEnum}}{{{dataType}}}{{/isEnum}}{{!
}}{{^defaultValue}}? = null{{/defaultValue}}{{!
}}{{#defaultValue}}{{#isNullable}}?{{/isNullable}} = {{!
  }}{{^isNumber}}{{{defaultValue}}}{{/isNumber}}{{!
  }}{{#isNumber}}{{{dataType}}}("{{{defaultValue}}}"){{/isNumber}}{{!
}}{{/defaultValue}}