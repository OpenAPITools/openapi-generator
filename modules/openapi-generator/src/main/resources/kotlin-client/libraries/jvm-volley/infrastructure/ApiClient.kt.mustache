package {{packageName}}.infrastructure

import {{packageName}}.request.GsonRequest

import android.content.Context
import com.android.volley.RequestQueue
import com.android.volley.toolbox.HurlStack
import com.android.volley.toolbox.Volley
import java.io.UnsupportedEncodingException;
import java.net.HttpURLConnection
import java.net.URL
import java.net.URLEncoder
import javax.net.ssl.HttpsURLConnection

class ApiClient(val context: Context) {

    fun escapeString(str: String): String {
        return try {
            URLEncoder.encode(str, "UTF-8")
        } catch (e: UnsupportedEncodingException) {
            str
        }
    }

    // TODO: Add correct code in here
    fun parameterToString(str: String?): String {
        return try {
            URLEncoder.encode(str, "UTF-8")
        } catch (e: UnsupportedEncodingException) {
            str
        }
    }


    fun <T> invokeApi(request: GsonRequest<T>) {
        requestQueue.add(request)
    }

    private val requestQueue: RequestQueue by lazy {
// TODO: How do we add hostname verification and certicate based client/server trust check?
//        val stack = object : HurlStack() {
//           override fun createConnection(url: URL?): HttpURLConnection {
//                val httpsURLConnection =
//                   super.createConnection(url) as HttpsURLConnection
//                try {
//                    httpsURLConnection.sslSocketFactory = getSSLSocketFactory()
//                    httpsURLConnection.hostnameVerifier = getHostnameVerifier()
//                } catch (e: Exception) {
//                    throw e
//                }
//                return httpsURLConnection
//            }
//        }
//        Volley.newRequestQueue(context, stack)
        Volley.newRequestQueue(context.applicationContext)
    }

}