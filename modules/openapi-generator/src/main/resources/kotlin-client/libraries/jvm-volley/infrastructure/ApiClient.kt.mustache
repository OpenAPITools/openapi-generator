package {{packageName}}.infrastructure

import {{packageName}}.request.GsonRequest

import android.content.Context
import com.android.volley.RequestQueue
import com.android.volley.toolbox.BaseHttpStack
import com.android.volley.toolbox.Volley
import java.io.UnsupportedEncodingException;
import java.net.HttpURLConnection
import java.net.URL
import java.net.URLEncoder
import javax.net.ssl.HttpsURLConnection

class ApiClient(val context: Context) {

    private var baseHttpStack: BaseHttpStack? = null

    constructor(context: Context, baseHttpStack: BaseHttpStack): this(context) {
        this.baseHttpStack = baseHttpStack
    }

    fun escapeString(str: String): String {
        return try {
            URLEncoder.encode(str, "UTF-8")
        } catch (e: UnsupportedEncodingException) {
            str
        }
    }

    // TODO: Add correct code in here
    fun parameterToString(str: Any?): String {
        return try {
            URLEncoder.encode(str as String, "UTF-8")
        } catch (e: UnsupportedEncodingException) {
            str as String
        }
    }


    fun <T> invokeApi(request: GsonRequest<T>) {
        requestQueue.add(request)
    }

    private val requestQueue: RequestQueue by lazy {
        when {
            baseHttpStack != null ->
                Volley.newRequestQueue(context.applicationContext, baseHttpStack)
            else ->
                Volley.newRequestQueue(context.applicationContext)
        }
    }

}