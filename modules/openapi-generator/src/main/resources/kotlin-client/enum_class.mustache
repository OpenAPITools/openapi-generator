{{^multiplatform}}
{{#gson}}
import com.google.gson.annotations.SerializedName
{{/gson}}
{{#moshi}}
import com.squareup.moshi.Json
{{/moshi}}
{{#jackson}}
import com.fasterxml.jackson.annotation.JsonProperty
{{/jackson}}
{{#kotlin_serialization}}
import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable
{{#useSafeEnum}}
import org.openapitools.client.infrastructure.SafeEnum
import org.openapitools.client.infrastructure.SafeEnum.Companion.UNKNOWN_VALUE
import org.openapitools.client.infrastructure.SafeEnumAdapter
{{/useSafeEnum}}
{{/kotlin_serialization}}
{{/multiplatform}}
{{#multiplatform}}
import kotlinx.serialization.Serializable
import kotlinx.serialization.SerialName
{{/multiplatform}}

/**
* {{{description}}}
* Values: {{#allowableValues}}{{#enumVars}}{{&name}}{{^-last}},{{/-last}}{{#-last}}{{#kotlin_serialization}}{{#useSafeEnum}},unknown_value{{/useSafeEnum}}{{/kotlin_serialization}}{{/-last}}{{/enumVars}}{{/allowableValues}}
*/
{{#multiplatform}}@Serializable(with = {{classname}}.Serializer::class){{/multiplatform}}{{^multiplatform}}{{#kotlin_serialization}}@Serializable(with = {{classname}}.Serializer::class){{/kotlin_serialization}}{{/multiplatform}}
{{#nonPublicApi}}internal {{/nonPublicApi}}enum class {{classname}}({{#kotlin_serialization}}{{#useSafeEnum}}override {{/useSafeEnum}}{{/kotlin_serialization}}val serialName: {{{dataType}}}){{#kotlin_serialization}}{{#useSafeEnum}} : SafeEnum{{/useSafeEnum}}{{/kotlin_serialization}} {

{{#allowableValues}}{{#enumVars}}
    {{^multiplatform}}
    {{#moshi}}
    @Json(name = {{^isString}}"{{/isString}}{{{value}}}{{^isString}}"{{/isString}})
    {{/moshi}}
    {{#gson}}
    @SerializedName(value = {{^isString}}"{{/isString}}{{{value}}}{{^isString}}"{{/isString}})
    {{/gson}}
    {{#jackson}}
    @JsonProperty(value = {{^isString}}"{{/isString}}{{{value}}}{{^isString}}"{{/isString}})
    {{/jackson}}
    {{#kotlin_serialization}}
    @SerialName(value = {{^isString}}"{{/isString}}{{{value}}}{{^isString}}"{{/isString}})
    {{/kotlin_serialization}}
    {{/multiplatform}}
    {{#isListContainer}}
    {{#isList}}
    {{&name}}(listOf({{{value}}})){{^-last}},{{/-last}}{{#-last}};{{/-last}}
    {{/isList}}
    {{^isList}}
    {{&name}}(arrayOf({{{value}}})){{^-last}},{{/-last}}{{#-last}};{{/-last}}
    {{/isList}}
    {{/isListContainer}}
    {{^isListContainer}}
    {{&name}}({{{value}}}){{^-last}},{{/-last}}{{#-last}}{{#useSafeEnum}},
    UNKNOWN(UNKNOWN_VALUE){{/useSafeEnum}};{{/-last}}
    {{/isListContainer}}

{{/enumVars}}{{/allowableValues}}

    /**
    This override toString avoids using the enum var name and uses the actual api value instead.
    In cases the var name and value are different, the client would send incorrect enums to the server.
    **/
    override fun toString(): String {
        return value{{^isString}}.toString(){{/isString}}
    }

{{#kotlin_serialization}}
    {{#useSafeEnum}}{{#nonPublicApi}}internal {{/nonPublicApi}}object Serializer : SafeEnumAdapter<{{nameInCamelCase}}>({{nameInCamelCase}}::class){{/useSafeEnum}}
{{/kotlin_serialization}}
}
