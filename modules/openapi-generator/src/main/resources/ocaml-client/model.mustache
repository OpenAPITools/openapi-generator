{{>partial_header}}
{{#models}}
{{#model}}
{{#description}}
 * Schema {{{classname}}} : {{{description}}}
 *)
{{/description}}
{{^description}}
 *)
{{/description}}

{{^isEnum}}
type t = {
{{#vars}}
    {{#description}}
    (* {{{description}}} *)
    {{/description}}
    {{#isEnum}}
    {{{name}}}: Enums.{{{datatypeWithEnum}}}{{^isListContainer}}{{#required}}{{#isNullable}} option{{/isNullable}}{{/required}}{{/isListContainer}}{{^isListContainer}}{{^required}} option{{/required}}{{/isListContainer}};
    {{/isEnum}}
    {{^isEnum}}
    {{{name}}}: {{{dataType}}}{{^isListContainer}}{{#required}}{{#isNullable}} option{{/isNullable}}{{/required}}{{/isListContainer}}{{^isListContainer}}{{^required}} option{{/required}}{{/isListContainer}};
    {{/isEnum}}
{{/vars}}
} [@@deriving yojson, show ];;

{{#description}}
(** {{{description}}} *)
{{/description}}
let create {{#requiredVars}}({{{name}}} : {{#isEnum}}Enums.{{{datatypeWithEnum}}}{{/isEnum}}{{^isEnum}}{{{dataType}}}{{/isEnum}}{{#isNullable}}option{{/isNullable}}){{^-last}} {{/-last}}{{/requiredVars}}{{^hasRequired}}(){{/hasRequired}} : t = {
    {{#vars}}
    {{{name}}} = {{#required}}{{{name}}}{{/required}}{{^required}}{{#isListContainer}}[]{{/isListContainer}}{{#isMapContainer}}Hashtbl.create 7{{/isMapContainer}}{{^isContainer}}None{{/isContainer}}{{/required}};
    {{/vars}}
}
{{/isEnum}}

{{/model}}
{{/models}}
