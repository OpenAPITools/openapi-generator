{{#description}}
/**
 * {{{description}}}
 */
{{/description}}
export interface {{classname}} {{#parent}}extends {{{.}}} {{/parent}}{
{{#additionalPropertiesType}}
    [key: string]: {{{additionalPropertiesType}}}{{#additionalPropertiesIsAnyType}}{{#hasVars}} | any{{/hasVars}}{{/additionalPropertiesIsAnyType}};

{{/additionalPropertiesType}}
{{#vars}}
    {{#description}}
    /**
     * {{{description}}}
    {{#deprecated}}
     * @deprecated
    {{/deprecated}}
     */
    {{/description}}
    {{^description}}
    {{#deprecated}}
    /**
     * @deprecated
     */
    {{/deprecated}}
    {{/description}}
    '{{baseName}}'{{^required}}?{{/required}}: {{#isEnum}}{{{datatypeWithEnum}}}{{/isEnum}}{{^isEnum}}{{{dataType}}}{{/isEnum}}{{#isNullable}} | null{{/isNullable}};
{{/vars}}
}{{#hasEnums}}

{{#vars}}
{{#isEnum}}
{{#stringEnums}}
export enum {{enumName}} {
{{#allowableValues}}
    {{#enumVars}}
    {{#enumDescription}}
    /**
    * {{.}}
    */
    {{/enumDescription}}
    {{{name}}} = {{{value}}}{{^-last}},{{/-last}}
    {{/enumVars}}
{{/allowableValues}}
}
{{/stringEnums}}
{{^stringEnums}}
export const {{enumName}} = {
{{#allowableValues}}
    {{#enumVars}}
    {{#enumDescription}}
    /**
    * {{.}}
    */
    {{/enumDescription}}
    {{{name}}}: {{{value}}}{{^-last}},{{/-last}}
    {{/enumVars}}
{{/allowableValues}}
} as const;

export type {{enumName}} = typeof {{enumName}}[keyof typeof {{enumName}}];
{{/stringEnums}}
{{/isEnum}}
{{/vars}}
{{/hasEnums}}
