{{#hasImports}}
import {
    {{#imports}}
    {{{.}}},
    {{^isOriginalModelPropertyNaming}}
    {{.}}FromJSON,
    {{/isOriginalModelPropertyNaming}}
    {{/imports}}
} from './';

{{/hasImports}}
/**
 * {{{description}}}
 * @export
 * @interface {{classname}}
 */
export interface {{classname}} {{#parent}}extends {{{parent}}} {{/parent}}{
{{#additionalPropertiesType}}
    [key: string]: {{{additionalPropertiesType}}}{{#hasVars}} | any{{/hasVars}};
{{/additionalPropertiesType}}
{{#vars}}
    /**
     * {{{description}}}
     * @type {{=<% %>=}}{<%&datatype%>}<%={{ }}=%>
     * @memberof {{classname}}
     */
    {{name}}{{^required}}?{{/required}}: {{#isEnum}}{{{datatypeWithEnum}}}{{/isEnum}}{{^isEnum}}{{{datatype}}}{{/isEnum}};
{{/vars}}
}

export function {{classname}}FromJSON(json: any): {{classname}} {
    return {
        {{#vars}}
        {{#isPrimitiveType}}
        '{{name}}': {{#isDate}}{{^required}}json['{{baseName}}'] === undefined ? undefined : {{/required}}new Date(json['{{baseName}}']){{/isDate}}{{#isDateTime}}{{^required}}json['{{baseName}}'] === undefined ? undefined : {{/required}}new Date(json['{{baseName}}']){{/isDateTime}}{{^isDate}}{{^isDateTime}}json['{{baseName}}']{{/isDateTime}}{{/isDate}},
        {{/isPrimitiveType}}
        {{^isPrimitiveType}}
        {{#isContainer}}
        '{{name}}': (json['{{baseName}}'] as Array<any>).map({{#items}}{{datatype}}{{/items}}FromJSON),
        {{/isContainer}}
        {{^isContainer}}
        '{{name}}': {{datatype}}FromJSON(json['{{baseName}}']),
        {{/isContainer}}
        {{/isPrimitiveType}}
        {{/vars}}
    };
}
{{#hasEnums}}

/**
 * @export
 * @namespace {{classname}}
 */
export namespace {{classname}} {
{{#vars}}
    {{#isEnum}}
    /**
     * @export
     * @enum {string}
     */
    export enum {{enumName}} {
    {{#allowableValues}}
        {{#enumVars}}
        {{{name}}} = {{{value}}}{{^-last}},{{/-last}}
        {{/enumVars}}
    {{/allowableValues}}
    }
    {{/isEnum}}
{{/vars}}
}{{/hasEnums}}
