{{#stringEnums}}
/**
 * {{#lambda.indented_star_1}}{{{unescapedDescription}}}{{/lambda.indented_star_1}}
 * @export
 * @enum {string}
 */
export enum {{classname}} {
{{#allowableValues}}
{{#enumVars}}
    {{{name}}} = {{{value}}}{{^-last}},{{/-last}}
{{/enumVars}}
{{/allowableValues}}
}
{{/stringEnums}}{{^stringEnums}}
{{#typescriptThreePlus}}
/**
 * {{#lambda.indented_star_1}}{{{unescapedDescription}}}{{/lambda.indented_star_1}}
 * @export
 */
export const {{classname}} = {
{{#allowableValues}}
{{#enumVars}}
    {{{name}}}: {{{value}}}{{^-last}},{{/-last}}
{{/enumVars}}
{{/allowableValues}}
} as const;
{{/typescriptThreePlus}}
{{^typescriptThreePlus}}
/**
 * {{#lambda.indented_star_1}}{{{unescapedDescription}}}{{/lambda.indented_star_1}}
 * @export
 */
export const {{classname}} = {
{{#allowableValues}}
{{#enumVars}}
    {{{name}}}: {{{value}}} as {{{value}}}{{^-last}},{{/-last}}
{{/enumVars}}
{{/allowableValues}}
};{{/typescriptThreePlus}}
export type {{classname}} = typeof {{classname}}[keyof typeof {{classname}}];
{{/stringEnums}}