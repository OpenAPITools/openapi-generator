{{>partial_header}}
package {{packageName}}

import (
	"net/http"
	"strings"

	"github.com/gin-gonic/gin"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc gin.HandlerFunc
}

type Routes []Route

func NewRouter() *gin.Engine {
	router := gin.Default()
	for _, route := range routes {
		switch route.Method {
		case "GET":
			router.GET(route.Pattern, route.HandlerFunc)
		case "POST":
			router.POST(route.Pattern, route.HandlerFunc)
		case "PUT":
			router.PUT(route.Pattern, route.HandlerFunc)
		case "DELETE":
			router.DELETE(route.Pattern, route.HandlerFunc)
		}
	}

	return router
}

func Index(c *gin.Context) {
	c.String(http.StatusOK, "Hello World!")
}

var routes = Routes{
	{
		"Index",
		"GET",
		"{{{basePathWithoutHost}}}/",
		Index,
	},{{#apiInfo}}{{#apis}}{{#operations}}{{#operation}}

	{
		"{{operationId}}",
		strings.ToUpper("{{httpMethod}}"),
		"{{{basePathWithoutHost}}}{{{path}}}",
		{{operationId}},
	},{{/operation}}{{/operations}}{{/apis}}{{/apiInfo}}
}
