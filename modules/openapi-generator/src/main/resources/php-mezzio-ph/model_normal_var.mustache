{{#isContainer
}}     * @DTA\Strategy(name="Object", options={"type":{{internal.ze-ph.containerDataType}}::class})
     * @DTA\Validator(name="TypeCompliant", options={"type":{{internal.ze-ph.containerDataType}}::class})
{{/isContainer
}}{{^isContainer
}}{{#isPrimitiveType
}}     * @DTA\Validator(name="Scalar", options={"type":"{{dataType}}"})
{{/isPrimitiveType
}}{{#isDate
}}     * @DTA\Strategy(name="Date")
     * @DTA\Validator(name="Date")
{{/isDate
}}{{#isDateTime
}}     * @DTA\Strategy(name="DateTime")
     * @DTA\Validator(name="Date", options={"format": \DateTime::RFC3339})
{{/isDateTime
}}{{^isPrimitiveType
}}{{^isDate
}}{{^isDateTime
}}     * @DTA\Strategy(name="Object", options={"type":{{dataType}}::class})
     * @DTA\Validator(name="TypeCompliant", options={"type":{{dataType}}::class})
{{/isDateTime
}}{{/isDate
}}{{/isPrimitiveType
}}{{/isContainer
}}{{#hasValidation
}}{{#minLength}}{{#maxLength
}}     * @DTA\Validator(name="StringLength", options={"min":{{minLength}}, "max":{{maxLength}}})
{{/maxLength}}{{/minLength
}}{{^minLength}}{{#maxLength
}}     * @DTA\Validator(name="StringLength", options={"max":{{maxLength}}})
{{/maxLength}}{{/minLength
}}{{#minLength}}{{^maxLength
}}     * @DTA\Validator(name="StringLength", options={"min":{{minLength}}})
{{/maxLength}}{{/minLength
}}{{#minimum
}}     * @DTA\Validator(name="GreaterThan", options={"min":{{minimum}}{{^exclusiveMinimum}}, "inclusive":true{{/exclusiveMinimum}}})
{{/minimum
}}{{#maximum
}}     * @DTA\Validator(name="LessThan", options={"max":{{maximum}}{{^exclusiveMaximum}}, "inclusive":true{{/exclusiveMaximum}}})
{{/maximum
}}{{#pattern
}}     * @DTA\Validator(name="Regex", options={"pattern":"{{{pattern}}}"})
{{/pattern
}}{{/hasValidation}}