class {{classname}} {
  /// Can be {{#oneOf}}[{{{.}}}], {{/oneOf}}
  dynamic _instance;

  // default constructor
  {{classname}}();

  set instance(dynamic instance) {
    if (!(instance == null{{#oneOf}} || instance is {{{.}}}{{/oneOf}}))
      throw ArgumentError("${instance.runtimeType} is not a valid type for {{classname}}");
    _instance = instance;
  }

  dynamic get instance => _instance;

  @override
  String toString() {
    return _instance.toString();
  }

  {{classname}}.fromJson(Map<String, dynamic> json) {
    if (json == null) return;
    // TODO primitives, lists, maps
    {{#oneOf}}
    try {
      _instance = {{{.}}}.fromJson(json);
    } on ArgumentError {
    }
    {{/oneOf}}
  }

  Map<String, dynamic> toJson() {
    // TODO primitives, lists, maps
    return _instance.toJson();
  }
}
