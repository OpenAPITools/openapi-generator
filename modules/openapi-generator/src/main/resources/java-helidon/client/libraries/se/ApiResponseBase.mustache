{{>licenseInfo}}
package {{invokerPackage}};

import java.util.concurrent.ExecutionException;

import io.helidon.common.GenericType;
import io.helidon.common.reactive.Single;
import io.helidon.webclient.WebClientResponse;

{{#appName}}
/**
 * Implementation of a generic-typed response.
 *
 * @param <T> type of the return value from the generated API method
 */
{{/appName}}
class ApiResponseBase<T> implements ApiResponse<T> {

  private final Single<WebClientResponse> webClientResponse;
  private final GenericType<T> responseType;

  protected ApiResponseBase(GenericType<T> responseType, Single<WebClientResponse> webClientResponse) {
    this.webClientResponse = webClientResponse;
    this.responseType = responseType;
  }

  @Override
  public Single<WebClientResponse> webClientResponse() {
    return webClientResponse;
  }

  @Override
  public Single<T> result() throws ExecutionException, InterruptedException {
    return webClientResponse.get().content().as(responseType);
  }
}