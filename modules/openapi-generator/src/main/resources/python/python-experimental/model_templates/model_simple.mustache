class {{classname}}(ModelSimple{{^isEnum}}{{^isNullable}}, {{#isInteger}}int{{/isInteger}}{{#isLong}}int{{/isLong}}{{#isNumber}}float{{/isNumber}}{{#isFloat}}float{{/isFloat}}{{#isDouble}}float{{/isDouble}}{{#isArrayModel}}list{{/isArrayModel}}{{#isString}}str{{/isString}}{{/isNullable}}{{/isEnum}}{{#isEnum}}{{^isNullable}}, {{#isInteger}}int{{/isInteger}}{{#isLong}}int{{/isLong}}{{#isNumber}}float{{/isNumber}}{{#isFloat}}float{{/isFloat}}{{#isDouble}}float{{/isDouble}}{{#isArrayModel}}list{{/isArrayModel}}{{#isString}}str{{/isString}}{{/isNullable}}{{/isEnum}}{{#isEnum}}, Enum{{/isEnum}}):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Attributes:
{{> python-experimental/model_templates/docstring_allowed }}
{{> python-experimental/model_templates/docstring_openapi_validations }}
    """

{{#isEnum}}
{{#isNullable}}
    NONE = None,
{{/isNullable}}
{{#allowableValues}}
{{#enumVars}}
    {{name}} = {{{value}}}
{{/enumVars}}
{{/allowableValues}}
{{/isEnum}}

    @cached_property
    def validations():
        # this must be a method so it will exist in our enum class in __new__
        return {
{{#isAlias}}
{{^isEnum}}
{{^isArrayModel}}
{{#maxLength}}
            'max_length': {{maxLength}},
{{/maxLength}}
{{#minLength}}
            'min_length': {{minLength}},
{{/minLength}}
{{#maxItems}}
            'max_items': {{maxItems}},
{{/maxItems}}
{{#minItems}}
            'min_items': {{minItems}},
{{/minItems}}
{{#maximum}}
            {{#exclusiveMaximum}}'exclusive_maximum'{{/exclusiveMaximum}}'inclusive_maximum'{{^exclusiveMaximum}}{{/exclusiveMaximum}}: {{maximum}},
{{/maximum}}
{{#minimum}}
            {{#exclusiveMinimum}}'exclusive_minimum'{{/exclusiveMinimum}}'inclusive_minimum'{{^exclusiveMinimum}}{{/exclusiveMinimum}}: {{minimum}},
{{/minimum}}
{{#pattern}}
            'regex': {
                'pattern': r'{{{vendorExtensions.x-regex}}}',  # noqa: E501{{#vendorExtensions.x-modifiers}}
                {{#-first}}'flags': (re.{{.}}{{/-first}}{{^-first}}          re.{{.}}{{/-first}}{{^-last}} | {{/-last}}{{#-last}}){{/-last}}{{/vendorExtensions.x-modifiers}}
            },
{{/pattern}}
{{#multipleOf}}
            'multiple_of': {{multipleOf}},
{{/multipleOf}}
{{/isArrayModel}}
{{/isEnum}}
{{/isAlias}}
        }

    @cached_property
    def _nullable():
        # this must be a method, otherwise it will be set as an enum member
        return {{#isNullable}}True{{/isNullable}}{{^isNullable}}False{{/isNullable}}

{{#isNullable}}
    @classmethod
    def _get_new_class(cls, *args, **kwargs):
        """
        We return dynamic classes of different bases depending upon the inputs
        Returns:
            new_cls (type): the new dynamic class that we have built
        """
        _required_interface_cls, _inheritance_chain, inheritance_cycle = get_inheritance_chain_vars(cls, kwargs)
        if inheritance_cycle:
            return cls

        # validation logic
        chosen_additional_classes = []
        arg = args[0]
        if arg is None:
            # type(None) and bool cannot be subclassed so we must use Enums
            # to store None, True, and False
            chosen_additional_classes = [NoneEnum]
        else:
            chosen_additional_classes = [{{{dataType}}}]

        return mfg_new_class(cls, chosen_additional_classes, _inheritance_chain, _required_interface_cls, *args, **kwargs)
{{/isNullable}}

    @cached_property
    def openapi_type():
        """
        This must be a method because a model may have properties that are
        of type self, this must run after the class is loaded

        Returns
            openapi_type (tuple): the accepted types
        """
{{#imports}}
{{#-first}}
        lazy_import()
{{/-first}}
{{/imports}}
        return ({{{dataType}}},{{#isNullable}} none_type{{/isNullable}})
{{^hasRequired}}

    def __new__(cls, *args, **kwargs):
        """{{classname}} - a model defined in OpenAPI
{{#description}}
        {{description}}
{{/description}}

        Args:
            arg ({{{dataType}}}):{{#defaultValue}} defaults to {{{defaultValue}}}{{/defaultValue}}{{#allowableValues}}, must be one of [{{#enumVars}}{{{value}}}, {{/enumVars}}]{{/allowableValues}}  # noqa: E501
        """
        if not args:
            args = ({{{defaultValue}}},)
        {{#isNullable}}
        return get_new_instance({{classname}}, cls, super(), *args, **kwargs)
        {{/isNullable}}
        {{^isNullable}}
        return super().__new__(cls, *args, **kwargs)
        {{/isNullable}}
{{/hasRequired}}
{{^isEnum}}
{{#isNullable}}
{{#hasRequired}}

    def __new__(cls, *args, **kwargs):
        """{{classname}} - a model defined in OpenAPI
{{#description}}
        {{description}}
{{/description}}

        Args:
            arg ({{{dataType}}}):{{#defaultValue}} defaults to {{{defaultValue}}}{{/defaultValue}}{{#allowableValues}}, must be one of [{{#enumVars}}{{{value}}}, {{/enumVars}}]{{/allowableValues}}  # noqa: E501
        """
        {{#isNullable}}
        return get_new_instance({{classname}}, cls, super(), *args, **kwargs)
        {{/isNullable}}
        {{^isNullable}}
        return super().__new__(cls, *args, **kwargs)
        {{/isNullable}}
{{/hasRequired}}
{{/isNullable}}
{{/isEnum}}