{{^indent}}
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
{{#description}}

    {{{unescapedDescription}}}
{{/description}}

    Attributes:
{{#vars}}
    {{baseName}} ({{#isArray}}list,{{/isArray}}{{#isBoolean}}bool,{{/isBoolean}}{{#isDate}}date,{{/isDate}}{{#isDateTime}}datetime,{{/isDateTime}}{{#isMap}}dict,{{/isMap}}{{#isFloat}}float,{{/isFloat}}{{#isNumber}}float,{{/isNumber}}{{#isInteger}}int,{{/isInteger}}{{#isLong}}int,{{/isLong}}{{#isString}}str,{{/isString}}{{#isByteArray}}str,{{/isByteArray}}{{#isNullable}} none_type,{{/isNullable}}): {{#description}}{{description}}{{/description}}
{{/vars}}
{{#hasValidation}}
    _validations (dict): the validations which apply to the current Schema
        The value is a dict that stores validations for max_length, min_length, max_items,
        min_items, exclusive_maximum, inclusive_maximum, exclusive_minimum,
        inclusive_minimum, and regex.
{{/hasValidation}}
{{#additionalProperties}}
    _additional_properties (Schema): the definition used for additional properties
        that are not defined in _properties
{{/additionalProperties}}
{{#discriminator}}
{{#mappedModels}}
{{#-first}}
    _discriminator(cls) -> dict: the key is the required discriminator propertyName
        the value is a dict mapping from a string name to the corresponding Schema class
{{/-first}}
{{/mappedModels}}
{{/discriminator}}
    """
{{/indent}}
{{#isNullable}}
{{indent}}    _nullable = True
{{/isNullable}}
{{#hasValidation}}
{{> python-experimental/model_templates/validations }}
{{/hasValidation}}
{{#vars}}
{{^complexType}}
{{#isAnyType}}
{{indent}}{{baseName}} = AnyTypeSchema
{{/isAnyType}}
{{^isAnyType}}
{{> python-experimental/model_templates/schema_property }}
{{/isAnyType}}
{{/complexType}}
{{#complexType}}
{{^isArray}}

{{indent}}@cached_property
{{indent}}def {{baseName}}():
{{#imports}}
{{#-first}}
{{indent}}    lazy_import()
{{/-first}}
{{/imports}}
{{indent}}    return {{complexType}}{{/isArray}}{{#isArray}}
{{> python-experimental/model_templates/schema_property }}{{/isArray}}
{{/complexType}}
{{/vars}}
{{#discriminator}}
{{#mappedModels}}
{{#-first}}

{{indent}}    @cached_property
{{indent}}    def _discriminator():
{{#imports}}
{{#-first}}
{{indent}}        lazy_import()
{{/-first}}
{{/imports}}
{{indent}}        return {
{{indent}}            '{{{propertyBaseName}}}': {
{{/-first}}
{{indent}}                '{{mappingName}}': {{{modelName}}},
{{#-last}}
{{indent}}            }
{{indent}}        }
{{/-last}}
{{/mappedModels}}
{{/discriminator}}
{{#additionalProperties}}
{{#complexType}}

{{indent}}@cached_property
{{indent}}def _additional_properties():
{{#imports}}
{{#-first}}
{{indent}}    lazy_import()
{{/-first}}
{{/imports}}
{{indent}}    return {{complexType}}
{{/complexType}}
{{^complexType}}
{{#isAnyType}}
{{indent}}_additional_properties = AnyTypeSchema
{{/isAnyType}}
{{^isAnyType}}
{{> python-experimental/model_templates/schema }}{{/isAnyType}}{{/complexType}}{{/additionalProperties}}{{^additionalProperties}}
{{indent}}    _additional_properties = None{{/additionalProperties}}