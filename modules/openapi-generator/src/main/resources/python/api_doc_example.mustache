```python
from __future__ import print_function
import time
import {{{packageName}}}
from {{{packageName}}}.rest import ApiException
from pprint import pprint
{{> python_doc_auth_partial}}
{{#hasAuthMethods}}
# Defining host is optional and default to {{{basePath}}}
configuration.host = "{{{basePath}}}"
# Enter a context with an instance of the API client
with {{{packageName}}}.ApiClient(configuration) as api_client:
    # Create an instance of the API class
    api_instance = {{{packageName}}}.{{{classname}}}(api_client)
    {{#allParams}}{{paramName}} = {{{example}}} # {{{dataType}}} | {{{description}}}{{^required}} (optional){{/required}}{{#defaultValue}} (default to {{{.}}}){{/defaultValue}}
    {{/allParams}}
{{/hasAuthMethods}}
{{^hasAuthMethods}}
# Enter a context with an instance of the API client
with {{{packageName}}}.ApiClient() as api_client:
    # Create an instance of the API class
    api_instance = {{{packageName}}}.{{{classname}}}(api_client)
    {{#allParams}}{{paramName}} = {{{example}}} # {{{dataType}}} | {{{description}}}{{^required}} (optional){{/required}}{{#defaultValue}} (default to {{{.}}}){{/defaultValue}}
    {{/allParams}}
{{/hasAuthMethods}}

    try:
    {{#summary}}    # {{{.}}}
    {{/summary}}    {{#returnType}}api_response = {{/returnType}}api_instance.{{{operationId}}}({{#allParams}}{{#required}}{{paramName}}{{/required}}{{^required}}{{paramName}}={{paramName}}{{/required}}{{#hasMore}}, {{/hasMore}}{{/allParams}}){{#returnType}}
        pprint(api_response){{/returnType}}
    except ApiException as e:
        print("Exception when calling {{classname}}->{{operationId}}: %s\n" % e)
```
