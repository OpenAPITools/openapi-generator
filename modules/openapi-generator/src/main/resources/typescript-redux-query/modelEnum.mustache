{{#stringEnums}}
/**
 * {{{description}}}
 * @export
 * @enum {string}
 */
export enum {{classname}} {
{{#allowableValues}}
{{#enumVars}}
    {{{name}}} = {{{value}}}{{^-last}},{{/-last}}
{{/enumVars}}
{{/allowableValues}}
}
{{/stringEnums}}
{{^stringEnums}}
/**
 * {{{description}}}
 * @export
 */
export type {{classname}} = {{#allowableValues}}{{#enumVars}}{{{value}}}{{^-last}} | {{/-last}}{{/enumVars}}{{/allowableValues}};

export const {{classname}} = {
{{#allowableValues}}
{{#enumVars}}
    {{name}}: {{{value}}} as {{classname}}{{^-last}},{{/-last}}
{{/enumVars}}
{{/allowableValues}}
};
{{/stringEnums}}

export function {{classname}}FromJSON(json: any): {{classname}} {
    return json as {{classname}};
}

export function {{classname}}ToJSON(value?: {{classname}}): any {
    return value as any;
}
