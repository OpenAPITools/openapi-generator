{{#jackson}}
<!--<<<<<<< HEAD-->

<!--{{^vendorExtensions.x-deduction}}-->
<!--@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.EXISTING_PROPERTY, property = "{{{discriminator.propertyBaseName}}}", visible = true){{/vendorExtensions.x-deduction}}{{#vendorExtensions.x-deduction}}-->
<!--@JsonTypeInfo(use = JsonTypeInfo.Id.DEDUCTION, visible = true){{/vendorExtensions.x-deduction}}-->
<!--@JsonSubTypes({-->
<!--  {{#discriminator.mappedModels}}-->
<!--  @JsonSubTypes.Type(value = {{modelName}}.class, name = "{{^vendorExtensions.x-discriminator-value}}{{mappingName}}{{/vendorExtensions.x-discriminator-value}}{{#vendorExtensions.x-discriminator-value}}{{{vendorExtensions.x-discriminator-value}}}{{/vendorExtensions.x-discriminator-value}}"),-->
<!--  {{/discriminator.mappedModels}}-->
<!--  {{#vendorExtensions.x-deduction-model-names}}-->
<!--  @JsonSubTypes.Type(value = {{.}}.class, name = "{{.}}"),-->
<!--  {{/vendorExtensions.x-deduction-model-names}}-->
<!--}){{/jackson}}-->
<!--=======-->
<!--{{#discriminator.mappedModels}}-->
<!--{{#-first}}-->
<!--@JsonIgnoreProperties(-->
<!--  value = "{{{discriminator.propertyBaseName}}}", // ignore manually set {{{discriminator.propertyBaseName}}}, it will be automatically generated by Jackson during serialization-->
<!--  allowSetters = true // allows the {{{discriminator.propertyBaseName}}} to be set during deserialization-->
<!--)-->
<!--@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "{{{discriminator.propertyBaseName}}}", visible = true)-->
<!--@JsonSubTypes({-->
<!--{{/-first}}-->
<!--  {{^vendorExtensions.x-discriminator-value}}-->
<!--  @JsonSubTypes.Type(value = {{modelName}}.class, name = "{{{mappingName}}}"){{^-last}},{{/-last}}-->
<!--  {{/vendorExtensions.x-discriminator-value}}-->
<!--  {{#vendorExtensions.x-discriminator-value}}-->
<!--  @JsonSubTypes.Type(value = {{modelName}}.class, name = "{{{vendorExtensions.x-discriminator-value}}}"){{^-last}},{{/-last}}-->
<!--  {{/vendorExtensions.x-discriminator-value}}-->
<!--{{#-last}}-->
<!--})-->
<!--{{/-last}}-->
<!--{{/discriminator.mappedModels}}-->
<!--{{/jackson}}-->
<!-->>>>>>> 84660920873893358ad119a1306143a12399db77-->
{{#discriminator.mappedModels}}
    {{#-first}}
        {{^vendorExtensions.x-deduction}}
        @JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.EXISTING_PROPERTY, property = "{{{discriminator.propertyBaseName}}}", visible = true){{/vendorExtensions.x-deduction}}{{#vendorExtensions.x-deduction}}
        @JsonTypeInfo(use = JsonTypeInfo.Id.DEDUCTION, visible = true)
        {{#vendorExtensions.x-deduction}}
        @JsonIgnoreProperties(
        value = "{{{discriminator.propertyBaseName}}}", // ignore manually set {{{discriminator.propertyBaseName}}}, it will be automatically generated by Jackson during serialization
        allowSetters = true // allows the {{{discriminator.propertyBaseName}}} to be set during deserialization
        )
        @JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "{{{discriminator.propertyBaseName}}}", visible = true)
        {{/vendorExtensions.x-deduction}}
        @JsonSubTypes({
    {{/-first}}
    {{^vendorExtensions.x-discriminator-value}}
        @JsonSubTypes.Type(value = {{modelName}}.class, name = "{{{mappingName}}}"){{^-last}},{{/-last}}
    {{/vendorExtensions.x-discriminator-value}}
    {{#vendorExtensions.x-discriminator-value}}
        @JsonSubTypes.Type(value = {{modelName}}.class, name = "{{{vendorExtensions.x-discriminator-value}}}"){{^-last}},{{/-last}}
    {{/vendorExtensions.x-discriminator-value}}
    {{#-last}}
        })
    {{/-last}}
{{/discriminator.mappedModels}}
{{/jackson}}