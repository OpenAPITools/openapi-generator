{{^reactive}}
int statusCode = {{#responses}}{{#-first}}{{{code}}}{{/-first}}{{/responses}};
{{#examples}}
{{#-first}}
{{#jdk8}}
{{#async}}
        return CompletableFuture.supplyAsync(()-> {
{{/async}}
{{#async}}    {{/async}}        getRequest().ifPresent(request -> {
{{/jdk8}}
{{#jdk8}}    {{#async}}    {{/async}}{{/jdk8}}        for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
{{/-first}}
{{#jdk8}}    {{#async}}    {{/async}}{{/jdk8}}            if (mediaType.isCompatibleWith(MediaType.valueOf("{{{contentType}}}"))) {
{{#jdk8}}    {{#async}}    {{/async}}{{/jdk8}}                ApiUtil.setExampleResponse(request, "{{{contentType}}}", "{{#lambdaRemoveLineBreak}}{{#lambdaEscapeDoubleQuote}}{{{example}}}{{/lambdaEscapeDoubleQuote}}{{/lambdaRemoveLineBreak}}");
{{#jdk8}}    {{#async}}    {{/async}}{{/jdk8}}                break;
{{#jdk8}}    {{#async}}    {{/async}}{{/jdk8}}            }
{{#-last}}
{{#jdk8}}    {{#async}}    {{/async}}{{/jdk8}}        }
{{#jdk8}}
{{#async}}    {{/async}}        });
{{/jdk8}}
{{#async}}    {{/async}}        return new ResponseEntity<>(HttpStatus.valueOf(statusCode));
{{#jdk8}}
{{#async}}
        }, Runnable::run);
{{/async}}
{{/jdk8}}
{{/-last}}
{{/examples}}
{{^examples}}
        return {{#jdk8}}{{#async}}CompletableFuture.completedFuture({{/async}}{{/jdk8}}new ResponseEntity<>(HttpStatus.valueOf(statusCode)){{#jdk8}}{{#async}}){{/async}}{{/jdk8}};
{{/examples}}
{{/reactive}}
{{#reactive}}
exchange.getResponse().setStatusCode(HttpStatus.valueOf(statusCode));
        Mono<Void> result = Mono.empty();
    {{#examples}}
        {{#-first}}
        for (MediaType mediaType : exchange.getRequest().getHeaders().getAccept()) {
        {{/-first}}
            if (mediaType.isCompatibleWith(MediaType.valueOf("{{{contentType}}}"))) {
                result = ApiUtil.getExampleResponse(exchange, "{{#lambdaRemoveLineBreak}}{{#lambdaEscapeDoubleQuote}}{{{example}}}{{/lambdaEscapeDoubleQuote}}{{/lambdaRemoveLineBreak}}");
                break;
            }
        {{#-last}}
        }
        {{/-last}}
    {{/examples}}
        return result.then(Mono.empty());
{{/reactive}}