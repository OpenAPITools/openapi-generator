{
  "openapi" : "3.1.0",
  "servers" : [
    {
      "url" : "https://management-test.adyen.com/v3"
    }
  ],
  "info" : {
    "version" : "3",
    "x-publicVersion" : true,
    "title" : "Management API",
    "description" : "Configure and manage your Adyen company and merchant accounts, stores, and payment terminals.\n## Authentication\nEach request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.\n\nTo access the live endpoints, you need to generate a new API key in your live Customer Area.\n## Versioning\n\nManagement API handles versioning as part of the endpoint URL. For example, to send a request to this version of the `/companies/{companyId}/webhooks` endpoint, use:\n\n```text\nhttps://management-test.adyen.com/v3/companies/{companyId}/webhooks\n```\n\n## Going live\n\nTo access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:\n\n```text\nhttps://management-live.adyen.com/v3\n```\n\n## Release notes\nHave a look at the [release notes](https://docs.adyen.com/release-notes/management-api) to find out what changed in this version!",
    "termsOfService" : "https://www.adyen.com/legal/terms-and-conditions",
    "contact" : {
      "name" : "Adyen Developer Experience team",
      "url" : "https://github.com/Adyen/adyen-openapi"
    }
  },
  "x-groups" : [
    "Account - company level",
    "Account - merchant level",
    "Account - store level",
    "Payout settings - merchant level",
    "Users - company level",
    "Users - merchant level",
    "My API credential",
    "API credentials - company level",
    "API credentials - merchant level",
    "API key - company level",
    "API key - merchant level",
    "Client key - company level",
    "Client key - merchant level",
    "Allowed origins - company level",
    "Allowed origins - merchant level",
    "Webhooks - company level",
    "Webhooks - merchant level",
    "Payment methods - merchant level",
    "Terminals - terminal level",
    "Terminal actions - company level",
    "Terminal actions - terminal level",
    "Terminal orders - company level",
    "Terminal orders - merchant level",
    "Terminal settings - company level",
    "Terminal settings - merchant level",
    "Terminal settings - store level",
    "Terminal settings - terminal level",
    "Android files - company level",
    "Split configuration - merchant level"
  ],
  "tags" : [
    {
      "name" : "Account - company level"
    },
    {
      "name" : "Account - merchant level"
    },
    {
      "name" : "Account - store level"
    },
    {
      "name" : "Payout settings - merchant level"
    },
    {
      "name" : "Users - company level"
    },
    {
      "name" : "Users - merchant level"
    },
    {
      "name" : "My API credential"
    },
    {
      "name" : "API credentials - company level"
    },
    {
      "name" : "API credentials - merchant level"
    },
    {
      "name" : "API key - company level"
    },
    {
      "name" : "API key - merchant level"
    },
    {
      "name" : "Client key - company level"
    },
    {
      "name" : "Client key - merchant level"
    },
    {
      "name" : "Allowed origins - company level"
    },
    {
      "name" : "Allowed origins - merchant level"
    },
    {
      "name" : "Webhooks - company level"
    },
    {
      "name" : "Webhooks - merchant level"
    },
    {
      "name" : "Payment methods - merchant level"
    },
    {
      "name" : "Terminals - terminal level"
    },
    {
      "name" : "Terminal actions - company level"
    },
    {
      "name" : "Terminal actions - terminal level"
    },
    {
      "name" : "Terminal orders - company level"
    },
    {
      "name" : "Terminal orders - merchant level"
    },
    {
      "name" : "Terminal settings - company level"
    },
    {
      "name" : "Terminal settings - merchant level"
    },
    {
      "name" : "Terminal settings - store level"
    },
    {
      "name" : "Terminal settings - terminal level"
    },
    {
      "name" : "Android files - company level"
    },
    {
      "name" : "Split configuration - merchant level"
    }
  ],
  "paths" : {
    "/companies" : {
      "get" : {
        "tags" : [
          "Account - company level"
        ],
        "summary" : "Get a list of company accounts",
        "description" : "Returns the list of company accounts that your API credential has access to. The list is grouped into pages as defined by the query parameters.\n\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n\n* Management API—Account read",
        "operationId" : "get-companies",
        "x-groupName" : "Account - company level",
        "x-sortIndex" : 0,
        "x-methodName" : "listCompanyAccounts",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The number of the page to fetch.",
            "name" : "pageNumber",
            "in" : "query",
            "required" : false,
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          },
          {
            "description" : "The number of items to have on a page, maximum 100. The default is 10 items on a page.",
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "success" : {
                    "$ref" : "#/components/examples/get-companies-success-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/ListCompanyResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/companies/{companyId}" : {
      "get" : {
        "tags" : [
          "Account - company level"
        ],
        "summary" : "Get a company account",
        "description" : "Returns the company account specified in the path. Your API credential must have access to the company account. \n\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Account read",
        "operationId" : "get-companies-companyId",
        "x-groupName" : "Account - company level",
        "x-sortIndex" : 0,
        "x-methodName" : "getCompanyAccount",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the company account.",
            "name" : "companyId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "success" : {
                    "$ref" : "#/components/examples/get-companies-companyId-success-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Company"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/companies/{companyId}/androidApps" : {
      "get" : {
        "tags" : [
          "Android files - company level"
        ],
        "summary" : "Get a list of Android apps",
        "description" : "Returns a list of the Android apps that are available for the company identified in the path. \nThese apps have been uploaded to Adyen and can be installed or uninstalled on Android payment terminals through [terminal actions](https://docs.adyen.com/point-of-sale/automating-terminal-management/terminal-actions-api).\n\nTo make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Android files read\n* Management API—Android files read and write\n* Management API—Terminal actions read\n* Management API—Terminal actions read and write",
        "operationId" : "get-companies-companyId-androidApps",
        "x-groupName" : "Android files - company level",
        "x-sortIndex" : 1,
        "x-methodName" : "listAndroidApps",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the company account.",
            "name" : "companyId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The number of the page to fetch.",
            "name" : "pageNumber",
            "in" : "query",
            "required" : false,
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          },
          {
            "description" : "The number of items to have on a page, maximum 100. The default is 20 items on a page.",
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          },
          {
            "description" : "The package name that uniquely identifies the Android app.",
            "name" : "packageName",
            "in" : "query",
            "required" : false,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The version number of the app.",
            "name" : "versionCode",
            "in" : "query",
            "required" : false,
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "success" : {
                    "$ref" : "#/components/examples/get-companies-companyId-androidApps-success-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/AndroidAppsResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "post" : {
        "tags" : [
          "Android files - company level"
        ],
        "summary" : "Upload Android App",
        "description" : "Uploads an Android APK file to Adyen.\nThe maximum APK file size is 200 MB.\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Android files read and write\n\n>By choosing to upload, install, or run any third-party applications on an Adyen payment terminal, you accept full responsibility and liability for any consequences of uploading, installing, or running any such applications.",
        "x-addedInVersion" : "3",
        "operationId" : "post-companies-companyId-androidApps",
        "x-groupName" : "Android files - company level",
        "x-sortIndex" : 4,
        "x-methodName" : "uploadAndroidApp",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the company account.",
            "name" : "companyId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/companies/{companyId}/androidApps/{id}" : {
      "get" : {
        "tags" : [
          "Android files - company level"
        ],
        "summary" : "Get Android app",
        "description" : "Returns the details of the Android app identified in the path. \nThese apps have been uploaded to Adyen and can be installed or uninstalled on Android payment terminals through [terminal actions](https://docs.adyen.com/point-of-sale/automating-terminal-management/terminal-actions-api).\n\nTo make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Android files read\n* Management API—Android files read and write",
        "operationId" : "get-companies-companyId-androidApps-id",
        "x-groupName" : "Android files - company level",
        "x-sortIndex" : 3,
        "x-methodName" : "getAndroidApp",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the company account.",
            "name" : "companyId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The unique identifier of the app.",
            "name" : "id",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AndroidApp"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/companies/{companyId}/androidCertificates" : {
      "get" : {
        "tags" : [
          "Android files - company level"
        ],
        "summary" : "Get a list of Android certificates",
        "description" : "Returns a list of the Android certificates that are available for the company identified in the path.\nTypically, these certificates enable running apps on Android payment terminals. The certifcates in the list have been uploaded to Adyen and can be installed or uninstalled on Android terminals through [terminal actions](https://docs.adyen.com/point-of-sale/automating-terminal-management/terminal-actions-api).\n\nTo make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Android files read\n* Management API—Android files read and write\n* Management API—Terminal actions read\n* Management API—Terminal actions read and write",
        "operationId" : "get-companies-companyId-androidCertificates",
        "x-groupName" : "Android files - company level",
        "x-sortIndex" : 2,
        "x-methodName" : "listAndroidCertificates",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the company account.",
            "name" : "companyId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The number of the page to fetch.",
            "name" : "pageNumber",
            "in" : "query",
            "required" : false,
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          },
          {
            "description" : "The number of items to have on a page, maximum 100. The default is 20 items on a page.",
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          },
          {
            "description" : "The name of the certificate.",
            "name" : "certificateName",
            "in" : "query",
            "required" : false,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "success" : {
                    "$ref" : "#/components/examples/get-companies-companyId-androidCertificates-success-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/AndroidCertificatesResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/companies/{companyId}/apiCredentials" : {
      "get" : {
        "tags" : [
          "API credentials - company level"
        ],
        "summary" : "Get a list of API credentials",
        "description" : "Returns the list of [API credentials](https://docs.adyen.com/development-resources/api-credentials) for the company account. The list is grouped into pages as defined by the query parameters.\n\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—API credentials read and write",
        "operationId" : "get-companies-companyId-apiCredentials",
        "x-groupName" : "API credentials - company level",
        "x-sortIndex" : 0,
        "x-methodName" : "listApiCredentials",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the company account.",
            "name" : "companyId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The number of the page to fetch.",
            "name" : "pageNumber",
            "in" : "query",
            "required" : false,
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          },
          {
            "description" : "The number of items to have on a page, maximum 100. The default is 10 items on a page.",
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "success" : {
                    "$ref" : "#/components/examples/get-companies-companyId-apiCredentials-success-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/ListCompanyApiCredentialsResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "post" : {
        "tags" : [
          "API credentials - company level"
        ],
        "summary" : "Create an API credential.",
        "description" : "Creates an [API credential](https://docs.adyen.com/development-resources/api-credentials) for the company account identified in the path. In the request, you can specify which merchant accounts the new API credential will have access to, as well as its roles and allowed origins.\n\nThe response includes several types of authentication details:\n* [API key](https://docs.adyen.com/development-resources/api-authentication#api-key-authentication): used for API request authentication.\n* [Client key](https://docs.adyen.com/development-resources/client-side-authentication#how-it-works): public key used for client-side authentication.\n* [Username and password](https://docs.adyen.com/development-resources/api-authentication#using-basic-authentication): used for basic authentication.\n\n> Make sure you store the API key securely in your system. You won't be able to retrieve it later.\n\nIf your API key is lost or compromised, you need to [generate a new API key](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/companies/{companyId}/apiCredentials/{apiCredentialId}/generateApiKey).\n\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—API credentials read and write",
        "operationId" : "post-companies-companyId-apiCredentials",
        "x-groupName" : "API credentials - company level",
        "x-sortIndex" : 0,
        "x-methodName" : "createApiCredential",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "post-company-credential" : {
                  "$ref" : "#/components/examples/post-companies-companyId-apiCredentials-post-company-credential"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/CreateCompanyApiCredentialRequest"
              }
            }
          }
        },
        "parameters" : [
          {
            "description" : "The unique identifier of the company account.",
            "name" : "companyId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "post-company-credential" : {
                    "$ref" : "#/components/examples/post-companies-companyId-apiCredentials-post-company-credential-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/CreateCompanyApiCredentialResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/companies/{companyId}/apiCredentials/{apiCredentialId}" : {
      "get" : {
        "tags" : [
          "API credentials - company level"
        ],
        "summary" : "Get an API credential",
        "description" : "Returns the [API credential](https://docs.adyen.com/development-resources/api-credentials) identified in the path.\n\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—API credentials read and write",
        "operationId" : "get-companies-companyId-apiCredentials-apiCredentialId",
        "x-groupName" : "API credentials - company level",
        "x-sortIndex" : 0,
        "x-methodName" : "getApiCredential",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the company account.",
            "name" : "companyId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "Unique identifier of the API credential.",
            "name" : "apiCredentialId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "success" : {
                    "$ref" : "#/components/examples/get-companies-companyId-apiCredentials-apiCredentialId-success-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/CompanyApiCredential"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "patch" : {
        "tags" : [
          "API credentials - company level"
        ],
        "summary" : "Update an API credential.",
        "description" : "Changes the API credential's roles, merchant account access, or allowed origins. The request has the new values for the fields you want to change. The response contains the full updated API credential, including the new values from the request. \n\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—API credentials read and write",
        "operationId" : "patch-companies-companyId-apiCredentials-apiCredentialId",
        "x-groupName" : "API credentials - company level",
        "x-sortIndex" : 0,
        "x-methodName" : "updateApiCredential",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "patch-company-credential" : {
                  "$ref" : "#/components/examples/patch-companies-companyId-apiCredentials-apiCredentialId-patch-company-credential"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/UpdateCompanyApiCredentialRequest"
              }
            }
          }
        },
        "parameters" : [
          {
            "description" : "The unique identifier of the company account.",
            "name" : "companyId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "Unique identifier of the API credential.",
            "name" : "apiCredentialId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "patch-company-credential" : {
                    "$ref" : "#/components/examples/patch-companies-companyId-apiCredentials-apiCredentialId-patch-company-credential-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/CompanyApiCredential"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/companies/{companyId}/apiCredentials/{apiCredentialId}/allowedOrigins" : {
      "get" : {
        "tags" : [
          "Allowed origins - company level"
        ],
        "summary" : "Get a list of allowed origins",
        "description" : "Returns the list of [allowed origins](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) for the API credential identified in the path.\n\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—API credentials read and write",
        "operationId" : "get-companies-companyId-apiCredentials-apiCredentialId-allowedOrigins",
        "x-groupName" : "Allowed origins - company level",
        "x-sortIndex" : 0,
        "x-methodName" : "listAllowedOrigins",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the company account.",
            "name" : "companyId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "Unique identifier of the API credential.",
            "name" : "apiCredentialId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "get-allowed-origins" : {
                    "$ref" : "#/components/examples/get-companies-companyId-apiCredentials-apiCredentialId-allowedOrigins-get-allowed-origins-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/AllowedOriginsResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "post" : {
        "tags" : [
          "Allowed origins - company level"
        ],
        "summary" : "Create an allowed origin",
        "description" : "Adds a new [allowed origin](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) to the API credential's list of allowed origins.\n\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—API credentials read and write",
        "operationId" : "post-companies-companyId-apiCredentials-apiCredentialId-allowedOrigins",
        "x-groupName" : "Allowed origins - company level",
        "x-sortIndex" : 0,
        "x-methodName" : "createAllowedOrigin",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "add-allowed-origin" : {
                  "$ref" : "#/components/examples/post-companies-companyId-apiCredentials-apiCredentialId-allowedOrigins-add-allowed-origin"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/AllowedOrigin"
              }
            }
          }
        },
        "parameters" : [
          {
            "description" : "The unique identifier of the company account.",
            "name" : "companyId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "Unique identifier of the API credential.",
            "name" : "apiCredentialId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "add-allowed-origin" : {
                    "$ref" : "#/components/examples/post-companies-companyId-apiCredentials-apiCredentialId-allowedOrigins-add-allowed-origin-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/AllowedOriginsResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/companies/{companyId}/apiCredentials/{apiCredentialId}/allowedOrigins/{originId}" : {
      "delete" : {
        "tags" : [
          "Allowed origins - company level"
        ],
        "summary" : "Delete an allowed origin",
        "description" : "Removes the [allowed origin](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) identified in the path. As soon as an allowed origin is removed, we no longer accept client-side requests from that domain.\n\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—API credentials read and write",
        "operationId" : "delete-companies-companyId-apiCredentials-apiCredentialId-allowedOrigins-originId",
        "x-groupName" : "Allowed origins - company level",
        "x-sortIndex" : 0,
        "x-methodName" : "deleteAllowedOrigin",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the company account.",
            "name" : "companyId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "Unique identifier of the API credential.",
            "name" : "apiCredentialId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "Unique identifier of the allowed origin.",
            "name" : "originId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "204" : {
            "description" : "No Content - look at the actual response code for the status of the request. "
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "get" : {
        "tags" : [
          "Allowed origins - company level"
        ],
        "summary" : "Get an allowed origin",
        "description" : "Returns the [allowed origin](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) identified in the path.\n\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—API credentials read and write",
        "operationId" : "get-companies-companyId-apiCredentials-apiCredentialId-allowedOrigins-originId",
        "x-groupName" : "Allowed origins - company level",
        "x-sortIndex" : 0,
        "x-methodName" : "getAllowedOrigin",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the company account.",
            "name" : "companyId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "Unique identifier of the API credential.",
            "name" : "apiCredentialId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "Unique identifier of the allowed origin.",
            "name" : "originId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "get-allowed-origin" : {
                    "$ref" : "#/components/examples/get-companies-companyId-apiCredentials-apiCredentialId-allowedOrigins-originId-get-allowed-origin-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/AllowedOrigin"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/companies/{companyId}/apiCredentials/{apiCredentialId}/generateApiKey" : {
      "post" : {
        "tags" : [
          "API key - company level"
        ],
        "summary" : "Generate new API key",
        "description" : "Returns a new API key for the API credential. You can use the new API key a few minutes after generating it. The old API key stops working 24 hours after generating a new one.\n\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—API credentials read and write",
        "operationId" : "post-companies-companyId-apiCredentials-apiCredentialId-generateApiKey",
        "x-groupName" : "API key - company level",
        "x-sortIndex" : 0,
        "x-methodName" : "generateNewApiKey",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the company account.",
            "name" : "companyId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "Unique identifier of the API credential.",
            "name" : "apiCredentialId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenerateApiKeyResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/companies/{companyId}/apiCredentials/{apiCredentialId}/generateClientKey" : {
      "post" : {
        "tags" : [
          "Client key - company level"
        ],
        "summary" : "Generate new client key",
        "description" : "Returns a new [client key](https://docs.adyen.com/development-resources/client-side-authentication#how-it-works) for the API credential identified in the path. You can use the new client key a few minutes after generating it. The old client key stops working 24 hours after generating a new one.\n\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—API credentials read and write",
        "operationId" : "post-companies-companyId-apiCredentials-apiCredentialId-generateClientKey",
        "x-groupName" : "Client key - company level",
        "x-sortIndex" : 0,
        "x-methodName" : "generateNewClientKey",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the company account.",
            "name" : "companyId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "Unique identifier of the API credential.",
            "name" : "apiCredentialId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenerateClientKeyResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/companies/{companyId}/billingEntities" : {
      "get" : {
        "tags" : [
          "Terminal orders - company level"
        ],
        "summary" : "Get a list of billing entities",
        "description" : "Returns the billing entities of the company identified in the path and all merchant accounts belonging to the company.\nA billing entity is a legal entity where we charge orders to. An order for terminal products must contain the ID of a billing entity.\n\nTo make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Terminal ordering read\n* Management API—Terminal ordering read and write",
        "operationId" : "get-companies-companyId-billingEntities",
        "x-groupName" : "Terminal orders - company level",
        "x-sortIndex" : 3,
        "x-methodName" : "listBillingEntities",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the company account.",
            "name" : "companyId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The name of the billing entity.",
            "name" : "name",
            "in" : "query",
            "required" : false,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "success" : {
                    "$ref" : "#/components/examples/get-companies-companyId-billingEntities-success-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/BillingEntitiesResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/companies/{companyId}/merchants" : {
      "get" : {
        "tags" : [
          "Account - company level"
        ],
        "summary" : "Get a list of merchant accounts",
        "description" : "Returns the list of merchant accounts under the company account specified in the path. The list only includes merchant accounts that your API credential has access to. The list is grouped into pages as defined by the query parameters. \n\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Account read",
        "operationId" : "get-companies-companyId-merchants",
        "x-groupName" : "Account - company level",
        "x-sortIndex" : 0,
        "x-methodName" : "listMerchantAccounts",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the company account.",
            "name" : "companyId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The number of the page to fetch.",
            "name" : "pageNumber",
            "in" : "query",
            "required" : false,
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          },
          {
            "description" : "The number of items to have on a page, maximum 100. The default is 10 items on a page.",
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "success" : {
                    "$ref" : "#/components/examples/get-companies-companyId-merchants-success-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/ListMerchantResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/companies/{companyId}/shippingLocations" : {
      "get" : {
        "tags" : [
          "Terminal orders - company level"
        ],
        "summary" : "Get a list of shipping locations",
        "description" : "Returns the shipping locations for the company identified in the path and all merchant accounts belonging to the company.\nA shipping location includes the address where orders can be delivered, and an ID which you need to specify when ordering terminal products.\n\nTo make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Terminal ordering read\n* Management API—Terminal ordering read and write",
        "operationId" : "get-companies-companyId-shippingLocations",
        "x-groupName" : "Terminal orders - company level",
        "x-sortIndex" : 4,
        "x-methodName" : "listShippingLocations",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the company account.",
            "name" : "companyId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The name of the shipping location.",
            "name" : "name",
            "in" : "query",
            "required" : false,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The number of locations to skip.",
            "name" : "offset",
            "in" : "query",
            "required" : false,
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          },
          {
            "description" : "The number of locations to return.",
            "name" : "limit",
            "in" : "query",
            "required" : false,
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "success" : {
                    "$ref" : "#/components/examples/get-companies-companyId-shippingLocations-success-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/ShippingLocationsResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "post" : {
        "tags" : [
          "Terminal orders - company level"
        ],
        "summary" : "Create a shipping location",
        "description" : "Creates a shipping location for the company identified in the path. A shipping location defines an address where orders can be delivered.\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Terminal ordering read and write",
        "operationId" : "post-companies-companyId-shippingLocations",
        "x-groupName" : "Terminal orders - company level",
        "x-sortIndex" : 5,
        "x-methodName" : "createShippingLocation",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "create-shipping-location" : {
                  "$ref" : "#/components/examples/post-companies-companyId-shippingLocations-create-shipping-location"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/ShippingLocation"
              }
            }
          }
        },
        "parameters" : [
          {
            "description" : "The unique identifier of the company account.",
            "name" : "companyId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "create-shipping-location" : {
                    "$ref" : "#/components/examples/post-companies-companyId-shippingLocations-create-shipping-location-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/ShippingLocation"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/companies/{companyId}/terminalActions" : {
      "get" : {
        "tags" : [
          "Terminal actions - company level"
        ],
        "summary" : "Get a list of terminal actions",
        "description" : "Returns the [terminal actions](https://docs.adyen.com/point-of-sale/automating-terminal-management/terminal-actions-api) that have been scheduled for the company identified in the path.The response doesn't include actions that are scheduled by Adyen.\nTo make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Terminal actions read\n* Management API—Terminal actions read and write",
        "operationId" : "get-companies-companyId-terminalActions",
        "x-groupName" : "Terminal actions - company level",
        "x-sortIndex" : 1,
        "x-methodName" : "listTerminalActions",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the company account.",
            "name" : "companyId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The number of the page to fetch.",
            "name" : "pageNumber",
            "in" : "query",
            "required" : false,
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          },
          {
            "description" : "The number of items to have on a page, maximum 100. The default is 20 items on a page.",
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          },
          {
            "description" : "Returns terminal actions with the specified status. \nAllowed values: **pending**, **successful**, **failed**, **cancelled**, **tryLater**.",
            "name" : "status",
            "in" : "query",
            "required" : false,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "Returns terminal actions of the specified type. \nAllowed values: **InstallAndroidApp**, **UninstallAndroidApp**, **InstallAndroidCertificate**, **UninstallAndroidCertificate**.",
            "name" : "type",
            "in" : "query",
            "required" : false,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "success" : {
                    "$ref" : "#/components/examples/get-companies-companyId-terminalActions-success-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/ListExternalTerminalActionsResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/companies/{companyId}/terminalActions/{actionId}" : {
      "get" : {
        "tags" : [
          "Terminal actions - company level"
        ],
        "summary" : "Get terminal action",
        "description" : "Returns the details of the [terminal action](https://docs.adyen.com/point-of-sale/automating-terminal-management/terminal-actions-api) identified in the path.\nTo make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Terminal actions read\n* Management API—Terminal actions read and write",
        "operationId" : "get-companies-companyId-terminalActions-actionId",
        "x-groupName" : "Terminal actions - company level",
        "x-sortIndex" : 2,
        "x-methodName" : "getTerminalAction",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the company account.",
            "name" : "companyId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The unique identifier of the terminal action.",
            "name" : "actionId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "success" : {
                    "$ref" : "#/components/examples/get-companies-companyId-terminalActions-actionId-success-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalTerminalAction"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/companies/{companyId}/terminalLogos" : {
      "get" : {
        "tags" : [
          "Terminal settings - company level"
        ],
        "summary" : "Get the terminal logo",
        "description" : "Returns the logo that is configured for a specific payment terminal model at the company identified in the path. \n\nThe logo is returned as a Base64-encoded string. You need to Base64-decode the string to get the actual image file. \nThis logo applies to all terminals of the specified model under the company, unless a different logo is configured at a lower level (merchant account, store, or individual terminal).\n\nTo make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Terminal settings read\n* Management API—Terminal settings read and write",
        "operationId" : "get-companies-companyId-terminalLogos",
        "x-groupName" : "Terminal settings - company level",
        "x-sortIndex" : 2,
        "x-methodName" : "getTerminalLogo",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the company account.",
            "name" : "companyId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The terminal model. Possible values: E355, VX675WIFIBT, VX680, VX690, VX700, VX820, M400, MX925, P400Plus, UX300, UX410, V200cPlus, V240mPlus, V400cPlus, V400m, e280, e285, e285p, S1E, S1EL, S1F2, S1L, S1U, S7T.",
            "name" : "model",
            "in" : "query",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "success" : {
                    "$ref" : "#/components/examples/get-companies-companyId-terminalLogos-success-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Logo"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "patch" : {
        "tags" : [
          "Terminal settings - company level"
        ],
        "summary" : "Update the terminal logo",
        "description" : "Updates the logo that is configured for a specific payment terminal model at the company identified in the path. You can update the logo for only one terminal model at a time.\nThis logo applies to all terminals of the specified model under the company, unless a different logo is configured at a lower level (merchant account, store, or individual terminal). \n* To change the logo, specify the image file as a Base64-encoded string.\n* To restore the logo inherited from the Adyen PSP level, specify an empty logo value.\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Terminal settings read and write",
        "operationId" : "patch-companies-companyId-terminalLogos",
        "x-groupName" : "Terminal settings - company level",
        "x-sortIndex" : 4,
        "x-methodName" : "updateTerminalLogo",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "remove-logo" : {
                  "$ref" : "#/components/examples/patch-companies-companyId-terminalLogos-remove-logo"
                },
                "upload-logo" : {
                  "$ref" : "#/components/examples/patch-companies-companyId-terminalLogos-upload-logo"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/Logo"
              }
            }
          }
        },
        "parameters" : [
          {
            "description" : "The unique identifier of the company account.",
            "name" : "companyId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The terminal model. Possible values: E355, VX675WIFIBT, VX680, VX690, VX700, VX820, M400, MX925, P400Plus, UX300, UX410, V200cPlus, V240mPlus, V400cPlus, V400m, e280, e285, e285p, S1E, S1EL, S1F2, S1L, S1U, S7T.",
            "name" : "model",
            "in" : "query",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "remove-logo" : {
                    "$ref" : "#/components/examples/patch-companies-companyId-terminalLogos-remove-logo-200"
                  },
                  "upload-logo" : {
                    "$ref" : "#/components/examples/patch-companies-companyId-terminalLogos-upload-logo-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Logo"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/companies/{companyId}/terminalModels" : {
      "get" : {
        "tags" : [
          "Terminal orders - company level"
        ],
        "summary" : "Get a list of terminal models",
        "description" : "Returns a list of payment terminal models that the company identified in the path has access to.\nThe response includes the terminal model ID, which can be used as a query parameter when getting a list of terminals or a list of products for ordering.\n\nTo make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Terminal ordering read\n* Management API—Terminal ordering read and write",
        "operationId" : "get-companies-companyId-terminalModels",
        "x-groupName" : "Terminal orders - company level",
        "x-sortIndex" : 1,
        "x-methodName" : "listTerminalModels",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the company account.",
            "name" : "companyId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "success" : {
                    "$ref" : "#/components/examples/get-companies-companyId-terminalModels-success-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/TerminalModelsResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/companies/{companyId}/terminalOrders" : {
      "get" : {
        "tags" : [
          "Terminal orders - company level"
        ],
        "summary" : "Get a list of orders",
        "description" : "Returns a lists of terminal products orders for the company identified in the path.\nTo filter the list, use one or more of the query parameters.\n\nTo make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Terminal ordering read\n* Management API—Terminal ordering read and write",
        "operationId" : "get-companies-companyId-terminalOrders",
        "x-groupName" : "Terminal orders - company level",
        "x-sortIndex" : 7,
        "x-methodName" : "listOrders",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the company account.",
            "name" : "companyId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "Your purchase order number.",
            "name" : "customerOrderReference",
            "in" : "query",
            "required" : false,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The order status. Possible values (not case-sensitive): Placed, Confirmed, Cancelled, Shipped, Delivered.",
            "name" : "status",
            "in" : "query",
            "required" : false,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The number of orders to skip.",
            "name" : "offset",
            "in" : "query",
            "required" : false,
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          },
          {
            "description" : "The number of orders to return.",
            "name" : "limit",
            "in" : "query",
            "required" : false,
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "success" : {
                    "$ref" : "#/components/examples/get-companies-companyId-terminalOrders-success-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/TerminalOrdersResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "post" : {
        "tags" : [
          "Terminal orders - company level"
        ],
        "summary" : "Create an order",
        "description" : "Creates an order for payment terminal products for the company identified in the path.\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Terminal ordering read and write\n>Requests to the Management API test endpoint do not create actual orders for test terminals. To order test terminals, you need to [submit a sales order](https://docs.adyen.com/point-of-sale/managing-terminals/order-terminals/#sales-order-steps) in your Customer Area.",
        "operationId" : "post-companies-companyId-terminalOrders",
        "x-groupName" : "Terminal orders - company level",
        "x-sortIndex" : 6,
        "x-methodName" : "createOrder",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "create-order" : {
                  "$ref" : "#/components/examples/post-companies-companyId-terminalOrders-create-order"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/TerminalOrderRequest"
              }
            }
          }
        },
        "parameters" : [
          {
            "description" : "The unique identifier of the company account.",
            "name" : "companyId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "create-order" : {
                    "$ref" : "#/components/examples/post-companies-companyId-terminalOrders-create-order-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/TerminalOrder"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/companies/{companyId}/terminalOrders/{orderId}" : {
      "get" : {
        "tags" : [
          "Terminal orders - company level"
        ],
        "summary" : "Get an order",
        "description" : "Returns the details of the terminal products order identified in the path.\n\nTo make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Terminal ordering read\n* Management API—Terminal ordering read and write",
        "operationId" : "get-companies-companyId-terminalOrders-orderId",
        "x-groupName" : "Terminal orders - company level",
        "x-sortIndex" : 8,
        "x-methodName" : "getOrder",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the company account.",
            "name" : "companyId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The unique identifier of the order.",
            "name" : "orderId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "success" : {
                    "$ref" : "#/components/examples/get-companies-companyId-terminalOrders-orderId-success-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/TerminalOrder"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "patch" : {
        "tags" : [
          "Terminal orders - company level"
        ],
        "summary" : "Update an order",
        "description" : "Updates the terminal products order identified in the path.\nUpdating is only possible while the order has the status **Placed**.\n\nThe request body only needs to contain what you want to change. \nHowever, to update the products in the `items` array, you must provide the entire array. For example, if the array has three items:\n To remove one item, the array must include the remaining two items. Or to add one item, the array must include all four items.\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Terminal ordering read and write",
        "operationId" : "patch-companies-companyId-terminalOrders-orderId",
        "x-groupName" : "Terminal orders - company level",
        "x-sortIndex" : 9,
        "x-methodName" : "updateOrder",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "update-order" : {
                  "$ref" : "#/components/examples/patch-companies-companyId-terminalOrders-orderId-update-order"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/TerminalOrderRequest"
              }
            }
          }
        },
        "parameters" : [
          {
            "description" : "The unique identifier of the company account.",
            "name" : "companyId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The unique identifier of the order.",
            "name" : "orderId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "update-order" : {
                    "$ref" : "#/components/examples/patch-companies-companyId-terminalOrders-orderId-update-order-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/TerminalOrder"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/companies/{companyId}/terminalOrders/{orderId}/cancel" : {
      "post" : {
        "tags" : [
          "Terminal orders - company level"
        ],
        "summary" : "Cancel an order",
        "description" : "Cancels the terminal products order identified in the path.\nCancelling is only possible while the order has the status **Placed**.\nTo cancel an order, make a POST call without a request body. The response returns the full order details, but with the status changed to **Cancelled**.\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Terminal ordering read and write",
        "operationId" : "post-companies-companyId-terminalOrders-orderId-cancel",
        "x-groupName" : "Terminal orders - company level",
        "x-sortIndex" : 10,
        "x-methodName" : "cancelOrder",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the company account.",
            "name" : "companyId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The unique identifier of the order.",
            "name" : "orderId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "cancel-order" : {
                    "$ref" : "#/components/examples/post-companies-companyId-terminalOrders-orderId-cancel-cancel-order-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/TerminalOrder"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/companies/{companyId}/terminalProducts" : {
      "get" : {
        "tags" : [
          "Terminal orders - company level"
        ],
        "summary" : "Get a list of terminal products",
        "description" : "Returns a country-specific list of payment terminal packages and parts that the company identified in the path has access to.\n \nTo make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Terminal ordering read\n* Management API—Terminal ordering read and write",
        "operationId" : "get-companies-companyId-terminalProducts",
        "x-groupName" : "Terminal orders - company level",
        "x-sortIndex" : 2,
        "x-methodName" : "listTerminalProducts",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the company account.",
            "name" : "companyId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The country to return products for, in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format. For example, **US**",
            "name" : "country",
            "in" : "query",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The terminal model to return products for. Use the ID returned in the [GET `/terminalModels`](https://docs.adyen.com/api-explorer/#/ManagementService/latest/get/companies/{companyId}/terminalModels) response. For example, **Verifone.M400**",
            "name" : "terminalModelId",
            "in" : "query",
            "required" : false,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The number of products to skip.",
            "name" : "offset",
            "in" : "query",
            "required" : false,
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          },
          {
            "description" : "The number of products to return.",
            "name" : "limit",
            "in" : "query",
            "required" : false,
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "success" : {
                    "$ref" : "#/components/examples/get-companies-companyId-terminalProducts-success-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/TerminalProductsResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/companies/{companyId}/terminalSettings" : {
      "get" : {
        "tags" : [
          "Terminal settings - company level"
        ],
        "summary" : "Get terminal settings",
        "description" : "Returns the payment terminal settings that are configured for the company identified in the path. These settings apply to all terminals under the company, unless different values are configured at a lower level (merchant account, store, or individual terminal).\n\nTo make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Terminal settings read\n* Management API—Terminal settings read and write\n\nFor [sensitive terminal settings](https://docs.adyen.com/point-of-sale/automating-terminal-management/configure-terminals-api#sensitive-terminal-settings), your API credential must have the following role:\n* Management API—Terminal settings Advanced read and write",
        "operationId" : "get-companies-companyId-terminalSettings",
        "x-groupName" : "Terminal settings - company level",
        "x-sortIndex" : 1,
        "x-methodName" : "getTerminalSettings",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the company account.",
            "name" : "companyId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "success" : {
                    "$ref" : "#/components/examples/get-companies-companyId-terminalSettings-success-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/TerminalSettings"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "patch" : {
        "tags" : [
          "Terminal settings - company level"
        ],
        "summary" : "Update terminal settings",
        "description" : "Updates payment terminal settings for the company identified in the path. These settings apply to all terminals under the company, unless different values are configured at a lower level (merchant account, store, or individual terminal).\n\n* To change a parameter value, include the full object that contains the parameter, even if you don't want to change all parameters in the object.\n* To restore a parameter value inherited from the Adyen PSP level, include the full object that contains the parameter, and specify an empty value for the parameter or omit the parameter.\n* Objects that are not included in the request are not updated.\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Terminal settings read and write\n\nFor [sensitive terminal settings](https://docs.adyen.com/point-of-sale/automating-terminal-management/configure-terminals-api#sensitive-terminal-settings), your API credential must have the following role:\n* Management API—Terminal settings Advanced read and write",
        "operationId" : "patch-companies-companyId-terminalSettings",
        "x-groupName" : "Terminal settings - company level",
        "x-sortIndex" : 3,
        "x-methodName" : "updateTerminalSettings",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "add-eap-peap-and-psk-wifi-profiles" : {
                  "$ref" : "#/components/examples/patch-companies-companyId-terminalSettings-add-eap-peap-and-psk-wifi-profiles"
                },
                "add-eap-tls-wifi-profile" : {
                  "$ref" : "#/components/examples/patch-companies-companyId-terminalSettings-add-eap-tls-wifi-profile"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/TerminalSettings"
              }
            }
          }
        },
        "parameters" : [
          {
            "description" : "The unique identifier of the company account.",
            "name" : "companyId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "add-eap-peap-and-psk-wifi-profiles" : {
                    "$ref" : "#/components/examples/patch-companies-companyId-terminalSettings-add-eap-peap-and-psk-wifi-profiles-200"
                  },
                  "add-eap-tls-wifi-profile" : {
                    "$ref" : "#/components/examples/patch-companies-companyId-terminalSettings-add-eap-tls-wifi-profile-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/TerminalSettings"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/companies/{companyId}/users" : {
      "get" : {
        "tags" : [
          "Users - company level"
        ],
        "summary" : "Get a list of users",
        "description" : "Returns the list of users for the `companyId` identified in the path.\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Users read and write\n",
        "operationId" : "get-companies-companyId-users",
        "x-groupName" : "Users - company level",
        "x-sortIndex" : 0,
        "x-methodName" : "listUsers",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the company account.",
            "name" : "companyId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The number of the page to return.",
            "name" : "pageNumber",
            "in" : "query",
            "required" : false,
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          },
          {
            "description" : "The number of items to have on a page. Maximum value is **100**. The default is **10** items on a page.",
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          },
          {
            "description" : "The partial or complete username to select all users that match.",
            "name" : "username",
            "in" : "query",
            "required" : false,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListCompanyUsersResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "post" : {
        "tags" : [
          "Users - company level"
        ],
        "summary" : "Create a new user",
        "description" : "Creates the user for the `companyId` identified in the path.\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Users read and write\n",
        "operationId" : "post-companies-companyId-users",
        "x-groupName" : "Users - company level",
        "x-sortIndex" : 0,
        "x-methodName" : "createNewUser",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "create-user" : {
                  "$ref" : "#/components/examples/post-companies-companyId-users-create-user"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/CreateCompanyUserRequest"
              }
            }
          }
        },
        "parameters" : [
          {
            "description" : "The unique identifier of the company account.",
            "name" : "companyId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "create-user" : {
                    "$ref" : "#/components/examples/post-companies-companyId-users-create-user-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/CreateCompanyUserResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/companies/{companyId}/users/{userId}" : {
      "get" : {
        "tags" : [
          "Users - company level"
        ],
        "summary" : "Get user details",
        "description" : "Returns user details for the `userId` and the `companyId` identified in the path.\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Users read and write\n",
        "operationId" : "get-companies-companyId-users-userId",
        "x-groupName" : "Users - company level",
        "x-sortIndex" : 0,
        "x-methodName" : "getUserDetails",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the company account.",
            "name" : "companyId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The unique identifier of the user.",
            "name" : "userId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CompanyUser"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "patch" : {
        "tags" : [
          "Users - company level"
        ],
        "summary" : "Update user details",
        "description" : "Updates user details for the `userId` and the `companyId` identified in the path.\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Users read and write\n",
        "operationId" : "patch-companies-companyId-users-userId",
        "x-groupName" : "Users - company level",
        "x-sortIndex" : 0,
        "x-methodName" : "updateUserDetails",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateCompanyUserRequest"
              }
            }
          }
        },
        "parameters" : [
          {
            "description" : "The unique identifier of the company account.",
            "name" : "companyId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The unique identifier of the user.",
            "name" : "userId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CompanyUser"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/companies/{companyId}/webhooks" : {
      "get" : {
        "tags" : [
          "Webhooks - company level"
        ],
        "summary" : "List all webhooks",
        "description" : "Lists all webhook configurations for the company account.\n\nTo make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Webhooks read\n* Management API—Webhooks read and write",
        "operationId" : "get-companies-companyId-webhooks",
        "x-groupName" : "Webhooks - company level",
        "x-sortIndex" : 2,
        "x-methodName" : "listAllWebhooks",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "Unique identifier of the [company account](https://docs.adyen.com/account/account-structure#company-account).",
            "name" : "companyId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The number of the page to fetch.",
            "name" : "pageNumber",
            "in" : "query",
            "required" : false,
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          },
          {
            "description" : "The number of items to have on a page, maximum 100. The default is 10 items on a page.",
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "get-company-webhooks" : {
                    "$ref" : "#/components/examples/get-companies-companyId-webhooks-get-company-webhooks-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/ListWebhooksResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "post" : {
        "tags" : [
          "Webhooks - company level"
        ],
        "summary" : "Set up a webhook",
        "description" : "Subscribe to receive webhook notifications about events related to your company account. You can add basic authentication to make sure the data is secure.\n\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Webhooks read and write",
        "operationId" : "post-companies-companyId-webhooks",
        "x-groupName" : "Webhooks - company level",
        "x-sortIndex" : 1,
        "x-methodName" : "setUpWebhook",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "post-company-webhook" : {
                  "$ref" : "#/components/examples/post-companies-companyId-webhooks-post-company-webhook"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/CreateCompanyWebhookRequest"
              }
            }
          }
        },
        "parameters" : [
          {
            "description" : "Unique identifier of the [company account](https://docs.adyen.com/account/account-structure#company-account).",
            "name" : "companyId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "post-company-webhook" : {
                    "$ref" : "#/components/examples/post-companies-companyId-webhooks-post-company-webhook-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Webhook"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/companies/{companyId}/webhooks/{webhookId}" : {
      "delete" : {
        "tags" : [
          "Webhooks - company level"
        ],
        "summary" : "Remove a webhook",
        "description" : "Remove the configuration for the webhook identified in the path.\n\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Webhooks read and write",
        "operationId" : "delete-companies-companyId-webhooks-webhookId",
        "x-groupName" : "Webhooks - company level",
        "x-sortIndex" : 5,
        "x-methodName" : "removeWebhook",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the company account.",
            "name" : "companyId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "Unique identifier of the webhook configuration.",
            "name" : "webhookId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "204" : {
            "description" : "No Content - look at the actual response code for the status of the request. "
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "get" : {
        "tags" : [
          "Webhooks - company level"
        ],
        "summary" : "Get a webhook",
        "description" : "Returns the configuration for the webhook identified in the path.\n\nTo make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Webhooks read\n* Management API—Webhooks read and write",
        "operationId" : "get-companies-companyId-webhooks-webhookId",
        "x-groupName" : "Webhooks - company level",
        "x-sortIndex" : 3,
        "x-methodName" : "getWebhook",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "Unique identifier of the [company account](https://docs.adyen.com/account/account-structure#company-account).",
            "name" : "companyId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "Unique identifier of the webhook configuration.",
            "name" : "webhookId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "get-company-webhook" : {
                    "$ref" : "#/components/examples/get-companies-companyId-webhooks-webhookId-get-company-webhook-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Webhook"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "patch" : {
        "tags" : [
          "Webhooks - company level"
        ],
        "summary" : "Update a webhook",
        "description" : "Make changes to the configuration of the webhook identified in the path. The request contains the new values you want to have in the webhook configuration. The response contains the full configuration for the webhook, which includes the new values from the request.\n\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Webhooks read and write",
        "operationId" : "patch-companies-companyId-webhooks-webhookId",
        "x-groupName" : "Webhooks - company level",
        "x-sortIndex" : 4,
        "x-methodName" : "updateWebhook",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "patch-company-webhook" : {
                  "$ref" : "#/components/examples/patch-companies-companyId-webhooks-webhookId-patch-company-webhook"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/UpdateCompanyWebhookRequest"
              }
            }
          }
        },
        "parameters" : [
          {
            "description" : "The unique identifier of the company account.",
            "name" : "companyId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "Unique identifier of the webhook configuration.",
            "name" : "webhookId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "patch-company-webhook" : {
                    "$ref" : "#/components/examples/patch-companies-companyId-webhooks-webhookId-patch-company-webhook-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Webhook"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/companies/{companyId}/webhooks/{webhookId}/generateHmac" : {
      "post" : {
        "tags" : [
          "Webhooks - company level"
        ],
        "summary" : "Generate an HMAC key",
        "description" : "Returns an [HMAC key](https://en.wikipedia.org/wiki/HMAC) for the webhook identified in the path. This key allows you to check the integrity and the origin of the notifications you receive.By creating an HMAC key, you start receiving [HMAC-signed notifications](https://docs.adyen.com/development-resources/webhooks/verify-hmac-signatures#enable-hmac-signatures) from Adyen. Find out more about how to [verify HMAC signatures](https://docs.adyen.com/development-resources/webhooks/verify-hmac-signatures).\n\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Webhooks read and write",
        "operationId" : "post-companies-companyId-webhooks-webhookId-generateHmac",
        "x-groupName" : "Webhooks - company level",
        "x-sortIndex" : 6,
        "x-methodName" : "generateHmacKey",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the company account.",
            "name" : "companyId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "Unique identifier of the webhook configuration.",
            "name" : "webhookId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "post-company-webhook-generateHmac" : {
                    "$ref" : "#/components/examples/post-companies-companyId-webhooks-webhookId-generateHmac-post-company-webhook-generateHmac-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/GenerateHmacKeyResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/companies/{companyId}/webhooks/{webhookId}/test" : {
      "post" : {
        "tags" : [
          "Webhooks - company level"
        ],
        "summary" : "Test a webhook",
        "description" : "Sends sample notifications to test if the webhook is set up correctly.\n\nWe send sample notifications for maximum 20 of the merchant accounts that the webhook is configured for. If the webhook is configured for more than 20 merchant accounts, use the `merchantIds` array to specify a subset of the merchant accounts for which to send test notifications.\n\nWe send four test notifications for each event code you choose. They cover success and failure scenarios for the hard-coded currencies EUR and GBP, regardless of the currencies configured in the merchant accounts. For custom notifications, we only send the specified custom notification.\n\nThe response describes the result of the test. The `status` field tells you if the test was successful or not. You can use the other response fields to troubleshoot unsuccessful tests.\n\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Webhooks read and write",
        "operationId" : "post-companies-companyId-webhooks-webhookId-test",
        "x-groupName" : "Webhooks - company level",
        "x-sortIndex" : 7,
        "x-methodName" : "testWebhook",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "post-company-webhook-test" : {
                  "$ref" : "#/components/examples/post-companies-companyId-webhooks-webhookId-test-post-company-webhook-test"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/TestCompanyWebhookRequest"
              }
            }
          }
        },
        "parameters" : [
          {
            "description" : "The unique identifier of the company account.",
            "name" : "companyId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "Unique identifier of the webhook configuration.",
            "name" : "webhookId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "post-company-webhook-test" : {
                    "$ref" : "#/components/examples/post-companies-companyId-webhooks-webhookId-test-post-company-webhook-test-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/TestWebhookResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/me" : {
      "get" : {
        "tags" : [
          "My API credential"
        ],
        "summary" : "Get API credential details",
        "description" : "Returns your [API credential](https://docs.adyen.com/development-resources/api-credentials) details based on the API Key you used in the request.\n\nYou can make this request with any of the Management API roles.",
        "operationId" : "get-me",
        "x-groupName" : "My API credential",
        "x-sortIndex" : 0,
        "x-methodName" : "getApiCredentialDetails",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MeApiCredential"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/me/allowedOrigins" : {
      "get" : {
        "tags" : [
          "My API credential"
        ],
        "summary" : "Get allowed origins",
        "description" : "Returns the list of [allowed origins](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) of your [API credential](https://docs.adyen.com/development-resources/api-credentials) based on the API key you used in the request.\n\nYou can make this request with any of the Management API roles.",
        "operationId" : "get-me-allowedOrigins",
        "x-groupName" : "My API credential",
        "x-sortIndex" : 0,
        "x-methodName" : "getAllowedOrigins",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AllowedOriginsResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "post" : {
        "tags" : [
          "My API credential"
        ],
        "summary" : "Add allowed origin",
        "description" : "Adds an allowed origin to the list of [allowed origins](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) of your API credential.\nThe API key from the request is used to identify the [API credential](https://docs.adyen.com/development-resources/api-credentials).\n\nYou can make this request with any of the Management API roles.",
        "operationId" : "post-me-allowedOrigins",
        "x-groupName" : "My API credential",
        "x-sortIndex" : 0,
        "x-methodName" : "addAllowedOrigin",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateAllowedOriginRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AllowedOrigin"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/me/allowedOrigins/{originId}" : {
      "delete" : {
        "tags" : [
          "My API credential"
        ],
        "summary" : "Remove allowed origin",
        "description" : "Removes the [allowed origin](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) specified in the path.\nThe API key from the request is used to identify the [API credential](https://docs.adyen.com/development-resources/api-credentials).\n\nYou can make this request with any of the Management API roles.",
        "operationId" : "delete-me-allowedOrigins-originId",
        "x-groupName" : "My API credential",
        "x-sortIndex" : 0,
        "x-methodName" : "removeAllowedOrigin",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "Unique identifier of the allowed origin.",
            "name" : "originId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "204" : {
            "description" : "No Content - look at the actual response code for the status of the request. "
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "get" : {
        "tags" : [
          "My API credential"
        ],
        "summary" : "Get allowed origin details",
        "description" : "Returns the details of the [allowed origin](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) specified in the path.\nThe API key from the request is used to identify the [API credential](https://docs.adyen.com/development-resources/api-credentials).\n\nYou can make this request with any of the Management API roles.",
        "operationId" : "get-me-allowedOrigins-originId",
        "x-groupName" : "My API credential",
        "x-sortIndex" : 0,
        "x-methodName" : "getAllowedOriginDetails",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "Unique identifier of the allowed origin.",
            "name" : "originId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AllowedOrigin"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/me/generateClientKey" : {
      "post" : {
        "tags" : [
          "My API credential"
        ],
        "summary" : "Generate a client key",
        "description" : "Generates a new [client key](https://docs.adyen.com/development-resources/client-side-authentication/) used to authenticate requests from your payment environment.\nYou can use the new client key a few minutes after generating it.\nThe old client key stops working 24 hours after generating a new one.\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—API credentials read and write",
        "operationId" : "post-me-generateClientKey",
        "x-groupName" : "My API credential",
        "x-sortIndex" : 0,
        "x-methodName" : "generateClientKey",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenerateClientKeyResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/merchants" : {
      "get" : {
        "tags" : [
          "Account - merchant level"
        ],
        "summary" : "Get a list of merchant accounts",
        "description" : "Returns the list of merchant accounts that your API credential has access to. The list is grouped into pages as defined by the query parameters. \n\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Account read",
        "operationId" : "get-merchants",
        "x-groupName" : "Account - merchant level",
        "x-sortIndex" : 4,
        "x-methodName" : "listMerchantAccounts",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The number of the page to fetch.",
            "name" : "pageNumber",
            "in" : "query",
            "required" : false,
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          },
          {
            "description" : "The number of items to have on a page, maximum 100. The default is 10 items on a page.",
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "success" : {
                    "$ref" : "#/components/examples/get-merchants-success-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/ListMerchantResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "post" : {
        "tags" : [
          "Account - merchant level"
        ],
        "summary" : "Create a merchant account",
        "description" : "Creates a merchant account for the company account specified in the request.\n\nUse this endpoint if your integration requires it, such as Adyen for Platforms Manage. Your Adyen contact will set up your access.\n\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Accounts read and write",
        "operationId" : "post-merchants",
        "x-groupName" : "Account - merchant level",
        "x-sortIndex" : 1,
        "x-methodName" : "createMerchantAccount",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "post-merchants" : {
                  "$ref" : "#/components/examples/post-merchants-post-merchants"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/CreateMerchantRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "post-merchants" : {
                    "$ref" : "#/components/examples/post-merchants-post-merchants-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/CreateMerchantResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/merchants/{merchantId}" : {
      "get" : {
        "tags" : [
          "Account - merchant level"
        ],
        "summary" : "Get a merchant account",
        "description" : "Returns the merchant account specified in the path. Your API credential must have access to the merchant account.\n\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Account read",
        "operationId" : "get-merchants-merchantId",
        "x-groupName" : "Account - merchant level",
        "x-sortIndex" : 3,
        "x-methodName" : "getMerchantAccount",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "success" : {
                    "$ref" : "#/components/examples/get-merchants-merchantId-success-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Merchant"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/merchants/{merchantId}/activate" : {
      "post" : {
        "tags" : [
          "Account - merchant level"
        ],
        "summary" : "Request to activate a merchant account",
        "description" : "Sends a request to activate the merchant account identified in the path.\n\nYou get the result of the activation asynchronously through a [`merchant.updated`](https://docs.adyen.com/api-explorer/ManagementNotification/latest/post/merchant.updated) webhook. Once the merchant account is activated, you can start using it to accept payments and payouts.\n\nUse this endpoint if your integration requires it, such as Adyen for Platforms Manage. Your Adyen contact will set up your access.\n\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Accounts read and write",
        "operationId" : "post-merchants-merchantId-activate",
        "x-groupName" : "Account - merchant level",
        "x-sortIndex" : 2,
        "x-methodName" : "requestToActivateMerchantAccount",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestActivationResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/merchants/{merchantId}/apiCredentials" : {
      "get" : {
        "tags" : [
          "API credentials - merchant level"
        ],
        "summary" : "Get a list of API credentials",
        "description" : "Returns the list of [API credentials](https://docs.adyen.com/development-resources/api-credentials) for the merchant account. The list is grouped into pages as defined by the query parameters.\n\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—API credentials read and write",
        "operationId" : "get-merchants-merchantId-apiCredentials",
        "x-groupName" : "API credentials - merchant level",
        "x-sortIndex" : 0,
        "x-methodName" : "listApiCredentials",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The number of the page to fetch.",
            "name" : "pageNumber",
            "in" : "query",
            "required" : false,
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          },
          {
            "description" : "The number of items to have on a page, maximum 100. The default is 10 items on a page.",
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "success" : {
                    "$ref" : "#/components/examples/get-merchants-merchantId-apiCredentials-success-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/ListMerchantApiCredentialsResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "post" : {
        "tags" : [
          "API credentials - merchant level"
        ],
        "summary" : "Create an API credential",
        "description" : "Creates an [API credential](https://docs.adyen.com/development-resources/api-credentials) for the company account identified in the path. In the request, you can specify the roles and allowed origins for the new API credential.\n\nThe response includes the:\n* [API key](https://docs.adyen.com/development-resources/api-authentication#api-key-authentication): used for API request authentication.\n* [Client key](https://docs.adyen.com/development-resources/client-side-authentication#how-it-works): public key used for client-side authentication.\n* [Username and password](https://docs.adyen.com/development-resources/api-authentication#using-basic-authentication): used for basic authentication.\n\n> Make sure you store the API key securely in your system. You won't be able to retrieve it later.\n\nIf your API key is lost or compromised, you need to [generate a new API key](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/merchants/{merchantId}/apiCredentials/{apiCredentialId}/generateApiKey).\n\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—API credentials read and write",
        "operationId" : "post-merchants-merchantId-apiCredentials",
        "x-groupName" : "API credentials - merchant level",
        "x-sortIndex" : 0,
        "x-methodName" : "createApiCredential",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "post-merchant-credential" : {
                  "$ref" : "#/components/examples/post-merchants-merchantId-apiCredentials-post-merchant-credential"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/CreateMerchantApiCredentialRequest"
              }
            }
          }
        },
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "post-merchant-credential" : {
                    "$ref" : "#/components/examples/post-merchants-merchantId-apiCredentials-post-merchant-credential-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/CreateApiCredentialResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/merchants/{merchantId}/apiCredentials/{apiCredentialId}" : {
      "get" : {
        "tags" : [
          "API credentials - merchant level"
        ],
        "summary" : "Get an API credential",
        "description" : "Returns the [API credential](https://docs.adyen.com/development-resources/api-credentials) identified in the path.\n\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—API credentials read and write",
        "operationId" : "get-merchants-merchantId-apiCredentials-apiCredentialId",
        "x-groupName" : "API credentials - merchant level",
        "x-sortIndex" : 0,
        "x-methodName" : "getApiCredential",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "Unique identifier of the API credential.",
            "name" : "apiCredentialId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "success" : {
                    "$ref" : "#/components/examples/get-merchants-merchantId-apiCredentials-apiCredentialId-success-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/ApiCredential"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "patch" : {
        "tags" : [
          "API credentials - merchant level"
        ],
        "summary" : "Update an API credential",
        "description" : "Changes the API credential's roles, or allowed origins. The request has the new values for the fields you want to change. The response contains the full updated API credential, including the new values from the request. \n\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—API credentials read and write",
        "operationId" : "patch-merchants-merchantId-apiCredentials-apiCredentialId",
        "x-groupName" : "API credentials - merchant level",
        "x-sortIndex" : 0,
        "x-methodName" : "updateApiCredential",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "patch-merchant-credential" : {
                  "$ref" : "#/components/examples/patch-merchants-merchantId-apiCredentials-apiCredentialId-patch-merchant-credential"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/UpdateMerchantApiCredentialRequest"
              }
            }
          }
        },
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "Unique identifier of the API credential.",
            "name" : "apiCredentialId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "patch-merchant-credential" : {
                    "$ref" : "#/components/examples/patch-merchants-merchantId-apiCredentials-apiCredentialId-patch-merchant-credential-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/ApiCredential"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/merchants/{merchantId}/apiCredentials/{apiCredentialId}/allowedOrigins" : {
      "get" : {
        "tags" : [
          "Allowed origins - merchant level"
        ],
        "summary" : "Get a list of allowed origins",
        "description" : "Returns the list of [allowed origins](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) for the API credential identified in the path.\n\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—API credentials read and write",
        "operationId" : "get-merchants-merchantId-apiCredentials-apiCredentialId-allowedOrigins",
        "x-groupName" : "Allowed origins - merchant level",
        "x-sortIndex" : 0,
        "x-methodName" : "listAllowedOrigins",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "Unique identifier of the API credential.",
            "name" : "apiCredentialId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "get-allowed-origin" : {
                    "$ref" : "#/components/examples/get-merchants-merchantId-apiCredentials-apiCredentialId-allowedOrigins-get-allowed-origin-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/AllowedOriginsResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "post" : {
        "tags" : [
          "Allowed origins - merchant level"
        ],
        "summary" : "Create an allowed origin",
        "description" : "Adds a new [allowed origin](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) to the API credential's list of allowed origins.\n\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—API credentials read and write",
        "operationId" : "post-merchants-merchantId-apiCredentials-apiCredentialId-allowedOrigins",
        "x-groupName" : "Allowed origins - merchant level",
        "x-sortIndex" : 0,
        "x-methodName" : "createAllowedOrigin",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "add-allowed-origin" : {
                  "$ref" : "#/components/examples/post-merchants-merchantId-apiCredentials-apiCredentialId-allowedOrigins-add-allowed-origin"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/AllowedOrigin"
              }
            }
          }
        },
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "Unique identifier of the API credential.",
            "name" : "apiCredentialId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "add-allowed-origin" : {
                    "$ref" : "#/components/examples/post-merchants-merchantId-apiCredentials-apiCredentialId-allowedOrigins-add-allowed-origin-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/AllowedOriginsResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/merchants/{merchantId}/apiCredentials/{apiCredentialId}/allowedOrigins/{originId}" : {
      "delete" : {
        "tags" : [
          "Allowed origins - merchant level"
        ],
        "summary" : "Delete an allowed origin",
        "description" : "Removes the [allowed origin](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) identified in the path. As soon as an allowed origin is removed, we no longer accept client-side requests from that domain.\n\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—API credentials read and write",
        "operationId" : "delete-merchants-merchantId-apiCredentials-apiCredentialId-allowedOrigins-originId",
        "x-groupName" : "Allowed origins - merchant level",
        "x-sortIndex" : 0,
        "x-methodName" : "deleteAllowedOrigin",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "Unique identifier of the API credential.",
            "name" : "apiCredentialId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "Unique identifier of the allowed origin.",
            "name" : "originId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "204" : {
            "description" : "No Content - look at the actual response code for the status of the request. "
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "get" : {
        "tags" : [
          "Allowed origins - merchant level"
        ],
        "summary" : "Get an allowed origin",
        "description" : "Returns the [allowed origin](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) identified in the path.\n\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—API credentials read and write",
        "operationId" : "get-merchants-merchantId-apiCredentials-apiCredentialId-allowedOrigins-originId",
        "x-groupName" : "Allowed origins - merchant level",
        "x-sortIndex" : 0,
        "x-methodName" : "getAllowedOrigin",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "Unique identifier of the API credential.",
            "name" : "apiCredentialId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "Unique identifier of the allowed origin.",
            "name" : "originId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "get-allowed-origins" : {
                    "$ref" : "#/components/examples/get-merchants-merchantId-apiCredentials-apiCredentialId-allowedOrigins-originId-get-allowed-origins-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/AllowedOrigin"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/merchants/{merchantId}/apiCredentials/{apiCredentialId}/generateApiKey" : {
      "post" : {
        "tags" : [
          "API key - merchant level"
        ],
        "summary" : "Generate new API key",
        "description" : "Returns a new API key for the API credential. You can use the new API key a few minutes after generating it. The old API key stops working 24 hours after generating a new one.\n\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—API credentials read and write",
        "operationId" : "post-merchants-merchantId-apiCredentials-apiCredentialId-generateApiKey",
        "x-groupName" : "API key - merchant level",
        "x-sortIndex" : 0,
        "x-methodName" : "generateNewApiKey",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "Unique identifier of the API credential.",
            "name" : "apiCredentialId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenerateApiKeyResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/merchants/{merchantId}/apiCredentials/{apiCredentialId}/generateClientKey" : {
      "post" : {
        "tags" : [
          "Client key - merchant level"
        ],
        "summary" : "Generate new client key",
        "description" : "Returns a new [client key](https://docs.adyen.com/development-resources/client-side-authentication#how-it-works) for the API credential identified in the path. You can use the new client key a few minutes after generating it. The old client key stops working 24 hours after generating a new one.\n\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—API credentials read and write",
        "operationId" : "post-merchants-merchantId-apiCredentials-apiCredentialId-generateClientKey",
        "x-groupName" : "Client key - merchant level",
        "x-sortIndex" : 0,
        "x-methodName" : "generateNewClientKey",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "Unique identifier of the API credential.",
            "name" : "apiCredentialId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenerateClientKeyResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/merchants/{merchantId}/billingEntities" : {
      "get" : {
        "tags" : [
          "Terminal orders - merchant level"
        ],
        "summary" : "Get a list of billing entities",
        "description" : "Returns the billing entities of the merchant account identified in the path.\nA billing entity is a legal entity where we charge orders to. An order for terminal products must contain the ID of a billing entity.\n\nTo make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Terminal ordering read\n* Management API—Terminal ordering read and write",
        "operationId" : "get-merchants-merchantId-billingEntities",
        "x-groupName" : "Terminal orders - merchant level",
        "x-sortIndex" : 3,
        "x-methodName" : "listBillingEntities",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The name of the billing entity.",
            "name" : "name",
            "in" : "query",
            "required" : false,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "success" : {
                    "$ref" : "#/components/examples/get-merchants-merchantId-billingEntities-success-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/BillingEntitiesResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/merchants/{merchantId}/paymentMethodSettings" : {
      "get" : {
        "tags" : [
          "Payment methods - merchant level"
        ],
        "summary" : "Get all payment methods",
        "description" : "Returns details for all payment methods of the merchant account identified in the path.\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Payment methods read\n",
        "operationId" : "get-merchants-merchantId-paymentMethodSettings",
        "x-groupName" : "Payment methods - merchant level",
        "x-sortIndex" : 2,
        "x-methodName" : "getAllPaymentMethods",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The unique identifier of the store for which to return the payment methods.",
            "name" : "storeId",
            "in" : "query",
            "required" : false,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The unique identifier of the Business Line for which to return the payment methods.",
            "name" : "businessLineId",
            "in" : "query",
            "required" : false,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The number of items to have on a page, maximum 100. The default is 10 items on a page.",
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          },
          {
            "description" : "The number of the page to fetch.",
            "name" : "pageNumber",
            "in" : "query",
            "required" : false,
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentMethodResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "post" : {
        "tags" : [
          "Payment methods - merchant level"
        ],
        "summary" : "Request a payment method",
        "description" : "Sends a request to add a new payment method to the merchant account identified in the path.\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Payment methods read and write\n",
        "operationId" : "post-merchants-merchantId-paymentMethodSettings",
        "x-groupName" : "Payment methods - merchant level",
        "x-sortIndex" : 1,
        "x-methodName" : "requestPaymentMethod",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "add-payment-method-partner-model" : {
                  "$ref" : "#/components/examples/post-merchants-merchantId-paymentMethodSettings-add-payment-method-partner-model"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/PaymentMethodSetupInfo"
              }
            }
          }
        },
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "add-payment-method-partner-model" : {
                    "$ref" : "#/components/examples/post-merchants-merchantId-paymentMethodSettings-add-payment-method-partner-model-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentMethod"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/merchants/{merchantId}/paymentMethodSettings/{paymentMethodId}" : {
      "get" : {
        "tags" : [
          "Payment methods - merchant level"
        ],
        "summary" : "Get payment method details",
        "description" : "Returns details for the merchant account and the payment method identified in the path.\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Payment methods read\n",
        "operationId" : "get-merchants-merchantId-paymentMethodSettings-paymentMethodId",
        "x-groupName" : "Payment methods - merchant level",
        "x-sortIndex" : 3,
        "x-methodName" : "getPaymentMethodDetails",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The unique identifier of the payment method.",
            "name" : "paymentMethodId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentMethod"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "patch" : {
        "tags" : [
          "Payment methods - merchant level"
        ],
        "summary" : "Update a payment method",
        "description" : "Updates payment method details for the merchant account and the payment method identified in the path.\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Payment methods read and write\n",
        "operationId" : "patch-merchants-merchantId-paymentMethodSettings-paymentMethodId",
        "x-groupName" : "Payment methods - merchant level",
        "x-sortIndex" : 4,
        "x-methodName" : "updatePaymentMethod",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdatePaymentMethodInfo"
              }
            }
          }
        },
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The unique identifier of the payment method.",
            "name" : "paymentMethodId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentMethod"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/merchants/{merchantId}/paymentMethodSettings/{paymentMethodId}/addApplePayDomains" : {
      "post" : {
        "tags" : [
          "Payment methods - merchant level"
        ],
        "summary" : "Add an Apple Pay domain",
        "description" : "Adds the new domain to the list of Apple Pay domains that are registered with the merchant account and the payment method identified in the path. For more information, see [Apple Pay documentation](https://docs.adyen.com/payment-methods/apple-pay/enable-apple-pay#register-merchant-domain).\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Payment methods read and write\n",
        "operationId" : "post-merchants-merchantId-paymentMethodSettings-paymentMethodId-addApplePayDomains",
        "x-groupName" : "Payment methods - merchant level",
        "x-sortIndex" : 5,
        "x-methodName" : "addApplePayDomain",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "add-applepay-domain" : {
                  "$ref" : "#/components/examples/post-merchants-merchantId-paymentMethodSettings-paymentMethodId-addApplePayDomains-add-applepay-domain"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/ApplePayInfo"
              }
            }
          }
        },
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The unique identifier of the payment method.",
            "name" : "paymentMethodId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "204" : {
            "description" : "No Content - look at the actual response code for the status of the request. "
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/merchants/{merchantId}/paymentMethodSettings/{paymentMethodId}/getApplePayDomains" : {
      "get" : {
        "tags" : [
          "Payment methods - merchant level"
        ],
        "summary" : "Get Apple Pay domains",
        "description" : "Returns all Apple Pay domains that are registered with the merchant account and the payment method identified in the path. For more information, see [Apple Pay documentation](https://docs.adyen.com/payment-methods/apple-pay/enable-apple-pay#register-merchant-domain).\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Payment methods read\n",
        "operationId" : "get-merchants-merchantId-paymentMethodSettings-paymentMethodId-getApplePayDomains",
        "x-groupName" : "Payment methods - merchant level",
        "x-sortIndex" : 6,
        "x-methodName" : "getApplePayDomains",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The unique identifier of the payment method.",
            "name" : "paymentMethodId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplePayInfo"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/merchants/{merchantId}/payoutSettings" : {
      "get" : {
        "tags" : [
          "Payout settings - merchant level"
        ],
        "summary" : "Get a list of payout settings",
        "description" : "Returns the list of payout settings for the merchant account identified in the path.\n\nUse this endpoint if your integration requires it, such as Adyen for Platforms Manage. Your Adyen contact will set up your access.\n\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Payout account settings read",
        "operationId" : "get-merchants-merchantId-payoutSettings",
        "x-groupName" : "Payout settings - merchant level",
        "x-sortIndex" : 3,
        "x-methodName" : "listPayoutSettings",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PayoutSettingsResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "post" : {
        "tags" : [
          "Payout settings - merchant level"
        ],
        "summary" : "Add a payout setting",
        "description" : "Sends a request to add a payout setting for the merchant account specified in the path. A payout setting links the merchant account to the [transfer instrument](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/transferInstruments) that contains the details of the payout bank account. Adyen verifies the bank account before allowing and enabling the payout setting.\n\nIf you're accepting payments in multiple currencies, you may add multiple payout settings for the merchant account.\n\nUse this endpoint if your integration requires it, such as Adyen for Platforms Manage. Your Adyen contact will set up your access.\n\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n\n* Management API—Payout account settings read and write",
        "operationId" : "post-merchants-merchantId-payoutSettings",
        "x-groupName" : "Payout settings - merchant level",
        "x-sortIndex" : 1,
        "x-methodName" : "addPayoutSetting",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PayoutSettingsRequest"
              }
            }
          }
        },
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PayoutSettings"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/merchants/{merchantId}/payoutSettings/{payoutSettingsId}" : {
      "delete" : {
        "tags" : [
          "Payout settings - merchant level"
        ],
        "summary" : "Delete a payout setting",
        "description" : "Deletes the payout setting identified in the path.\n\nUse this endpoint if your integration requires it, such as Adyen for Platforms Manage. Your Adyen contact will set up your access.\n\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n\n* Management API—Payout account settings read and write",
        "operationId" : "delete-merchants-merchantId-payoutSettings-payoutSettingsId",
        "x-groupName" : "Payout settings - merchant level",
        "x-sortIndex" : 5,
        "x-methodName" : "deletePayoutSetting",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The unique identifier of the payout setting.",
            "name" : "payoutSettingsId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "204" : {
            "description" : "No Content - look at the actual response code for the status of the request. "
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "get" : {
        "tags" : [
          "Payout settings - merchant level"
        ],
        "summary" : "Get a payout setting",
        "description" : "Returns the payout setting identified in the path.\n\nUse this endpoint if your integration requires it, such as Adyen for Platforms Manage. Your Adyen contact will set up your access.\n\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Payout account settings read",
        "operationId" : "get-merchants-merchantId-payoutSettings-payoutSettingsId",
        "x-groupName" : "Payout settings - merchant level",
        "x-sortIndex" : 4,
        "x-methodName" : "getPayoutSetting",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The unique identifier of the payout setting.",
            "name" : "payoutSettingsId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PayoutSettings"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "patch" : {
        "tags" : [
          "Payout settings - merchant level"
        ],
        "summary" : "Update a payout setting",
        "description" : "Updates the payout setting identified in the path. You can enable or disable the payout setting.\n\nUse this endpoint if your integration requires it, such as Adyen for Platforms Manage. Your Adyen contact will set up your access.\n\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n\n* Management API—Payout account settings read and write",
        "operationId" : "patch-merchants-merchantId-payoutSettings-payoutSettingsId",
        "x-groupName" : "Payout settings - merchant level",
        "x-sortIndex" : 2,
        "x-methodName" : "updatePayoutSetting",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdatePayoutSettingsRequest"
              }
            }
          }
        },
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The unique identifier of the payout setting.",
            "name" : "payoutSettingsId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PayoutSettings"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/merchants/{merchantId}/shippingLocations" : {
      "get" : {
        "tags" : [
          "Terminal orders - merchant level"
        ],
        "summary" : "Get a list of shipping locations",
        "description" : "Returns the shipping locations for the merchant account identified in the path.\nA shipping location includes the address where orders can be delivered, and an ID which you need to specify when ordering terminal products.\n\nTo make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Terminal ordering read\n* Management API—Terminal ordering read and write",
        "operationId" : "get-merchants-merchantId-shippingLocations",
        "x-groupName" : "Terminal orders - merchant level",
        "x-sortIndex" : 4,
        "x-methodName" : "listShippingLocations",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The name of the shipping location.",
            "name" : "name",
            "in" : "query",
            "required" : false,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The number of locations to skip.",
            "name" : "offset",
            "in" : "query",
            "required" : false,
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          },
          {
            "description" : "The number of locations to return.",
            "name" : "limit",
            "in" : "query",
            "required" : false,
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "success" : {
                    "$ref" : "#/components/examples/get-merchants-merchantId-shippingLocations-success-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/ShippingLocationsResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "post" : {
        "tags" : [
          "Terminal orders - merchant level"
        ],
        "summary" : "Create a shipping location",
        "description" : "Creates a shipping location for the merchant account identified in the path. A shipping location defines an address where orders can be shipped to. \n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Terminal ordering read and write",
        "operationId" : "post-merchants-merchantId-shippingLocations",
        "x-groupName" : "Terminal orders - merchant level",
        "x-sortIndex" : 5,
        "x-methodName" : "createShippingLocation",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "create-shipping-location" : {
                  "$ref" : "#/components/examples/post-merchants-merchantId-shippingLocations-create-shipping-location"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/ShippingLocation"
              }
            }
          }
        },
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "create-shipping-location" : {
                    "$ref" : "#/components/examples/post-merchants-merchantId-shippingLocations-create-shipping-location-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/ShippingLocation"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/merchants/{merchantId}/splitConfigurations" : {
      "get" : {
        "tags" : [
          "Split configuration - merchant level"
        ],
        "summary" : "Get a list of split configurations",
        "description" : "Returns the list of split configurations for the merchant account.\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API - SplitConfiguration read and write",
        "operationId" : "get-merchants-merchantId-splitConfigurations",
        "x-groupName" : "Split configuration - merchant level",
        "x-sortIndex" : 3,
        "x-methodName" : "listSplitConfigurations",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "success" : {
                    "$ref" : "#/components/examples/get-merchants-merchantId-splitConfigurations-success-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/SplitConfigurationList"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "post" : {
        "tags" : [
          "Split configuration - merchant level"
        ],
        "summary" : "Create a split configuration",
        "description" : "Creates a split configuration for the merchant account specified in the path.\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API - SplitConfiguration read and write",
        "operationId" : "post-merchants-merchantId-splitConfigurations",
        "x-groupName" : "Split configuration - merchant level",
        "x-sortIndex" : 1,
        "x-methodName" : "createSplitConfiguration",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "post-splitConfiguration" : {
                  "$ref" : "#/components/examples/post-merchants-merchantId-splitConfigurations-post-splitConfiguration"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/SplitConfiguration"
              }
            }
          }
        },
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "post-splitConfiguration" : {
                    "$ref" : "#/components/examples/post-merchants-merchantId-splitConfigurations-post-splitConfiguration-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/SplitConfiguration"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/merchants/{merchantId}/splitConfigurations/{splitConfigurationId}" : {
      "delete" : {
        "tags" : [
          "Split configuration - merchant level"
        ],
        "summary" : "Delete a split configuration",
        "description" : "Deletes the split configuration specified in the path.\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API - SplitConfiguration read and write",
        "operationId" : "delete-merchants-merchantId-splitConfigurations-splitConfigurationId",
        "x-groupName" : "Split configuration - merchant level",
        "x-sortIndex" : 8,
        "x-methodName" : "deleteSplitConfiguration",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The unique identifier of the split configuration.",
            "name" : "splitConfigurationId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SplitConfiguration"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "get" : {
        "tags" : [
          "Split configuration - merchant level"
        ],
        "summary" : "Get a split configuration",
        "description" : "Returns the split configuration specified in the path.\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API - SplitConfiguration read and write",
        "operationId" : "get-merchants-merchantId-splitConfigurations-splitConfigurationId",
        "x-groupName" : "Split configuration - merchant level",
        "x-sortIndex" : 4,
        "x-methodName" : "getSplitConfiguration",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The unique identifier of the split configuration.",
            "name" : "splitConfigurationId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "success" : {
                    "$ref" : "#/components/examples/get-merchants-merchantId-splitConfigurations-splitConfigurationId-success-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/SplitConfiguration"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "patch" : {
        "tags" : [
          "Split configuration - merchant level"
        ],
        "summary" : "Update split configuration description",
        "description" : "Changes the description of the split configuration specified in the path.\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API - SplitConfiguration read and write",
        "operationId" : "patch-merchants-merchantId-splitConfigurations-splitConfigurationId",
        "x-groupName" : "Split configuration - merchant level",
        "x-sortIndex" : 5,
        "x-methodName" : "updateSplitConfigurationDescription",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "patch-splitConfiguration-description" : {
                  "$ref" : "#/components/examples/patch-merchants-merchantId-splitConfigurations-splitConfigurationId-patch-splitConfiguration-description"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/UpdateSplitConfigurationRequest"
              }
            }
          }
        },
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The unique identifier of the split configuration.",
            "name" : "splitConfigurationId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "patch-splitConfiguration-description" : {
                    "$ref" : "#/components/examples/patch-merchants-merchantId-splitConfigurations-splitConfigurationId-patch-splitConfiguration-description-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/SplitConfiguration"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "post" : {
        "tags" : [
          "Split configuration - merchant level"
        ],
        "summary" : "Create a rule",
        "description" : "Creates a rule in the split configuration specified in the path.\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API - SplitConfiguration read and write",
        "operationId" : "post-merchants-merchantId-splitConfigurations-splitConfigurationId",
        "x-groupName" : "Split configuration - merchant level",
        "x-sortIndex" : 2,
        "x-methodName" : "createRule",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "post-splitConfiguration-rule" : {
                  "$ref" : "#/components/examples/post-merchants-merchantId-splitConfigurations-splitConfigurationId-post-splitConfiguration-rule"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/SplitConfigurationRule"
              }
            }
          }
        },
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The unique identifier of the split configuration.",
            "name" : "splitConfigurationId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "post-splitConfiguration-rule" : {
                    "$ref" : "#/components/examples/post-merchants-merchantId-splitConfigurations-splitConfigurationId-post-splitConfiguration-rule-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/SplitConfiguration"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/merchants/{merchantId}/splitConfigurations/{splitConfigurationId}/rules/{ruleId}" : {
      "delete" : {
        "tags" : [
          "Split configuration - merchant level"
        ],
        "summary" : "Delete a split configuration rule",
        "description" : "Deletes the split configuration rule specified in the path.\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API - SplitConfiguration read and write",
        "operationId" : "delete-merchants-merchantId-splitConfigurations-splitConfigurationId-rules-ruleId",
        "x-groupName" : "Split configuration - merchant level",
        "x-sortIndex" : 9,
        "x-methodName" : "deleteSplitConfigurationRule",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The unique identifier of the split configuration.",
            "name" : "splitConfigurationId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "name" : "ruleId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SplitConfiguration"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "patch" : {
        "tags" : [
          "Split configuration - merchant level"
        ],
        "summary" : "Update split conditions",
        "description" : "Changes the conditions of the split configuration rule specified in the path.\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API - SplitConfiguration read and write",
        "operationId" : "patch-merchants-merchantId-splitConfigurations-splitConfigurationId-rules-ruleId",
        "x-groupName" : "Split configuration - merchant level",
        "x-sortIndex" : 6,
        "x-methodName" : "updateSplitConditions",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "patch-splitConfiguration-rule" : {
                  "$ref" : "#/components/examples/patch-merchants-merchantId-splitConfigurations-splitConfigurationId-rules-ruleId-patch-splitConfiguration-rule"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/UpdateSplitConfigurationRuleRequest"
              }
            }
          }
        },
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The identifier of the split configuration.",
            "name" : "splitConfigurationId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The unique identifier of the split configuration rule.",
            "name" : "ruleId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "patch-splitConfiguration-rule" : {
                    "$ref" : "#/components/examples/patch-merchants-merchantId-splitConfigurations-splitConfigurationId-rules-ruleId-patch-splitConfiguration-rule-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/SplitConfiguration"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/merchants/{merchantId}/splitConfigurations/{splitConfigurationId}/rules/{ruleId}/splitLogic/{splitLogicId}" : {
      "patch" : {
        "tags" : [
          "Split configuration - merchant level"
        ],
        "summary" : "Update the split logic",
        "description" : "Changes the split logic specified in the path.\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API - SplitConfiguration read and write",
        "operationId" : "patch-merchants-merchantId-splitConfigurations-splitConfigurationId-rules-ruleId-splitLogic-splitLogicId",
        "x-groupName" : "Split configuration - merchant level",
        "x-sortIndex" : 7,
        "x-methodName" : "updateSplitLogic",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "patch-splitConfiguration-rule-splitLogic" : {
                  "$ref" : "#/components/examples/patch-merchants-merchantId-splitConfigurations-splitConfigurationId-rules-ruleId-splitLogic-splitLogicId-patch-splitConfiguration-rule-splitLogic"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/UpdateSplitConfigurationLogicRequest"
              }
            }
          }
        },
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The unique identifier of the split configuration.",
            "name" : "splitConfigurationId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The unique identifier of the split configuration rule.",
            "name" : "ruleId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The unique identifier of the split configuration split.",
            "name" : "splitLogicId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "patch-splitConfiguration-rule-splitLogic" : {
                    "$ref" : "#/components/examples/patch-merchants-merchantId-splitConfigurations-splitConfigurationId-rules-ruleId-splitLogic-splitLogicId-patch-splitConfiguration-rule-splitLogic-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/SplitConfiguration"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/merchants/{merchantId}/stores" : {
      "get" : {
        "tags" : [
          "Account - store level"
        ],
        "summary" : "Get a list of stores",
        "description" : "Returns a list of stores for the merchant account identified in the path. The list is grouped into pages as defined by the query parameters.\n\nTo make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Stores read\n* Management API—Stores read and write",
        "operationId" : "get-merchants-merchantId-stores",
        "x-groupName" : "Account - store level",
        "x-sortIndex" : 1,
        "x-methodName" : "listStoresByMerchantId",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The number of the page to fetch.",
            "name" : "pageNumber",
            "in" : "query",
            "required" : false,
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          },
          {
            "description" : "The number of items to have on a page, maximum 100. The default is 10 items on a page.",
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          },
          {
            "description" : "The reference of the store.",
            "name" : "reference",
            "in" : "query",
            "required" : false,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "success" : {
                    "$ref" : "#/components/examples/get-merchants-merchantId-stores-success-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/ListStoresResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "post" : {
        "tags" : [
          "Account - store level"
        ],
        "summary" : "Create a store",
        "description" : "Creates a store for the merchant account identified in the path.\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Stores read and write",
        "operationId" : "post-merchants-merchantId-stores",
        "x-groupName" : "Account - store level",
        "x-sortIndex" : 0,
        "x-methodName" : "createStoreByMerchantId",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "post-stores" : {
                  "$ref" : "#/components/examples/post-merchants-merchantId-stores-post-stores"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/StoreCreationRequest"
              }
            }
          }
        },
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "post-stores" : {
                    "$ref" : "#/components/examples/post-merchants-merchantId-stores-post-stores-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Store"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/merchants/{merchantId}/stores/{reference}/terminalLogos" : {
      "get" : {
        "tags" : [
          "Terminal settings - store level"
        ],
        "summary" : "Get the terminal logo",
        "description" : "Returns the logo that is configured for a specific payment terminal model at the store identified in the path. \nThe logo is returned as a Base64-encoded string. You need to Base64-decode the string to get the actual image file. \nThis logo applies to all terminals of the specified model under the store, unless a different logo is configured for an individual terminal.\n\nTo make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Terminal settings read\n* Management API—Terminal settings read and write",
        "operationId" : "get-merchants-merchantId-stores-reference-terminalLogos",
        "x-groupName" : "Terminal settings - store level",
        "x-sortIndex" : 2,
        "x-methodName" : "getTerminalLogo",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The reference that identifies the store.",
            "name" : "reference",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The terminal model. Possible values: E355, VX675WIFIBT, VX680, VX690, VX700, VX820, M400, MX925, P400Plus, UX300, UX410, V200cPlus, V240mPlus, V400cPlus, V400m, e280, e285, e285p, S1E, S1EL, S1F2, S1L, S1U, S7T.",
            "name" : "model",
            "in" : "query",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "success" : {
                    "$ref" : "#/components/examples/get-merchants-merchantId-stores-reference-terminalLogos-success-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Logo"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "patch" : {
        "tags" : [
          "Terminal settings - store level"
        ],
        "summary" : "Update the terminal logo",
        "description" : "Updates the logo that is configured for a specific payment terminal model at the store identified in the path. You can update the logo for only one terminal model at a time.\nThis logo applies to all terminals of the specified model under the store, unless a different logo is configured for an individual terminal. \n\n* To change the logo, specify the image file as a Base64-encoded string.\n* To restore the logo inherited from a higher level (merchant or company account), specify an empty logo value.\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Terminal settings read and write",
        "operationId" : "patch-merchants-merchantId-stores-reference-terminalLogos",
        "x-groupName" : "Terminal settings - store level",
        "x-sortIndex" : 4,
        "x-methodName" : "updateTerminalLogo",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "remove-logo" : {
                  "$ref" : "#/components/examples/patch-merchants-merchantId-stores-reference-terminalLogos-remove-logo"
                },
                "upload-logo" : {
                  "$ref" : "#/components/examples/patch-merchants-merchantId-stores-reference-terminalLogos-upload-logo"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/Logo"
              }
            }
          }
        },
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The reference that identifies the store.",
            "name" : "reference",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The terminal model. Possible values: E355, VX675WIFIBT, VX680, VX690, VX700, VX820, M400, MX925, P400Plus, UX300, UX410, V200cPlus, V240mPlus, V400cPlus, V400m, e280, e285, e285p, S1E, S1EL, S1F2, S1L, S1U, S7T",
            "name" : "model",
            "in" : "query",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "remove-logo" : {
                    "$ref" : "#/components/examples/patch-merchants-merchantId-stores-reference-terminalLogos-remove-logo-200"
                  },
                  "upload-logo" : {
                    "$ref" : "#/components/examples/patch-merchants-merchantId-stores-reference-terminalLogos-upload-logo-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Logo"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/merchants/{merchantId}/stores/{reference}/terminalSettings" : {
      "get" : {
        "tags" : [
          "Terminal settings - store level"
        ],
        "summary" : "Get terminal settings",
        "description" : "Returns the payment terminal settings that are configured for the store identified in the path. These settings apply to all terminals under the store unless different values are configured for an individual terminal.\n\nTo make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Terminal settings read\n* Management API—Terminal settings read and write\n\nFor [sensitive terminal settings](https://docs.adyen.com/point-of-sale/automating-terminal-management/configure-terminals-api#sensitive-terminal-settings), your API credential must have the following role:\n* Management API—Terminal settings Advanced read and write",
        "operationId" : "get-merchants-merchantId-stores-reference-terminalSettings",
        "x-groupName" : "Terminal settings - store level",
        "x-sortIndex" : 1,
        "x-methodName" : "getTerminalSettings",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The reference that identifies the store.",
            "name" : "reference",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "success" : {
                    "$ref" : "#/components/examples/get-merchants-merchantId-stores-reference-terminalSettings-success-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/TerminalSettings"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "patch" : {
        "tags" : [
          "Terminal settings - store level"
        ],
        "summary" : "Update terminal settings",
        "description" : "Updates payment terminal settings for the store identified in the path. These settings apply to all terminals under the store, unless different values are configured for an individual terminal.\n\n* To change a parameter value, include the full object that contains the parameter, even if you don't want to change all parameters in the object.\n* To restore a parameter value inherited from a higher level, include the full object that contains the parameter, and specify an empty value for the parameter or omit the parameter.\n* Objects that are not included in the request are not updated.\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Terminal settings read and write\n\nFor [sensitive terminal settings](https://docs.adyen.com/point-of-sale/automating-terminal-management/configure-terminals-api#sensitive-terminal-settings), your API credential must have the following role:\n* Management API—Terminal settings Advanced read and write",
        "operationId" : "patch-merchants-merchantId-stores-reference-terminalSettings",
        "x-groupName" : "Terminal settings - store level",
        "x-sortIndex" : 3,
        "x-methodName" : "updateTerminalSettings",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "add-eap-peap-and-psk-wifi-profiles" : {
                  "$ref" : "#/components/examples/patch-merchants-merchantId-stores-reference-terminalSettings-add-eap-peap-and-psk-wifi-profiles"
                },
                "add-eap-tls-wifi-profile" : {
                  "$ref" : "#/components/examples/patch-merchants-merchantId-stores-reference-terminalSettings-add-eap-tls-wifi-profile"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/TerminalSettings"
              }
            }
          }
        },
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The reference that identifies the store.",
            "name" : "reference",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "add-eap-peap-and-psk-wifi-profiles" : {
                    "$ref" : "#/components/examples/patch-merchants-merchantId-stores-reference-terminalSettings-add-eap-peap-and-psk-wifi-profiles-200"
                  },
                  "add-eap-tls-wifi-profile" : {
                    "$ref" : "#/components/examples/patch-merchants-merchantId-stores-reference-terminalSettings-add-eap-tls-wifi-profile-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/TerminalSettings"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/merchants/{merchantId}/stores/{storeId}" : {
      "get" : {
        "tags" : [
          "Account - store level"
        ],
        "summary" : "Get a store",
        "description" : "Returns the details of the store identified in the path.\n\nTo make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Stores read\n* Management API—Stores read and write",
        "operationId" : "get-merchants-merchantId-stores-storeId",
        "x-groupName" : "Account - store level",
        "x-sortIndex" : 2,
        "x-methodName" : "getStore",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The unique identifier of the store.",
            "name" : "storeId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "success" : {
                    "$ref" : "#/components/examples/get-merchants-merchantId-stores-storeId-success-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Store"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "patch" : {
        "tags" : [
          "Account - store level"
        ],
        "summary" : "Update a store",
        "description" : "Updates the store identified in the path. You can only update some store parameters.\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Stores read and write",
        "operationId" : "patch-merchants-merchantId-stores-storeId",
        "x-groupName" : "Account - store level",
        "x-sortIndex" : 3,
        "x-methodName" : "updateStore",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "patch-stores" : {
                  "$ref" : "#/components/examples/patch-merchants-merchantId-stores-storeId-patch-stores"
                },
                "patch-stores-splitConfiguration" : {
                  "$ref" : "#/components/examples/patch-merchants-merchantId-stores-storeId-patch-stores-splitConfiguration"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/UpdateStoreRequest"
              }
            }
          }
        },
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The unique identifier of the store.",
            "name" : "storeId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "patch-stores" : {
                    "$ref" : "#/components/examples/patch-merchants-merchantId-stores-storeId-patch-stores-200"
                  },
                  "patch-stores-splitConfiguration" : {
                    "$ref" : "#/components/examples/patch-merchants-merchantId-stores-storeId-patch-stores-splitConfiguration-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Store"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/merchants/{merchantId}/terminalLogos" : {
      "get" : {
        "tags" : [
          "Terminal settings - merchant level"
        ],
        "summary" : "Get the terminal logo",
        "description" : "Returns the logo that is configured for a specific payment terminal model at the merchant account identified in the path. \nThe logo is returned as a Base64-encoded string. You need to Base64-decode the string to get the actual image file. \nThis logo applies to all terminals of the specified model under the merchant account, unless a different logo is configured at a lower level (store or individual terminal).\n\nTo make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Terminal settings read\n* Management API—Terminal settings read and write",
        "operationId" : "get-merchants-merchantId-terminalLogos",
        "x-groupName" : "Terminal settings - merchant level",
        "x-sortIndex" : 2,
        "x-methodName" : "getTerminalLogo",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The terminal model. Possible values: E355, VX675WIFIBT, VX680, VX690, VX700, VX820, M400, MX925, P400Plus, UX300, UX410, V200cPlus, V240mPlus, V400cPlus, V400m, e280, e285, e285p, S1E, S1EL, S1F2, S1L, S1U, S7T.",
            "name" : "model",
            "in" : "query",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "success" : {
                    "$ref" : "#/components/examples/get-merchants-merchantId-terminalLogos-success-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Logo"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "patch" : {
        "tags" : [
          "Terminal settings - merchant level"
        ],
        "summary" : "Update the terminal logo",
        "description" : "Updates the logo for a specific payment terminal model at the merchant account identified in the path. You can update the logo for only one terminal model at a time. \nThis logo applies to all terminals of the specified model under the merchant account, unless a different logo is configured at a lower level (store or individual terminal).\n\n* To change the logo, specify the image file as a Base64-encoded string.\n* To restore the logo inherited from the company account, specify an empty logo value.\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Terminal settings read and write",
        "operationId" : "patch-merchants-merchantId-terminalLogos",
        "x-groupName" : "Terminal settings - merchant level",
        "x-sortIndex" : 4,
        "x-methodName" : "updateTerminalLogo",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "remove-logo" : {
                  "$ref" : "#/components/examples/patch-merchants-merchantId-terminalLogos-remove-logo"
                },
                "upload-logo" : {
                  "$ref" : "#/components/examples/patch-merchants-merchantId-terminalLogos-upload-logo"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/Logo"
              }
            }
          }
        },
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The terminal model. Allowed values: E355, VX675WIFIBT, VX680, VX690, VX700, VX820, M400, MX925, P400Plus, UX300, UX410, V200cPlus, V240mPlus, V400cPlus, V400m, e280, e285, e285p, S1E, S1EL, S1F2, S1L, S1U, S7T.",
            "name" : "model",
            "in" : "query",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "remove-logo" : {
                    "$ref" : "#/components/examples/patch-merchants-merchantId-terminalLogos-remove-logo-200"
                  },
                  "upload-logo" : {
                    "$ref" : "#/components/examples/patch-merchants-merchantId-terminalLogos-upload-logo-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Logo"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/merchants/{merchantId}/terminalModels" : {
      "get" : {
        "tags" : [
          "Terminal orders - merchant level"
        ],
        "summary" : "Get a list of terminal models",
        "description" : "Returns the payment terminal models that merchant account identified in the path has access to. The response includes the terminal model ID, which can be used as a query parameter when getting a list of terminals or a list of products for ordering.\n\nTo make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Terminal ordering read\n* Management API—Terminal ordering read and write",
        "operationId" : "get-merchants-merchantId-terminalModels",
        "x-groupName" : "Terminal orders - merchant level",
        "x-sortIndex" : 1,
        "x-methodName" : "listTerminalModels",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "success" : {
                    "$ref" : "#/components/examples/get-merchants-merchantId-terminalModels-success-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/TerminalModelsResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/merchants/{merchantId}/terminalOrders" : {
      "get" : {
        "tags" : [
          "Terminal orders - merchant level"
        ],
        "summary" : "Get a list of orders",
        "description" : "Returns a list of terminal products orders for the merchant account identified in the path.\n\nTo make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Terminal ordering read\n* Management API—Terminal ordering read and write",
        "operationId" : "get-merchants-merchantId-terminalOrders",
        "x-groupName" : "Terminal orders - merchant level",
        "x-sortIndex" : 7,
        "x-methodName" : "listOrders",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "Your purchase order number.",
            "name" : "customerOrderReference",
            "in" : "query",
            "required" : false,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The order status. Possible values (not case-sensitive): Placed, Confirmed, Cancelled, Shipped, Delivered.",
            "name" : "status",
            "in" : "query",
            "required" : false,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The number of orders to skip.",
            "name" : "offset",
            "in" : "query",
            "required" : false,
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          },
          {
            "description" : "The number of orders to return.",
            "name" : "limit",
            "in" : "query",
            "required" : false,
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "success" : {
                    "$ref" : "#/components/examples/get-merchants-merchantId-terminalOrders-success-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/TerminalOrdersResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "post" : {
        "tags" : [
          "Terminal orders - merchant level"
        ],
        "summary" : "Create an order",
        "description" : "Creates an order for payment terminal products for the merchant account identified in the path.\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Terminal ordering read and write\n>Requests to the Management API test endpoint do not create actual orders for test terminals. To order test terminals, you need to [submit a sales order](https://docs.adyen.com/point-of-sale/managing-terminals/order-terminals/#sales-order-steps) in your Customer Area.",
        "operationId" : "post-merchants-merchantId-terminalOrders",
        "x-groupName" : "Terminal orders - merchant level",
        "x-sortIndex" : 6,
        "x-methodName" : "createOrder",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "create-order" : {
                  "$ref" : "#/components/examples/post-merchants-merchantId-terminalOrders-create-order"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/TerminalOrderRequest"
              }
            }
          }
        },
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "create-order" : {
                    "$ref" : "#/components/examples/post-merchants-merchantId-terminalOrders-create-order-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/TerminalOrder"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/merchants/{merchantId}/terminalOrders/{orderId}" : {
      "get" : {
        "tags" : [
          "Terminal orders - merchant level"
        ],
        "summary" : "Get an order",
        "description" : "Returns the details of the terminal products order identified in the path.\n\nTo make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Terminal ordering read\n* Management API—Terminal ordering read and write",
        "operationId" : "get-merchants-merchantId-terminalOrders-orderId",
        "x-groupName" : "Terminal orders - merchant level",
        "x-sortIndex" : 8,
        "x-methodName" : "getOrder",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The unique identifier of the order.",
            "name" : "orderId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "success" : {
                    "$ref" : "#/components/examples/get-merchants-merchantId-terminalOrders-orderId-success-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/TerminalOrder"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "patch" : {
        "tags" : [
          "Terminal orders - merchant level"
        ],
        "summary" : "Update an order",
        "description" : "Updates the terminal products order identified in the path.\nUpdating is only possible while the order has the status **Placed**.\n\nThe request body only needs to contain what you want to change. \nHowever, to update the products in the `items` array, you must provide the entire array. For example, if the array has three items:\n To remove one item, the array must include the remaining two items. Or to add one item, the array must include all four items.\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Terminal ordering read and write",
        "operationId" : "patch-merchants-merchantId-terminalOrders-orderId",
        "x-groupName" : "Terminal orders - merchant level",
        "x-sortIndex" : 9,
        "x-methodName" : "updateOrder",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "update-order" : {
                  "$ref" : "#/components/examples/patch-merchants-merchantId-terminalOrders-orderId-update-order"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/TerminalOrderRequest"
              }
            }
          }
        },
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The unique identifier of the order.",
            "name" : "orderId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "update-order" : {
                    "$ref" : "#/components/examples/patch-merchants-merchantId-terminalOrders-orderId-update-order-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/TerminalOrder"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/merchants/{merchantId}/terminalOrders/{orderId}/cancel" : {
      "post" : {
        "tags" : [
          "Terminal orders - merchant level"
        ],
        "summary" : "Cancel an order",
        "description" : "Cancels the terminal products order identified in the path.\nCancelling is only possible while the order has the status **Placed**.\nTo cancel an order, make a POST call without a request body. The response returns the full order details, but with the status changed to **Cancelled**.\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Terminal ordering read and write",
        "operationId" : "post-merchants-merchantId-terminalOrders-orderId-cancel",
        "x-groupName" : "Terminal orders - merchant level",
        "x-sortIndex" : 10,
        "x-methodName" : "cancelOrder",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The unique identifier of the order.",
            "name" : "orderId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "cancel-order" : {
                    "$ref" : "#/components/examples/post-merchants-merchantId-terminalOrders-orderId-cancel-cancel-order-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/TerminalOrder"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/merchants/{merchantId}/terminalProducts" : {
      "get" : {
        "tags" : [
          "Terminal orders - merchant level"
        ],
        "summary" : "Get a list of terminal products",
        "description" : "Returns a country-specific list of payment terminal packages and parts that the merchant account identified in the path has access to.\n\nTo make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Terminal ordering read\n* Management API—Terminal ordering read and write",
        "operationId" : "get-merchants-merchantId-terminalProducts",
        "x-groupName" : "Terminal orders - merchant level",
        "x-sortIndex" : 2,
        "x-methodName" : "listTerminalProducts",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The country to return products for, in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format. For example, **US**",
            "name" : "country",
            "in" : "query",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The terminal model to return products for. Use the ID returned in the [GET `/terminalModels`](https://docs.adyen.com/api-explorer/#/ManagementService/latest/get/merchants/{merchantId}/terminalModels) response. For example, **Verifone.M400**",
            "name" : "terminalModelId",
            "in" : "query",
            "required" : false,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The number of products to skip.",
            "name" : "offset",
            "in" : "query",
            "required" : false,
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          },
          {
            "description" : "The number of products to return.",
            "name" : "limit",
            "in" : "query",
            "required" : false,
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "success" : {
                    "$ref" : "#/components/examples/get-merchants-merchantId-terminalProducts-success-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/TerminalProductsResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/merchants/{merchantId}/terminalSettings" : {
      "get" : {
        "tags" : [
          "Terminal settings - merchant level"
        ],
        "summary" : "Get terminal settings",
        "description" : "Returns the payment terminal settings that are configured for the merchant account identified in the path. These settings apply to all terminals under the merchant account unless different values are configured at a lower level (store or individual terminal).\n\nTo make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Terminal settings read\n* Management API—Terminal settings read and write",
        "operationId" : "get-merchants-merchantId-terminalSettings",
        "x-groupName" : "Terminal settings - merchant level",
        "x-sortIndex" : 1,
        "x-methodName" : "getTerminalSettings",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "success" : {
                    "$ref" : "#/components/examples/get-merchants-merchantId-terminalSettings-success-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/TerminalSettings"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "patch" : {
        "tags" : [
          "Terminal settings - merchant level"
        ],
        "summary" : "Update terminal settings",
        "description" : "Updates payment terminal settings for the merchant account identified in the path.\nThese settings apply to all terminals under the merchant account, unless different values are configured at a lower level (store or individual terminal).\n\n* To change a parameter value, include the full object that contains the parameter, even if you don't want to change all parameters in the object.\n* To restore a parameter value inherited from a higher level, include the full object that contains the parameter, and specify an empty value for the parameter or omit the parameter.\n* Objects that are not included in the request are not updated.\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Terminal settings read and write",
        "operationId" : "patch-merchants-merchantId-terminalSettings",
        "x-groupName" : "Terminal settings - merchant level",
        "x-sortIndex" : 3,
        "x-methodName" : "updateTerminalSettings",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "add-eap-peap-and-psk-wifi-profiles" : {
                  "$ref" : "#/components/examples/patch-merchants-merchantId-terminalSettings-add-eap-peap-and-psk-wifi-profiles"
                },
                "add-eap-tls-wifi-profile" : {
                  "$ref" : "#/components/examples/patch-merchants-merchantId-terminalSettings-add-eap-tls-wifi-profile"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/TerminalSettings"
              }
            }
          }
        },
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "add-eap-peap-and-psk-wifi-profiles" : {
                    "$ref" : "#/components/examples/patch-merchants-merchantId-terminalSettings-add-eap-peap-and-psk-wifi-profiles-200"
                  },
                  "add-eap-tls-wifi-profile" : {
                    "$ref" : "#/components/examples/patch-merchants-merchantId-terminalSettings-add-eap-tls-wifi-profile-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/TerminalSettings"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/merchants/{merchantId}/users" : {
      "get" : {
        "tags" : [
          "Users - merchant level"
        ],
        "summary" : "Get a list of users",
        "description" : "Returns a list of users associated with the `merchantId` specified in the path.\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Users read and write\n",
        "operationId" : "get-merchants-merchantId-users",
        "x-groupName" : "Users - merchant level",
        "x-sortIndex" : 0,
        "x-methodName" : "listUsers",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "Unique identifier of the merchant.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The number of the page to fetch.",
            "name" : "pageNumber",
            "in" : "query",
            "required" : false,
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          },
          {
            "description" : "The number of items to have on a page. Maximum value is **100**. The default is **10** items on a page.",
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          },
          {
            "description" : "The partial or complete username to select all users that match.",
            "name" : "username",
            "in" : "query",
            "required" : false,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListMerchantUsersResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "post" : {
        "tags" : [
          "Users - merchant level"
        ],
        "summary" : "Create a new user",
        "description" : "Creates a user for the `merchantId` specified in the path.\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Users read and write\n",
        "operationId" : "post-merchants-merchantId-users",
        "x-groupName" : "Users - merchant level",
        "x-sortIndex" : 0,
        "x-methodName" : "createNewUser",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "create-user" : {
                  "$ref" : "#/components/examples/post-merchants-merchantId-users-create-user"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/CreateMerchantUserRequest"
              }
            }
          }
        },
        "parameters" : [
          {
            "description" : "Unique identifier of the merchant.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "create-user" : {
                    "$ref" : "#/components/examples/post-merchants-merchantId-users-create-user-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/CreateUserResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/merchants/{merchantId}/users/{userId}" : {
      "get" : {
        "tags" : [
          "Users - merchant level"
        ],
        "summary" : "Get user details",
        "description" : "Returns user details for the `userId` and the `merchantId` specified in the path.\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Users read and write\n",
        "operationId" : "get-merchants-merchantId-users-userId",
        "x-groupName" : "Users - merchant level",
        "x-sortIndex" : 0,
        "x-methodName" : "getUserDetails",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "Unique identifier of the merchant.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "Unique identifier of the user.",
            "name" : "userId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "patch" : {
        "tags" : [
          "Users - merchant level"
        ],
        "summary" : "Update a user",
        "description" : "Updates user details for the `userId` and the `merchantId` specified in the path.\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Users read and write\n",
        "operationId" : "patch-merchants-merchantId-users-userId",
        "x-groupName" : "Users - merchant level",
        "x-sortIndex" : 0,
        "x-methodName" : "updateUser",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateMerchantUserRequest"
              }
            }
          }
        },
        "parameters" : [
          {
            "description" : "Unique identifier of the merchant.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "Unique identifier of the user.",
            "name" : "userId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/merchants/{merchantId}/webhooks" : {
      "get" : {
        "tags" : [
          "Webhooks - merchant level"
        ],
        "summary" : "List all webhooks",
        "description" : "Lists all webhook configurations for the merchant account.\n\nTo make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Webhooks read\n* Management API—Webhooks read and write",
        "operationId" : "get-merchants-merchantId-webhooks",
        "x-groupName" : "Webhooks - merchant level",
        "x-sortIndex" : 2,
        "x-methodName" : "listAllWebhooks",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The number of the page to fetch.",
            "name" : "pageNumber",
            "in" : "query",
            "required" : false,
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          },
          {
            "description" : "The number of items to have on a page, maximum 100. The default is 10 items on a page.",
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "get-merchant-webhooks" : {
                    "$ref" : "#/components/examples/get-merchants-merchantId-webhooks-get-merchant-webhooks-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/ListWebhooksResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "post" : {
        "tags" : [
          "Webhooks - merchant level"
        ],
        "summary" : "Set up a webhook",
        "description" : "Subscribe to receive webhook notifications about events related to your merchant account. You can add basic authentication to make sure the data is secure.\n\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Webhooks read and write",
        "operationId" : "post-merchants-merchantId-webhooks",
        "x-groupName" : "Webhooks - merchant level",
        "x-sortIndex" : 1,
        "x-methodName" : "setUpWebhook",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "post-merchant-webhook" : {
                  "$ref" : "#/components/examples/post-merchants-merchantId-webhooks-post-merchant-webhook"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/CreateMerchantWebhookRequest"
              }
            }
          }
        },
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "post-merchant-webhook" : {
                    "$ref" : "#/components/examples/post-merchants-merchantId-webhooks-post-merchant-webhook-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Webhook"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/merchants/{merchantId}/webhooks/{webhookId}" : {
      "delete" : {
        "tags" : [
          "Webhooks - merchant level"
        ],
        "summary" : "Remove a webhook",
        "description" : "Remove the configuration for the webhook identified in the path.\n\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Webhooks read and write",
        "operationId" : "delete-merchants-merchantId-webhooks-webhookId",
        "x-groupName" : "Webhooks - merchant level",
        "x-sortIndex" : 5,
        "x-methodName" : "removeWebhook",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "Unique identifier of the webhook configuration.",
            "name" : "webhookId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "204" : {
            "description" : "No Content - look at the actual response code for the status of the request. "
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "get" : {
        "tags" : [
          "Webhooks - merchant level"
        ],
        "summary" : "Get a webhook",
        "description" : "Returns the configuration for the webhook identified in the path.\n\nTo make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Webhooks read\n* Management API—Webhooks read and write",
        "operationId" : "get-merchants-merchantId-webhooks-webhookId",
        "x-groupName" : "Webhooks - merchant level",
        "x-sortIndex" : 3,
        "x-methodName" : "getWebhook",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "Unique identifier of the webhook configuration.",
            "name" : "webhookId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "get-merchant-webhook" : {
                    "$ref" : "#/components/examples/get-merchants-merchantId-webhooks-webhookId-get-merchant-webhook-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Webhook"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "patch" : {
        "tags" : [
          "Webhooks - merchant level"
        ],
        "summary" : "Update a webhook",
        "description" : "Make changes to the configuration of the webhook identified in the path. The request contains the new values you want to have in the webhook configuration. The response contains the full configuration for the webhook, which includes the new values from the request.\n\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Webhooks read and write",
        "operationId" : "patch-merchants-merchantId-webhooks-webhookId",
        "x-groupName" : "Webhooks - merchant level",
        "x-sortIndex" : 4,
        "x-methodName" : "updateWebhook",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "patch-merchant-webhook" : {
                  "$ref" : "#/components/examples/patch-merchants-merchantId-webhooks-webhookId-patch-merchant-webhook"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/UpdateMerchantWebhookRequest"
              }
            }
          }
        },
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "Unique identifier of the webhook configuration.",
            "name" : "webhookId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "patch-merchant-webhook" : {
                    "$ref" : "#/components/examples/patch-merchants-merchantId-webhooks-webhookId-patch-merchant-webhook-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Webhook"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/merchants/{merchantId}/webhooks/{webhookId}/generateHmac" : {
      "post" : {
        "tags" : [
          "Webhooks - merchant level"
        ],
        "summary" : "Generate an HMAC key",
        "description" : "Returns an [HMAC key](https://en.wikipedia.org/wiki/HMAC) for the webhook identified in the path. This key allows you to check the integrity and the origin of the notifications you receive.By creating an HMAC key, you start receiving [HMAC-signed notifications](https://docs.adyen.com/development-resources/webhooks/verify-hmac-signatures#enable-hmac-signatures) from Adyen. Find out more about how to [verify HMAC signatures](https://docs.adyen.com/development-resources/webhooks/verify-hmac-signatures).\n\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Webhooks read and write",
        "operationId" : "post-merchants-merchantId-webhooks-webhookId-generateHmac",
        "x-groupName" : "Webhooks - merchant level",
        "x-sortIndex" : 6,
        "x-methodName" : "generateHmacKey",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "name" : "webhookId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "post-merchant-webhook-generateHmac" : {
                    "$ref" : "#/components/examples/post-merchants-merchantId-webhooks-webhookId-generateHmac-post-merchant-webhook-generateHmac-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/GenerateHmacKeyResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/merchants/{merchantId}/webhooks/{webhookId}/test" : {
      "post" : {
        "tags" : [
          "Webhooks - merchant level"
        ],
        "summary" : "Test a webhook",
        "description" : "Sends sample notifications to test if the webhook is set up correctly.\n\nWe send four test notifications for each event code you choose. They cover success and failure scenarios for the hard-coded currencies EUR and GBP, regardless of the currencies configured in the merchant accounts. For custom notifications, we only send the specified custom notification.\n\nThe response describes the result of the test. The `status` field tells you if the test was successful or not. You can use the other fields to troubleshoot unsuccessful tests.\n\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Webhooks read and write",
        "operationId" : "post-merchants-merchantId-webhooks-webhookId-test",
        "x-groupName" : "Webhooks - merchant level",
        "x-sortIndex" : 7,
        "x-methodName" : "testWebhook",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "post-merchant-webhook-test" : {
                  "$ref" : "#/components/examples/post-merchants-merchantId-webhooks-webhookId-test-post-merchant-webhook-test"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/TestWebhookRequest"
              }
            }
          }
        },
        "parameters" : [
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "Unique identifier of the webhook configuration.",
            "name" : "webhookId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "post-merchant-webhook-test" : {
                    "$ref" : "#/components/examples/post-merchants-merchantId-webhooks-webhookId-test-post-merchant-webhook-test-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/TestWebhookResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "204" : {
            "description" : "No Content - the request has been successfully processed, but there is no additional content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/stores" : {
      "get" : {
        "tags" : [
          "Account - store level"
        ],
        "summary" : "Get a list of stores",
        "description" : "Returns a list of stores. The list is grouped into pages as defined by the query parameters.\n\nTo make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Stores read\n* Management API—Stores read and write",
        "operationId" : "get-stores",
        "x-groupName" : "Account - store level",
        "x-sortIndex" : 4,
        "x-methodName" : "listStores",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The number of the page to fetch.",
            "name" : "pageNumber",
            "in" : "query",
            "required" : false,
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          },
          {
            "description" : "The number of items to have on a page, maximum 100. The default is 10 items on a page.",
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          },
          {
            "description" : "The reference of the store.",
            "name" : "reference",
            "in" : "query",
            "required" : false,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The unique identifier of the merchant account.",
            "name" : "merchantId",
            "in" : "query",
            "required" : false,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "success" : {
                    "$ref" : "#/components/examples/get-stores-success-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/ListStoresResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "post" : {
        "tags" : [
          "Account - store level"
        ],
        "summary" : "Create a store",
        "description" : "Creates a store for the merchant account specified in the request.\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Stores read and write",
        "operationId" : "post-stores",
        "x-groupName" : "Account - store level",
        "x-sortIndex" : 5,
        "x-methodName" : "createStore",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "post-stores" : {
                  "$ref" : "#/components/examples/post-stores-post-stores"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/StoreCreationWithMerchantCodeRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "post-stores" : {
                    "$ref" : "#/components/examples/post-stores-post-stores-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Store"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/stores/{storeId}" : {
      "get" : {
        "tags" : [
          "Account - store level"
        ],
        "summary" : "Get a store",
        "description" : "Returns the details of the store identified in the path.\n\nTo make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Stores read\n* Management API—Stores read and write",
        "operationId" : "get-stores-storeId",
        "x-groupName" : "Account - store level",
        "x-sortIndex" : 6,
        "x-methodName" : "getStoreById",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the store.",
            "name" : "storeId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "success" : {
                    "$ref" : "#/components/examples/get-stores-storeId-success-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Store"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "patch" : {
        "tags" : [
          "Account - store level"
        ],
        "summary" : "Update a store",
        "description" : "Updates the store identified in the path.\nYou can only update some store parameters.\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Stores read and write",
        "operationId" : "patch-stores-storeId",
        "x-groupName" : "Account - store level",
        "x-sortIndex" : 7,
        "x-methodName" : "updateStoreById",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "patch-stores" : {
                  "$ref" : "#/components/examples/patch-stores-storeId-patch-stores"
                },
                "patch-stores-splitConfiguration" : {
                  "$ref" : "#/components/examples/patch-stores-storeId-patch-stores-splitConfiguration"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/UpdateStoreRequest"
              }
            }
          }
        },
        "parameters" : [
          {
            "description" : "The unique identifier of the store.",
            "name" : "storeId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "patch-stores" : {
                    "$ref" : "#/components/examples/patch-stores-storeId-patch-stores-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Store"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/stores/{storeId}/terminalLogos" : {
      "get" : {
        "tags" : [
          "Terminal settings - store level"
        ],
        "summary" : "Get the terminal logo",
        "description" : "Returns the logo that is configured for a specific payment terminal model at the store identified in the path. \nThe logo is returned as a Base64-encoded string. You need to Base64-decode the string to get the actual image file. \nThis logo applies to all terminals of that model under the store unless a different logo is configured for an individual terminal.\n\nTo make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Terminal settings read\n* Management API—Terminal settings read and write",
        "operationId" : "get-stores-storeId-terminalLogos",
        "x-groupName" : "Terminal settings - store level",
        "x-sortIndex" : 2,
        "x-methodName" : "getTerminalLogoByStoreId",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the store.",
            "name" : "storeId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The terminal model. Possible values: E355, VX675WIFIBT, VX680, VX690, VX700, VX820, M400, MX925, P400Plus, UX300, UX410, V200cPlus, V240mPlus, V400cPlus, V400m, e280, e285, e285p, S1E, S1EL, S1F2, S1L, S1U, S7T.",
            "name" : "model",
            "in" : "query",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "success" : {
                    "$ref" : "#/components/examples/get-stores-storeId-terminalLogos-success-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Logo"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "patch" : {
        "tags" : [
          "Terminal settings - store level"
        ],
        "summary" : "Update the terminal logo",
        "description" : "Updates the logo that is configured for a specific payment terminal model at the store identified in the path. You can update the logo for only one terminal model at a time.\nThis logo applies to all terminals of the specified model under the store, unless a different logo is configured for an individual terminal. \n\n* To change the logo, specify the image file as a Base64-encoded string.\n* To restore the logo inherited from a higher level (merchant or company account), specify an empty logo value.\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Terminal settings read and write",
        "operationId" : "patch-stores-storeId-terminalLogos",
        "x-groupName" : "Terminal settings - store level",
        "x-sortIndex" : 4,
        "x-methodName" : "updateTerminalLogoByStoreId",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "remove-logo" : {
                  "$ref" : "#/components/examples/patch-stores-storeId-terminalLogos-remove-logo"
                },
                "upload-logo" : {
                  "$ref" : "#/components/examples/patch-stores-storeId-terminalLogos-upload-logo"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/Logo"
              }
            }
          }
        },
        "parameters" : [
          {
            "description" : "The unique identifier of the store.",
            "name" : "storeId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The terminal model. Possible values: E355, VX675WIFIBT, VX680, VX690, VX700, VX820, M400, MX925, P400Plus, UX300, UX410, V200cPlus, V240mPlus, V400cPlus, V400m, e280, e285, e285p, S1E, S1EL, S1F2, S1L, S1U, S7T.",
            "name" : "model",
            "in" : "query",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "remove-logo" : {
                    "$ref" : "#/components/examples/patch-stores-storeId-terminalLogos-remove-logo-200"
                  },
                  "upload-logo" : {
                    "$ref" : "#/components/examples/patch-stores-storeId-terminalLogos-upload-logo-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Logo"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/stores/{storeId}/terminalSettings" : {
      "get" : {
        "tags" : [
          "Terminal settings - store level"
        ],
        "summary" : "Get terminal settings",
        "description" : "Returns the payment terminal settings that are configured for the store identified in the path. These settings apply to all terminals under the store unless different values are configured for an individual terminal.\n\nTo make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Terminal settings read\n* Management API—Terminal settings read and write\n\nFor [sensitive terminal settings](https://docs.adyen.com/point-of-sale/automating-terminal-management/configure-terminals-api#sensitive-terminal-settings), your API credential must have the following role:\n* Management API—Terminal settings Advanced read and write",
        "operationId" : "get-stores-storeId-terminalSettings",
        "x-groupName" : "Terminal settings - store level",
        "x-sortIndex" : 1,
        "x-methodName" : "getTerminalSettingsByStoreId",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the store.",
            "name" : "storeId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "success" : {
                    "$ref" : "#/components/examples/get-stores-storeId-terminalSettings-success-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/TerminalSettings"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "patch" : {
        "tags" : [
          "Terminal settings - store level"
        ],
        "summary" : "Update terminal settings",
        "description" : "Updates payment terminal settings for the store identified in the path. These settings apply to all terminals under the store, unless different values are configured for an individual terminal.\n\n* To change a parameter value, include the full object that contains the parameter, even if you don't want to change all parameters in the object.\n* To restore a parameter value inherited from a higher level, include the full object that contains the parameter, and specify an empty value for the parameter or omit the parameter.\n* Objects that are not included in the request are not updated.\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Terminal settings read and write\n\nFor [sensitive terminal settings](https://docs.adyen.com/point-of-sale/automating-terminal-management/configure-terminals-api#sensitive-terminal-settings), your API credential must have the following role:\n* Management API—Terminal settings Advanced read and write",
        "operationId" : "patch-stores-storeId-terminalSettings",
        "x-groupName" : "Terminal settings - store level",
        "x-sortIndex" : 3,
        "x-methodName" : "updateTerminalSettingsByStoreId",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "add-eap-peap-and-psk-wifi-profiles" : {
                  "$ref" : "#/components/examples/patch-stores-storeId-terminalSettings-add-eap-peap-and-psk-wifi-profiles"
                },
                "add-eap-tls-wifi-profile" : {
                  "$ref" : "#/components/examples/patch-stores-storeId-terminalSettings-add-eap-tls-wifi-profile"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/TerminalSettings"
              }
            }
          }
        },
        "parameters" : [
          {
            "description" : "The unique identifier of the store.",
            "name" : "storeId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "add-eap-peap-and-psk-wifi-profiles" : {
                    "$ref" : "#/components/examples/patch-stores-storeId-terminalSettings-add-eap-peap-and-psk-wifi-profiles-200"
                  },
                  "add-eap-tls-wifi-profile" : {
                    "$ref" : "#/components/examples/patch-stores-storeId-terminalSettings-add-eap-tls-wifi-profile-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/TerminalSettings"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/terminals" : {
      "get" : {
        "tags" : [
          "Terminals - terminal level"
        ],
        "summary" : "Get a list of terminals",
        "description" : "Returns the payment terminals that the API credential has access to and that match the query parameters. \nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API — Terminal actions read",
        "operationId" : "get-terminals",
        "x-groupName" : "Terminals - terminal level",
        "x-sortIndex" : 1,
        "x-methodName" : "listTerminals",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "Returns terminals with an ID that contains the specified string. If present, other query parameters are ignored.",
            "name" : "searchQuery",
            "in" : "query",
            "required" : false,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "Returns one or more terminals associated with the one-time passwords specified in the request. If this query parameter is used, other query parameters are ignored.",
            "name" : "otpQuery",
            "in" : "query",
            "required" : false,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "Returns terminals located in the countries specified by their [two-letter country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).",
            "name" : "countries",
            "in" : "query",
            "required" : false,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "Returns terminals that belong to the merchant accounts specified by their unique merchant account ID.",
            "name" : "merchantIds",
            "in" : "query",
            "required" : false,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "Returns terminals that are assigned to the [stores](https://docs.adyen.com/api-explorer/#/ManagementService/latest/get/stores) specified by their unique store ID.",
            "name" : "storeIds",
            "in" : "query",
            "required" : false,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "Returns terminals of the [models](https://docs.adyen.com/api-explorer/#/ManagementService/latest/get/companies/{companyId}/terminalModels) specified in the format *brand.model*.",
            "name" : "brandModels",
            "in" : "query",
            "required" : false,
            "schema" : {
              "type" : "string"
            }
          },
          {
            "description" : "The number of the page to fetch.",
            "name" : "pageNumber",
            "in" : "query",
            "required" : false,
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          },
          {
            "description" : "The number of items to have on a page, maximum 100. The default is 20 items on a page.",
            "name" : "pageSize",
            "in" : "query",
            "required" : false,
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "success" : {
                    "$ref" : "#/components/examples/get-terminals-success-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/ListTerminalsResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/terminals/scheduleActions" : {
      "post" : {
        "tags" : [
          "Terminal actions - terminal level"
        ],
        "summary" : "Create a terminal action",
        "description" : "Schedules a [terminal action](https://docs.adyen.com/point-of-sale/automating-terminal-management/terminal-actions-api) by specifying the action and the terminals that the action must be applied to. \n\nThe following restrictions apply:\n* You can schedule only one action at a time. For example, to install a new app version and remove an old app version, you have to make two API requests. \n* The maximum number of terminals in a request is **100**. For example, to apply an action to 250 terminals, you have to divide the terminals over three API requests. \n* If there is an error with one or more terminal IDs in the request, the action is scheduled for none of the terminals. You need to fix the error and try again. \n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Terminal actions read and write",
        "operationId" : "post-terminals-scheduleActions",
        "x-groupName" : "Terminal actions - terminal level",
        "x-sortIndex" : 1,
        "x-methodName" : "createTerminalAction",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "install-app" : {
                  "$ref" : "#/components/examples/post-terminals-scheduleActions-install-app"
                },
                "uninstall-cert" : {
                  "$ref" : "#/components/examples/post-terminals-scheduleActions-uninstall-cert"
                },
                "verification-error" : {
                  "$ref" : "#/components/examples/post-terminals-scheduleActions-verification-error"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/ScheduleTerminalActionsRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "install-app" : {
                    "$ref" : "#/components/examples/post-terminals-scheduleActions-install-app-200"
                  },
                  "uninstall-cert" : {
                    "$ref" : "#/components/examples/post-terminals-scheduleActions-uninstall-cert-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/ScheduleTerminalActionsResponse"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "verification-error" : {
                    "$ref" : "#/components/examples/post-terminals-scheduleActions-verification-error-422"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/terminals/{terminalId}/reassign" : {
      "post" : {
        "tags" : [
          "Terminals - terminal level"
        ],
        "summary" : "Reassign a terminal",
        "description" : "Reassigns a payment terminal to a company account, merchant account, merchant account inventory, or a store.\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Assign Terminal",
        "x-addedInVersion" : "3",
        "operationId" : "post-terminals-terminalId-reassign",
        "x-groupName" : "Terminals - terminal level",
        "x-sortIndex" : 2,
        "x-methodName" : "reassignTerminal",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TerminalReassignmentRequest"
              }
            }
          }
        },
        "parameters" : [
          {
            "description" : "The unique identifier of the payment terminal.",
            "name" : "terminalId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "description" : "No Content - look at the actual response code for the status of the request. "
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/terminals/{terminalId}/terminalLogos" : {
      "get" : {
        "tags" : [
          "Terminal settings - terminal level"
        ],
        "summary" : "Get the terminal logo",
        "description" : "Returns the logo that is configured for the payment terminal identified in the path.\nThe logo is returned as a Base64-encoded string. You need to Base64-decode the string to get the actual image file.\n\nTo make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Terminal settings read\n* Management API—Terminal settings read and write",
        "operationId" : "get-terminals-terminalId-terminalLogos",
        "x-groupName" : "Terminal settings - terminal level",
        "x-sortIndex" : 4,
        "x-methodName" : "getTerminalLogo",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the payment terminal.",
            "name" : "terminalId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "success" : {
                    "$ref" : "#/components/examples/get-terminals-terminalId-terminalLogos-success-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Logo"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "patch" : {
        "tags" : [
          "Terminal settings - terminal level"
        ],
        "summary" : "Update the logo",
        "description" : "Updates the logo for the payment terminal identified in the path.\n\n* To change the logo, specify the image file as a Base64-encoded string.\n* To restore the logo inherited from a higher level (store, merchant account, or company account), specify an empty logo value.\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Terminal settings read and write",
        "operationId" : "patch-terminals-terminalId-terminalLogos",
        "x-groupName" : "Terminal settings - terminal level",
        "x-sortIndex" : 6,
        "x-methodName" : "updateLogo",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "remove-logo" : {
                  "$ref" : "#/components/examples/patch-terminals-terminalId-terminalLogos-remove-logo"
                },
                "upload-logo" : {
                  "$ref" : "#/components/examples/patch-terminals-terminalId-terminalLogos-upload-logo"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/Logo"
              }
            }
          }
        },
        "parameters" : [
          {
            "description" : "The unique identifier of the payment terminal.",
            "name" : "terminalId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "remove-logo" : {
                    "$ref" : "#/components/examples/patch-terminals-terminalId-terminalLogos-remove-logo-200"
                  },
                  "upload-logo" : {
                    "$ref" : "#/components/examples/patch-terminals-terminalId-terminalLogos-upload-logo-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Logo"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    },
    "/terminals/{terminalId}/terminalSettings" : {
      "get" : {
        "tags" : [
          "Terminal settings - terminal level"
        ],
        "summary" : "Get terminal settings",
        "description" : "Returns the settings that are configured for the payment terminal identified in the path.\n\nTo make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Terminal settings read\n* Management API—Terminal settings read and write\n\nFor [sensitive terminal settings](https://docs.adyen.com/point-of-sale/automating-terminal-management/configure-terminals-api#sensitive-terminal-settings), your API credential must have the following role:\n* Management API—Terminal settings Advanced read and write",
        "operationId" : "get-terminals-terminalId-terminalSettings",
        "x-groupName" : "Terminal settings - terminal level",
        "x-sortIndex" : 3,
        "x-methodName" : "getTerminalSettings",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "parameters" : [
          {
            "description" : "The unique identifier of the payment terminal.",
            "name" : "terminalId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "success" : {
                    "$ref" : "#/components/examples/get-terminals-terminalId-terminalSettings-success-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/TerminalSettings"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      },
      "patch" : {
        "tags" : [
          "Terminal settings - terminal level"
        ],
        "summary" : "Update terminal settings",
        "description" : "Updates the settings that are configured for the payment terminal identified in the path.\n\n* To change a parameter value, include the full object that contains the parameter, even if you don't want to change all parameters in the object.\n* To restore a parameter value inherited from a higher level, include the full object that contains the parameter, and specify an empty value for the parameter or omit the parameter.\n* Objects that are not included in the request are not updated.\n\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\n* Management API—Terminal settings read and write\n\nFor [sensitive terminal settings](https://docs.adyen.com/point-of-sale/automating-terminal-management/configure-terminals-api#sensitive-terminal-settings), your API credential must have the following role:\n* Management API—Terminal settings Advanced read and write",
        "operationId" : "patch-terminals-terminalId-terminalSettings",
        "x-groupName" : "Terminal settings - terminal level",
        "x-sortIndex" : 5,
        "x-methodName" : "updateTerminalSettings",
        "security" : [
          {
            "BasicAuth" : [
            ]
          },
          {
            "ApiKeyAuth" : [
            ]
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "add-eap-peap-and-psk-wifi-profiles" : {
                  "$ref" : "#/components/examples/patch-terminals-terminalId-terminalSettings-add-eap-peap-and-psk-wifi-profiles"
                },
                "add-eap-tls-wifi-profile" : {
                  "$ref" : "#/components/examples/patch-terminals-terminalId-terminalSettings-add-eap-tls-wifi-profile"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/TerminalSettings"
              }
            }
          }
        },
        "parameters" : [
          {
            "description" : "The unique identifier of the payment terminal.",
            "name" : "terminalId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          }
        ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "add-eap-peap-and-psk-wifi-profiles" : {
                    "$ref" : "#/components/examples/patch-terminals-terminalId-terminalSettings-add-eap-peap-and-psk-wifi-profiles-200"
                  },
                  "add-eap-tls-wifi-profile" : {
                    "$ref" : "#/components/examples/patch-terminals-terminalId-terminalSettings-add-eap-tls-wifi-profile-200"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/TerminalSettings"
                }
              }
            },
            "description" : "OK - the request has succeeded."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Bad Request - a problem reading or understanding the request."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unauthorized - authentication required."
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Forbidden - insufficient permissions to process the request."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Unprocessable Entity - a request validation error."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestServiceError"
                }
              }
            },
            "description" : "Internal Server Error - the server could not process the request."
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "AdditionalCommission" : {
        "properties" : {
          "balanceAccountId" : {
            "description" : "Unique identifier of the balance account to which the additional commission is booked.",
            "type" : "string"
          },
          "fixedAmount" : {
            "description" : "A fixed commission fee, in minor units.",
            "format" : "int64",
            "type" : "integer"
          },
          "variablePercentage" : {
            "description" : "A variable commission fee, in basis points.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "AdditionalSettings" : {
        "properties" : {
          "includeEventCodes" : {
            "description" : "Object containing list of event codes for which the notifcation will be sent. ",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "properties" : {
            "additionalProperties" : {
              "type" : "boolean"
            },
            "description" : "Object containing boolean key-value pairs. The key can be any [standard webhook additional setting](https://docs.adyen.com/development-resources/webhooks/additional-settings), and the value indicates if the setting is enabled.\nFor example, `captureDelayHours`: **true** means the standard notifications you get will contain the number of hours remaining until the payment will be captured.",
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "AdditionalSettingsResponse" : {
        "properties" : {
          "excludeEventCodes" : {
            "description" : "Object containing list of event codes for which the notifcation will not be sent. ",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "includeEventCodes" : {
            "description" : "Object containing list of event codes for which the notifcation will be sent. ",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "properties" : {
            "additionalProperties" : {
              "type" : "boolean"
            },
            "description" : "Object containing boolean key-value pairs. The key can be any [standard webhook additional setting](https://docs.adyen.com/development-resources/webhooks/additional-settings), and the value indicates if the setting is enabled.\nFor example, `captureDelayHours`: **true** means the standard notifications you get will contain the number of hours remaining until the payment will be captured.",
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "Address" : {
        "properties" : {
          "city" : {
            "description" : "The name of the city.",
            "type" : "string"
          },
          "companyName" : {
            "description" : "The name of the company.",
            "type" : "string"
          },
          "country" : {
            "description" : "The two-letter country code, in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format.",
            "type" : "string"
          },
          "postalCode" : {
            "description" : "The postal code.",
            "type" : "string"
          },
          "stateOrProvince" : {
            "description" : "The state or province as defined in [ISO 3166-2](https://www.iso.org/standard/72483.html). For example, **ON** for Ontario, Canada. \n\nApplicable for the following countries:\n- Australia\n- Brazil\n- Canada\n- India\n- Mexico\n- New Zealand\n- United States",
            "type" : "string"
          },
          "streetAddress" : {
            "description" : "The name of the street, and the house or building number.",
            "type" : "string"
          },
          "streetAddress2" : {
            "description" : "Additional address details, if any.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "AfterpayTouchInfo" : {
        "properties" : {
          "supportUrl" : {
            "description" : "Support Url",
            "type" : "string"
          }
        },
        "required" : [
          "supportUrl"
        ],
        "type" : "object"
      },
      "AllowedOrigin" : {
        "properties" : {
          "_links" : {
            "description" : "References to resources linked to the allowed origin.",
            "$ref" : "#/components/schemas/Links"
          },
          "domain" : {
            "description" : "Domain of the allowed origin.",
            "example" : "https://adyen.com",
            "type" : "string"
          },
          "id" : {
            "description" : "Unique identifier of the allowed origin.",
            "type" : "string"
          }
        },
        "required" : [
          "domain"
        ],
        "type" : "object"
      },
      "AllowedOriginsResponse" : {
        "properties" : {
          "data" : {
            "description" : "List of allowed origins.",
            "items" : {
              "$ref" : "#/components/schemas/AllowedOrigin"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "Amount" : {
        "properties" : {
          "currency" : {
            "description" : "The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).",
            "maxLength" : 3,
            "minLength" : 3,
            "type" : "string"
          },
          "value" : {
            "description" : "The amount of the transaction, in [minor units](https://docs.adyen.com/development-resources/currency-codes).",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [
          "value",
          "currency"
        ],
        "type" : "object"
      },
      "AndroidApp" : {
        "properties" : {
          "description" : {
            "description" : "The description that was provided when uploading the app. The description is not shown on the terminal.",
            "type" : "string"
          },
          "errorCode" : {
            "description" : "The error code of the app. It exists if the status is error or invalid.",
            "type" : "string"
          },
          "id" : {
            "description" : "The unique identifier of the app.",
            "type" : "string"
          },
          "label" : {
            "description" : "The app name that is shown on the terminal.",
            "type" : "string"
          },
          "packageName" : {
            "description" : "The package name that uniquely identifies the Android app.",
            "type" : "string"
          },
          "status" : {
            "description" : "The status of the app. Possible values: \n* `processing`: the app is being signed and converted to a format that the terminal can handle.\n* `error`: something went wrong. Check that the app matches the [requirements](https://docs.adyen.com/point-of-sale/android-terminals/app-requirements).\n* `invalid`: there is something wrong with the APK file of the app.\n* `ready`: the app has been signed and converted.\n* `archived`: the app is no longer available.",
            "type" : "string"
          },
          "versionCode" : {
            "description" : "The version number of the app.",
            "format" : "int32",
            "type" : "integer"
          },
          "versionName" : {
            "description" : "The app version number that is shown on the terminal.",
            "type" : "string"
          }
        },
        "required" : [
          "id",
          "status"
        ],
        "type" : "object"
      },
      "AndroidAppsResponse" : {
        "properties" : {
          "data" : {
            "description" : "Apps uploaded for Android payment terminals.",
            "items" : {
              "$ref" : "#/components/schemas/AndroidApp"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "AndroidCertificate" : {
        "properties" : {
          "description" : {
            "description" : "The description that was provided when uploading the certificate.",
            "type" : "string"
          },
          "extension" : {
            "description" : "The file format of the certificate, as indicated by the file extension. For example, **.cert** or **.pem**.",
            "type" : "string"
          },
          "id" : {
            "description" : "The unique identifier of the certificate.",
            "type" : "string"
          },
          "name" : {
            "description" : "The file name of the certificate. For example, **mycert**.",
            "type" : "string"
          },
          "notAfter" : {
            "description" : "The date when the certificate stops to be valid.",
            "format" : "date-time",
            "type" : "string"
          },
          "notBefore" : {
            "description" : "The date when the certificate starts to be valid.",
            "format" : "date-time",
            "type" : "string"
          },
          "status" : {
            "description" : "The status of the certificate.",
            "type" : "string"
          }
        },
        "required" : [
          "id"
        ],
        "type" : "object"
      },
      "AndroidCertificatesResponse" : {
        "properties" : {
          "data" : {
            "description" : "Uploaded Android certificates for Android payment terminals.",
            "items" : {
              "$ref" : "#/components/schemas/AndroidCertificate"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "ApiCredential" : {
        "properties" : {
          "_links" : {
            "description" : "References to resources linked to the API credential.",
            "$ref" : "#/components/schemas/ApiCredentialLinks"
          },
          "active" : {
            "description" : "Indicates if the API credential is enabled. Must be set to **true** to use the credential in your integration.",
            "type" : "boolean"
          },
          "allowedIpAddresses" : {
            "description" : "List of IP addresses from which your client can make requests.\n\nIf the list is empty, we allow requests from any IP.\nIf the list is not empty and we get a request from an IP which is not on the list, you get a security error.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "allowedOrigins" : {
            "description" : "List containing the [allowed origins](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) linked to the API credential.",
            "items" : {
              "$ref" : "#/components/schemas/AllowedOrigin"
            },
            "type" : "array"
          },
          "clientKey" : {
            "description" : "Public key used for [client-side authentication](https://docs.adyen.com/development-resources/client-side-authentication). The client key is required for Drop-in and Components integrations.",
            "type" : "string"
          },
          "description" : {
            "description" : "Description of the API credential.",
            "maxLength" : 50,
            "type" : "string"
          },
          "id" : {
            "description" : "Unique identifier of the API credential.",
            "type" : "string"
          },
          "roles" : {
            "description" : "List of [roles](https://docs.adyen.com/development-resources/api-credentials#roles-1) for the API credential.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "username" : {
            "description" : "The name of the [API credential](https://docs.adyen.com/development-resources/api-credentials), for example **ws@Company.TestCompany**.",
            "type" : "string"
          }
        },
        "required" : [
          "id",
          "username",
          "clientKey",
          "allowedIpAddresses",
          "roles",
          "active"
        ],
        "type" : "object"
      },
      "ApiCredentialLinks" : {
        "properties" : {
          "allowedOrigins" : {
            "description" : "List of allowed origins.",
            "$ref" : "#/components/schemas/LinksElement"
          },
          "company" : {
            "description" : "Company account that the API credential is linked to. Only present for company-level webhooks.",
            "$ref" : "#/components/schemas/LinksElement"
          },
          "generateApiKey" : {
            "description" : "Generates a new API key. When you generate a new one, the existing key remains valid for 24 hours. ",
            "$ref" : "#/components/schemas/LinksElement"
          },
          "generateClientKey" : {
            "description" : "Generates a new client key, used to authenticate client-side requests. When you generate a new one, the existing key remains valid for 24 hours.",
            "$ref" : "#/components/schemas/LinksElement"
          },
          "merchant" : {
            "description" : "The merchant account that the API credential is linked to. Only present for merchant-level API credentials.",
            "$ref" : "#/components/schemas/LinksElement"
          },
          "self" : {
            "description" : "Link to the resource itself.",
            "$ref" : "#/components/schemas/LinksElement"
          }
        },
        "required" : [
          "self"
        ],
        "type" : "object"
      },
      "ApplePayInfo" : {
        "properties" : {
          "domains" : {
            "description" : "The list of merchant domains. Maximum: 99 domains per request.\n\nFor more information, see [Apple Pay documentation](https://docs.adyen.com/payment-methods/apple-pay/web-drop-in?tab=adyen-certificate-live_1#going-live).",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [
          "domains"
        ],
        "type" : "object"
      },
      "BcmcInfo" : {
        "properties" : {
          "enableBcmcMobile" : {
            "description" : "Indicates if [Bancontact mobile](https://docs.adyen.com/payment-methods/bancontact/bancontact-mobile) is enabled.",
            "type" : "boolean"
          },
          "transactionDescription" : {
            "description" : "Information regarding the transaction description.",
            "$ref" : "#/components/schemas/TransactionDescriptionInfo"
          }
        },
        "type" : "object"
      },
      "BillingEntitiesResponse" : {
        "properties" : {
          "data" : {
            "description" : "List of legal entities that can be used for the billing of orders.",
            "items" : {
              "$ref" : "#/components/schemas/BillingEntity"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "BillingEntity" : {
        "properties" : {
          "address" : {
            "description" : "The address details of the billing entity.",
            "$ref" : "#/components/schemas/Address"
          },
          "email" : {
            "description" : "The email address of the billing entity.",
            "type" : "string"
          },
          "id" : {
            "description" : "The unique identifier of the billing entity, for use as `billingEntityId` when creating an order.",
            "type" : "string"
          },
          "name" : {
            "description" : "The unique name of the billing entity.",
            "type" : "string"
          },
          "taxId" : {
            "description" : "The tax number of the billing entity.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "CardholderReceipt" : {
        "properties" : {
          "headerForAuthorizedReceipt" : {
            "description" : "A custom header to show on the shopper receipt for an authorised transaction. Allows one or two comma-separated header lines, and blank lines. For example, `header,header,filler`",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "CartesBancairesInfo" : {
        "properties" : {
          "siret" : {
            "description" : "Cartes Bancaires SIRET. Format: 14 digits.",
            "type" : "string"
          },
          "transactionDescription" : {
            "description" : "Information regarding the transaction description.",
            "$ref" : "#/components/schemas/TransactionDescriptionInfo"
          }
        },
        "required" : [
          "siret"
        ],
        "type" : "object"
      },
      "ClearpayInfo" : {
        "properties" : {
          "supportUrl" : {
            "description" : "Support Url",
            "type" : "string"
          }
        },
        "required" : [
          "supportUrl"
        ],
        "type" : "object"
      },
      "Commission" : {
        "properties" : {
          "fixedAmount" : {
            "description" : "A fixed commission fee, in minor units.",
            "format" : "int64",
            "type" : "integer"
          },
          "variablePercentage" : {
            "description" : "A variable commission fee, in basis points.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "Company" : {
        "properties" : {
          "_links" : {
            "description" : "References to resources connected with this company.",
            "$ref" : "#/components/schemas/CompanyLinks"
          },
          "dataCenters" : {
            "description" : "List of available data centers.\n\nAdyen has several data centers around the world.In the URL that you use for making API requests, we recommend you use the live URL prefix from the data center closest to your shoppers.",
            "items" : {
              "$ref" : "#/components/schemas/DataCenter"
            },
            "type" : "array"
          },
          "description" : {
            "description" : "Your description for the company account, maximum 300 characters",
            "type" : "string"
          },
          "id" : {
            "description" : "The unique identifier of the company account.",
            "type" : "string"
          },
          "name" : {
            "description" : "The legal or trading name of the company.",
            "type" : "string"
          },
          "reference" : {
            "description" : "Your reference to the account",
            "type" : "string"
          },
          "status" : {
            "description" : "The status of the company account.\n\nPossible values:\n\n* **Active**: Users can log in. Processing and payout capabilities depend on the status of the merchant account.\n* **Inactive**: Users can log in. Payment processing and payouts are disabled.\n* **Closed**: The company account is closed and this cannot be reversed. Users cannot log in. Payment processing and payouts are disabled.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "CompanyApiCredential" : {
        "properties" : {
          "_links" : {
            "description" : "References to resources linked to the API credential.",
            "$ref" : "#/components/schemas/ApiCredentialLinks"
          },
          "active" : {
            "description" : "Indicates if the API credential is enabled. Must be set to **true** to use the credential in your integration.",
            "type" : "boolean"
          },
          "allowedIpAddresses" : {
            "description" : "List of IP addresses from which your client can make requests.\n\nIf the list is empty, we allow requests from any IP.\nIf the list is not empty and we get a request from an IP which is not on the list, you get a security error.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "allowedOrigins" : {
            "description" : "List containing the [allowed origins](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) linked to the API credential.",
            "items" : {
              "$ref" : "#/components/schemas/AllowedOrigin"
            },
            "type" : "array"
          },
          "associatedMerchantAccounts" : {
            "description" : "List of merchant accounts that the API credential has explicit access to. \n If the credential has access to a company, this implies access to all merchant accounts and no merchants for that company will be included.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "clientKey" : {
            "description" : "Public key used for [client-side authentication](https://docs.adyen.com/development-resources/client-side-authentication). The client key is required for Drop-in and Components integrations.",
            "type" : "string"
          },
          "description" : {
            "description" : "Description of the API credential.",
            "maxLength" : 50,
            "type" : "string"
          },
          "id" : {
            "description" : "Unique identifier of the API credential.",
            "type" : "string"
          },
          "roles" : {
            "description" : "List of [roles](https://docs.adyen.com/development-resources/api-credentials#roles-1) for the API credential.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "username" : {
            "description" : "The name of the [API credential](https://docs.adyen.com/development-resources/api-credentials), for example **ws@Company.TestCompany**.",
            "type" : "string"
          }
        },
        "required" : [
          "id",
          "username",
          "clientKey",
          "allowedIpAddresses",
          "roles",
          "active"
        ],
        "type" : "object"
      },
      "CompanyLinks" : {
        "properties" : {
          "apiCredentials" : {
            "$ref" : "#/components/schemas/LinksElement"
          },
          "self" : {
            "description" : "Link to the resource itself.",
            "$ref" : "#/components/schemas/LinksElement"
          },
          "users" : {
            "$ref" : "#/components/schemas/LinksElement"
          },
          "webhooks" : {
            "$ref" : "#/components/schemas/LinksElement"
          }
        },
        "required" : [
          "self"
        ],
        "type" : "object"
      },
      "CompanyUser" : {
        "properties" : {
          "_links" : {
            "description" : "References to resources connected with this user.",
            "$ref" : "#/components/schemas/Links"
          },
          "accountGroups" : {
            "description" : "The list of [account groups](https://docs.adyen.com/account/account-structure#account-groups) associated with this user.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "active" : {
            "description" : "Indicates whether this user is active.",
            "type" : "boolean"
          },
          "apps" : {
            "description" : "Set of apps available to this user",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "associatedMerchantAccounts" : {
            "description" : "The list of [merchant accounts](https://docs.adyen.com/account/account-structure#merchant-accounts) associated with this user.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "email" : {
            "description" : "The email address of the user.",
            "type" : "string"
          },
          "id" : {
            "description" : "The unique identifier of the user.",
            "type" : "string"
          },
          "name" : {
            "description" : "The user's full name.",
            "$ref" : "#/components/schemas/Name"
          },
          "roles" : {
            "description" : "The list of [roles](https://docs.adyen.com/account/user-roles) for this user.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "timeZoneCode" : {
            "description" : "The [tz database name](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) of the time zone of the user. For example, **Europe/Amsterdam**.",
            "type" : "string"
          },
          "username" : {
            "description" : "The username for this user.",
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string"
          }
        },
        "required" : [
          "id",
          "email",
          "timeZoneCode",
          "username",
          "roles"
        ],
        "type" : "object"
      },
      "Configuration" : {
        "properties" : {
          "brand" : {
            "description" : "Payment method, like **eftpos_australia** or **mc**. See the [possible values](https://docs.adyen.com/development-resources/paymentmethodvariant#management-api). ",
            "type" : "string"
          },
          "currencies" : {
            "description" : "Currency, and surcharge percentage or amount.",
            "items" : {
              "$ref" : "#/components/schemas/Currency"
            },
            "type" : "array"
          },
          "sources" : {
            "description" : "Funding source. Possible values:\n* **Credit**\n* **Debit**",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [
          "brand",
          "currencies"
        ],
        "type" : "object"
      },
      "Connectivity" : {
        "properties" : {
          "simcardStatus" : {
            "description" : "Indicates the status of the SIM card in the payment terminal. Can be updated and received only at terminal level, and only for models that support cellular connectivity.\n\nPossible values:\n* **ACTIVATED**: the SIM card is activated. Cellular connectivity may still need to be enabled on the terminal itself, in the **Network** settings.\n* **INVENTORY**: the SIM card is not activated. The terminal can't use cellular connectivity.",
            "enum" : [
              "ACTIVATED",
              "INVENTORY"
            ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Contact" : {
        "properties" : {
          "email" : {
            "description" : "The individual's email address.",
            "type" : "string"
          },
          "firstName" : {
            "description" : "The individual's first name.",
            "type" : "string"
          },
          "infix" : {
            "description" : "The infix in the individual's name, if any.",
            "type" : "string"
          },
          "lastName" : {
            "description" : "The individual's last name.",
            "type" : "string"
          },
          "phoneNumber" : {
            "description" : "The individual's phone number, specified as 10-14 digits with an optional `+` prefix.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "CreateAllowedOriginRequest" : {
        "properties" : {
          "_links" : {
            "description" : "References to resources linked to the allowed origin.",
            "$ref" : "#/components/schemas/Links"
          },
          "domain" : {
            "description" : "Domain of the allowed origin.",
            "example" : "https://adyen.com",
            "type" : "string"
          },
          "id" : {
            "description" : "Unique identifier of the allowed origin.",
            "type" : "string"
          }
        },
        "required" : [
          "domain"
        ],
        "type" : "object"
      },
      "CreateApiCredentialResponse" : {
        "properties" : {
          "_links" : {
            "description" : "References to resources linked to the API credential.",
            "$ref" : "#/components/schemas/ApiCredentialLinks"
          },
          "active" : {
            "description" : "Indicates if the API credential is enabled. Must be set to **true** to use the credential in your integration.",
            "type" : "boolean"
          },
          "allowedIpAddresses" : {
            "description" : "List of IP addresses from which your client can make requests.\n\nIf the list is empty, we allow requests from any IP.\nIf the list is not empty and we get a request from an IP which is not on the list, you get a security error.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "allowedOrigins" : {
            "description" : "List containing the [allowed origins](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) linked to the API credential.",
            "items" : {
              "$ref" : "#/components/schemas/AllowedOrigin"
            },
            "type" : "array"
          },
          "apiKey" : {
            "description" : "The API key for the API credential that was created.",
            "type" : "string"
          },
          "clientKey" : {
            "description" : "Public key used for [client-side authentication](https://docs.adyen.com/development-resources/client-side-authentication). The client key is required for Drop-in and Components integrations.",
            "type" : "string"
          },
          "description" : {
            "description" : "Description of the API credential.",
            "maxLength" : 50,
            "type" : "string"
          },
          "id" : {
            "description" : "Unique identifier of the API credential.",
            "type" : "string"
          },
          "password" : {
            "description" : "The password for the API credential that was created.",
            "type" : "string"
          },
          "roles" : {
            "description" : "List of [roles](https://docs.adyen.com/development-resources/api-credentials#roles-1) for the API credential.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "username" : {
            "description" : "The name of the [API credential](https://docs.adyen.com/development-resources/api-credentials), for example **ws@Company.TestCompany**.",
            "type" : "string"
          }
        },
        "required" : [
          "id",
          "username",
          "clientKey",
          "allowedIpAddresses",
          "roles",
          "active",
          "password",
          "apiKey"
        ],
        "type" : "object"
      },
      "CreateCompanyApiCredentialRequest" : {
        "properties" : {
          "allowedOrigins" : {
            "description" : "List of [allowed origins](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) for the new API credential.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "associatedMerchantAccounts" : {
            "description" : "List of merchant accounts that the API credential has access to.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "description" : {
            "description" : "Description of the API credential.",
            "type" : "string"
          },
          "roles" : {
            "description" : "List of [roles](https://docs.adyen.com/development-resources/api-credentials#roles-1) for the API credential. Only roles assigned to 'ws@Company.<CompanyName>' can be assigned to other API credentials.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "CreateCompanyApiCredentialResponse" : {
        "properties" : {
          "_links" : {
            "description" : "References to resources linked to the API credential.",
            "$ref" : "#/components/schemas/ApiCredentialLinks"
          },
          "active" : {
            "description" : "Indicates if the API credential is enabled. Must be set to **true** to use the credential in your integration.",
            "type" : "boolean"
          },
          "allowedIpAddresses" : {
            "description" : "List of IP addresses from which your client can make requests.\n\nIf the list is empty, we allow requests from any IP.\nIf the list is not empty and we get a request from an IP which is not on the list, you get a security error.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "allowedOrigins" : {
            "description" : "List containing the [allowed origins](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) linked to the API credential.",
            "items" : {
              "$ref" : "#/components/schemas/AllowedOrigin"
            },
            "type" : "array"
          },
          "apiKey" : {
            "description" : "The API key for the API credential that was created.",
            "type" : "string"
          },
          "associatedMerchantAccounts" : {
            "description" : "List of merchant accounts that the API credential has access to.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "clientKey" : {
            "description" : "Public key used for [client-side authentication](https://docs.adyen.com/development-resources/client-side-authentication). The client key is required for Drop-in and Components integrations.",
            "type" : "string"
          },
          "description" : {
            "description" : "Description of the API credential.",
            "maxLength" : 50,
            "type" : "string"
          },
          "id" : {
            "description" : "Unique identifier of the API credential.",
            "type" : "string"
          },
          "password" : {
            "description" : "The password for the API credential that was created.",
            "type" : "string"
          },
          "roles" : {
            "description" : "List of [roles](https://docs.adyen.com/development-resources/api-credentials#roles-1) for the API credential.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "username" : {
            "description" : "The name of the [API credential](https://docs.adyen.com/development-resources/api-credentials), for example **ws@Company.TestCompany**.",
            "type" : "string"
          }
        },
        "required" : [
          "id",
          "username",
          "clientKey",
          "allowedIpAddresses",
          "roles",
          "active",
          "password",
          "apiKey",
          "associatedMerchantAccounts"
        ],
        "type" : "object"
      },
      "CreateCompanyUserRequest" : {
        "properties" : {
          "accountGroups" : {
            "description" : "The list of [account groups](https://docs.adyen.com/account/account-structure#account-groups) associated with this user.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "associatedMerchantAccounts" : {
            "description" : "The list of [merchant accounts](https://docs.adyen.com/account/account-structure#merchant-accounts) associated with this user.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "email" : {
            "description" : "The email address of the user.",
            "type" : "string"
          },
          "name" : {
            "description" : "The user's full name.\n\nAllowed length: 1—80 characters.",
            "maxLength" : 80,
            "minLength" : 1,
            "$ref" : "#/components/schemas/Name"
          },
          "roles" : {
            "description" : "The list of [roles](https://docs.adyen.com/account/user-roles) for this user.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "timeZoneCode" : {
            "description" : "The [tz database name](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) of the time zone of the user. For example, **Europe/Amsterdam**.",
            "type" : "string"
          },
          "username" : {
            "description" : "The user's email address that will be their username. Must be the same as the one in the `email` field.",
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string"
          }
        },
        "required" : [
          "name",
          "email",
          "username"
        ],
        "type" : "object"
      },
      "CreateCompanyUserResponse" : {
        "properties" : {
          "_links" : {
            "description" : "References to resources connected with this user.",
            "$ref" : "#/components/schemas/Links"
          },
          "accountGroups" : {
            "description" : "The list of [account groups](https://docs.adyen.com/account/account-structure#account-groups) associated with this user.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "active" : {
            "description" : "Indicates whether this user is active.",
            "type" : "boolean"
          },
          "apps" : {
            "description" : "Set of apps available to this user",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "associatedMerchantAccounts" : {
            "description" : "The list of [merchant accounts](https://docs.adyen.com/account/account-structure#merchant-accounts) associated with this user.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "email" : {
            "description" : "The email address of the user.",
            "type" : "string"
          },
          "id" : {
            "description" : "The unique identifier of the user.",
            "type" : "string"
          },
          "name" : {
            "description" : "The user's full name.",
            "$ref" : "#/components/schemas/Name"
          },
          "roles" : {
            "description" : "The list of [roles](https://docs.adyen.com/account/user-roles) for this user.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "timeZoneCode" : {
            "description" : "The [tz database name](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) of the time zone of the user. For example, **Europe/Amsterdam**.",
            "type" : "string"
          },
          "username" : {
            "description" : "The username for this user.",
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string"
          }
        },
        "required" : [
          "id",
          "email",
          "timeZoneCode",
          "username",
          "roles"
        ],
        "type" : "object"
      },
      "CreateCompanyWebhookRequest" : {
        "properties" : {
          "acceptsExpiredCertificate" : {
            "description" : "Indicates if expired SSL certificates are accepted. Default value: **false**.",
            "type" : "boolean"
          },
          "acceptsSelfSignedCertificate" : {
            "description" : "Indicates if self-signed SSL certificates are accepted. Default value: **false**.",
            "type" : "boolean"
          },
          "acceptsUntrustedRootCertificate" : {
            "description" : "Indicates if untrusted SSL certificates are accepted. Default value: **false**.",
            "type" : "boolean"
          },
          "active" : {
            "description" : "Indicates if the webhook configuration is active. The field must be **true** for us to send webhooks about events related an account.",
            "type" : "boolean"
          },
          "additionalSettings" : {
            "description" : "Additional shopper and transaction information to be included in your [standard notifications](https://docs.adyen.com/development-resources/webhooks/understand-notifications#event-codes). Find out more about the available [additional settings](https://docs.adyen.com/development-resources/webhooks/additional-settings).",
            "$ref" : "#/components/schemas/AdditionalSettings"
          },
          "communicationFormat" : {
            "description" : "Format or protocol for receiving webhooks. Possible values:\n* **soap**\n* **http**\n* **json** ",
            "enum" : [
              "http",
              "json",
              "soap"
            ],
            "example" : "soap",
            "type" : "string"
          },
          "description" : {
            "description" : "Your description for this webhook configuration.",
            "type" : "string"
          },
          "encryptionProtocol" : {
            "x-addedInVersion" : "2",
            "description" : "SSL version to access the public webhook URL specified in the `url` field. Possible values:\n* **TLSv1.3**\n* **TLSv1.2**\n* **HTTP** - Only allowed on Test environment.\n\nIf not specified, the webhook will use `sslVersion`: **TLSv1.2**.",
            "enum" : [
              "HTTP",
              "TLSv1.2",
              "TLSv1.3"
            ],
            "example" : "TLSv1.2",
            "type" : "string"
          },
          "filterMerchantAccountType" : {
            "description" : "Shows how merchant accounts are filtered when configuring the webhook. \n\nPossible values:\n*  **allAccounts** : Includes all merchant accounts, and does not require specifying `filterMerchantAccounts`.\n*  **includeAccounts** : The webhook is configured for the merchant accounts listed in `filterMerchantAccounts`.\n*  **excludeAccounts** : The webhook is not configured for the merchant accounts listed in `filterMerchantAccounts`.\n\n",
            "enum" : [
              "allAccounts",
              "excludeAccounts",
              "includeAccounts"
            ],
            "type" : "string"
          },
          "filterMerchantAccounts" : {
            "description" : "A list of merchant account names that are included or excluded from receiving the webhook. Inclusion or exclusion is based on the value defined for `filterMerchantAccountType`.\n\nRequired if `filterMerchantAccountType` is either:\n* **includeAccounts**\n* **excludeAccounts**\n\nNot needed for `filterMerchantAccountType`: **allAccounts**.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "networkType" : {
            "description" : "Network type for Terminal API notification webhooks. Possible values:\n* **public**\n* **local**\n\nDefault Value: **public**.",
            "enum" : [
              "local",
              "public"
            ],
            "type" : "string"
          },
          "password" : {
            "description" : "Password to access the webhook URL.",
            "type" : "string"
          },
          "populateSoapActionHeader" : {
            "description" : "Indicates if the SOAP action header needs to be populated. Default value: **false**.\n\nOnly applies if `communicationFormat`: **soap**.",
            "type" : "boolean"
          },
          "type" : {
            "description" : "The type of webhook that is being created. Possible values are:\n\n- **standard**\n- **account-settings-notification**\n- **banktransfer-notification**\n- **boletobancario-notification**\n- **directdebit-notification**\n- **ach-notification-of-change-notification**\n- **pending-notification**\n- **ideal-notification**\n- **ideal-pending-notification**\n- **report-notification**\n- **rreq-notification**\n\nFind out more about [standard notification webhooks](https://docs.adyen.com/development-resources/webhooks/understand-notifications#event-codes) and [other types of notifications](https://docs.adyen.com/development-resources/webhooks/understand-notifications#other-notifications).",
            "type" : "string"
          },
          "url" : {
            "description" : "Public URL where webhooks will be sent, for example **https://www.domain.com/webhook-endpoint**.",
            "example" : "http://www.adyen.com",
            "type" : "string"
          },
          "username" : {
            "description" : "Username to access the webhook URL.",
            "maxLength" : 255,
            "type" : "string"
          }
        },
        "required" : [
          "url",
          "active",
          "communicationFormat",
          "type",
          "filterMerchantAccountType",
          "filterMerchantAccounts"
        ],
        "type" : "object"
      },
      "CreateMerchantApiCredentialRequest" : {
        "properties" : {
          "allowedOrigins" : {
            "description" : "The list of [allowed origins](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) for the new API credential.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "description" : {
            "description" : "Description of the API credential.",
            "type" : "string"
          },
          "roles" : {
            "description" : "List of [roles](https://docs.adyen.com/development-resources/api-credentials#roles-1) for the API credential. Only roles assigned to 'ws@Company.<CompanyName>' can be assigned to other API credentials.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "CreateMerchantRequest" : {
        "properties" : {
          "businessLineId" : {
            "description" : "The unique identifier of the [business line](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/businessLines). Required for an Adyen for Platforms Manage integration.",
            "type" : "string"
          },
          "companyId" : {
            "description" : "The unique identifier of the company account.",
            "type" : "string"
          },
          "description" : {
            "description" : "Your description for the merchant account, maximum 300 characters.",
            "maxLength" : 300,
            "type" : "string"
          },
          "legalEntityId" : {
            "description" : "The unique identifier of the [legal entity](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/legalEntities). Required for an Adyen for Platforms Manage integration.",
            "type" : "string"
          },
          "pricingPlan" : {
            "description" : "Sets the pricing plan for the merchant account. Required for an Adyen for Platforms Manage integration. Your Adyen contact will provide the values that you can use.",
            "type" : "string"
          },
          "reference" : {
            "description" : "Your reference for the merchant account. To make this reference the unique identifier of the merchant account, your Adyen contact can set up a template on your company account. The template can have 6 to 255 characters with upper- and lower-case letters, underscores, and numbers. When your company account has a template, then the `reference` is required and must be unique within the company account.",
            "type" : "string"
          },
          "salesChannels" : {
            "description" : "List of sales channels that the merchant will process payments with",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [
          "companyId"
        ],
        "type" : "object"
      },
      "CreateMerchantResponse" : {
        "properties" : {
          "businessLineId" : {
            "description" : "The unique identifier of the [business line](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/businessLines).",
            "type" : "string"
          },
          "companyId" : {
            "description" : "The unique identifier of the company account.",
            "type" : "string"
          },
          "description" : {
            "description" : "Your description for the merchant account, maximum 300 characters.",
            "maxLength" : 300,
            "type" : "string"
          },
          "id" : {
            "description" : "The unique identifier of the merchant account. If Adyen set up a template for the `reference`, then the `id` will have the same value as the `reference` that you sent in the request. Otherwise, the value is generated by Adyen.",
            "type" : "string"
          },
          "legalEntityId" : {
            "description" : "The unique identifier of the [legal entity](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/legalEntities).",
            "type" : "string"
          },
          "pricingPlan" : {
            "description" : "Partner pricing plan for the merchant, applicable for merchants under AfP managed company accounts.",
            "type" : "string"
          },
          "reference" : {
            "description" : "Your reference for the merchant account.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "CreateMerchantUserRequest" : {
        "properties" : {
          "accountGroups" : {
            "description" : "The list of [account groups](https://docs.adyen.com/account/account-structure#account-groups) associated with this user.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "email" : {
            "description" : "The email address of the user.",
            "type" : "string"
          },
          "name" : {
            "description" : "The user's full name.\n\nAllowed length: 1—80 characters.",
            "maxLength" : 80,
            "minLength" : 1,
            "$ref" : "#/components/schemas/Name"
          },
          "roles" : {
            "description" : "The list of [roles](https://docs.adyen.com/account/user-roles) for this user.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "timeZoneCode" : {
            "description" : "The [tz database name](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) of the time zone of the user. For example, **Europe/Amsterdam**.",
            "type" : "string"
          },
          "username" : {
            "description" : "The user's email address that will be their username. Must be the same as the one in the `email` field.",
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string"
          }
        },
        "required" : [
          "name",
          "email",
          "username"
        ],
        "type" : "object"
      },
      "CreateMerchantWebhookRequest" : {
        "properties" : {
          "acceptsExpiredCertificate" : {
            "description" : "Indicates if expired SSL certificates are accepted. Default value: **false**.",
            "type" : "boolean"
          },
          "acceptsSelfSignedCertificate" : {
            "description" : "Indicates if self-signed SSL certificates are accepted. Default value: **false**.",
            "type" : "boolean"
          },
          "acceptsUntrustedRootCertificate" : {
            "description" : "Indicates if untrusted SSL certificates are accepted. Default value: **false**.",
            "type" : "boolean"
          },
          "active" : {
            "description" : "Indicates if the webhook configuration is active. The field must be **true** for us to send webhooks about events related an account.",
            "type" : "boolean"
          },
          "additionalSettings" : {
            "description" : "Additional shopper and transaction information to be included in your [standard notifications](https://docs.adyen.com/development-resources/webhooks/understand-notifications#event-codes). Find out more about the available [additional settings](https://docs.adyen.com/development-resources/webhooks/additional-settings).",
            "$ref" : "#/components/schemas/AdditionalSettings"
          },
          "communicationFormat" : {
            "description" : "Format or protocol for receiving webhooks. Possible values:\n* **soap**\n* **http**\n* **json** ",
            "enum" : [
              "http",
              "json",
              "soap"
            ],
            "example" : "soap",
            "type" : "string"
          },
          "description" : {
            "description" : "Your description for this webhook configuration.",
            "type" : "string"
          },
          "encryptionProtocol" : {
            "x-addedInVersion" : "2",
            "description" : "SSL version to access the public webhook URL specified in the `url` field. Possible values:\n* **TLSv1.3**\n* **TLSv1.2**\n* **HTTP** - Only allowed on Test environment.\n\nIf not specified, the webhook will use `sslVersion`: **TLSv1.2**.",
            "enum" : [
              "HTTP",
              "TLSv1.2",
              "TLSv1.3"
            ],
            "example" : "TLSv1.2",
            "type" : "string"
          },
          "networkType" : {
            "description" : "Network type for Terminal API notification webhooks. Possible values:\n* **public**\n* **local**\n\nDefault Value: **public**.",
            "enum" : [
              "local",
              "public"
            ],
            "type" : "string"
          },
          "password" : {
            "description" : "Password to access the webhook URL.",
            "type" : "string"
          },
          "populateSoapActionHeader" : {
            "description" : "Indicates if the SOAP action header needs to be populated. Default value: **false**.\n\nOnly applies if `communicationFormat`: **soap**.",
            "type" : "boolean"
          },
          "type" : {
            "description" : "The type of webhook that is being created. Possible values are:\n\n- **standard**\n- **account-settings-notification**\n- **banktransfer-notification**\n- **boletobancario-notification**\n- **directdebit-notification**\n- **ach-notification-of-change-notification**\n- **pending-notification**\n- **ideal-notification**\n- **ideal-pending-notification**\n- **report-notification**\n- **rreq-notification**\n\nFind out more about [standard notification webhooks](https://docs.adyen.com/development-resources/webhooks/understand-notifications#event-codes) and [other types of notifications](https://docs.adyen.com/development-resources/webhooks/understand-notifications#other-notifications).",
            "type" : "string"
          },
          "url" : {
            "description" : "Public URL where webhooks will be sent, for example **https://www.domain.com/webhook-endpoint**.",
            "example" : "http://www.adyen.com",
            "type" : "string"
          },
          "username" : {
            "description" : "Username to access the webhook URL.",
            "maxLength" : 255,
            "type" : "string"
          }
        },
        "required" : [
          "url",
          "active",
          "communicationFormat",
          "type"
        ],
        "type" : "object"
      },
      "CreateUserResponse" : {
        "properties" : {
          "_links" : {
            "description" : "References to resources connected with this user.",
            "$ref" : "#/components/schemas/Links"
          },
          "accountGroups" : {
            "description" : "The list of [account groups](https://docs.adyen.com/account/account-structure#account-groups) associated with this user.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "active" : {
            "description" : "Indicates whether this user is active.",
            "type" : "boolean"
          },
          "apps" : {
            "description" : "Set of apps available to this user",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "email" : {
            "description" : "The email address of the user.",
            "type" : "string"
          },
          "id" : {
            "description" : "The unique identifier of the user.",
            "type" : "string"
          },
          "name" : {
            "description" : "The user's full name.",
            "$ref" : "#/components/schemas/Name"
          },
          "roles" : {
            "description" : "The list of [roles](https://docs.adyen.com/account/user-roles) for this user.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "timeZoneCode" : {
            "description" : "The [tz database name](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) of the time zone of the user. For example, **Europe/Amsterdam**.",
            "type" : "string"
          },
          "username" : {
            "description" : "The username for this user.",
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string"
          }
        },
        "required" : [
          "id",
          "email",
          "timeZoneCode",
          "username",
          "roles"
        ],
        "type" : "object"
      },
      "Currency" : {
        "properties" : {
          "amount" : {
            "description" : "Surcharge amount per transaction, in [minor units](https://docs.adyen.com/development-resources/currency-codes).",
            "format" : "int32",
            "type" : "integer"
          },
          "currencyCode" : {
            "description" : "Three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes). For example, **AUD**.",
            "type" : "string"
          },
          "percentage" : {
            "description" : "Surcharge percentage per transaction. The maximum number of decimal places is two. For example, **1%** or **2.27%**.",
            "format" : "double",
            "type" : "number"
          }
        },
        "required" : [
          "currencyCode"
        ],
        "type" : "object"
      },
      "CustomNotification" : {
        "properties" : {
          "amount" : {
            "description" : "The amount of the payment that the notification is about. Set the value in [minor units](https://docs.adyen.com/development-resources/currency-codes).",
            "$ref" : "#/components/schemas/Amount"
          },
          "eventCode" : {
            "description" : "The event that caused the notification to be sent.Currently supported values:\n* **AUTHORISATION**\n* **CANCELLATION**\n* **REFUND**\n* **CAPTURE**\n* **REPORT_AVAILABLE**\n* **CHARGEBACK**\n* **REQUEST_FOR_INFORMATION**\n* **NOTIFICATION_OF_CHARGEBACK**\n* **NOTIFICATIONTEST**\n* **ORDER_OPENED**\n* **ORDER_CLOSED**\n* **CHARGEBACK_REVERSED**\n* **REFUNDED_REVERSED**\n* **REFUND_WITH_DATA**",
            "type" : "string"
          },
          "eventDate" : {
            "description" : "The time of the event. Format: [ISO 8601](http://www.w3.org/TR/NOTE-datetime), YYYY-MM-DDThh:mm:ssTZD.",
            "format" : "date-time",
            "type" : "string"
          },
          "merchantReference" : {
            "description" : "Your reference for the custom test notification.",
            "type" : "string"
          },
          "paymentMethod" : {
            "description" : "The payment method for the payment that the notification is about. Possible values:\n* **amex**\n* **visa**\n* **mc**\n* **maestro**\n* **bcmc**\n* **paypal**\n * **sms**\n * **bankTransfer_NL**\n* **bankTransfer_DE**\n* **bankTransfer_BE**\n* **ideal**\n* **elv**\n* **sepadirectdebit**\n",
            "type" : "string"
          },
          "reason" : {
            "description" : "A descripton of what caused the notification.",
            "type" : "string"
          },
          "success" : {
            "description" : "The outcome of the event which the notification is about. Set to either **true** or **false**. ",
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "DataCenter" : {
        "properties" : {
          "livePrefix" : {
            "description" : "The unique [live URL prefix](https://docs.adyen.com/development-resources/live-endpoints#live-url-prefix) for your live endpoint. Each data center has its own live URL prefix.\n\nThis field is empty for requests made in the test environment.",
            "type" : "string"
          },
          "name" : {
            "description" : "The name assigned to a data center, for example **EU** for the European data center. Possible values are:\n\n* **default**: the European data center. This value is always returned in the test environment. \n* **AU**\n* **EU**\n* **US**",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "EventUrl" : {
        "properties" : {
          "eventLocalUrls" : {
            "description" : "One or more local URLs to send event notifications to when using Terminal API.",
            "items" : {
              "$ref" : "#/components/schemas/Url"
            },
            "type" : "array"
          },
          "eventPublicUrls" : {
            "description" : "One or more public URLs to send event notifications to when using Terminal API.",
            "items" : {
              "$ref" : "#/components/schemas/Url"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "ExternalTerminalAction" : {
        "properties" : {
          "actionType" : {
            "description" : "The type of terminal action: **InstallAndroidApp**, **UninstallAndroidApp**, **InstallAndroidCertificate**, or **UninstallAndroidCertificate**.",
            "type" : "string"
          },
          "config" : {
            "description" : "Technical information about the terminal action.",
            "type" : "string"
          },
          "confirmedAt" : {
            "description" : "The date and time when the action was carried out.",
            "format" : "date-time",
            "type" : "string"
          },
          "id" : {
            "description" : "The unique ID of the terminal action.",
            "type" : "string"
          },
          "result" : {
            "description" : "The result message for the action.",
            "type" : "string"
          },
          "scheduledAt" : {
            "description" : "The date and time when the action was scheduled to happen.",
            "format" : "date-time",
            "type" : "string"
          },
          "status" : {
            "description" : "The status of the terminal action: **pending**, **successful**, **failed**, **cancelled**, or **tryLater**.",
            "type" : "string"
          },
          "terminalId" : {
            "description" : "The unique ID of the terminal that the action applies to.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "File" : {
        "properties" : {
          "data" : {
            "description" : "The certificate content converted to a Base64-encoded string.",
            "type" : "string"
          },
          "name" : {
            "description" : "The name of the certificate. Must be unique across Wi-Fi profiles.",
            "type" : "string"
          }
        },
        "required" : [
          "name",
          "data"
        ],
        "type" : "object"
      },
      "GenerateApiKeyResponse" : {
        "properties" : {
          "apiKey" : {
            "description" : "The generated API key.",
            "type" : "string"
          }
        },
        "required" : [
          "apiKey"
        ],
        "type" : "object"
      },
      "GenerateClientKeyResponse" : {
        "properties" : {
          "clientKey" : {
            "description" : "Generated client key",
            "type" : "string"
          }
        },
        "required" : [
          "clientKey"
        ],
        "type" : "object"
      },
      "GenerateHmacKeyResponse" : {
        "properties" : {
          "hmacKey" : {
            "description" : "The HMAC key generated for this webhook.",
            "type" : "string"
          }
        },
        "required" : [
          "hmacKey"
        ],
        "type" : "object"
      },
      "GenericPmWithTdiInfo" : {
        "properties" : {
          "transactionDescription" : {
            "description" : "Information regarding the transaction description.",
            "$ref" : "#/components/schemas/TransactionDescriptionInfo"
          }
        },
        "type" : "object"
      },
      "GiroPayInfo" : {
        "properties" : {
          "supportEmail" : {
            "description" : "The email address of merchant support.",
            "type" : "string"
          }
        },
        "required" : [
          "supportEmail"
        ],
        "type" : "object"
      },
      "GooglePayInfo" : {
        "properties" : {
          "merchantId" : {
            "description" : "Google Pay [Merchant ID](https://support.google.com/paymentscenter/answer/7163092?hl=en). Character length and limitations: 16 alphanumeric characters or 20 numeric characters.",
            "maxLength" : 20,
            "minLength" : 16,
            "type" : "string"
          },
          "reuseMerchantId" : {
            "description" : "Indicates whether the Google Pay Merchant ID is used for several merchant accounts. Default value: **false**.",
            "type" : "boolean"
          }
        },
        "required" : [
          "merchantId"
        ],
        "type" : "object"
      },
      "Gratuity" : {
        "properties" : {
          "allowCustomAmount" : {
            "description" : "Indicates whether one of the predefined tipping options is to let the shopper enter a custom tip. If **true**, only three of the other options defined in `predefinedTipEntries` are shown.",
            "type" : "boolean"
          },
          "currency" : {
            "description" : "The currency that the tipping settings apply to.",
            "type" : "string"
          },
          "predefinedTipEntries" : {
            "description" : "Tipping options the shopper can choose from if `usePredefinedTipEntries` is **true**. The maximum number of predefined options is four, or three plus the option to enter a custom tip.\nThe options can be a mix of:\n\n- A percentage of the transaction amount. Example: **5%**\n- A tip amount in [minor units](https://docs.adyen.com/development-resources/currency-codes). Example: **500** for a EUR 5 tip.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "usePredefinedTipEntries" : {
            "description" : "Indicates whether the terminal shows a prompt to enter a tip (**false**), or predefined tipping options to choose from (**true**).",
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "Hardware" : {
        "properties" : {
          "displayMaximumBackLight" : {
            "description" : "The brightness of the display when the terminal is being used, expressed as a percentage.",
            "format" : "int32",
            "type" : "integer"
          },
          "restartHour" : {
            "description" : "The hour of the day when the terminal is set to reboot to apply the configuration and software updates. By default, the restart hour is at 6:00 AM in the timezone of the terminal Minimum vaoue: 0, maximum value: 23.",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "IdName" : {
        "properties" : {
          "id" : {
            "description" : "The identifier of the terminal model.",
            "type" : "string"
          },
          "name" : {
            "description" : "The name of the terminal model.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "InstallAndroidAppDetails" : {
        "additionalProperties" : false,
        "properties" : {
          "appId" : {
            "description" : "The unique identifier of the app to be installed.",
            "type" : "string"
          },
          "type" : {
            "default" : "InstallAndroidApp",
            "description" : "Type of terminal action: Install an Android app.",
            "enum" : [
              "InstallAndroidApp"
            ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "InstallAndroidCertificateDetails" : {
        "additionalProperties" : false,
        "properties" : {
          "certificateId" : {
            "description" : "The unique identifier of the certificate to be installed.",
            "type" : "string"
          },
          "type" : {
            "default" : "InstallAndroidCertificate",
            "description" : "Type of terminal action: Install an Android certificate.",
            "enum" : [
              "InstallAndroidCertificate"
            ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "InvalidField" : {
        "properties" : {
          "message" : {
            "description" : "Description of the validation error.",
            "type" : "string"
          },
          "name" : {
            "description" : "The field that has an invalid value.",
            "type" : "string"
          },
          "value" : {
            "description" : "The invalid value.",
            "type" : "string"
          }
        },
        "required" : [
          "name",
          "value",
          "message"
        ],
        "type" : "object"
      },
      "JSONObject" : {
        "type" : "object"
      },
      "Key" : {
        "properties" : {
          "identifier" : {
            "description" : "The unique identifier of the shared key.",
            "type" : "string"
          },
          "passphrase" : {
            "description" : "The secure passphrase to protect the shared key.",
            "type" : "string"
          },
          "version" : {
            "description" : "The version number of the shared key.",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "KlarnaInfo" : {
        "properties" : {
          "autoCapture" : {
            "description" : "Indicates the status of [Automatic capture](https://docs.adyen.com/online-payments/capture#automatic-capture). Default value: **false**.",
            "type" : "boolean"
          },
          "disputeEmail" : {
            "description" : "The email address for disputes.",
            "type" : "string"
          },
          "region" : {
            "description" : "The region of operation. For example, **NA**, **EU**, **CH**, **AU**.",
            "enum" : [
              "NA",
              "EU",
              "CH",
              "AU"
            ],
            "maxLength" : 2,
            "minLength" : 2,
            "type" : "string"
          },
          "supportEmail" : {
            "description" : "The email address of merchant support.",
            "type" : "string"
          }
        },
        "required" : [
          "region",
          "supportEmail",
          "disputeEmail"
        ],
        "type" : "object"
      },
      "Links" : {
        "properties" : {
          "self" : {
            "description" : "Link to the resource itself.",
            "$ref" : "#/components/schemas/LinksElement"
          }
        },
        "required" : [
          "self"
        ],
        "type" : "object"
      },
      "LinksElement" : {
        "properties" : {
          "href" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ListCompanyApiCredentialsResponse" : {
        "properties" : {
          "_links" : {
            "description" : "Pagination references.",
            "$ref" : "#/components/schemas/PaginationLinks"
          },
          "data" : {
            "description" : "The list of API credentials.",
            "items" : {
              "$ref" : "#/components/schemas/CompanyApiCredential"
            },
            "type" : "array"
          },
          "itemsTotal" : {
            "description" : "Total number of items.",
            "format" : "int32",
            "type" : "integer"
          },
          "pagesTotal" : {
            "description" : "Total number of pages.",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "required" : [
          "itemsTotal",
          "pagesTotal"
        ],
        "type" : "object"
      },
      "ListCompanyResponse" : {
        "properties" : {
          "_links" : {
            "description" : "Pagination references.",
            "$ref" : "#/components/schemas/PaginationLinks"
          },
          "data" : {
            "description" : "The list of companies.",
            "items" : {
              "$ref" : "#/components/schemas/Company"
            },
            "type" : "array"
          },
          "itemsTotal" : {
            "description" : "Total number of items.",
            "format" : "int32",
            "type" : "integer"
          },
          "pagesTotal" : {
            "description" : "Total number of pages.",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "required" : [
          "itemsTotal",
          "pagesTotal"
        ],
        "type" : "object"
      },
      "ListCompanyUsersResponse" : {
        "properties" : {
          "_links" : {
            "description" : "Pagination references.",
            "$ref" : "#/components/schemas/PaginationLinks"
          },
          "data" : {
            "description" : "The list of users.",
            "items" : {
              "$ref" : "#/components/schemas/CompanyUser"
            },
            "type" : "array"
          },
          "itemsTotal" : {
            "description" : "Total number of items.",
            "format" : "int32",
            "type" : "integer"
          },
          "pagesTotal" : {
            "description" : "Total number of pages.",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "required" : [
          "itemsTotal",
          "pagesTotal"
        ],
        "type" : "object"
      },
      "ListExternalTerminalActionsResponse" : {
        "properties" : {
          "data" : {
            "description" : "The list of terminal actions.",
            "items" : {
              "$ref" : "#/components/schemas/ExternalTerminalAction"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "ListMerchantApiCredentialsResponse" : {
        "properties" : {
          "_links" : {
            "description" : "Pagination references.",
            "$ref" : "#/components/schemas/PaginationLinks"
          },
          "data" : {
            "description" : "The list of API credentials.",
            "items" : {
              "$ref" : "#/components/schemas/ApiCredential"
            },
            "type" : "array"
          },
          "itemsTotal" : {
            "description" : "Total number of items.",
            "format" : "int32",
            "type" : "integer"
          },
          "pagesTotal" : {
            "description" : "Total number of pages.",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "required" : [
          "itemsTotal",
          "pagesTotal"
        ],
        "type" : "object"
      },
      "ListMerchantResponse" : {
        "properties" : {
          "_links" : {
            "description" : "Pagination references.",
            "$ref" : "#/components/schemas/PaginationLinks"
          },
          "data" : {
            "description" : "The list of merchant accounts.",
            "items" : {
              "$ref" : "#/components/schemas/Merchant"
            },
            "type" : "array"
          },
          "itemsTotal" : {
            "description" : "Total number of items.",
            "format" : "int32",
            "type" : "integer"
          },
          "pagesTotal" : {
            "description" : "Total number of pages.",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "required" : [
          "itemsTotal",
          "pagesTotal"
        ],
        "type" : "object"
      },
      "ListMerchantUsersResponse" : {
        "properties" : {
          "_links" : {
            "description" : "Pagination references.",
            "$ref" : "#/components/schemas/PaginationLinks"
          },
          "data" : {
            "description" : "The list of users.",
            "items" : {
              "$ref" : "#/components/schemas/User"
            },
            "type" : "array"
          },
          "itemsTotal" : {
            "description" : "Total number of items.",
            "format" : "int32",
            "type" : "integer"
          },
          "pagesTotal" : {
            "description" : "Total number of pages.",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "required" : [
          "itemsTotal",
          "pagesTotal"
        ],
        "type" : "object"
      },
      "ListStoresResponse" : {
        "properties" : {
          "_links" : {
            "description" : "Pagination references.",
            "$ref" : "#/components/schemas/PaginationLinks"
          },
          "data" : {
            "description" : "List of stores",
            "items" : {
              "$ref" : "#/components/schemas/Store"
            },
            "type" : "array"
          },
          "itemsTotal" : {
            "description" : "Total number of items.",
            "format" : "int32",
            "type" : "integer"
          },
          "pagesTotal" : {
            "description" : "Total number of pages.",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "required" : [
          "itemsTotal",
          "pagesTotal"
        ],
        "type" : "object"
      },
      "ListTerminalsResponse" : {
        "properties" : {
          "_links" : {
            "description" : "Pagination references.",
            "$ref" : "#/components/schemas/PaginationLinks"
          },
          "data" : {
            "description" : "The list of terminals and their details.",
            "items" : {
              "$ref" : "#/components/schemas/Terminal"
            },
            "type" : "array"
          },
          "itemsTotal" : {
            "description" : "Total number of items.",
            "format" : "int32",
            "type" : "integer"
          },
          "pagesTotal" : {
            "description" : "Total number of pages.",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "required" : [
          "itemsTotal",
          "pagesTotal"
        ],
        "type" : "object"
      },
      "ListWebhooksResponse" : {
        "properties" : {
          "_links" : {
            "description" : "Pagination references.",
            "$ref" : "#/components/schemas/PaginationLinks"
          },
          "accountReference" : {
            "description" : "Reference to the account.",
            "type" : "string"
          },
          "data" : {
            "description" : "The list of webhooks configured for this account.",
            "items" : {
              "$ref" : "#/components/schemas/Webhook"
            },
            "type" : "array"
          },
          "itemsTotal" : {
            "description" : "Total number of items.",
            "format" : "int32",
            "type" : "integer"
          },
          "pagesTotal" : {
            "description" : "Total number of pages.",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "required" : [
          "itemsTotal",
          "pagesTotal"
        ],
        "type" : "object"
      },
      "Localization" : {
        "properties" : {
          "language" : {
            "description" : "Language of the terminal.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Logo" : {
        "properties" : {
          "data" : {
            "description" : "The image file, converted to a Base64-encoded string, of the logo to be shown on the terminal.",
            "maxLength" : 350000,
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "MeApiCredential" : {
        "properties" : {
          "_links" : {
            "description" : "References to resources linked to the API credential.",
            "$ref" : "#/components/schemas/ApiCredentialLinks"
          },
          "active" : {
            "description" : "Indicates if the API credential is enabled. Must be set to **true** to use the credential in your integration.",
            "type" : "boolean"
          },
          "allowedIpAddresses" : {
            "description" : "List of IP addresses from which your client can make requests.\n\nIf the list is empty, we allow requests from any IP.\nIf the list is not empty and we get a request from an IP which is not on the list, you get a security error.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "allowedOrigins" : {
            "description" : "List containing the [allowed origins](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) linked to the API credential.",
            "items" : {
              "$ref" : "#/components/schemas/AllowedOrigin"
            },
            "type" : "array"
          },
          "associatedMerchantAccounts" : {
            "description" : "List of merchant accounts that the API credential has explicit access to. \n If the credential has access to a company, this implies access to all merchant accounts and no merchants for that company will be included.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "clientKey" : {
            "description" : "Public key used for [client-side authentication](https://docs.adyen.com/development-resources/client-side-authentication). The client key is required for Drop-in and Components integrations.",
            "type" : "string"
          },
          "companyName" : {
            "description" : "Name of the company linked to the API credential.",
            "type" : "string"
          },
          "description" : {
            "description" : "Description of the API credential.",
            "maxLength" : 50,
            "type" : "string"
          },
          "id" : {
            "description" : "Unique identifier of the API credential.",
            "type" : "string"
          },
          "roles" : {
            "description" : "List of [roles](https://docs.adyen.com/development-resources/api-credentials#roles-1) for the API credential.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "username" : {
            "description" : "The name of the [API credential](https://docs.adyen.com/development-resources/api-credentials), for example **ws@Company.TestCompany**.",
            "type" : "string"
          }
        },
        "required" : [
          "id",
          "username",
          "clientKey",
          "allowedIpAddresses",
          "roles",
          "active"
        ],
        "type" : "object"
      },
      "MealVoucherFRInfo" : {
        "properties" : {
          "conecsId" : {
            "description" : "Meal Voucher conecsId. Format: digits only",
            "type" : "string"
          },
          "siret" : {
            "description" : "Meal Voucher siret. Format: 14 digits.",
            "maxLength" : 14,
            "minLength" : 14,
            "type" : "string"
          },
          "subTypes" : {
            "description" : "The list of additional payment methods. Allowed values: **mealVoucher_FR_edenred**, **mealVoucher_FR_groupeup**, **mealVoucher_FR_natixis**, **mealVoucher_FR_sodexo**.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [
          "siret",
          "conecsId",
          "subTypes"
        ],
        "type" : "object"
      },
      "Merchant" : {
        "properties" : {
          "_links" : {
            "description" : "References to resources connected with this merchant.",
            "$ref" : "#/components/schemas/MerchantLinks"
          },
          "captureDelay" : {
            "description" : "The [capture delay](https://docs.adyen.com/online-payments/capture#capture-delay) set for the merchant account.\n\nPossible values:\n* **Immediate**\n* **Manual**\n* Number of days from **1** to **29**",
            "type" : "string"
          },
          "companyId" : {
            "description" : "The unique identifier of the company account this merchant belongs to",
            "type" : "string"
          },
          "dataCenters" : {
            "description" : "List of available data centers.\n\nAdyen has several data centers around the world.In the URL that you use for making API requests, we recommend you use the live URL prefix from the data center closest to your shoppers.",
            "items" : {
              "$ref" : "#/components/schemas/DataCenter"
            },
            "type" : "array"
          },
          "defaultShopperInteraction" : {
            "description" : "The default [`shopperInteraction`](https://docs.adyen.com/api-explorer/#/CheckoutService/v68/post/payments__reqParam_shopperInteraction) value used when processing payments through this merchant account.",
            "type" : "string"
          },
          "description" : {
            "description" : "Your description for the merchant account, maximum 300 characters",
            "type" : "string"
          },
          "id" : {
            "description" : "The unique identifier of the merchant account.",
            "type" : "string"
          },
          "merchantCity" : {
            "description" : "The city where the legal entity of this merchant account is registered.",
            "type" : "string"
          },
          "name" : {
            "description" : "The name of the legal entity associated with the merchant account.",
            "type" : "string"
          },
          "pricingPlan" : {
            "description" : "Only applies to merchant accounts managed by Adyen's partners. The name of the pricing plan assigned to the merchant account.",
            "type" : "string"
          },
          "primarySettlementCurrency" : {
            "description" : "The currency of the country where the legal entity of this merchant account is registered. Format: [ISO currency code](https://docs.adyen.com/development-resources/currency-codes). For example, a legal entity based in the United States has USD as the primary settlement currency.",
            "type" : "string"
          },
          "reference" : {
            "description" : "Reference of the merchant account.",
            "type" : "string"
          },
          "shopWebAddress" : {
            "description" : "The URL for the ecommerce website used with this merchant account.",
            "type" : "string"
          },
          "status" : {
            "description" : "The status of the merchant account.\n\nPossible values:\n\n* **PreActive**: The merchant account has been created. Users cannot access the merchant account in the Customer Area. The account cannot process payments.\n* **Active**: Users can access the merchant account in the Customer Area. If the company account is also **Active**, then payment processing and payouts are enabled.\n* **InactiveWithModifications**: Users can access the merchant account in the Customer Area. You cannot process new payments but you can still modify payments, for example issue refunds. You can still receive payouts.\n* **Inactive**: Users can access the merchant account in the Customer Area. Payment processing and payouts are disabled.\n* **Closed**: The account is closed and this cannot be reversed. Users cannot log in. Payment processing and payouts are disabled.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "MerchantLinks" : {
        "properties" : {
          "apiCredentials" : {
            "$ref" : "#/components/schemas/LinksElement"
          },
          "self" : {
            "description" : "Link to the resource itself.",
            "$ref" : "#/components/schemas/LinksElement"
          },
          "users" : {
            "$ref" : "#/components/schemas/LinksElement"
          },
          "webhooks" : {
            "$ref" : "#/components/schemas/LinksElement"
          }
        },
        "required" : [
          "self"
        ],
        "type" : "object"
      },
      "MinorUnitsMonetaryValue" : {
        "properties" : {
          "amount" : {
            "description" : "The transaction amount, in [minor units](https://docs.adyen.com/development-resources/currency-codes).",
            "format" : "int32",
            "type" : "integer"
          },
          "currencyCode" : {
            "description" : "The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Name" : {
        "properties" : {
          "firstName" : {
            "description" : "The first name.",
            "type" : "string"
          },
          "lastName" : {
            "description" : "The last name.",
            "type" : "string"
          }
        },
        "required" : [
          "firstName",
          "lastName"
        ],
        "type" : "object"
      },
      "Name2" : {
        "properties" : {
          "firstName" : {
            "description" : "The first name.",
            "type" : "string"
          },
          "lastName" : {
            "description" : "The last name.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Nexo" : {
        "properties" : {
          "displayUrls" : {
            "description" : "The list of local and public URLs to send display notifications to when using Terminal API.",
            "$ref" : "#/components/schemas/NotificationUrl"
          },
          "encryptionKey" : {
            "description" : "The key you share with Adyen to secure local communications when using Terminal API.",
            "$ref" : "#/components/schemas/Key"
          },
          "eventUrls" : {
            "description" : "The list of local and public URLs to send event notifications to when using Terminal API.",
            "$ref" : "#/components/schemas/EventUrl"
          },
          "nexoEventUrls" : {
            "deprecated" : true,
            "x-deprecatedInVersion" : "1",
            "x-deprecatedMessage" : "Use `eventUrls` instead.",
            "description" : "One or more URLs to send event messages to when using Terminal API.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "notification" : {
            "description" : "Configures the event notification button on the terminal screen, for example used for pay-at-table.",
            "$ref" : "#/components/schemas/Notification"
          }
        },
        "type" : "object"
      },
      "Notification" : {
        "properties" : {
          "showButton" : {
            "description" : "Shows or hides the event notification button on the terminal screen.",
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "NotificationUrl" : {
        "properties" : {
          "localUrls" : {
            "description" : "One or more local URLs to send notifications to when using Terminal API.",
            "items" : {
              "$ref" : "#/components/schemas/Url"
            },
            "type" : "array"
          },
          "publicUrls" : {
            "description" : "One or more public URLs to send notifications to when using Terminal API.",
            "items" : {
              "$ref" : "#/components/schemas/Url"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "OfflineProcessing" : {
        "properties" : {
          "chipFloorLimit" : {
            "description" : "The maximum offline transaction amount for chip cards, in the processing currency and specified in [minor units](https://docs.adyen.com/development-resources/currency-codes).",
            "format" : "int32",
            "type" : "integer"
          },
          "offlineSwipeLimits" : {
            "description" : "The maximum offline transaction amount for swiped cards, in the specified currency.",
            "items" : {
              "$ref" : "#/components/schemas/MinorUnitsMonetaryValue"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "Opi" : {
        "properties" : {
          "enablePayAtTable" : {
            "description" : "Indicates if Pay at table is enabled.",
            "type" : "boolean"
          },
          "payAtTableStoreNumber" : {
            "description" : "The store number to use for Pay at Table.",
            "type" : "string"
          },
          "payAtTableURL" : {
            "description" : "The URL and port number used for Pay at Table communication.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "OrderItem" : {
        "properties" : {
          "id" : {
            "description" : "The unique identifier of the product.",
            "type" : "string"
          },
          "installments" : {
            "description" : "The number of installments for the specified product `id`.",
            "format" : "int64",
            "type" : "integer"
          },
          "name" : {
            "description" : "The name of the product.",
            "type" : "string"
          },
          "quantity" : {
            "description" : "The number of items with the specified product `id` included in the order.",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "PaginationLinks" : {
        "properties" : {
          "first" : {
            "description" : "The first page.",
            "$ref" : "#/components/schemas/LinksElement"
          },
          "last" : {
            "description" : "The last page.",
            "$ref" : "#/components/schemas/LinksElement"
          },
          "next" : {
            "description" : "The next page. Only present if there is a next page.",
            "$ref" : "#/components/schemas/LinksElement"
          },
          "prev" : {
            "description" : "The previous page. Only present if there is a previous page.",
            "$ref" : "#/components/schemas/LinksElement"
          },
          "self" : {
            "description" : "The current page.",
            "$ref" : "#/components/schemas/LinksElement"
          }
        },
        "required" : [
          "self",
          "first",
          "last"
        ],
        "type" : "object"
      },
      "Passcodes" : {
        "properties" : {
          "adminMenuPin" : {
            "description" : "The passcode for the Admin menu and the Settings menu.",
            "maxLength" : 6,
            "type" : "string"
          },
          "refundPin" : {
            "description" : "The passcode for unreferenced refunds on standalone terminals.",
            "maxLength" : 6,
            "type" : "string"
          },
          "screenLockPin" : {
            "description" : "The passcode to unlock the terminal screen after a timeout.",
            "maxLength" : 6,
            "minLength" : 4,
            "type" : "string"
          },
          "txMenuPin" : {
            "description" : "The passcode for the Transactions menu.",
            "maxLength" : 6,
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "PayAtTable" : {
        "properties" : {
          "authenticationMethod" : {
            "description" : "Allowed authentication methods: Magswipe, Manual Entry.",
            "enum" : [
              "MAGSWIPE",
              "MKE"
            ],
            "type" : "string"
          },
          "enablePayAtTable" : {
            "description" : "Enable Pay at table.",
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "PayPalInfo" : {
        "properties" : {
          "directCapture" : {
            "description" : "Indicates if direct (immediate) capture for PayPal is enabled. If set to **true**, this setting overrides the [capture](https://docs.adyen.com/online-payments/capture) settings of your merchant account. Default value: **true**.",
            "type" : "boolean"
          },
          "payerId" : {
            "description" : "PayPal Merchant ID. Character length and limitations: 13 single-byte alphanumeric characters.",
            "maxLength" : 13,
            "minLength" : 13,
            "type" : "string"
          },
          "subject" : {
            "description" : "Your business email address.",
            "type" : "string"
          }
        },
        "required" : [
          "subject",
          "payerId"
        ],
        "type" : "object"
      },
      "Payment" : {
        "properties" : {
          "contactlessCurrency" : {
            "description" : "The default currency for contactless payments on the payment terminal, as the three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code.",
            "maxLength" : 3,
            "minLength" : 3,
            "type" : "string"
          },
          "hideMinorUnitsInCurrencies" : {
            "description" : "Hides the minor units for the listed [ISO currency codes](https://en.wikipedia.org/wiki/ISO_4217).",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "PaymentMethod" : {
        "properties" : {
          "afterpayTouch" : {
            "description" : "Afterpay Touch details.",
            "$ref" : "#/components/schemas/AfterpayTouchInfo"
          },
          "allowed" : {
            "description" : "Indicates whether receiving payments is allowed. This value is set to **true** by Adyen after screening your merchant account.",
            "type" : "boolean"
          },
          "applePay" : {
            "description" : "Apple Pay details.",
            "$ref" : "#/components/schemas/ApplePayInfo"
          },
          "bcmc" : {
            "description" : "Bancontact details.",
            "$ref" : "#/components/schemas/BcmcInfo"
          },
          "businessLineId" : {
            "description" : "The unique identifier of the business line.",
            "type" : "string"
          },
          "cartesBancaires" : {
            "description" : "Cartes Bancaires details.",
            "$ref" : "#/components/schemas/CartesBancairesInfo"
          },
          "clearpay" : {
            "description" : "Clearpay details.",
            "$ref" : "#/components/schemas/ClearpayInfo"
          },
          "countries" : {
            "description" : "The list of countries where a payment method is available. By default, all countries supported by the payment method.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "cup" : {
            "description" : "China Union Pay details.",
            "$ref" : "#/components/schemas/GenericPmWithTdiInfo"
          },
          "currencies" : {
            "description" : "The list of currencies that a payment method supports. By default, all currencies supported by the payment method.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "customRoutingFlags" : {
            "description" : "The list of custom routing flags to route payment to the intended acquirer.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "diners" : {
            "description" : "Diners details.",
            "$ref" : "#/components/schemas/GenericPmWithTdiInfo"
          },
          "discover" : {
            "description" : "Discover details.",
            "$ref" : "#/components/schemas/GenericPmWithTdiInfo"
          },
          "eftpos_australia" : {
            "description" : "Eftpos Australia details.",
            "$ref" : "#/components/schemas/GenericPmWithTdiInfo"
          },
          "enabled" : {
            "description" : "Indicates whether the payment method is enabled (**true**) or disabled (**false**).",
            "type" : "boolean"
          },
          "giroPay" : {
            "description" : "giropay details.",
            "$ref" : "#/components/schemas/GiroPayInfo"
          },
          "girocard" : {
            "description" : "Girocard details.",
            "$ref" : "#/components/schemas/GenericPmWithTdiInfo"
          },
          "googlePay" : {
            "description" : "Google Pay details.",
            "$ref" : "#/components/schemas/GooglePayInfo"
          },
          "id" : {
            "description" : "The identifier of the resource.",
            "type" : "string"
          },
          "ideal" : {
            "description" : "iDeal details.",
            "$ref" : "#/components/schemas/GenericPmWithTdiInfo"
          },
          "interac_card" : {
            "description" : "Interac Card details.",
            "$ref" : "#/components/schemas/GenericPmWithTdiInfo"
          },
          "jcb" : {
            "description" : "JCB details.",
            "$ref" : "#/components/schemas/GenericPmWithTdiInfo"
          },
          "klarna" : {
            "description" : "Klarna details.",
            "$ref" : "#/components/schemas/KlarnaInfo"
          },
          "maestro" : {
            "description" : "Maestro details.",
            "$ref" : "#/components/schemas/GenericPmWithTdiInfo"
          },
          "mc" : {
            "description" : "MasterCard details.",
            "$ref" : "#/components/schemas/GenericPmWithTdiInfo"
          },
          "mealVoucher_FR" : {
            "description" : "Meal Voucher FR details.",
            "$ref" : "#/components/schemas/MealVoucherFRInfo"
          },
          "paypal" : {
            "description" : "PayPal details.",
            "$ref" : "#/components/schemas/PayPalInfo"
          },
          "reference" : {
            "description" : "Your reference for the payment method. Supported characters a-z, A-Z, 0-9.",
            "maxLength" : 150,
            "type" : "string"
          },
          "shopperInteraction" : {
            "description" : "The sales channel.",
            "type" : "string"
          },
          "sofort" : {
            "description" : "Sofort details.",
            "$ref" : "#/components/schemas/SofortInfo"
          },
          "storeIds" : {
            "x-addedInVersion" : "3",
            "description" : "The unique identifier of the store for which to configure the payment method, if any.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "swish" : {
            "description" : "Swish details.",
            "$ref" : "#/components/schemas/SwishInfo"
          },
          "twint" : {
            "description" : "Twint details.",
            "$ref" : "#/components/schemas/TwintInfo"
          },
          "type" : {
            "description" : "Payment method [variant](https://docs.adyen.com/development-resources/paymentmethodvariant#management-api).",
            "type" : "string"
          },
          "verificationStatus" : {
            "description" : "Payment method status. Possible values:\n* **valid**\n* **pending**\n* **invalid**\n* **rejected**",
            "enum" : [
              "valid",
              "pending",
              "invalid",
              "rejected"
            ],
            "type" : "string"
          },
          "vipps" : {
            "description" : "Vipps details.",
            "$ref" : "#/components/schemas/VippsInfo"
          },
          "visa" : {
            "description" : "Visa details.",
            "$ref" : "#/components/schemas/GenericPmWithTdiInfo"
          }
        },
        "required" : [
          "id"
        ],
        "type" : "object"
      },
      "PaymentMethodResponse" : {
        "properties" : {
          "_links" : {
            "description" : "Pagination references.",
            "$ref" : "#/components/schemas/PaginationLinks"
          },
          "data" : {
            "description" : "The list of supported payment methods and their details.",
            "items" : {
              "$ref" : "#/components/schemas/PaymentMethod"
            },
            "type" : "array"
          },
          "itemsTotal" : {
            "description" : "Total number of items.",
            "format" : "int32",
            "type" : "integer"
          },
          "pagesTotal" : {
            "description" : "Total number of pages.",
            "format" : "int32",
            "type" : "integer"
          },
          "typesWithErrors" : {
            "description" : "Payment method types with errors.",
            "items" : {
              "enum" : [
                "afterpaytouch",
                "alipay",
                "alipay_hk",
                "amex",
                "applepay",
                "bcmc",
                "blik",
                "cartebancaire",
                "clearpay",
                "cup",
                "diners",
                "directdebit_GB",
                "discover",
                "ebanking_FI",
                "eftpos_australia",
                "elo",
                "elocredit",
                "elodebit",
                "girocard",
                "googlepay",
                "hiper",
                "hipercard",
                "ideal",
                "interac_card",
                "jcb",
                "klarna",
                "klarna_account",
                "klarna_paynow",
                "maestro",
                "mbway",
                "mc",
                "mcdebit",
                "mealVoucher_FR",
                "mobilepay",
                "multibanco",
                "onlineBanking_PL",
                "paybybank",
                "paypal",
                "payshop",
                "swish",
                "trustly",
                "twint",
                "twint_pos",
                "vipps",
                "visa",
                "visadebit",
                "vpay",
                "wechatpay",
                "wechatpay_pos"
              ],
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [
          "itemsTotal",
          "pagesTotal"
        ],
        "type" : "object"
      },
      "PaymentMethodSetupInfo" : {
        "properties" : {
          "afterpayTouch" : {
            "description" : "Afterpay Touch details.",
            "$ref" : "#/components/schemas/AfterpayTouchInfo"
          },
          "applePay" : {
            "description" : "Apple Pay details.",
            "$ref" : "#/components/schemas/ApplePayInfo"
          },
          "bcmc" : {
            "description" : "Bancontact details.",
            "$ref" : "#/components/schemas/BcmcInfo"
          },
          "businessLineId" : {
            "description" : "The unique identifier of the business line.",
            "type" : "string"
          },
          "cartesBancaires" : {
            "description" : "Cartes Bancaires details.",
            "$ref" : "#/components/schemas/CartesBancairesInfo"
          },
          "clearpay" : {
            "description" : "Clearpay details.",
            "$ref" : "#/components/schemas/ClearpayInfo"
          },
          "countries" : {
            "description" : "The list of countries where a payment method is available. By default, all countries supported by the payment method.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "cup" : {
            "description" : "China Union Pay details.",
            "$ref" : "#/components/schemas/GenericPmWithTdiInfo"
          },
          "currencies" : {
            "description" : "The list of currencies that a payment method supports. By default, all currencies supported by the payment method.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "customRoutingFlags" : {
            "description" : "The list of custom routing flags to route payment to the intended acquirer.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "diners" : {
            "description" : "Diners details.",
            "$ref" : "#/components/schemas/GenericPmWithTdiInfo"
          },
          "discover" : {
            "description" : "Discover details.",
            "$ref" : "#/components/schemas/GenericPmWithTdiInfo"
          },
          "eftpos_australia" : {
            "description" : "Eftpos Australia details.",
            "$ref" : "#/components/schemas/GenericPmWithTdiInfo"
          },
          "giroPay" : {
            "description" : "giropay details.",
            "$ref" : "#/components/schemas/GiroPayInfo"
          },
          "girocard" : {
            "description" : "Girocard details.",
            "$ref" : "#/components/schemas/GenericPmWithTdiInfo"
          },
          "googlePay" : {
            "description" : "Google Pay details.",
            "$ref" : "#/components/schemas/GooglePayInfo"
          },
          "ideal" : {
            "description" : "iDeal details.",
            "$ref" : "#/components/schemas/GenericPmWithTdiInfo"
          },
          "interac_card" : {
            "description" : "Interac Card details.",
            "$ref" : "#/components/schemas/GenericPmWithTdiInfo"
          },
          "jcb" : {
            "description" : "JCB details.",
            "$ref" : "#/components/schemas/GenericPmWithTdiInfo"
          },
          "klarna" : {
            "description" : "Klarna details.",
            "$ref" : "#/components/schemas/KlarnaInfo"
          },
          "maestro" : {
            "description" : "Maestro details.",
            "$ref" : "#/components/schemas/GenericPmWithTdiInfo"
          },
          "mc" : {
            "description" : "MasterCard details.",
            "$ref" : "#/components/schemas/GenericPmWithTdiInfo"
          },
          "mealVoucher_FR" : {
            "description" : "Meal Voucher FR details.",
            "$ref" : "#/components/schemas/MealVoucherFRInfo"
          },
          "paypal" : {
            "description" : "PayPal details.",
            "$ref" : "#/components/schemas/PayPalInfo"
          },
          "reference" : {
            "description" : "Your reference for the payment method. Supported characters a-z, A-Z, 0-9.",
            "maxLength" : 150,
            "type" : "string"
          },
          "shopperInteraction" : {
            "description" : "The sales channel. Required if the merchant account does not have a sales channel. When you provide this field, it overrides the default sales channel set on the merchant account.\n\nPossible values: **eCommerce**, **pos**, **contAuth**, and **moto**. ",
            "enum" : [
              "eCommerce",
              "pos",
              "moto",
              "contAuth"
            ],
            "type" : "string"
          },
          "sofort" : {
            "description" : "Sofort details.",
            "$ref" : "#/components/schemas/SofortInfo"
          },
          "storeIds" : {
            "x-addedInVersion" : "3",
            "description" : "The unique identifier of the store for which to configure the payment method, if any.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "swish" : {
            "description" : "Swish details.",
            "$ref" : "#/components/schemas/SwishInfo"
          },
          "twint" : {
            "description" : "Twint details.",
            "$ref" : "#/components/schemas/TwintInfo"
          },
          "type" : {
            "description" : "Payment method [variant](https://docs.adyen.com/development-resources/paymentmethodvariant#management-api).",
            "enum" : [
              "afterpaytouch",
              "alipay",
              "alipay_hk",
              "amex",
              "applepay",
              "bcmc",
              "blik",
              "cartebancaire",
              "clearpay",
              "cup",
              "diners",
              "directdebit_GB",
              "discover",
              "ebanking_FI",
              "eftpos_australia",
              "elo",
              "elocredit",
              "elodebit",
              "girocard",
              "googlepay",
              "hiper",
              "hipercard",
              "ideal",
              "interac_card",
              "jcb",
              "klarna",
              "klarna_account",
              "klarna_paynow",
              "maestro",
              "mbway",
              "mc",
              "mcdebit",
              "mealVoucher_FR",
              "mobilepay",
              "multibanco",
              "onlineBanking_PL",
              "paybybank",
              "paypal",
              "payshop",
              "swish",
              "trustly",
              "twint",
              "twint_pos",
              "vipps",
              "visa",
              "visadebit",
              "vpay",
              "wechatpay",
              "wechatpay_pos"
            ],
            "type" : "string"
          },
          "vipps" : {
            "description" : "Vipps details.",
            "$ref" : "#/components/schemas/VippsInfo"
          },
          "visa" : {
            "description" : "Visa details.",
            "$ref" : "#/components/schemas/GenericPmWithTdiInfo"
          }
        },
        "required" : [
          "type"
        ],
        "type" : "object"
      },
      "PayoutSettings" : {
        "properties" : {
          "allowed" : {
            "description" : "Indicates if payouts to the bank account are allowed. This value is set automatically based on the status of the verification process. The value is:\n\n* **true** if `verificationStatus` is **valid**.\n* **false** for all other values.",
            "type" : "boolean"
          },
          "enabled" : {
            "description" : "Indicates if payouts to this bank account are enabled. Default: **true**.\n\nTo receive payouts into this bank account, both `enabled` and `allowed` must be **true**.",
            "type" : "boolean"
          },
          "enabledFromDate" : {
            "description" : "The date when Adyen starts paying out to this bank account.\n\nFormat: [ISO 8601](https://www.w3.org/TR/NOTE-datetime), for example, **2019-11-23T12:25:28Z** or **2020-05-27T20:25:28+08:00**.\n\nIf not specified, the `enabled` field indicates if payouts are enabled for this bank account.\n\nIf a date is specified and:\n\n* `enabled`: **true**, payouts are enabled starting the specified date.\n* `enabled`: **false**, payouts are disabled until the specified date. On the specified date, `enabled` changes to **true** and this field is reset to **null**.",
            "type" : "string"
          },
          "id" : {
            "description" : "The unique identifier of the payout setting.",
            "type" : "string"
          },
          "priority" : {
            "description" : "Determines how long it takes for the funds to reach the bank account. Adyen pays out based on the [payout frequency](https://docs.adyen.com/account/getting-paid#payout-frequency). Depending on the currencies and banks involved in transferring the money, it may take up to three days for the payout funds to arrive in the bank account.\n\n Possible values:\n* **first**: same day.\n* **urgent**: the next day.\n* **normal**: between 1 and 3 days.",
            "enum" : [
              "first",
              "normal",
              "urgent"
            ],
            "type" : "string"
          },
          "transferInstrumentId" : {
            "description" : "The unique identifier of the [transfer instrument](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/transferInstruments) that contains the details of the bank account.",
            "type" : "string"
          },
          "verificationStatus" : {
            "description" : "The status of the verification process for the bank account.\n\nPossible values:\n* **valid**: the verification was successful.\n* **pending**: the verification is in progress.\n* **invalid**: the information provided is not complete.\n* **rejected**:  there are reasons to refuse working with this entity.",
            "enum" : [
              "invalid",
              "pending",
              "rejected",
              "valid"
            ],
            "type" : "string"
          }
        },
        "required" : [
          "transferInstrumentId",
          "id"
        ],
        "type" : "object"
      },
      "PayoutSettingsRequest" : {
        "properties" : {
          "enabled" : {
            "description" : "Indicates if payouts to this bank account are enabled. Default: **true**.\n\nTo receive payouts into this bank account, both `enabled` and `allowed` must be **true**.",
            "type" : "boolean"
          },
          "enabledFromDate" : {
            "description" : "The date when Adyen starts paying out to this bank account.\n\nFormat: [ISO 8601](https://www.w3.org/TR/NOTE-datetime), for example, **2019-11-23T12:25:28Z** or **2020-05-27T20:25:28+08:00**.\n\nIf not specified, the `enabled` field indicates if payouts are enabled for this bank account.\n\nIf a date is specified and:\n\n* `enabled`: **true**, payouts are enabled starting the specified date.\n* `enabled`: **false**, payouts are disabled until the specified date. On the specified date, `enabled` changes to **true** and this field is reset to **null**.",
            "type" : "string"
          },
          "transferInstrumentId" : {
            "description" : "The unique identifier of the [transfer instrument](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/transferInstruments) that contains the details of the bank account.",
            "type" : "string"
          }
        },
        "required" : [
          "transferInstrumentId"
        ],
        "type" : "object"
      },
      "PayoutSettingsResponse" : {
        "properties" : {
          "data" : {
            "description" : "The list of payout accounts.",
            "items" : {
              "$ref" : "#/components/schemas/PayoutSettings"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "Profile" : {
        "properties" : {
          "authType" : {
            "description" : "The type of Wi-Fi network. Possible values: **wpa-psk**, **wpa2-psk**, **wpa-eap**, **wpa2-eap**.",
            "type" : "string"
          },
          "autoWifi" : {
            "description" : "Indicates whether to automatically select the best authentication method available. Does not work on older terminal models.",
            "type" : "boolean"
          },
          "bssType" : {
            "description" : "Use **infra** for infrastructure-based networks. This applies to most networks. Use **adhoc** only if the communication is p2p-based between base stations.",
            "type" : "string"
          },
          "channel" : {
            "description" : "The channel number of the Wi-Fi network. The recommended setting is **0** for automatic channel selection.",
            "format" : "int32",
            "type" : "integer"
          },
          "defaultProfile" : {
            "description" : "Indicates whether this is your preferred wireless network. If **true**, the terminal will try connecting to this network first.",
            "type" : "boolean"
          },
          "eap" : {
            "description" : "For `authType` **wpa-eap** or **wpa2-eap**. Possible values: **tls**, **peap**, **leap**, **fast**",
            "type" : "string"
          },
          "eapCaCert" : {
            "description" : "For `authType` **wpa-eap** or **wpa2-eap**. The root certificate from the CA that signed the certificate of the RADIUS server that is part of your wireless network.",
            "$ref" : "#/components/schemas/File"
          },
          "eapClientCert" : {
            "description" : "For `eap` **tls**. The certificate chain for the terminals. All terminals in the same network will use the same EAP client certificate.",
            "$ref" : "#/components/schemas/File"
          },
          "eapClientKey" : {
            "description" : "For `eap` **tls**. The RSA private key for the client. Include the lines BEGIN RSA PRIVATE KEY and END RSA PRIVATE KEY.",
            "$ref" : "#/components/schemas/File"
          },
          "eapClientPwd" : {
            "description" : "For `eap` **tls**. The password of the RSA key file, if that file is password-protected.",
            "type" : "string"
          },
          "eapIdentity" : {
            "description" : "For `authType` **wpa-eap** or **wpa2-eap**. The EAP-PEAP username from your MS-CHAP account. Must match the configuration of your RADIUS server.",
            "type" : "string"
          },
          "eapIntermediateCert" : {
            "description" : "For `eap` **tls**. The EAP intermediate certificate.",
            "$ref" : "#/components/schemas/File"
          },
          "eapPwd" : {
            "description" : "For `eap` **peap**. The EAP-PEAP password from your MS-CHAP account. Must match the configuration of your RADIUS server.",
            "type" : "string"
          },
          "hiddenSsid" : {
            "description" : "Indicates if the network doesn't broadcast its SSID. Mandatory for Android terminals, because these terminals rely on this setting to be able to connect to any network.",
            "type" : "boolean"
          },
          "name" : {
            "description" : "Your name for the Wi-Fi profile.",
            "type" : "string"
          },
          "psk" : {
            "description" : "For `authType` **wpa-psk or **wpa2-psk**. The password to the wireless network.",
            "type" : "string"
          },
          "ssid" : {
            "description" : "The name of the wireless network.",
            "type" : "string"
          },
          "wsec" : {
            "description" : "The type of encryption. Possible values: **auto**, **ccmp** (recommended), **tkip**",
            "type" : "string"
          }
        },
        "required" : [
          "ssid",
          "bssType",
          "authType",
          "wsec"
        ],
        "type" : "object"
      },
      "ReceiptOptions" : {
        "properties" : {
          "logo" : {
            "description" : "The receipt logo converted to a Base64-encoded string. The image must be a .bmp file of < 256 KB, dimensions 240 (H) x 384 (W) px.",
            "maxLength" : 350000,
            "type" : "string"
          },
          "qrCodeData" : {
            "description" : "Data to print on the receipt as a QR code. This can include static text and the following variables:\n\n- `${merchantreference}`: the merchant reference of the transaction.\n- `${pspreference}`: the PSP reference of the transaction.\n\n For example, **http://www.example.com/order/${pspreference}/${merchantreference}**.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ReceiptPrinting" : {
        "properties" : {
          "merchantApproved" : {
            "description" : "Print a merchant receipt when the payment is approved.",
            "type" : "boolean"
          },
          "merchantCancelled" : {
            "description" : "Print a merchant receipt when the transaction is cancelled.",
            "type" : "boolean"
          },
          "merchantCaptureApproved" : {
            "description" : "Print a merchant receipt when capturing the payment is approved.",
            "type" : "boolean"
          },
          "merchantCaptureRefused" : {
            "description" : "Print a merchant receipt when capturing the payment is refused.",
            "type" : "boolean"
          },
          "merchantRefundApproved" : {
            "description" : "Print a merchant receipt when the refund is approved.",
            "type" : "boolean"
          },
          "merchantRefundRefused" : {
            "description" : "Print a merchant receipt when the refund is refused.",
            "type" : "boolean"
          },
          "merchantRefused" : {
            "description" : "Print a merchant receipt when the payment is refused.",
            "type" : "boolean"
          },
          "merchantVoid" : {
            "description" : "Print a merchant receipt when a previous transaction is voided.",
            "type" : "boolean"
          },
          "shopperApproved" : {
            "description" : "Print a shopper receipt when the payment is approved.",
            "type" : "boolean"
          },
          "shopperCancelled" : {
            "description" : "Print a shopper receipt when the transaction is cancelled.",
            "type" : "boolean"
          },
          "shopperCaptureApproved" : {
            "description" : "Print a shopper receipt when capturing the payment is approved.",
            "type" : "boolean"
          },
          "shopperCaptureRefused" : {
            "description" : "Print a shopper receipt when capturing the payment is refused.",
            "type" : "boolean"
          },
          "shopperRefundApproved" : {
            "description" : "Print a shopper receipt when the refund is approved.",
            "type" : "boolean"
          },
          "shopperRefundRefused" : {
            "description" : "Print a shopper receipt when the refund is refused.",
            "type" : "boolean"
          },
          "shopperRefused" : {
            "description" : "Print a shopper receipt when the payment is refused.",
            "type" : "boolean"
          },
          "shopperVoid" : {
            "description" : "Print a shopper receipt when a previous transaction is voided.",
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "ReleaseUpdateDetails" : {
        "additionalProperties" : false,
        "properties" : {
          "type" : {
            "default" : "ReleaseUpdate",
            "description" : "Type of terminal action: Update Release.",
            "enum" : [
              "ReleaseUpdate"
            ],
            "type" : "string"
          },
          "updateAtFirstMaintenanceCall" : {
            "description" : "Boolean flag that tells if the terminal should update at the first next maintenance call. If false, terminal will update on its configured reboot time.",
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "RequestActivationResponse" : {
        "properties" : {
          "companyId" : {
            "description" : "The unique identifier of the company account.",
            "type" : "string"
          },
          "merchantId" : {
            "description" : "The unique identifier of the merchant account you requested to activate.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "RestServiceError" : {
        "properties" : {
          "detail" : {
            "description" : "A human-readable explanation specific to this occurrence of the problem.",
            "type" : "string"
          },
          "errorCode" : {
            "description" : "A code that identifies the problem type.",
            "type" : "string"
          },
          "instance" : {
            "description" : "A unique URI that identifies the specific occurrence of the problem.",
            "type" : "string"
          },
          "invalidFields" : {
            "description" : "Detailed explanation of each validation error, when applicable.",
            "items" : {
              "$ref" : "#/components/schemas/InvalidField"
            },
            "type" : "array"
          },
          "requestId" : {
            "description" : "A unique reference for the request, essentially the same as `pspReference`.",
            "type" : "string"
          },
          "response" : {
            "description" : "JSON response payload.",
            "$ref" : "#/components/schemas/JSONObject"
          },
          "status" : {
            "description" : "The HTTP status code.",
            "format" : "int32",
            "type" : "integer"
          },
          "title" : {
            "description" : "A short, human-readable summary of the problem type.",
            "type" : "string"
          },
          "type" : {
            "description" : "A URI that identifies the problem type, pointing to human-readable documentation on this problem type.",
            "type" : "string"
          }
        },
        "required" : [
          "type",
          "errorCode",
          "title",
          "detail",
          "status"
        ],
        "type" : "object"
      },
      "ScheduleTerminalActionsRequest" : {
        "properties" : {
          "actionDetails" : {
            "description" : "Information about the action to take.",
            "oneOf" : [
              {
                "$ref" : "#/components/schemas/InstallAndroidAppDetails"
              },
              {
                "$ref" : "#/components/schemas/InstallAndroidCertificateDetails"
              },
              {
                "$ref" : "#/components/schemas/ReleaseUpdateDetails"
              },
              {
                "$ref" : "#/components/schemas/UninstallAndroidAppDetails"
              },
              {
                "$ref" : "#/components/schemas/UninstallAndroidCertificateDetails"
              }
            ]
          },
          "scheduledAt" : {
            "description" : "The date and time when the action should happen. \nFormat: [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339), but without the **Z** before the time offset. For example, **2021-11-15T12:16:21+01:00** \nThe action is sent with the first [maintenance call](https://docs.adyen.com/point-of-sale/automating-terminal-management/terminal-actions-api#when-actions-take-effect) after the specified date and time in the time zone of the terminal. \nAn empty value causes the action to be sent as soon as possible: at the next maintenance call.",
            "type" : "string"
          },
          "storeId" : {
            "description" : "The unique ID of the [store](https://docs.adyen.com/api-explorer/#/ManagementService/latest/get/stores). If present, all terminals in the `terminalIds` list must be assigned to this store.",
            "type" : "string"
          },
          "terminalIds" : {
            "description" : "A list of unique IDs of the terminals to apply the action to. You can extract the IDs from the [GET `/terminals`](https://docs.adyen.com/api-explorer/#/ManagementService/latest/get/terminals) response. Maximum length: 100 IDs.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "ScheduleTerminalActionsResponse" : {
        "properties" : {
          "actionDetails" : {
            "description" : "Information about the action to take.",
            "oneOf" : [
              {
                "$ref" : "#/components/schemas/InstallAndroidAppDetails"
              },
              {
                "$ref" : "#/components/schemas/InstallAndroidCertificateDetails"
              },
              {
                "$ref" : "#/components/schemas/ReleaseUpdateDetails"
              },
              {
                "$ref" : "#/components/schemas/UninstallAndroidAppDetails"
              },
              {
                "$ref" : "#/components/schemas/UninstallAndroidCertificateDetails"
              }
            ]
          },
          "items" : {
            "x-addedInVersion" : "1",
            "description" : "A list containing a terminal ID and an action ID for each terminal that the action was scheduled for.",
            "items" : {
              "$ref" : "#/components/schemas/TerminalActionScheduleDetail"
            },
            "type" : "array"
          },
          "scheduledAt" : {
            "description" : "The date and time when the action should happen. \nFormat: [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339), but without the **Z** before the time offset. For example, **2021-11-15T12:16:21+01:00** \nThe action is sent with the first [maintenance call](https://docs.adyen.com/point-of-sale/automating-terminal-management/terminal-actions-api#when-actions-take-effect) after the specified date and time in the time zone of the terminal. \nAn empty value causes the action to be sent as soon as possible: at the next maintenance call.",
            "type" : "string"
          },
          "storeId" : {
            "description" : "The unique ID of the [store](https://docs.adyen.com/api-explorer/#/ManagementService/latest/get/stores). If present, all terminals in the `terminalIds` list must be assigned to this store.",
            "type" : "string"
          },
          "terminalsWithErrors" : {
            "additionalProperties" : {
              "items" : {
                "type" : "string"
              },
              "type" : "array"
            },
            "description" : "The validation errors that occurred in the list of terminals, and for each error the IDs of the terminals that the error applies to.",
            "type" : "object"
          },
          "totalErrors" : {
            "description" : "The number of terminals for which scheduling the action failed.",
            "format" : "int32",
            "type" : "integer"
          },
          "totalScheduled" : {
            "description" : "The number of terminals for which the action was successfully scheduled. This doesn't mean the action has happened yet.",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "Settings" : {
        "properties" : {
          "band" : {
            "description" : "The preferred Wi-Fi band, for use if the terminals support multiple bands. Possible values: All, 2.4GHz, 5GHz.",
            "type" : "string"
          },
          "roaming" : {
            "description" : "Indicates whether roaming is enabled on the terminals.",
            "type" : "boolean"
          },
          "timeout" : {
            "description" : "The connection time-out in seconds. Minimum value: 0.",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "ShippingLocation" : {
        "properties" : {
          "address" : {
            "description" : "The address details of the shipping location.",
            "$ref" : "#/components/schemas/Address"
          },
          "contact" : {
            "description" : "The contact details for the shipping location.",
            "$ref" : "#/components/schemas/Contact"
          },
          "id" : {
            "description" : "The unique identifier of the shipping location, for use as `shippingLocationId` when creating an order.",
            "type" : "string"
          },
          "name" : {
            "description" : "The unique name of the shipping location.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ShippingLocationsResponse" : {
        "properties" : {
          "data" : {
            "description" : "Physical locations where orders can be shipped to.",
            "items" : {
              "$ref" : "#/components/schemas/ShippingLocation"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "Signature" : {
        "properties" : {
          "askSignatureOnScreen" : {
            "description" : "If `skipSignature` is false, indicates whether the shopper should provide a signature on the display (**true**) or on the merchant receipt (**false**).",
            "type" : "boolean"
          },
          "deviceName" : {
            "description" : "Name that identifies the terminal.",
            "type" : "string"
          },
          "deviceSlogan" : {
            "description" : "Slogan shown on the start screen of the device.",
            "maxLength" : 50,
            "type" : "string"
          },
          "skipSignature" : {
            "description" : "Skip asking for a signature. This is possible because all global card schemes (American Express, Diners, Discover, JCB, MasterCard, VISA, and UnionPay) regard a signature as optional.",
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "SofortInfo" : {
        "properties" : {
          "currencyCode" : {
            "description" : "Sofort currency code. For example, **EUR**.",
            "type" : "string"
          },
          "logo" : {
            "description" : "Sofort logo. Format: Base64-encoded string.",
            "type" : "string"
          }
        },
        "required" : [
          "logo",
          "currencyCode"
        ],
        "type" : "object"
      },
      "SplitConfiguration" : {
        "properties" : {
          "description" : {
            "description" : "Your description for the split configuration.",
            "maxLength" : 300,
            "type" : "string"
          },
          "rules" : {
            "description" : "Array of rules that define the split configuration behavior.",
            "items" : {
              "$ref" : "#/components/schemas/SplitConfigurationRule"
            },
            "type" : "array"
          },
          "splitConfigurationId" : {
            "description" : "Unique identifier of the split configuration.",
            "readOnly" : true,
            "type" : "string"
          },
          "stores" : {
            "description" : "List of stores to which the split configuration applies.",
            "items" : {
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array"
          }
        },
        "required" : [
          "description",
          "rules"
        ],
        "type" : "object"
      },
      "SplitConfigurationList" : {
        "properties" : {
          "data" : {
            "description" : "List of split configurations applied to the stores under the merchant account.",
            "items" : {
              "$ref" : "#/components/schemas/SplitConfiguration"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "SplitConfigurationLogic" : {
        "properties" : {
          "acquiringFees" : {
            "description" : "Specifies the logic to apply when booking the transaction fees. Should be combined with adyenFees.\n\nPossible values: **deductFromLiableAccount**, **deductFromOneBalanceAccount**.",
            "enum" : [
              "deductFromLiableAccount",
              "deductFromOneBalanceAccount"
            ],
            "type" : "string"
          },
          "additionalCommission" : {
            "description" : "Contains the logic used to calculate your user's commission, booked directly to their balance account.",
            "$ref" : "#/components/schemas/AdditionalCommission"
          },
          "adyenCommission" : {
            "description" : "Specifies the logic to apply when booking the transaction fees. Should be combined with schemeFee, interchange & adyenMarkup.\n\nPossible values: **deductFromLiableAccount**, **deductFromOneBalanceAccount**.",
            "enum" : [
              "deductFromLiableAccount",
              "deductFromOneBalanceAccount"
            ],
            "type" : "string"
          },
          "adyenFees" : {
            "description" : "Specifies the logic to apply when booking the transaction fees. Should be combined with acquiringFees.\n\nPossible values: **deductFromLiableAccount**, **deductFromOneBalanceAccount**.",
            "enum" : [
              "deductFromLiableAccount",
              "deductFromOneBalanceAccount"
            ],
            "type" : "string"
          },
          "adyenMarkup" : {
            "description" : "Specifies the logic to apply when booking the transaction fees. Should be combined with schemeFee, adyenCommission & interchange.\n\nPossible values: **deductFromLiableAccount**, **deductFromOneBalanceAccount**.",
            "enum" : [
              "deductFromLiableAccount",
              "deductFromOneBalanceAccount"
            ],
            "type" : "string"
          },
          "chargeback" : {
            "description" : "Specifies the logic to apply when booking the chargeback amount.\n\nPossible values: **deductFromLiableAccount**, **deductFromOneBalanceAccount**, **deductAccordingToSplitRatio**.",
            "enum" : [
              "deductFromLiableAccount",
              "deductFromOneBalanceAccount",
              "deductAccordingToSplitRatio"
            ],
            "type" : "string"
          },
          "chargebackCostAllocation" : {
            "description" : "Specifies the logic to apply when allocating the chargeback costs.\n\nPossible values: **deductFromLiableAccount**, **deductFromOneBalanceAccount**",
            "enum" : [
              "deductFromLiableAccount",
              "deductFromOneBalanceAccount"
            ],
            "type" : "string"
          },
          "commission" : {
            "description" : "Contains the logic used to the calculate your platform's commission, booked to your liable balance account.",
            "$ref" : "#/components/schemas/Commission"
          },
          "interchange" : {
            "description" : "Specifies the logic to apply when booking the transaction fees. Should be combined with schemeFee, adyenCommission & adyenMarkup.\n\nPossible values: **deductFromLiableAccount**, **deductFromOneBalanceAccount**.",
            "enum" : [
              "deductFromLiableAccount",
              "deductFromOneBalanceAccount"
            ],
            "type" : "string"
          },
          "paymentFee" : {
            "description" : "Specifies the logic to apply when booking the transaction fees. Cannot be combined with other fees.\n\nPossible values: **deductFromLiableAccount**, **deductFromOneBalanceAccount**.",
            "enum" : [
              "deductFromLiableAccount",
              "deductFromOneBalanceAccount"
            ],
            "type" : "string"
          },
          "remainder" : {
            "description" : "Specifies the logic to apply when booking the amount left over after currency conversion.\n\nPossible values: **addToLiableAccount**, **addToOneBalanceAccount**.",
            "enum" : [
              "addToLiableAccount",
              "addToOneBalanceAccount"
            ],
            "type" : "string"
          },
          "schemeFee" : {
            "description" : "Specifies the logic to apply when booking the transaction fees. Should be combined with interchange, adyenCommission & adyenMarkup.\n\nPossible values: **deductFromLiableAccount**, **deductFromOneBalanceAccount**.",
            "enum" : [
              "deductFromLiableAccount",
              "deductFromOneBalanceAccount"
            ],
            "type" : "string"
          },
          "splitLogicId" : {
            "description" : "Unique identifier of the split logic that is applied when the split configuration conditions are met.",
            "readOnly" : true,
            "type" : "string"
          },
          "surcharge" : {
            "description" : "Specifies the logic to apply when booking the surcharge amount.\n\nPossible values: **addToLiableAccount**, **addToOneBalanceAccount**",
            "enum" : [
              "addToLiableAccount",
              "addToOneBalanceAccount"
            ],
            "type" : "string"
          },
          "tip" : {
            "description" : "Specifies the logic to apply when booking tips (gratuity).\n\nPossible values: **addToLiableAccount**, **addToOneBalanceAccount**.",
            "enum" : [
              "addToLiableAccount",
              "addToOneBalanceAccount"
            ],
            "type" : "string"
          }
        },
        "required" : [
          "commission"
        ],
        "type" : "object"
      },
      "SplitConfigurationRule" : {
        "properties" : {
          "currency" : {
            "description" : "The currency condition that defines whether the split logic applies.\nIts value must be a three-character [ISO currency code](https://en.wikipedia.org/wiki/ISO_4217).",
            "type" : "string"
          },
          "fundingSource" : {
            "description" : "The funding source condition of the payment method (only for cards).\n\nPossible values: **credit**, **debit**, or **ANY**.",
            "enum" : [
              "credit",
              "debit",
              "ANY"
            ],
            "type" : "string"
          },
          "paymentMethod" : {
            "description" : "The payment method condition that defines whether the split logic applies.\n\nPossible values:\n* [Payment method variant](https://docs.adyen.com/development-resources/paymentmethodvariant): Apply the split logic for a specific payment method.\n* **ANY**: Apply the split logic for all available payment methods.",
            "type" : "string"
          },
          "ruleId" : {
            "description" : "The unique identifier of the split configuration rule.",
            "readOnly" : true,
            "type" : "string"
          },
          "shopperInteraction" : {
            "description" : "The sales channel condition that defines whether the split logic applies.\n\nPossible values:\n* **Ecommerce**: Online transactions where the cardholder is present.\n* **ContAuth**: Card on file and/or subscription transactions, where the cardholder is known to the merchant (returning customer).\n* **Moto**: Mail-order and telephone-order transactions where the customer is in contact with the merchant via email or telephone.\n* **POS**: Point-of-sale transactions where the customer is physically present to make a payment using a secure payment terminal.\n* **ANY**: All sales channels.",
            "enum" : [
              "Ecommerce",
              "ContAuth",
              "Moto",
              "POS",
              "ANY"
            ],
            "type" : "string"
          },
          "splitLogic" : {
            "description" : "Contains the split logic that is applied if the rule conditions are met.",
            "$ref" : "#/components/schemas/SplitConfigurationLogic"
          }
        },
        "required" : [
          "paymentMethod",
          "shopperInteraction",
          "currency",
          "splitLogic"
        ],
        "type" : "object"
      },
      "Standalone" : {
        "properties" : {
          "currencyCode" : {
            "description" : "The default currency of the standalone payment terminal as an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code.",
            "maxLength" : 3,
            "minLength" : 3,
            "type" : "string"
          },
          "enableStandalone" : {
            "description" : "Enable standalone mode.",
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "Store" : {
        "properties" : {
          "_links" : {
            "description" : "Reference to resources connected with the store.",
            "$ref" : "#/components/schemas/Links"
          },
          "address" : {
            "description" : "The address of the store.",
            "$ref" : "#/components/schemas/StoreLocation"
          },
          "businessLineIds" : {
            "description" : "The unique identifiers of the [business lines](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/businesslines__resParam_id) that the store is associated with.\n If not specified, the business line of the merchant account is used. Required when there are multiple business lines under the merchant account.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "description" : {
            "description" : "The description of the store.",
            "type" : "string"
          },
          "externalReferenceId" : {
            "description" : "When using the Zip payment method: The location ID that Zip has assigned to your store.",
            "type" : "string"
          },
          "id" : {
            "description" : "The unique identifier of the store. This value is generated by Adyen.",
            "type" : "string"
          },
          "merchantId" : {
            "description" : "The unique identifier of the merchant account that the store belongs to.",
            "type" : "string"
          },
          "phoneNumber" : {
            "description" : "The phone number of the store, including '+' and country code in the [E.164](https://en.wikipedia.org/wiki/E.164) format. If passed in a different format, we convert and validate the phone number against E.164. ",
            "type" : "string"
          },
          "reference" : {
            "description" : "A reference to recognize the store by. Also known as the store code.\n Allowed characters: lowercase and uppercase letters without diacritics, numbers 0 through 9, hyphen (-), and underscore (_)",
            "type" : "string"
          },
          "shopperStatement" : {
            "description" : "The store name shown on the shopper's bank or credit card statement and on the shopper receipt.",
            "type" : "string"
          },
          "splitConfiguration" : {
            "description" : "Rules for Adyen for Platform merchants to [split commission fees](https://docs.adyen.com/marketplaces-and-platforms/classic/split-configuration-for-stores).",
            "$ref" : "#/components/schemas/StoreSplitConfiguration"
          },
          "status" : {
            "description" : "The status of the store. Possible values are:\n\n- **active**. This value is assigned automatically when a store is created. \n- **inactive**. The terminals under the store are blocked from accepting new transactions, but capturing outstanding transactions is still possible.\n- **closed**. This status is irreversible. The terminals under the store are reassigned to the merchant inventory.",
            "enum" : [
              "active",
              "closed",
              "inactive"
            ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "StoreCreationRequest" : {
        "properties" : {
          "address" : {
            "description" : "The address of the store.",
            "$ref" : "#/components/schemas/StoreLocation"
          },
          "businessLineIds" : {
            "description" : "The unique identifiers of the [business lines](https://docs.adyen.com/api-explorer/legalentity/latest/post/businessLines#responses-200-id) that the store is associated with.\nIf not specified, the business line of the merchant account is used. Required when there are multiple business lines under the merchant account.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "description" : {
            "description" : "Your description of the store.",
            "type" : "string"
          },
          "externalReferenceId" : {
            "description" : "The unique identifier of the store, used by certain payment methods and tax authorities. Accepts up to 14 digits.\n\nRequired for CNPJ in Brazil, in the format 00.000.000/00git00-00 separated by dots, slashes, hyphens, or without separators.\n\nOptional for Zip in Australia and SIRET in France, required except for nonprofit organizations and incorporated associations.\n\n",
            "type" : "string"
          },
          "phoneNumber" : {
            "description" : "The phone number of the store, including '+' and country code in the [E.164](https://en.wikipedia.org/wiki/E.164) format. If passed in a different format, we convert and validate the phone number against E.164. ",
            "type" : "string"
          },
          "reference" : {
            "description" : "Your reference to recognize the store by. Also known as the store code.\n Allowed characters: lowercase and uppercase letters without diacritics, numbers 0 through 9, hyphen (-), and underscore (_).\n\nIf you do not provide a reference in your POST request, it is populated with the Adyen-generated [id](https://docs.adyen.com/api-explorer/Management/latest/post/stores#responses-200-id).",
            "type" : "string"
          },
          "shopperStatement" : {
            "description" : "The store name to be shown on the shopper's bank or credit card statement and on the shopper receipt.\nMaximum length: 22 characters; can't be all numbers.",
            "type" : "string"
          },
          "splitConfiguration" : {
            "description" : "The configuration of the split.",
            "$ref" : "#/components/schemas/StoreSplitConfiguration"
          }
        },
        "required" : [
          "description",
          "shopperStatement",
          "phoneNumber",
          "address"
        ],
        "type" : "object"
      },
      "StoreCreationWithMerchantCodeRequest" : {
        "properties" : {
          "address" : {
            "description" : "The address of the store.",
            "$ref" : "#/components/schemas/StoreLocation"
          },
          "businessLineIds" : {
            "description" : "The unique identifiers of the [business lines](https://docs.adyen.com/api-explorer/legalentity/latest/post/businessLines#responses-200-id) that the store is associated with.\nIf not specified, the business line of the merchant account is used. Required when there are multiple business lines under the merchant account.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "description" : {
            "description" : "Your description of the store.",
            "type" : "string"
          },
          "externalReferenceId" : {
            "description" : "The unique identifier of the store, used by certain payment methods and tax authorities. Accepts up to 14 digits.\n\nRequired for CNPJ in Brazil, in the format 00.000.000/00git00-00 separated by dots, slashes, hyphens, or without separators.\n\nOptional for Zip in Australia and SIRET in France, required except for nonprofit organizations and incorporated associations.\n\n",
            "type" : "string"
          },
          "merchantId" : {
            "description" : "The unique identifier of the merchant account that the store belongs to.",
            "type" : "string"
          },
          "phoneNumber" : {
            "description" : "The phone number of the store, including '+' and country code in the [E.164](https://en.wikipedia.org/wiki/E.164) format. If passed in a different format, we convert and validate the phone number against E.164. ",
            "type" : "string"
          },
          "reference" : {
            "description" : "Your reference to recognize the store by. Also known as the store code.\n Allowed characters: lowercase and uppercase letters without diacritics, numbers 0 through 9, hyphen (-), and underscore (_).\n\nIf you do not provide a reference in your POST request, it is populated with the Adyen-generated [id](https://docs.adyen.com/api-explorer/Management/latest/post/stores#responses-200-id).",
            "type" : "string"
          },
          "shopperStatement" : {
            "description" : "The store name to be shown on the shopper's bank or credit card statement and on the shopper receipt.\nMaximum length: 22 characters; can't be all numbers.",
            "type" : "string"
          },
          "splitConfiguration" : {
            "description" : "The configuration of the split.",
            "$ref" : "#/components/schemas/StoreSplitConfiguration"
          }
        },
        "required" : [
          "description",
          "shopperStatement",
          "phoneNumber",
          "address",
          "merchantId"
        ],
        "type" : "object"
      },
      "StoreLocation" : {
        "properties" : {
          "city" : {
            "description" : "The name of the city.",
            "type" : "string"
          },
          "country" : {
            "description" : "The two-letter country code in [ISO_3166-1_alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format.",
            "type" : "string"
          },
          "line1" : {
            "description" : "The street address.",
            "type" : "string"
          },
          "line2" : {
            "description" : "Second address line.",
            "type" : "string"
          },
          "line3" : {
            "description" : "Third address line.",
            "type" : "string"
          },
          "postalCode" : {
            "description" : "The postal code.",
            "type" : "string"
          },
          "stateOrProvince" : {
            "description" : "The state or province code as defined in [ISO 3166-2](https://www.iso.org/standard/72483.html). For example, **ON** for Ontario, Canada.\n\nRequired for the following countries:\n - Australia\n- Brazil\n- Canada\n- India\n- Mexico\n- New Zealand\n- United States",
            "type" : "string"
          }
        },
        "required" : [
          "country"
        ],
        "type" : "object"
      },
      "StoreSplitConfiguration" : {
        "properties" : {
          "balanceAccountId" : {
            "description" : "The [balance account](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/balanceAccounts/{id}__queryParam_id) linked to the account holder.",
            "type" : "string"
          },
          "splitConfigurationId" : {
            "description" : "The UUID of the [split configuration](https://docs.adyen.com/marketplaces-and-platforms/classic/split-configuration-for-stores) from the Customer Area.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Surcharge" : {
        "properties" : {
          "askConfirmation" : {
            "description" : "Show the surcharge details on the terminal, so the shopper can confirm.",
            "type" : "boolean"
          },
          "configurations" : {
            "description" : "Surcharge fees or percentages for specific payment methods, funding sources (credit or debit), and currencies.",
            "items" : {
              "$ref" : "#/components/schemas/Configuration"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "SwishInfo" : {
        "properties" : {
          "swishNumber" : {
            "description" : "Swish number. Format: 10 digits without spaces. For example, **1231111111**.",
            "maxLength" : 10,
            "minLength" : 10,
            "type" : "string"
          }
        },
        "required" : [
          "swishNumber"
        ],
        "type" : "object"
      },
      "Terminal" : {
        "properties" : {
          "assignment" : {
            "x-addedInVersion" : "2",
            "description" : "Indicates the account level to which the terminal is assigned, the [assignment status](https://docs.adyen.com/point-of-sale/automating-terminal-management/assign-terminals-api), and where the terminals is in the process of being reassigned to.",
            "$ref" : "#/components/schemas/TerminalAssignment"
          },
          "connectivity" : {
            "x-addedInVersion" : "2",
            "description" : "Information about bluetooth, cellular, ethernet and wifi connectivity for the terminal.",
            "$ref" : "#/components/schemas/TerminalConnectivity"
          },
          "firmwareVersion" : {
            "description" : "The software release currently in use on the terminal.",
            "type" : "string"
          },
          "id" : {
            "description" : "The unique identifier of the terminal.",
            "type" : "string"
          },
          "lastActivityAt" : {
            "x-addedInVersion" : "2",
            "description" : "Date and time of the last activity on the terminal. Not included when the last activity was more than 14 days ago.",
            "format" : "date-time",
            "type" : "string"
          },
          "lastTransactionAt" : {
            "x-addedInVersion" : "2",
            "description" : "Date and time of the last transaction on the terminal. Not included when the last transaction was more than 14 days ago.",
            "format" : "date-time",
            "type" : "string"
          },
          "model" : {
            "x-addedInVersion" : "2",
            "description" : "The model name of the terminal.",
            "type" : "string"
          },
          "serialNumber" : {
            "description" : "The serial number of the terminal.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "TerminalActionScheduleDetail" : {
        "properties" : {
          "id" : {
            "description" : "The ID of the action on the specified terminal.",
            "type" : "string"
          },
          "terminalId" : {
            "description" : "The unique ID of the terminal that the action applies to.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "TerminalAssignment" : {
        "properties" : {
          "companyId" : {
            "description" : "The unique identifier of the company account to which terminal is assigned.",
            "type" : "string"
          },
          "merchantId" : {
            "description" : "The unique identifier of the merchant account to which terminal is assigned.",
            "type" : "string"
          },
          "reassignmentTarget" : {
            "description" : "Indicates where the terminal is in the process of being reassigned to.",
            "$ref" : "#/components/schemas/TerminalReassignmentTarget"
          },
          "status" : {
            "description" : "The status of the reassignment. Possible values: \n * `reassignmentInProgress`: the terminal was boarded and is now scheduled to remove the configuration. Wait for the terminal to synchronize with the Adyen platform.\n * `deployed`: the terminal is deployed and reassigned. \n * `inventory`: the terminal is in inventory and cannot process transactions. \n * `boarded`: the terminal is boarded to a store, or a merchant account representing a store, and can process transactions. \n",
            "enum" : [
              "boarded",
              "deployed",
              "inventory",
              "reassignmentInProgress"
            ],
            "type" : "string"
          },
          "storeId" : {
            "description" : "The unique identifier of the store to which terminal is assigned.",
            "type" : "string"
          }
        },
        "required" : [
          "companyId",
          "status"
        ],
        "type" : "object"
      },
      "TerminalConnectivity" : {
        "properties" : {
          "bluetooth" : {
            "$ref" : "#/components/schemas/TerminalConnectivityBluetooth"
          },
          "cellular" : {
            "$ref" : "#/components/schemas/TerminalConnectivityCellular"
          },
          "ethernet" : {
            "$ref" : "#/components/schemas/TerminalConnectivityEthernet"
          },
          "wifi" : {
            "$ref" : "#/components/schemas/TerminalConnectivityWifi"
          }
        },
        "type" : "object"
      },
      "TerminalConnectivityBluetooth" : {
        "properties" : {
          "ipAddress" : {
            "description" : "The terminal's Bluetooth IP address.",
            "type" : "string"
          },
          "macAddress" : {
            "description" : "The terminal's Bluetooth MAC address.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "TerminalConnectivityCellular" : {
        "properties" : {
          "iccid" : {
            "description" : "The integrated circuit card identifier (ICCID) of the SIM card in the terminal.",
            "type" : "string"
          },
          "status" : {
            "description" : "On a terminal that supports 3G or 4G connectivity, indicates the status of the SIM card in the terminal.",
            "enum" : [
              "activated",
              "deactivated",
              "deprecated",
              "inventory",
              "readyForActivation"
            ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "TerminalConnectivityEthernet" : {
        "properties" : {
          "ipAddress" : {
            "description" : "The terminal's ethernet IP address.",
            "type" : "string"
          },
          "linkNegotiation" : {
            "description" : "The ethernet link negotiation that the terminal uses.",
            "type" : "string"
          },
          "macAddress" : {
            "description" : "The terminal's ethernet MAC address.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "TerminalConnectivityWifi" : {
        "properties" : {
          "ipAddress" : {
            "description" : "The terminal's IP address in the Wi-Fi network.",
            "type" : "string"
          },
          "macAddress" : {
            "description" : "The terminal's MAC address in the Wi-Fi network.",
            "type" : "string"
          },
          "ssid" : {
            "description" : "The SSID of the Wi-Fi network that the terminal is connected to.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "TerminalModelsResponse" : {
        "properties" : {
          "data" : {
            "description" : "The terminal models that the API credential has access to.",
            "items" : {
              "$ref" : "#/components/schemas/IdName"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "TerminalOrder" : {
        "properties" : {
          "billingEntity" : {
            "description" : "The details of the entity that the order is billed to.",
            "$ref" : "#/components/schemas/BillingEntity"
          },
          "customerOrderReference" : {
            "description" : "The merchant-defined purchase order number. This will be printed on the packing list.",
            "type" : "string"
          },
          "id" : {
            "description" : "The unique identifier of the order.",
            "type" : "string"
          },
          "items" : {
            "description" : "The products included in the order.",
            "items" : {
              "$ref" : "#/components/schemas/OrderItem"
            },
            "type" : "array"
          },
          "orderDate" : {
            "description" : "The date and time that the order was placed, in UTC ISO 8601 format. For example, \"2011-12-03T10:15:30Z\".",
            "type" : "string"
          },
          "shippingLocation" : {
            "description" : "The details of the location where the order is shipped to.",
            "$ref" : "#/components/schemas/ShippingLocation"
          },
          "status" : {
            "description" : "The processing status of the order.",
            "type" : "string"
          },
          "trackingUrl" : {
            "description" : "The URL, provided by the carrier company, where the shipment can be tracked.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "TerminalOrderRequest" : {
        "properties" : {
          "billingEntityId" : {
            "description" : "The identification of the billing entity to use for the order.",
            "type" : "string"
          },
          "customerOrderReference" : {
            "description" : "The merchant-defined purchase order reference.",
            "type" : "string"
          },
          "items" : {
            "description" : "The products included in the order.",
            "items" : {
              "$ref" : "#/components/schemas/OrderItem"
            },
            "type" : "array"
          },
          "orderType" : {
            "description" : "Type of order",
            "type" : "string"
          },
          "shippingLocationId" : {
            "description" : "The identification of the shipping location to use for the order.",
            "type" : "string"
          },
          "taxId" : {
            "description" : "The tax number of the billing entity.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "TerminalOrdersResponse" : {
        "properties" : {
          "data" : {
            "description" : "List of orders for payment terminal packages and parts.",
            "items" : {
              "$ref" : "#/components/schemas/TerminalOrder"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "TerminalProduct" : {
        "properties" : {
          "description" : {
            "description" : "Information about items included and integration options.",
            "type" : "string"
          },
          "id" : {
            "description" : "The unique identifier of the product.",
            "type" : "string"
          },
          "itemsIncluded" : {
            "description" : "A list of parts included in the terminal package.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "name" : {
            "description" : "The descriptive name of the product.",
            "type" : "string"
          },
          "price" : {
            "description" : "The price of the product.",
            "$ref" : "#/components/schemas/TerminalProductPrice"
          }
        },
        "type" : "object"
      },
      "TerminalProductPrice" : {
        "properties" : {
          "currency" : {
            "description" : "The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).",
            "type" : "string"
          },
          "value" : {
            "description" : "The price of the item.",
            "format" : "double",
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "TerminalProductsResponse" : {
        "properties" : {
          "data" : {
            "description" : "Terminal products that can be ordered.",
            "items" : {
              "$ref" : "#/components/schemas/TerminalProduct"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "TerminalReassignmentRequest" : {
        "properties" : {
          "companyId" : {
            "description" : "The unique identifier of the company account to which the terminal is reassigned.",
            "type" : "string"
          },
          "inventory" : {
            "description" : "Must be specified when reassigning terminals to a merchant account:\n\n- If set to **true**, reassigns terminals to the inventory of the merchant account and the terminals cannot process transactions.\n\n- If set to **false**, reassigns terminals directly to the merchant account and the terminals can process transactions.",
            "type" : "boolean"
          },
          "merchantId" : {
            "description" : "The unique identifier of the merchant account to which the terminal is reassigned. When reassigning terminals to a merchant account, you must specify the `inventory` field.",
            "type" : "string"
          },
          "storeId" : {
            "description" : "The unique identifier of the store to which the terminal is reassigned.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "TerminalReassignmentTarget" : {
        "properties" : {
          "companyId" : {
            "description" : "The unique identifier of the company account to which the terminal is reassigned.",
            "type" : "string"
          },
          "inventory" : {
            "description" : "Indicates if the terminal is reassigned to the inventory of the merchant account.\n- If **true**, the terminal is in the inventory of the merchant account and cannot process transactions.\n- If **false**, the terminal is reassigned directly to the merchant account and can process transactions.",
            "type" : "boolean"
          },
          "merchantId" : {
            "description" : "The unique identifier of the merchant account to which the terminal is reassigned.",
            "type" : "string"
          },
          "storeId" : {
            "description" : "The unique identifier of the store to which the terminal is reassigned.",
            "type" : "string"
          }
        },
        "required" : [
          "inventory"
        ],
        "type" : "object"
      },
      "TerminalSettings" : {
        "properties" : {
          "cardholderReceipt" : {
            "description" : "Settings to define the header of the shopper receipt.",
            "$ref" : "#/components/schemas/CardholderReceipt"
          },
          "connectivity" : {
            "description" : "Settings for terminal connectivity features.",
            "$ref" : "#/components/schemas/Connectivity"
          },
          "gratuities" : {
            "description" : "Settings for tipping with or without predefined options to choose from. The maximum number of predefined options is four, or three plus the option to enter a custom tip.",
            "items" : {
              "$ref" : "#/components/schemas/Gratuity"
            },
            "type" : "array"
          },
          "hardware" : {
            "description" : "Settings for terminal hardware features.",
            "$ref" : "#/components/schemas/Hardware"
          },
          "localization" : {
            "description" : "Settings for localization.",
            "$ref" : "#/components/schemas/Localization"
          },
          "nexo" : {
            "description" : "Settings for a Terminal API integration.",
            "$ref" : "#/components/schemas/Nexo"
          },
          "offlineProcessing" : {
            "description" : "Settings for [offline payment](https://docs.adyen.com/point-of-sale/offline-payments) features.",
            "$ref" : "#/components/schemas/OfflineProcessing"
          },
          "opi" : {
            "description" : "Settings for an Oracle Payment Interface (OPI) integration.",
            "$ref" : "#/components/schemas/Opi"
          },
          "passcodes" : {
            "description" : "Settings for [passcodes](https://docs.adyen.com/point-of-sale/managing-terminals/menu-access?tab=manage_passcodes_with_an_api_call_2#manage-passcodes) features.",
            "$ref" : "#/components/schemas/Passcodes"
          },
          "payAtTable" : {
            "description" : "Settings for [Pay-at-table](https://docs.adyen.com/point-of-sale/pay-at-x) features.",
            "$ref" : "#/components/schemas/PayAtTable"
          },
          "payment" : {
            "description" : "Settings for payment features.",
            "$ref" : "#/components/schemas/Payment"
          },
          "receiptOptions" : {
            "description" : "Generic receipt settings.",
            "$ref" : "#/components/schemas/ReceiptOptions"
          },
          "receiptPrinting" : {
            "description" : "Transaction outcomes that you want the terminal to print a merchant receipt or a shopper receipt for.",
            "$ref" : "#/components/schemas/ReceiptPrinting"
          },
          "signature" : {
            "description" : "Settings to skip signature, sign on display, or sign on receipt.",
            "$ref" : "#/components/schemas/Signature"
          },
          "standalone" : {
            "description" : "Settings for [standalone](https://docs.adyen.com/point-of-sale/standalone/standalone-build/set-up-standalone#set-up-standalone-using-an-api-call) features.",
            "$ref" : "#/components/schemas/Standalone"
          },
          "surcharge" : {
            "description" : "Settings for payment [surcharge](https://docs.adyen.com/point-of-sale/surcharge) features.",
            "$ref" : "#/components/schemas/Surcharge"
          },
          "timeouts" : {
            "description" : "Settings for device [time-outs](https://docs.adyen.com/point-of-sale/pos-timeouts#device-time-out).",
            "$ref" : "#/components/schemas/Timeouts"
          },
          "wifiProfiles" : {
            "description" : "Remote Wi-Fi profiles for WPA and WPA2 PSK and EAP Wi-Fi networks.",
            "$ref" : "#/components/schemas/WifiProfiles"
          }
        },
        "type" : "object"
      },
      "TestCompanyWebhookRequest" : {
        "properties" : {
          "merchantIds" : {
            "description" : "List of `merchantId` values for which test webhooks will be sent. The list can have a maximum of 20 `merchantId` values.\n\nIf not specified, we send sample notifications to all the merchant accounts that the webhook is configured for. If this is more than 20 merchant accounts, use this list to specify a subset of the merchant accounts for which to send test notifications.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "notification" : {
            "description" : "Custom test notification object. Required when the [`types`](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/companies/{companyId}/webhooks/{webhookId}/test__reqParam_types) list contains **CUSTOM**.",
            "$ref" : "#/components/schemas/CustomNotification"
          },
          "types" : {
            "description" : "List of event codes for which to send test notifications. Only the webhook types below are supported. \n\nPossible values if webhook `type`: **standard**:\n\n* **AUTHORISATION**\n* **CHARGEBACK_REVERSED**\n* **ORDER_CLOSED**\n* **ORDER_OPENED**\n* **PAIDOUT_REVERSED**\n* **PAYOUT_THIRDPARTY**\n* **REFUNDED_REVERSED**\n* **REFUND_WITH_DATA**\n* **REPORT_AVAILABLE**\n* **CUSTOM** - set your custom notification fields in the [`notification`](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/companies/{companyId}/webhooks/{webhookId}/test__reqParam_notification) object.\n\nPossible values if webhook `type`: **banktransfer-notification**:\n\n* **PENDING**\n\nPossible values if webhook `type`: **report-notification**:\n\n* **REPORT_AVAILABLE**\n\nPossible values if webhook `type`: **ideal-notification**:\n\n* **AUTHORISATION**\n\nPossible values if webhook `type`: **pending-notification**:\n\n* **PENDING**\n",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "TestOutput" : {
        "properties" : {
          "merchantId" : {
            "description" : "Unique identifier of the merchant account that the notification is about.",
            "type" : "string"
          },
          "output" : {
            "description" : "The response your server returned for the test webhook.\n\nYour server must respond with **[accepted]** for the test webhook to be successful (`data.status`: **success**). Find out more about [accepting notifications](https://docs.adyen.com/development-resources/webhooks#accept-notifications)\n\nYou can use the value of this field together with the [`responseCode`](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/merchants/{merchantId}/webhooks/{id}/test__resParam_data-responseCode) value to troubleshoot unsuccessful test webhooks.",
            "type" : "string"
          },
          "requestSent" : {
            "description" : "The [body of the notification webhook](https://docs.adyen.com/development-resources/webhooks/understand-notifications#notification-structure) that was sent to your server.",
            "type" : "string"
          },
          "responseCode" : {
            "description" : "The HTTP response code for your server's response to the test webhook.\n\nYou can use the value of this field together with the the [`output`](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/merchants/{merchantId}/webhooks/{id}/test__resParam_data-output) field value to troubleshoot failed test webhooks.",
            "example" : "200",
            "type" : "string"
          },
          "responseTime" : {
            "description" : "The time between sending the test webhook and receiving the response from your server. You can use it as an indication of how long your server takes to process a webhook notification. Measured in milliseconds, for example **304 ms**.",
            "type" : "string"
          },
          "status" : {
            "description" : "The status of the test request. Possible values are:\n* **success**, if `data.output`: **[accepted]** and `data.responseCode`: **200**.\n* **failed**, in all other cases.\n\nYou can use the value of the [`output`](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/merchants/{merchantId}/webhooks/{id}/test__resParam_data-output) field together with the [`responseCode`](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/merchants/{merchantId}/webhooks/{id}/test__resParam_data-responseCode) value to troubleshoot failed test webhooks.",
            "type" : "string"
          }
        },
        "required" : [
          "status"
        ],
        "type" : "object"
      },
      "TestWebhookRequest" : {
        "properties" : {
          "notification" : {
            "description" : "Custom test notification object. Required when the [`types`](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/companies/{companyId}/webhooks/{webhookId}/test__reqParam_types) list contains **CUSTOM**.",
            "$ref" : "#/components/schemas/CustomNotification"
          },
          "types" : {
            "description" : "List of event codes for which to send test notifications. Only the webhook types below are supported. \n\nPossible values if webhook `type`: **standard**:\n\n* **AUTHORISATION**\n* **CHARGEBACK_REVERSED**\n* **ORDER_CLOSED**\n* **ORDER_OPENED**\n* **PAIDOUT_REVERSED**\n* **PAYOUT_THIRDPARTY**\n* **REFUNDED_REVERSED**\n* **REFUND_WITH_DATA**\n* **REPORT_AVAILABLE**\n* **CUSTOM** - set your custom notification fields in the [`notification`](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/companies/{companyId}/webhooks/{webhookId}/test__reqParam_notification) object.\n\nPossible values if webhook `type`: **banktransfer-notification**:\n\n* **PENDING**\n\nPossible values if webhook `type`: **report-notification**:\n\n* **REPORT_AVAILABLE**\n\nPossible values if webhook `type`: **ideal-notification**:\n\n* **AUTHORISATION**\n\nPossible values if webhook `type`: **pending-notification**:\n\n* **PENDING**\n",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "TestWebhookResponse" : {
        "properties" : {
          "data" : {
            "description" : "List with test results. Each test webhook we send has a list element with the result.",
            "items" : {
              "$ref" : "#/components/schemas/TestOutput"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "Timeouts" : {
        "properties" : {
          "fromActiveToSleep" : {
            "description" : "Indicates the number of seconds of inactivity after which the terminal display goes into sleep mode.",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "TransactionDescriptionInfo" : {
        "properties" : {
          "doingBusinessAsName" : {
            "description" : "The text to be shown on the shopper's bank statement.\n We recommend sending a maximum of 22 characters, otherwise banks might truncate the string.\n Allowed characters: **a-z**, **A-Z**, **0-9**, spaces, and special characters **. , ' _ - ? + * /**.",
            "maxLength" : 22,
            "type" : "string"
          },
          "type" : {
            "default" : "dynamic",
            "description" : "The type of transaction description you want to use:\n- **fixed**: The transaction description set in this request is used for all payments with this payment method.\n- **append**: The transaction description set in this request is used as a base for all payments with this payment method. The [transaction description set in the request to process the payment](https://docs.adyen.com/api-explorer/Checkout/70/post/sessions#request-shopperStatement) is appended to this base description. Note that if the combined length exceeds 22 characters, banks may truncate the string.\n- **dynamic**: Only the [transaction description set in the request to process the payment](https://docs.adyen.com/api-explorer/Checkout/70/post/sessions#request-shopperStatement) is used for payments with this payment method.",
            "enum" : [
              "append",
              "dynamic",
              "fixed"
            ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "TwintInfo" : {
        "properties" : {
          "logo" : {
            "description" : "Twint logo. Format: Base64-encoded string.",
            "type" : "string"
          }
        },
        "required" : [
          "logo"
        ],
        "type" : "object"
      },
      "UninstallAndroidAppDetails" : {
        "additionalProperties" : false,
        "properties" : {
          "appId" : {
            "description" : "The unique identifier of the app to be uninstalled.",
            "type" : "string"
          },
          "type" : {
            "default" : "UninstallAndroidApp",
            "description" : "Type of terminal action: Uninstall an Android app.",
            "enum" : [
              "UninstallAndroidApp"
            ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "UninstallAndroidCertificateDetails" : {
        "additionalProperties" : false,
        "properties" : {
          "certificateId" : {
            "description" : "The unique identifier of the certificate to be uninstalled.",
            "type" : "string"
          },
          "type" : {
            "default" : "UninstallAndroidCertificate",
            "description" : "Type of terminal action: Uninstall an Android certificate.",
            "enum" : [
              "UninstallAndroidCertificate"
            ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "UpdatableAddress" : {
        "properties" : {
          "city" : {
            "description" : "The name of the city.",
            "type" : "string"
          },
          "line1" : {
            "description" : "The street address.",
            "type" : "string"
          },
          "line2" : {
            "description" : "Second address line.",
            "type" : "string"
          },
          "line3" : {
            "description" : "Third address line.",
            "type" : "string"
          },
          "postalCode" : {
            "description" : "The postal code.",
            "type" : "string"
          },
          "stateOrProvince" : {
            "description" : "The state or province code as defined in [ISO 3166-2](https://www.iso.org/standard/72483.html). For example, **ON** for Ontario, Canada.\n\nRequired for the following countries:\n - Australia\n- Brazil\n- Canada\n- India\n- Mexico\n- New Zealand\n- United States",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "UpdateCompanyApiCredentialRequest" : {
        "properties" : {
          "active" : {
            "description" : "Indicates if the API credential is enabled.",
            "type" : "boolean"
          },
          "allowedOrigins" : {
            "description" : "The new list of [allowed origins](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) for the API credential.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "associatedMerchantAccounts" : {
            "description" : "List of merchant accounts that the API credential has access to.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "description" : {
            "description" : "Description of the API credential.",
            "type" : "string"
          },
          "roles" : {
            "description" : "List of [roles](https://docs.adyen.com/development-resources/api-credentials#roles-1) for the API credential. Only roles assigned to 'ws@Company.<CompanyName>' can be assigned to other API credentials.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "UpdateCompanyUserRequest" : {
        "properties" : {
          "accountGroups" : {
            "description" : "The list of [account groups](https://docs.adyen.com/account/account-structure#account-groups) associated with this user.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "active" : {
            "description" : "Indicates whether this user is active.",
            "type" : "boolean"
          },
          "associatedMerchantAccounts" : {
            "description" : "The list of [merchant accounts](https://docs.adyen.com/account/account-structure#merchant-accounts) to associate the user with.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "email" : {
            "description" : "The email address of the user.",
            "type" : "string"
          },
          "name" : {
            "description" : "The user's full name.",
            "maxLength" : 80,
            "minLength" : 1,
            "$ref" : "#/components/schemas/Name2"
          },
          "roles" : {
            "description" : "The list of [roles](https://docs.adyen.com/account/user-roles) for this user.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "timeZoneCode" : {
            "description" : "The [tz database name](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) of the time zone of the user. For example, **Europe/Amsterdam**.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "UpdateCompanyWebhookRequest" : {
        "properties" : {
          "acceptsExpiredCertificate" : {
            "description" : "Indicates if expired SSL certificates are accepted. Default value: **false**.",
            "type" : "boolean"
          },
          "acceptsSelfSignedCertificate" : {
            "description" : "Indicates if self-signed SSL certificates are accepted. Default value: **false**.",
            "type" : "boolean"
          },
          "acceptsUntrustedRootCertificate" : {
            "description" : "Indicates if untrusted SSL certificates are accepted. Default value: **false**.",
            "type" : "boolean"
          },
          "active" : {
            "description" : "Indicates if the webhook configuration is active. The field must be **true** for us to send webhooks about events related an account.",
            "type" : "boolean"
          },
          "additionalSettings" : {
            "description" : "Additional shopper and transaction information to be included in your [standard notifications](https://docs.adyen.com/development-resources/webhooks/understand-notifications#event-codes). Find out more about the available [additional settings](https://docs.adyen.com/development-resources/webhooks/additional-settings).",
            "$ref" : "#/components/schemas/AdditionalSettings"
          },
          "communicationFormat" : {
            "description" : "Format or protocol for receiving webhooks. Possible values:\n* **soap**\n* **http**\n* **json** ",
            "enum" : [
              "http",
              "json",
              "soap"
            ],
            "example" : "soap",
            "type" : "string"
          },
          "description" : {
            "description" : "Your description for this webhook configuration.",
            "type" : "string"
          },
          "encryptionProtocol" : {
            "x-addedInVersion" : "2",
            "description" : "SSL version to access the public webhook URL specified in the `url` field. Possible values:\n* **TLSv1.3**\n* **TLSv1.2**\n* **HTTP** - Only allowed on Test environment.\n\nIf not specified, the webhook will use `sslVersion`: **TLSv1.2**.",
            "enum" : [
              "HTTP",
              "TLSv1.2",
              "TLSv1.3"
            ],
            "example" : "TLSv1.2",
            "type" : "string"
          },
          "filterMerchantAccountType" : {
            "description" : "Shows how merchant accounts are filtered when configuring the webhook. Possible values:\n* **includeAccounts**: The webhook is configured for the merchant accounts listed in `filterMerchantAccounts`.\n* **excludeAccounts**: The webhook is not configured for the merchant accounts listed in `filterMerchantAccounts`.\n* **allAccounts**: Includes all merchant accounts, and does not require specifying `filterMerchantAccounts`.",
            "enum" : [
              "allAccounts",
              "excludeAccounts",
              "includeAccounts"
            ],
            "type" : "string"
          },
          "filterMerchantAccounts" : {
            "description" : "A list of merchant account names that are included or excluded from receiving the webhook. Inclusion or exclusion is based on the value defined for `filterMerchantAccountType`.\n\nRequired if `filterMerchantAccountType` is either:\n* **includeAccounts**\n* **excludeAccounts**\n\nNot needed for `filterMerchantAccountType`: **allAccounts**.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "networkType" : {
            "description" : "Network type for Terminal API notification webhooks. Possible values:\n* **public**\n* **local**\n\nDefault Value: **public**.",
            "enum" : [
              "local",
              "public"
            ],
            "type" : "string"
          },
          "password" : {
            "description" : "Password to access the webhook URL.",
            "type" : "string"
          },
          "populateSoapActionHeader" : {
            "description" : "Indicates if the SOAP action header needs to be populated. Default value: **false**.\n\nOnly applies if `communicationFormat`: **soap**.",
            "type" : "boolean"
          },
          "url" : {
            "description" : "Public URL where webhooks will be sent, for example **https://www.domain.com/webhook-endpoint**.",
            "example" : "http://www.adyen.com",
            "type" : "string"
          },
          "username" : {
            "description" : "Username to access the webhook URL.",
            "maxLength" : 255,
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "UpdateMerchantApiCredentialRequest" : {
        "properties" : {
          "active" : {
            "description" : "Indicates if the API credential is enabled.",
            "type" : "boolean"
          },
          "allowedOrigins" : {
            "description" : "The new list of [allowed origins](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins) for the API credential.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "description" : {
            "description" : "Description of the API credential.",
            "type" : "string"
          },
          "roles" : {
            "description" : "List of [roles](https://docs.adyen.com/development-resources/api-credentials#roles-1) for the API credential. Only roles assigned to 'ws@Company.<CompanyName>' can be assigned to other API credentials.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "UpdateMerchantUserRequest" : {
        "properties" : {
          "accountGroups" : {
            "description" : "The list of [account groups](https://docs.adyen.com/account/account-structure#account-groups) associated with this user.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "active" : {
            "description" : "Sets the status of the user to active (**true**) or inactive (**false**).",
            "type" : "boolean"
          },
          "email" : {
            "description" : "The email address of the user.",
            "type" : "string"
          },
          "name" : {
            "description" : "The user's full name.",
            "maxLength" : 80,
            "minLength" : 1,
            "$ref" : "#/components/schemas/Name2"
          },
          "roles" : {
            "description" : "The list of [roles](https://docs.adyen.com/account/user-roles) for this user.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "timeZoneCode" : {
            "description" : "The [tz database name](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) of the time zone of the user. For example, **Europe/Amsterdam**.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "UpdateMerchantWebhookRequest" : {
        "properties" : {
          "acceptsExpiredCertificate" : {
            "description" : "Indicates if expired SSL certificates are accepted. Default value: **false**.",
            "type" : "boolean"
          },
          "acceptsSelfSignedCertificate" : {
            "description" : "Indicates if self-signed SSL certificates are accepted. Default value: **false**.",
            "type" : "boolean"
          },
          "acceptsUntrustedRootCertificate" : {
            "description" : "Indicates if untrusted SSL certificates are accepted. Default value: **false**.",
            "type" : "boolean"
          },
          "active" : {
            "description" : "Indicates if the webhook configuration is active. The field must be **true** for us to send webhooks about events related an account.",
            "type" : "boolean"
          },
          "additionalSettings" : {
            "description" : "Additional shopper and transaction information to be included in your [standard notifications](https://docs.adyen.com/development-resources/webhooks/understand-notifications#event-codes). Find out more about the available [additional settings](https://docs.adyen.com/development-resources/webhooks/additional-settings).",
            "$ref" : "#/components/schemas/AdditionalSettings"
          },
          "communicationFormat" : {
            "description" : "Format or protocol for receiving webhooks. Possible values:\n* **soap**\n* **http**\n* **json** ",
            "enum" : [
              "http",
              "json",
              "soap"
            ],
            "example" : "soap",
            "type" : "string"
          },
          "description" : {
            "description" : "Your description for this webhook configuration.",
            "type" : "string"
          },
          "encryptionProtocol" : {
            "x-addedInVersion" : "2",
            "description" : "SSL version to access the public webhook URL specified in the `url` field. Possible values:\n* **TLSv1.3**\n* **TLSv1.2**\n* **HTTP** - Only allowed on Test environment.\n\nIf not specified, the webhook will use `sslVersion`: **TLSv1.2**.",
            "enum" : [
              "HTTP",
              "TLSv1.2",
              "TLSv1.3"
            ],
            "example" : "TLSv1.2",
            "type" : "string"
          },
          "networkType" : {
            "description" : "Network type for Terminal API notification webhooks. Possible values:\n* **public**\n* **local**\n\nDefault Value: **public**.",
            "enum" : [
              "local",
              "public"
            ],
            "type" : "string"
          },
          "password" : {
            "description" : "Password to access the webhook URL.",
            "type" : "string"
          },
          "populateSoapActionHeader" : {
            "description" : "Indicates if the SOAP action header needs to be populated. Default value: **false**.\n\nOnly applies if `communicationFormat`: **soap**.",
            "type" : "boolean"
          },
          "url" : {
            "description" : "Public URL where webhooks will be sent, for example **https://www.domain.com/webhook-endpoint**.",
            "example" : "http://www.adyen.com",
            "type" : "string"
          },
          "username" : {
            "description" : "Username to access the webhook URL.",
            "maxLength" : 255,
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "UpdatePaymentMethodInfo" : {
        "properties" : {
          "bcmc" : {
            "description" : "Bancontact details.",
            "$ref" : "#/components/schemas/BcmcInfo"
          },
          "cartesBancaires" : {
            "description" : "Cartes Bancaires details.",
            "$ref" : "#/components/schemas/CartesBancairesInfo"
          },
          "countries" : {
            "description" : "The list of countries where a payment method is available. By default, all countries supported by the payment method.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "cup" : {
            "description" : "China Union Pay details.",
            "$ref" : "#/components/schemas/GenericPmWithTdiInfo"
          },
          "currencies" : {
            "description" : "The list of currencies that a payment method supports. By default, all currencies supported by the payment method.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "diners" : {
            "description" : "Diners details.",
            "$ref" : "#/components/schemas/GenericPmWithTdiInfo"
          },
          "discover" : {
            "description" : "Discover details.",
            "$ref" : "#/components/schemas/GenericPmWithTdiInfo"
          },
          "eftpos_australia" : {
            "description" : "Eftpos Australia details.",
            "$ref" : "#/components/schemas/GenericPmWithTdiInfo"
          },
          "enabled" : {
            "description" : "Indicates whether the payment method is enabled (**true**) or disabled (**false**).",
            "type" : "boolean"
          },
          "girocard" : {
            "description" : "Girocard details.",
            "$ref" : "#/components/schemas/GenericPmWithTdiInfo"
          },
          "ideal" : {
            "description" : "iDeal details.",
            "$ref" : "#/components/schemas/GenericPmWithTdiInfo"
          },
          "interac_card" : {
            "description" : "Interac Card details.",
            "$ref" : "#/components/schemas/GenericPmWithTdiInfo"
          },
          "jcb" : {
            "description" : "JCB details.",
            "$ref" : "#/components/schemas/GenericPmWithTdiInfo"
          },
          "maestro" : {
            "description" : "Maestro details.",
            "$ref" : "#/components/schemas/GenericPmWithTdiInfo"
          },
          "mc" : {
            "description" : "MasterCard details.",
            "$ref" : "#/components/schemas/GenericPmWithTdiInfo"
          },
          "storeIds" : {
            "description" : "The list of stores for this payment method",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "visa" : {
            "description" : "Visa details.",
            "$ref" : "#/components/schemas/GenericPmWithTdiInfo"
          }
        },
        "type" : "object"
      },
      "UpdatePayoutSettingsRequest" : {
        "properties" : {
          "enabled" : {
            "description" : "Indicates if payouts to this bank account are enabled. Default: **true**.\n\nTo receive payouts into this bank account, both `enabled` and `allowed` must be **true**.",
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "UpdateSplitConfigurationLogicRequest" : {
        "properties" : {
          "acquiringFees" : {
            "description" : "Specifies the logic to apply when booking the transaction fees. Should be combined with adyenFees.\n\nPossible values: **deductFromLiableAccount**, **deductFromOneBalanceAccount**.",
            "enum" : [
              "deductFromLiableAccount",
              "deductFromOneBalanceAccount"
            ],
            "type" : "string"
          },
          "additionalCommission" : {
            "description" : "Contains the logic used to calculate your user's commission, booked directly to their balance account.",
            "$ref" : "#/components/schemas/AdditionalCommission"
          },
          "adyenCommission" : {
            "description" : "Specifies the logic to apply when booking the transaction fees. Should be combined with schemeFee, interchange & adyenMarkup.\n\nPossible values: **deductFromLiableAccount**, **deductFromOneBalanceAccount**.",
            "enum" : [
              "deductFromLiableAccount",
              "deductFromOneBalanceAccount"
            ],
            "type" : "string"
          },
          "adyenFees" : {
            "description" : "Specifies the logic to apply when booking the transaction fees. Should be combined with acquiringFees.\n\nPossible values: **deductFromLiableAccount**, **deductFromOneBalanceAccount**.",
            "enum" : [
              "deductFromLiableAccount",
              "deductFromOneBalanceAccount"
            ],
            "type" : "string"
          },
          "adyenMarkup" : {
            "description" : "Specifies the logic to apply when booking the transaction fees. Should be combined with schemeFee, adyenCommission & interchange.\n\nPossible values: **deductFromLiableAccount**, **deductFromOneBalanceAccount**.",
            "enum" : [
              "deductFromLiableAccount",
              "deductFromOneBalanceAccount"
            ],
            "type" : "string"
          },
          "chargeback" : {
            "description" : "Specifies the logic to apply when booking the chargeback amount.\n\nPossible values: **deductFromLiableAccount**, **deductFromOneBalanceAccount**, **deductAccordingToSplitRatio**.",
            "enum" : [
              "deductFromLiableAccount",
              "deductFromOneBalanceAccount",
              "deductAccordingToSplitRatio"
            ],
            "type" : "string"
          },
          "chargebackCostAllocation" : {
            "description" : "Specifies the logic to apply when allocating the chargeback costs.\n\nPossible values: **deductFromLiableAccount**, **deductFromOneBalanceAccount**",
            "enum" : [
              "deductFromLiableAccount",
              "deductFromOneBalanceAccount"
            ],
            "type" : "string"
          },
          "commission" : {
            "description" : "Contains the logic used to the calculate your platform's commission, booked to your liable balance account.",
            "$ref" : "#/components/schemas/Commission"
          },
          "interchange" : {
            "description" : "Specifies the logic to apply when booking the transaction fees. Should be combined with schemeFee, adyenCommission & adyenMarkup.\n\nPossible values: **deductFromLiableAccount**, **deductFromOneBalanceAccount**.",
            "enum" : [
              "deductFromLiableAccount",
              "deductFromOneBalanceAccount"
            ],
            "type" : "string"
          },
          "paymentFee" : {
            "description" : "Specifies the logic to apply when booking the transaction fees. Cannot be combined with other fees.\n\nPossible values: **deductFromLiableAccount**, **deductFromOneBalanceAccount**.",
            "enum" : [
              "deductFromLiableAccount",
              "deductFromOneBalanceAccount"
            ],
            "type" : "string"
          },
          "remainder" : {
            "description" : "Specifies the logic to apply when booking the amount left over after currency conversion.\n\nPossible values: **addToLiableAccount**, **addToOneBalanceAccount**.",
            "enum" : [
              "addToLiableAccount",
              "addToOneBalanceAccount"
            ],
            "type" : "string"
          },
          "schemeFee" : {
            "description" : "Specifies the logic to apply when booking the transaction fees. Should be combined with interchange, adyenCommission & adyenMarkup.\n\nPossible values: **deductFromLiableAccount**, **deductFromOneBalanceAccount**.",
            "enum" : [
              "deductFromLiableAccount",
              "deductFromOneBalanceAccount"
            ],
            "type" : "string"
          },
          "splitLogicId" : {
            "description" : "Unique identifier of the split logic that is applied when the split configuration conditions are met.",
            "readOnly" : true,
            "type" : "string"
          },
          "surcharge" : {
            "description" : "Specifies the logic to apply when booking the surcharge amount.\n\nPossible values: **addToLiableAccount**, **addToOneBalanceAccount**",
            "enum" : [
              "addToLiableAccount",
              "addToOneBalanceAccount"
            ],
            "type" : "string"
          },
          "tip" : {
            "description" : "Specifies the logic to apply when booking tips (gratuity).\n\nPossible values: **addToLiableAccount**, **addToOneBalanceAccount**.",
            "enum" : [
              "addToLiableAccount",
              "addToOneBalanceAccount"
            ],
            "type" : "string"
          }
        },
        "required" : [
          "commission"
        ],
        "type" : "object"
      },
      "UpdateSplitConfigurationRequest" : {
        "properties" : {
          "description" : {
            "description" : "Your description for the split configuration.",
            "maxLength" : 300,
            "type" : "string"
          }
        },
        "required" : [
          "description"
        ],
        "type" : "object"
      },
      "UpdateSplitConfigurationRuleRequest" : {
        "properties" : {
          "currency" : {
            "description" : "The currency condition that defines whether the split logic applies.\nIts value must be a three-character [ISO currency code](https://en.wikipedia.org/wiki/ISO_4217).",
            "type" : "string"
          },
          "fundingSource" : {
            "description" : "The funding source condition of the payment method (only for cards).\n\nPossible values: **credit**, **debit**, or **ANY**.",
            "type" : "string"
          },
          "paymentMethod" : {
            "description" : "The payment method condition that defines whether the split logic applies.\n\nPossible values:\n* [Payment method variant](https://docs.adyen.com/development-resources/paymentmethodvariant): Apply the split logic for a specific payment method.\n* **ANY**: Apply the split logic for all available payment methods.",
            "type" : "string"
          },
          "shopperInteraction" : {
            "description" : "The sales channel condition that defines whether the split logic applies.\n\nPossible values:\n* **Ecommerce**: Online transactions where the cardholder is present.\n* **ContAuth**: Card on file and/or subscription transactions, where the cardholder is known to the merchant (returning customer).\n* **Moto**: Mail-order and telephone-order transactions where the customer is in contact with the merchant via email or telephone.\n* **POS**: Point-of-sale transactions where the customer is physically present to make a payment using a secure payment terminal.\n* **ANY**: All sales channels.",
            "type" : "string"
          }
        },
        "required" : [
          "paymentMethod",
          "shopperInteraction",
          "currency"
        ],
        "type" : "object"
      },
      "UpdateStoreRequest" : {
        "properties" : {
          "address" : {
            "description" : "The address of the store. It is not possible to update the country of the store.",
            "$ref" : "#/components/schemas/UpdatableAddress"
          },
          "businessLineIds" : {
            "description" : "The unique identifiers of the [business lines](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/businessLines__resParam_id) that the store is associated with.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "description" : {
            "description" : "The description of the store.",
            "type" : "string"
          },
          "externalReferenceId" : {
            "description" : "When using the Zip payment method: The location ID that Zip has assigned to your store.",
            "type" : "string"
          },
          "splitConfiguration" : {
            "description" : "Rules for Adyen for Platform merchants to split commission fees.",
            "$ref" : "#/components/schemas/StoreSplitConfiguration"
          },
          "status" : {
            "description" : "The status of the store. Possible values are:\n\n- **active**: This value is assigned automatically when a store is created. \n- **inactive**: The maximum [transaction limits and number of Store-and-Forward transactions](https://docs.adyen.com/point-of-sale/determine-account-structure/configure-features#payment-features) for the store are set to 0. This blocks new transactions, but captures are still possible.\n- **closed**: The terminals of the store are reassigned to the merchant inventory, so they can't process payments.\n\nYou can change the status from **active** to **inactive**, and from **inactive** to **active** or **closed**. \nOnce **closed**, a store can't be reopened.",
            "enum" : [
              "active",
              "closed",
              "inactive"
            ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "UploadAndroidAppResponse" : {
        "properties" : {
          "id" : {
            "description" : "The unique identifier of the uploaded Android app.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Url" : {
        "properties" : {
          "encrypted" : {
            "description" : "Indicates if the message sent to this URL should be encrypted.",
            "type" : "boolean"
          },
          "password" : {
            "description" : "The password for authentication of the notifications.",
            "type" : "string"
          },
          "url" : {
            "description" : "The URL in the format: http(s)://domain.com.",
            "type" : "string"
          },
          "username" : {
            "description" : "The username for authentication of the notifications.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "User" : {
        "properties" : {
          "_links" : {
            "description" : "References to resources connected with this user.",
            "$ref" : "#/components/schemas/Links"
          },
          "accountGroups" : {
            "description" : "The list of [account groups](https://docs.adyen.com/account/account-structure#account-groups) associated with this user.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "active" : {
            "description" : "Indicates whether this user is active.",
            "type" : "boolean"
          },
          "apps" : {
            "description" : "Set of apps available to this user",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "email" : {
            "description" : "The email address of the user.",
            "type" : "string"
          },
          "id" : {
            "description" : "The unique identifier of the user.",
            "type" : "string"
          },
          "name" : {
            "description" : "The user's full name.",
            "$ref" : "#/components/schemas/Name"
          },
          "roles" : {
            "description" : "The list of [roles](https://docs.adyen.com/account/user-roles) for this user.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "timeZoneCode" : {
            "description" : "The [tz database name](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) of the time zone of the user. For example, **Europe/Amsterdam**.",
            "type" : "string"
          },
          "username" : {
            "description" : "The username for this user.",
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string"
          }
        },
        "required" : [
          "id",
          "email",
          "timeZoneCode",
          "username",
          "roles"
        ],
        "type" : "object"
      },
      "VippsInfo" : {
        "properties" : {
          "logo" : {
            "description" : "Vipps logo. Format: Base64-encoded string.",
            "type" : "string"
          },
          "subscriptionCancelUrl" : {
            "description" : "Vipps subscription cancel url (required in case of [recurring payments](https://docs.adyen.com/online-payments/tokenization))",
            "type" : "string"
          }
        },
        "required" : [
          "logo"
        ],
        "type" : "object"
      },
      "Void" : {
        "type" : "object"
      },
      "Webhook" : {
        "properties" : {
          "_links" : {
            "description" : "References to resources connected with this webhook.",
            "$ref" : "#/components/schemas/WebhookLinks"
          },
          "acceptsExpiredCertificate" : {
            "description" : "Indicates if expired SSL certificates are accepted. Default value: **false**.",
            "type" : "boolean"
          },
          "acceptsSelfSignedCertificate" : {
            "description" : "Indicates if self-signed SSL certificates are accepted. Default value: **false**.",
            "type" : "boolean"
          },
          "acceptsUntrustedRootCertificate" : {
            "description" : "Indicates if untrusted SSL certificates are accepted. Default value: **false**.",
            "type" : "boolean"
          },
          "accountReference" : {
            "description" : "Reference to the account the webook is set on.",
            "type" : "string"
          },
          "active" : {
            "description" : "Indicates if the webhook configuration is active. The field must be **true** for you to receive webhooks about events related an account.",
            "type" : "boolean"
          },
          "additionalSettings" : {
            "description" : "Additional shopper and transaction information to be included in your [standard notifications](https://docs.adyen.com/development-resources/webhooks/understand-notifications#event-codes). Find out more about the available [additional settings](https://docs.adyen.com/development-resources/webhooks/additional-settings).",
            "$ref" : "#/components/schemas/AdditionalSettingsResponse"
          },
          "certificateAlias" : {
            "description" : "The alias of our SSL certificate. When you receive a notification from us, the alias from the HMAC signature will match this alias.",
            "type" : "string"
          },
          "communicationFormat" : {
            "description" : "Format or protocol for receiving webhooks. Possible values:\n* **soap**\n* **http**\n* **json** ",
            "enum" : [
              "http",
              "json",
              "soap"
            ],
            "example" : "soap",
            "type" : "string"
          },
          "description" : {
            "description" : "Your description for this webhook configuration.",
            "type" : "string"
          },
          "encryptionProtocol" : {
            "x-addedInVersion" : "2",
            "description" : "SSL version to access the public webhook URL specified in the `url` field. Possible values:\n* **TLSv1.3**\n* **TLSv1.2**\n* **HTTP** - Only allowed on Test environment.\n\nIf not specified, the webhook will use `sslVersion`: **TLSv1.2**.",
            "enum" : [
              "HTTP",
              "TLSv1.2",
              "TLSv1.3"
            ],
            "example" : "TLSv1.2",
            "type" : "string"
          },
          "filterMerchantAccountType" : {
            "description" : "Shows how merchant accounts are included in company-level webhooks. Possible values:\n* **includeAccounts**\n* **excludeAccounts**\n* **allAccounts**: Includes all merchant accounts, and does not require specifying `filterMerchantAccounts`.",
            "enum" : [
              "allAccounts",
              "excludeAccounts",
              "includeAccounts"
            ],
            "type" : "string"
          },
          "filterMerchantAccounts" : {
            "description" : "A list of merchant account names that are included or excluded from receiving the webhook. Inclusion or exclusion is based on the value defined for `filterMerchantAccountType`.\n\nRequired if `filterMerchantAccountType` is either:\n* **includeAccounts**\n* **excludeAccounts**\n\nNot needed for `filterMerchantAccountType`: **allAccounts**.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "hasError" : {
            "description" : "Indicates if the webhook configuration has errors that need troubleshooting. If the value is **true**, troubleshoot the configuration using the [testing endpoint](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/companies/{companyId}/webhooks/{webhookid}/test).",
            "type" : "boolean"
          },
          "hasPassword" : {
            "description" : "Indicates if the webhook is password protected.",
            "type" : "boolean"
          },
          "hmacKeyCheckValue" : {
            "description" : "The [checksum](https://en.wikipedia.org/wiki/Key_checksum_value) of the HMAC key generated for this webhook. You can use this value to uniquely identify the HMAC key configured for this webhook.",
            "type" : "string"
          },
          "id" : {
            "description" : "Unique identifier for this webhook.",
            "type" : "string"
          },
          "networkType" : {
            "description" : "Network type for Terminal API details webhooks.",
            "enum" : [
              "local",
              "public"
            ],
            "type" : "string"
          },
          "populateSoapActionHeader" : {
            "description" : "Indicates if the SOAP action header needs to be populated. Default value: **false**.\n\nOnly applies if `communicationFormat`: **soap**.",
            "type" : "boolean"
          },
          "type" : {
            "description" : "The type of webhook. Possible values are:\n\n- **standard**\n- **account-settings-notification**\n- **banktransfer-notification**\n- **boletobancario-notification**\n- **directdebit-notification**\n- **ach-notification-of-change-notification**\n- **pending-notification**\n- **ideal-notification**\n- **ideal-pending-notification**\n- **report-notification**\n- **terminal-api-notification**\n\nFind out more about [standard notification webhooks](https://docs.adyen.com/development-resources/webhooks/understand-notifications#event-codes) and [other types of notifications](https://docs.adyen.com/development-resources/webhooks/understand-notifications#other-notifications).",
            "type" : "string"
          },
          "url" : {
            "description" : "Public URL where webhooks will be sent, for example **https://www.domain.com/webhook-endpoint**.",
            "example" : "http://www.adyen.com",
            "type" : "string"
          },
          "username" : {
            "description" : "Username to access the webhook URL.",
            "type" : "string"
          }
        },
        "required" : [
          "type",
          "url",
          "active",
          "communicationFormat"
        ],
        "type" : "object"
      },
      "WebhookLinks" : {
        "properties" : {
          "company" : {
            "description" : "The company account that the webhook is configured for. Only present for company-level webhooks.",
            "$ref" : "#/components/schemas/LinksElement"
          },
          "generateHmac" : {
            "description" : "Generate an HMAC key.",
            "$ref" : "#/components/schemas/LinksElement"
          },
          "merchant" : {
            "description" : "The merchant account that the webhook is configured for. Only present for merchant-level webhooks.",
            "$ref" : "#/components/schemas/LinksElement"
          },
          "self" : {
            "description" : "Link to the resource itself.",
            "$ref" : "#/components/schemas/LinksElement"
          },
          "testWebhook" : {
            "description" : "Test the webhook setup.",
            "$ref" : "#/components/schemas/LinksElement"
          }
        },
        "required" : [
          "self",
          "testWebhook",
          "generateHmac"
        ],
        "type" : "object"
      },
      "WifiProfiles" : {
        "properties" : {
          "profiles" : {
            "description" : "List of remote Wi-Fi profiles.",
            "items" : {
              "$ref" : "#/components/schemas/Profile"
            },
            "type" : "array"
          },
          "settings" : {
            "description" : "General Wi-Fi settings.",
            "$ref" : "#/components/schemas/Settings"
          }
        },
        "type" : "object"
      }
    },
    "securitySchemes" : {
      "ApiKeyAuth" : {
        "in" : "header",
        "name" : "X-API-Key",
        "type" : "apiKey"
      },
      "BasicAuth" : {
        "scheme" : "basic",
        "type" : "http"
      }
    },
    "examples" : {
      "get-companies-companyId-androidApps-success-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response when getting a list of Android apps",
        "value" : {
          "data" : [
            {
              "id" : "ANDA422LZ223223K5F694GCCF732K8",
              "packageName" : "com.your_company.posapp",
              "versionCode" : 7700203,
              "description" : "POS2",
              "label" : "POS system",
              "versionName" : "7.7",
              "status" : "ready"
            },
            {
              "id" : "ANDA422LZ223223K5F694FWCF738PL",
              "packageName" : "com.your_company.posapp",
              "versionCode" : 7602003,
              "description" : "POS1",
              "label" : "POS system",
              "versionName" : "7.6",
              "status" : "ready"
            }
          ]
        }
      },
      "get-companies-companyId-androidCertificates-success-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response when getting a list of Android certificates",
        "value" : {
          "data" : [
            {
              "id" : "ANDC422LZ223223K5F78NVN9SL4VPH",
              "name" : "mycert",
              "extension" : ".crt",
              "description" : "",
              "status" : "ready",
              "notBefore" : "2008-04-20T00:00:00+02:00",
              "notAfter" : "2038-04-12T00:00:00+02:00"
            },
            {
              "id" : "ANDC533MA33433L689OWO0TM5WQI",
              "name" : "mynewcert",
              "extension" : ".pem",
              "description" : "",
              "status" : "ready",
              "notBefore" : "2008-04-20T00:00:00+02:00",
              "notAfter" : "2048-04-12T00:00:00+02:00"
            }
          ]
        }
      },
      "get-companies-companyId-apiCredentials-apiCredentialId-allowedOrigins-get-allowed-origins-200" : {
        "summary" : "OK 200 - Get the list of allowed origins for the API credential",
        "description" : "Example response for getting the list of allowed origins for the API credential.",
        "value" : {
          "data" : [
            {
              "id" : "YOUR_ALLOWED_ORIGIN_1",
              "domain" : "https://www.eu.mystore.com",
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/allowedOrigins/YOUR_ALLOWED_ORIGIN_1"
                }
              }
            },
            {
              "id" : "YOUR_ALLOWED_ORIGIN_2",
              "domain" : "https://www.us.mystore.com",
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/allowedOrigins/YOUR_ALLOWED_ORIGIN_2"
                }
              }
            }
          ]
        }
      },
      "get-companies-companyId-apiCredentials-apiCredentialId-allowedOrigins-originId-get-allowed-origin-200" : {
        "summary" : "OK 200 - Get an allowed origin for the API credential",
        "description" : "Example response for getting an allowed origin for the API credential.",
        "value" : {
          "id" : "YOUR_ALLOWED_ORIGIN",
          "domain" : "https://www.us.mystore.com",
          "_links" : {
            "self" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/allowedOrigins/YOUR_ALLOWED_ORIGIN"
            }
          }
        }
      },
      "get-companies-companyId-apiCredentials-apiCredentialId-success-200" : {
        "summary" : "Details of the API credential",
        "description" : "Example response with details of the API credential at the company level",
        "value" : {
          "id" : "YOUR_API_CREDENTIAL",
          "username" : "YOUR_USERNAME",
          "clientKey" : "YOUR_CLIENT_KEY",
          "allowedIpAddresses" : [
          ],
          "roles" : [
            "Checkout encrypted cardholder data",
            "Merchant Recurring role",
            "Checkout webservice role"
          ],
          "active" : true,
          "allowedOrigins" : [
            {
              "id" : "YOUR_ALLOWED_ORIGIN_1",
              "domain" : "http://localhost",
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/allowedOrigins/YOUR_ALLOWED_ORIGIN_1"
                }
              }
            },
            {
              "id" : "YOUR_ALLOWED_ORIGIN_2",
              "domain" : "http://localhost:3000",
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/allowedOrigins/YOUR_ALLOWED_ORIGIN_2"
                }
              }
            }
          ],
          "_links" : {
            "self" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL"
            },
            "allowedOrigins" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/allowedOrigins"
            },
            "company" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT"
            },
            "generateApiKey" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/generateApiKey"
            },
            "generateClientKey" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/generateClientKey"
            }
          },
          "associatedMerchantAccounts" : [
          ]
        }
      },
      "get-companies-companyId-apiCredentials-success-200" : {
        "summary" : "List of API credentials",
        "description" : "Example response when your API credential has access to 25 API credentials at the company level",
        "value" : {
          "_links" : {
            "first" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials?pageNumber=1&pageSize=10"
            },
            "last" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials?pageNumber=3&pageSize=10"
            },
            "next" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials?pageNumber=2&pageSize=10"
            },
            "self" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials?pageNumber=1&pageSize=10"
            }
          },
          "itemsTotal" : 25,
          "pagesTotal" : 3,
          "data" : [
            {
              "id" : "YOUR_API_CREDENTIAL_1",
              "username" : "YOUR_USERNAME_1",
              "clientKey" : "YOUR_CLIENT_KEY_1",
              "allowedIpAddresses" : [
              ],
              "roles" : [
                "Checkout encrypted cardholder data",
                "Merchant Recurring role",
                "Checkout webservice role"
              ],
              "active" : true,
              "allowedOrigins" : [
                {
                  "id" : "YOUR_ALLOWED_ORIGIN_1",
                  "domain" : "http://localhost",
                  "_links" : {
                    "self" : {
                      "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_1/allowedOrigins/YOUR_ALLOWED_ORIGIN_1"
                    }
                  }
                },
                {
                  "id" : "YOUR_ALLOWED_ORIGIN_2",
                  "domain" : "http://localhost:3000",
                  "_links" : {
                    "self" : {
                      "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_1/allowedOrigins/YOUR_ALLOWED_ORIGIN_2"
                    }
                  }
                }
              ],
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_1"
                },
                "allowedOrigins" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_1/allowedOrigins"
                },
                "company" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT"
                },
                "generateApiKey" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_1/generateApiKey"
                },
                "generateClientKey" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_1/generateClientKey"
                }
              },
              "associatedMerchantAccounts" : [
              ]
            },
            {
              "id" : "YOUR_API_CREDENTIAL_2",
              "username" : "YOUR_USERNAME_2",
              "clientKey" : "YOUR_CLIENT_KEY_2",
              "allowedIpAddresses" : [
              ],
              "roles" : [
                "Checkout encrypted cardholder data",
                "Merchant Recurring role",
                "Checkout webservice role"
              ],
              "active" : true,
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_2"
                },
                "allowedOrigins" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_2/allowedOrigins"
                },
                "company" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT"
                },
                "generateApiKey" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_2/generateApiKey"
                },
                "generateClientKey" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_2/generateClientKey"
                }
              },
              "associatedMerchantAccounts" : [
              ]
            },
            {
              "id" : "YOUR_API_CREDENTIAL_3",
              "username" : "YOUR_USERNAME_3",
              "clientKey" : "YOUR_CLIENT_KEY_3",
              "allowedIpAddresses" : [
              ],
              "roles" : [
                "API Supply MPI data with Payments",
                "Checkout encrypted cardholder data",
                "Merchant Recurring role",
                "API PCI Payments role",
                "Checkout webservice role",
                "API 3DS 2.0 to retrieve the ThreeDS2Result for authentication only"
              ],
              "active" : true,
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_3"
                },
                "allowedOrigins" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_3/allowedOrigins"
                },
                "company" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT"
                },
                "generateApiKey" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_3/generateApiKey"
                },
                "generateClientKey" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_3/generateClientKey"
                }
              },
              "associatedMerchantAccounts" : [
              ]
            },
            {
              "id" : "YOUR_API_CREDENTIAL_4",
              "username" : "YOUR_USERNAME_4",
              "clientKey" : "YOUR_CLIENT_KEY_4",
              "allowedIpAddresses" : [
              ],
              "roles" : [
                "Checkout encrypted cardholder data",
                "Checkout webservice role"
              ],
              "active" : true,
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_4"
                },
                "allowedOrigins" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_4/allowedOrigins"
                },
                "company" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT"
                },
                "generateApiKey" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_4/generateApiKey"
                },
                "generateClientKey" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_4/generateClientKey"
                }
              },
              "associatedMerchantAccounts" : [
                "YOUR_MERCHANT_ACCOUNT_1"
              ]
            },
            {
              "id" : "YOUR_API_CREDENTIAL_5",
              "username" : "YOUR_USERNAME_5",
              "clientKey" : "YOUR_CLIENT_KEY_5",
              "allowedIpAddresses" : [
              ],
              "roles" : [
                "Checkout encrypted cardholder data",
                "Merchant Recurring role",
                "API Authorise Referred Payments",
                "API PCI Payments role",
                "Checkout webservice role",
                "Merchant PAL Webservice role"
              ],
              "active" : true,
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_5"
                },
                "allowedOrigins" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_5/allowedOrigins"
                },
                "company" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT"
                },
                "generateApiKey" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_5/generateApiKey"
                },
                "generateClientKey" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_5/generateClientKey"
                }
              },
              "associatedMerchantAccounts" : [
              ]
            },
            {
              "id" : "YOUR_API_CREDENTIAL_6",
              "username" : "YOUR_USERNAME_6",
              "clientKey" : "YOUR_CLIENT_KEY_6",
              "allowedIpAddresses" : [
              ],
              "roles" : [
                "Merchant Report Download role"
              ],
              "active" : true,
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_6"
                },
                "allowedOrigins" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_6/allowedOrigins"
                },
                "company" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT"
                },
                "generateApiKey" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_6/generateApiKey"
                },
                "generateClientKey" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_6/generateClientKey"
                }
              },
              "associatedMerchantAccounts" : [
              ]
            },
            {
              "id" : "YOUR_API_CREDENTIAL_7",
              "username" : "YOUR_USERNAME_7",
              "clientKey" : "YOUR_CLIENT_KEY_7",
              "allowedIpAddresses" : [
              ],
              "roles" : [
                "Merchant Report Download role"
              ],
              "active" : true,
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_7"
                },
                "allowedOrigins" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_7/allowedOrigins"
                },
                "company" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT"
                },
                "generateApiKey" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_7/generateApiKey"
                },
                "generateClientKey" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_7/generateClientKey"
                }
              },
              "associatedMerchantAccounts" : [
                "YOUR_MERCHANT_ACCOUNT_2",
                "YOUR_MERCHANT_ACCOUNT_3"
              ]
            },
            {
              "id" : "YOUR_API_CREDENTIAL_8",
              "username" : "YOUR_USERNAME_8",
              "clientKey" : "YOUR_CLIENT_KEY_8",
              "allowedIpAddresses" : [
              ],
              "roles" : [
                "Merchant Report Download role"
              ],
              "active" : true,
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_8"
                },
                "allowedOrigins" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_8/allowedOrigins"
                },
                "company" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT"
                },
                "generateApiKey" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_8/generateApiKey"
                },
                "generateClientKey" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_8/generateClientKey"
                }
              },
              "associatedMerchantAccounts" : [
              ]
            },
            {
              "id" : "YOUR_API_CREDENTIAL_9",
              "username" : "YOUR_USERNAME_9",
              "clientKey" : "YOUR_CLIENT_KEY_9",
              "allowedIpAddresses" : [
              ],
              "roles" : [
                "Merchant Report Download role"
              ],
              "active" : true,
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_9"
                },
                "allowedOrigins" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_9/allowedOrigins"
                },
                "company" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT"
                },
                "generateApiKey" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_9/generateApiKey"
                },
                "generateClientKey" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_9/generateClientKey"
                }
              },
              "associatedMerchantAccounts" : [
                "YOUR_MERCHANT_ACCOUNT_4",
                "YOUR_MERCHANT_ACCOUNT_5"
              ]
            },
            {
              "id" : "YOUR_API_CREDENTIAL_10",
              "username" : "YOUR_USERNAME_10",
              "clientKey" : "YOUR_CLIENT_KEY_10",
              "allowedIpAddresses" : [
              ],
              "roles" : [
                "Merchant Report Download role"
              ],
              "active" : true,
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_10"
                },
                "allowedOrigins" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_10/allowedOrigins"
                },
                "company" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT"
                },
                "generateApiKey" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_10/generateApiKey"
                },
                "generateClientKey" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_10/generateClientKey"
                }
              },
              "associatedMerchantAccounts" : [
              ]
            }
          ]
        }
      },
      "get-companies-companyId-billingEntities-success-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response with billing entities for a company",
        "value" : {
          "data" : [
            {
              "id" : "Company.YOUR_COMPANY",
              "name" : "YOUR_COMPANY",
              "taxId" : "NL1234567890",
              "email" : "Paul.Green@company.com",
              "address" : {
                "streetAddress" : "Simon Carmiggeltstraat 6-50",
                "postalCode" : "1011 DJ",
                "city" : "Amsterdam",
                "country" : "NL"
              }
            },
            {
              "id" : "MerchantAccount.YOUR_MERCHANT_ACCOUNT",
              "name" : "YOUR_MERCHANT_ACCOUNT",
              "taxId" : "ES1234567890",
              "email" : "Pablo.Mengano@company.com",
              "address" : {
                "streetAddress" : "Paseo de la Castellana 43, 7",
                "postalCode" : "28046",
                "city" : "Madrid",
                "country" : "ES"
              }
            }
          ]
        }
      },
      "get-companies-companyId-merchants-success-200" : {
        "summary" : "List of merchant accounts",
        "description" : "Example response when your API credential has access to 22 merchant accounts",
        "value" : {
          "_links" : {
            "first" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/merchants?pageNumber=1&pageSize=10"
            },
            "last" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/merchants?pageNumber=3&pageSize=10"
            },
            "next" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/merchants?pageNumber=2&pageSize=10"
            },
            "self" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/merchants?pageNumber=1&pageSize=10"
            }
          },
          "itemsTotal" : 22,
          "pagesTotal" : 3,
          "data" : [
            {
              "id" : "YOUR_MERCHANT_ACCOUNT_1",
              "name" : "YOUR_MERCHANT_NAME_1",
              "captureDelay" : "immediate",
              "defaultShopperInteraction" : "Ecommerce",
              "status" : "Active",
              "shopWebAddress" : "YOUR_SHOP_URL_1",
              "merchantCity" : "Amsterdam",
              "primarySettlementCurrency" : "EUR",
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_1"
                },
                "apiCredentials" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_1/apiCredentials"
                },
                "users" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_1/users"
                },
                "webhooks" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_1/webhooks"
                }
              }
            },
            {
              "id" : "YOUR_MERCHANT_ACCOUNT_2",
              "name" : "YOUR_MERCHANT_NAME_2",
              "captureDelay" : "immediate",
              "defaultShopperInteraction" : "POS",
              "status" : "Active",
              "shopWebAddress" : "YOUR_SHOP_URL_2",
              "merchantCity" : "",
              "primarySettlementCurrency" : "EUR",
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_2"
                },
                "apiCredentials" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_2/apiCredentials"
                },
                "users" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_2/users"
                },
                "webhooks" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_2/webhooks"
                }
              }
            },
            {
              "id" : "YOUR_MERCHANT_ACCOUNT_3",
              "status" : "Active",
              "merchantCity" : "Amsterdam",
              "primarySettlementCurrency" : "EUR",
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_3"
                },
                "apiCredentials" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_3/apiCredentials"
                },
                "users" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_3/users"
                },
                "webhooks" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_3/webhooks"
                }
              }
            },
            {
              "id" : "YOUR_MERCHANT_ACCOUNT_4",
              "name" : "YOUR_MERCHANT_NAME_4",
              "captureDelay" : "immediate",
              "defaultShopperInteraction" : "Ecommerce",
              "status" : "Active",
              "shopWebAddress" : "YOUR_SHOP_URL_4",
              "merchantCity" : "Sao Paulo",
              "primarySettlementCurrency" : "BRL",
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_4"
                },
                "apiCredentials" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_4/apiCredentials"
                },
                "users" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_4/users"
                },
                "webhooks" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_4/webhooks"
                }
              }
            },
            {
              "id" : "YOUR_MERCHANT_ACCOUNT_5",
              "name" : "YOUR_MERCHANT_NAME_5",
              "captureDelay" : "3",
              "defaultShopperInteraction" : "Ecommerce",
              "status" : "Active",
              "shopWebAddress" : "YOUR_SHOP_URL_5",
              "primarySettlementCurrency" : "EUR",
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_5"
                },
                "apiCredentials" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_5/apiCredentials"
                },
                "users" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_5/users"
                },
                "webhooks" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_5/webhooks"
                }
              }
            },
            {
              "id" : "YOUR_MERCHANT_ACCOUNT_6",
              "name" : "YOUR_MERCHANT_NAME_6",
              "captureDelay" : "immediate",
              "defaultShopperInteraction" : "Ecommerce",
              "status" : "Active",
              "shopWebAddress" : "YOUR_SHOP_URL_6",
              "merchantCity" : "Zagreb",
              "primarySettlementCurrency" : "BRL",
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_6"
                },
                "apiCredentials" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_6/apiCredentials"
                },
                "users" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_6/users"
                },
                "webhooks" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_6/webhooks"
                }
              }
            },
            {
              "id" : "YOUR_MERCHANT_ACCOUNT_7",
              "name" : "YOUR_MERCHANT_NAME_7",
              "captureDelay" : "manual",
              "defaultShopperInteraction" : "Moto",
              "status" : "Active",
              "shopWebAddress" : "YOUR_SHOP_URL_7",
              "merchantCity" : "Amsterdam",
              "primarySettlementCurrency" : "EUR",
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_7"
                },
                "apiCredentials" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_7/apiCredentials"
                },
                "users" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_7/users"
                },
                "webhooks" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_7/webhooks"
                }
              }
            },
            {
              "id" : "YOUR_MERCHANT_ACCOUNT_8",
              "name" : "YOUR_MERCHANT_NAME_8",
              "captureDelay" : "immediate",
              "defaultShopperInteraction" : "Ecommerce",
              "status" : "Active",
              "shopWebAddress" : "YOUR_SHOP_URL_8",
              "merchantCity" : "Amsterdam",
              "primarySettlementCurrency" : "EUR",
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_8"
                },
                "apiCredentials" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_8/apiCredentials"
                },
                "users" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_8/users"
                },
                "webhooks" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_8/webhooks"
                }
              }
            },
            {
              "id" : "YOUR_MERCHANT_ACCOUNT_9",
              "name" : "YOUR_MERCHANT_NAME_9",
              "captureDelay" : "3",
              "defaultShopperInteraction" : "Ecommerce",
              "status" : "Active",
              "shopWebAddress" : "YOUR_SHOP_URL_9",
              "merchantCity" : "",
              "primarySettlementCurrency" : "EUR",
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_9"
                },
                "apiCredentials" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_9/apiCredentials"
                },
                "users" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_9/users"
                },
                "webhooks" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_9/webhooks"
                }
              }
            },
            {
              "id" : "YOUR_MERCHANT_ACCOUNT_10",
              "name" : "YOUR_MERCHANT_NAME_10",
              "captureDelay" : "manual",
              "defaultShopperInteraction" : "Ecommerce",
              "status" : "Active",
              "shopWebAddress" : "YOUR_SHOP_URL_10",
              "merchantCity" : "Paris",
              "primarySettlementCurrency" : "EUR",
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_10"
                },
                "apiCredentials" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_10/apiCredentials"
                },
                "users" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_10/users"
                },
                "webhooks" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_10/webhooks"
                }
              }
            }
          ]
        }
      },
      "get-companies-companyId-shippingLocations-success-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response with shipping locations for a company",
        "value" : {
          "data" : [
            {
              "id" : "S2-232A6D2967356F424F4369432B3F486B6A6D",
              "name" : "YOUR_COMPANY HQ - POS Ops",
              "contact" : {
                "firstName" : "Paul",
                "lastName" : "Green",
                "email" : "Paul.Green@company.com"
              },
              "address" : {
                "streetAddress" : "Simon Carmiggeltstraat",
                "streetAddress2" : "6-50",
                "postalCode" : "1011 DJ",
                "city" : "Amsterdam",
                "country" : "NL"
              }
            },
            {
              "id" : "S2-6A6C2E3432747D4F2F2C3455485E3836457D",
              "name" : "YOUR_COMPANY Spain",
              "contact" : {
                "firstName" : "Pablo",
                "lastName" : "Mengano",
                "phoneNumber" : "+34911234567",
                "email" : "Pablo.Mengano@company.com"
              },
              "address" : {
                "streetAddress" : "Paseo de la Castellana 43",
                "streetAddress2" : "7 piso",
                "postalCode" : "28046",
                "city" : "Madrid",
                "country" : "ES"
              }
            }
          ]
        }
      },
      "get-companies-companyId-success-200" : {
        "summary" : "Details of the company account",
        "description" : "Example response with the details of the company account.",
        "value" : {
          "id" : "YOUR_COMPANY_ACCOUNT",
          "name" : "YOUR_SHOP_NAME",
          "status" : "Active",
          "dataCenters" : [
            {
              "name" : "default",
              "livePrefix" : ""
            }
          ],
          "_links" : {
            "self" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT"
            },
            "apiCredentials" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials"
            },
            "users" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/users"
            },
            "webhooks" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/webhooks"
            }
          }
        }
      },
      "get-companies-companyId-terminalActions-actionId-success-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response with the details of the specified terminal action",
        "value" : {
          "actionType" : "InstallAndroidCertificate",
          "config" : "{\"certificates\":\"5dff6b...\"}",
          "confirmedAt" : "2022-06-27T17:44:54+02:00",
          "id" : "TRAC4224Z223223K5GD89RLBWQ6CWT",
          "result" : "Ok",
          "scheduledAt" : "2022-06-27T15:44:07+02:00",
          "status" : "successful",
          "terminalId" : "S1F2-000150183300034"
        }
      },
      "get-companies-companyId-terminalActions-success-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response when getting a list of scheduled terminal actions",
        "value" : {
          "data" : [
            {
              "actionType" : "InstallAndroidApp",
              "config" : "{\"apps\":\"com.adyen.android.calculator:103\"}",
              "confirmedAt" : "2021-11-10T00:00:00+01:00",
              "id" : "TRAC422T2223223K5GFMQHM6WQ4KB6",
              "result" : "Cancelled manually by user USER@Psp.AdyenPspService",
              "scheduledAt" : "2021-11-10T14:53:05+01:00",
              "status" : "cancelled",
              "terminalId" : "S1E-000150183300032"
            }
          ]
        }
      },
      "get-companies-companyId-terminalLogos-success-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response when getting the logo of a payment terminal",
        "value" : {
          "data" : "BASE-64_ENCODED_STRING"
        }
      },
      "get-companies-companyId-terminalModels-success-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response with the terminal models that the company has access to",
        "value" : {
          "data" : [
            {
              "id" : "Verifone.e315",
              "name" : "Verifone e315"
            },
            {
              "id" : "Verifone.e315M",
              "name" : "Verifone e315M"
            },
            {
              "id" : "Verifone.E355",
              "name" : "Verifone E355"
            },
            {
              "id" : "Verifone.M400",
              "name" : "Verifone M400"
            },
            {
              "id" : "Verifone.MX915",
              "name" : "Verifone MX915"
            },
            {
              "id" : "Verifone.MX925",
              "name" : "Verifone MX925"
            },
            {
              "id" : "Verifone.P400",
              "name" : "Verifone P400"
            },
            {
              "id" : "Verifone.P400Plus",
              "name" : "Verifone P400Plus"
            },
            {
              "id" : "Verifone.P400Eth",
              "name" : "Verifone P400Eth"
            },
            {
              "id" : "Verifone.V240m",
              "name" : "Verifone V240m"
            },
            {
              "id" : "Verifone.V240mPlus",
              "name" : "Verifone V240mPlus"
            },
            {
              "id" : "Verifone.UX300",
              "name" : "Verifone UX300"
            },
            {
              "id" : "Verifone.V200cPlus",
              "name" : "Verifone V200cPlus"
            },
            {
              "id" : "Verifone.V400cPlus",
              "name" : "Verifone V400cPlus"
            },
            {
              "id" : "Verifone.V400m",
              "name" : "Verifone V400m"
            },
            {
              "id" : "Verifone.V210mPlus",
              "name" : "Verifone V210mPlus"
            },
            {
              "id" : "Verifone.VX520",
              "name" : "Verifone VX520"
            },
            {
              "id" : "Verifone.VX6753G",
              "name" : "Verifone VX6753G"
            },
            {
              "id" : "Verifone.VX675WIFIBT",
              "name" : "Verifone VX675WIFIBT"
            },
            {
              "id" : "Verifone.VX680",
              "name" : "Verifone VX680"
            },
            {
              "id" : "Verifone.VX6803G",
              "name" : "Verifone VX6803G"
            },
            {
              "id" : "Verifone.VX690",
              "name" : "Verifone VX690"
            },
            {
              "id" : "Verifone.VX700",
              "name" : "Verifone VX700"
            },
            {
              "id" : "Verifone.VX810",
              "name" : "Verifone VX810"
            },
            {
              "id" : "Verifone.VX820",
              "name" : "Verifone VX820"
            },
            {
              "id" : "Verifone.VX825",
              "name" : "Verifone VX825"
            },
            {
              "id" : "Verifone.e285",
              "name" : "Verifone e285"
            },
            {
              "id" : "Verifone.E285",
              "name" : "Verifone E285"
            },
            {
              "id" : "Verifone.e285p",
              "name" : "Verifone e285p"
            },
            {
              "id" : "Verifone.e280",
              "name" : "Verifone e280"
            },
            {
              "id" : "Verifone.UX410",
              "name" : "Verifone UX410"
            },
            {
              "id" : "Castles.S1E",
              "name" : "Castles S1E"
            },
            {
              "id" : "Castles.S1EL",
              "name" : "Castles S1EL"
            },
            {
              "id" : "Castles.S1F",
              "name" : "Castles S1F"
            },
            {
              "id" : "Castles.S1F2",
              "name" : "Castles S1F2"
            },
            {
              "id" : "Castles.S1F2L",
              "name" : "Castles S1F2L"
            },
            {
              "id" : "Castles.S1E2",
              "name" : "Castles S1E2"
            },
            {
              "id" : "Castles.S1E2L",
              "name" : "Castles S1E2L"
            }
          ]
        }
      },
      "get-companies-companyId-terminalOrders-orderId-success-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response with the details of the terminal products order",
        "value" : {
          "id" : "5265677890100681",
          "customerOrderReference" : "YOUR_REFERENCE_1",
          "status" : "Placed",
          "shippingLocation" : {
            "id" : "S2-232A6D2967356F424F4369432B3F486B6A6D",
            "name" : "YOUR_COMPANY HQ - POS Ops",
            "contact" : {
              "firstName" : "Paul",
              "lastName" : "Green",
              "email" : "Paul.Green@company.com"
            },
            "address" : {
              "streetAddress" : "Simon Carmiggeltstraat",
              "streetAddress2" : "6-50",
              "postalCode" : "1011 DJ",
              "city" : "Amsterdam",
              "country" : "NL"
            }
          },
          "billingEntity" : {
            "id" : "Company.YOUR_COMPANY",
            "name" : "YOUR_COMPANY",
            "taxId" : "NL1234567890",
            "email" : "Paul.Green@company.com",
            "address" : {
              "streetAddress" : "Simon Carmiggeltstraat 6-50",
              "postalCode" : "1011 DJ",
              "city" : "Amsterdam",
              "country" : "NL"
            }
          },
          "orderDate" : "2022-01-20T14:12:33Z",
          "items" : [
            {
              "id" : "TBOX-V400m-684-EU",
              "name" : "V400m Package",
              "quantity" : 1
            },
            {
              "id" : "PART-175746-EU",
              "name" : "Adyen Test Card",
              "quantity" : 1
            }
          ]
        }
      },
      "get-companies-companyId-terminalOrders-success-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response with the terminal orders for a company",
        "value" : {
          "data" : [
            {
              "id" : "5265677890100681",
              "customerOrderReference" : "YOUR_REFERENCE_C2",
              "status" : "Placed",
              "shippingLocation" : {
                "id" : "S2-232A6D2967356F424F4369432B3F486B6A6D",
                "name" : "YOUR_COMPANY HQ - POS Ops",
                "contact" : {
                  "firstName" : "Paul",
                  "lastName" : "Green",
                  "email" : "Paul.Green@company.com"
                },
                "address" : {
                  "streetAddress" : "Simon Carmiggeltstraat",
                  "streetAddress2" : "6-50",
                  "postalCode" : "1011 DJ",
                  "city" : "Amsterdam",
                  "country" : "NL"
                }
              },
              "billingEntity" : {
                "id" : "Company.YOUR_COMPANY",
                "name" : "YOUR_COMPANY",
                "taxId" : "NL1234567890",
                "email" : "Paul.Green@company.com",
                "address" : {
                  "streetAddress" : "Simon Carmiggeltstraat 6-50",
                  "postalCode" : "1011 DJ",
                  "city" : "Amsterdam",
                  "country" : "NL"
                }
              },
              "orderDate" : "2020-06-10T17:03:11.000Z",
              "items" : [
                {
                  "id" : "TBOX-MX925-422-EU",
                  "name" : "MX925 Package",
                  "quantity" : 1
                }
              ]
            },
            {
              "id" : "9415936144678634",
              "customerOrderReference" : "YOUR_REFERENCE_C1",
              "status" : "Cancelled",
              "shippingLocation" : {
                "id" : "S2-232A6D2967356F424F4369432B3F486B6A6D",
                "name" : "YOUR_COMPANY HQ - POS Ops",
                "contact" : {
                  "firstName" : "Paul",
                  "lastName" : "Green",
                  "email" : "Paul.Green@company.com"
                },
                "address" : {
                  "streetAddress" : "Simon Carmiggeltstraat",
                  "streetAddress2" : "6-50",
                  "postalCode" : "1011 DJ",
                  "city" : "Amsterdam",
                  "country" : "NL"
                }
              },
              "billingEntity" : {
                "id" : "Company.YOUR_COMPANY",
                "name" : "YOUR_COMPANY",
                "taxId" : "NL1234567890",
                "email" : "Paul.Green@company.com",
                "address" : {
                  "streetAddress" : "Simon Carmiggeltstraat 6-50",
                  "postalCode" : "1011 DJ",
                  "city" : "Amsterdam",
                  "country" : "NL"
                }
              },
              "orderDate" : "2022-01-03T16:41:07.000Z",
              "items" : [
                {
                  "id" : "TBOX-V400m-774-EU",
                  "name" : "V400m Package",
                  "quantity" : 5
                }
              ]
            }
          ]
        }
      },
      "get-companies-companyId-terminalProducts-success-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response with V400m products available in The Netherlands",
        "value" : {
          "data" : [
            {
              "id" : "PART-620222-EU",
              "name" : "Receipt Roll",
              "price" : {
                "currency" : "EUR",
                "value" : 0.00
              }
            },
            {
              "id" : "PART-175746-EU",
              "name" : "Adyen Test Card",
              "price" : {
                "currency" : "EUR",
                "value" : 0.00
              }
            },
            {
              "id" : "PART-327486-EU",
              "name" : "Battery - V400m",
              "price" : {
                "currency" : "EUR",
                "value" : 0.00
              }
            },
            {
              "id" : "PART-287001-EU",
              "name" : "Bluetooth Charging Base - V400m",
              "price" : {
                "currency" : "EUR",
                "value" : 0.00
              }
            },
            {
              "id" : "PART-745984-EU",
              "name" : "Power Supply EU - V400m",
              "price" : {
                "currency" : "EUR",
                "value" : 0.00
              }
            },
            {
              "id" : "TBOX-V400m-684-EU",
              "name" : "V400m Package",
              "description" : "Includes an EU Power Supply, SIM Card and battery",
              "price" : {
                "currency" : "EUR",
                "value" : 0.00
              },
              "itemsIncluded" : [
                "Receipt Roll",
                "Terminal Device V400m EU/GB"
              ]
            }
          ]
        }
      },
      "get-companies-companyId-terminalSettings-success-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response when getting the settings of a payment terminal",
        "value" : {
          "cardholderReceipt" : {
            "headerForAuthorizedReceipt" : "header1,header2,filler"
          },
          "gratuities" : [
            {
              "currency" : "EUR",
              "usePredefinedTipEntries" : true,
              "predefinedTipEntries" : [
                "100",
                "1%",
                "5%"
              ],
              "allowCustomAmount" : true
            }
          ],
          "nexo" : {
            "displayUrls" : {
              "localUrls" : [
                {
                  "password" : "BASIC_AUTH_PASSWORD",
                  "url" : "https://your-display-notifications-endpoint.com",
                  "username" : "BASIC_AUTH_USERNAME"
                }
              ]
            },
            "encryptionKey" : {
              "identifier" : "KEY_IDENTIFIER",
              "passphrase" : "KEY_PASSPHRASE",
              "version" : 1
            },
            "eventUrls" : {
              "eventPublicUrls" : [
                {
                  "password" : "BASIC_AUTH_PASSWORD",
                  "url" : "https://your-event-notifications-endpoint.com",
                  "username" : "BASIC_AUTH_USERNAME"
                }
              ]
            }
          },
          "opi" : {
            "enablePayAtTable" : true,
            "payAtTableStoreNumber" : "1",
            "payAtTableURL" : "https:/your-pay-at-table-endpoint.com"
          },
          "offlineProcessing" : {
            "chipFloorLimit" : 0
          },
          "receiptOptions" : {
            "qrCodeData" : "http://www.example.com/order/${pspreference}/${merchantreference}"
          },
          "receiptPrinting" : {
            "shopperApproved" : true,
            "shopperRefused" : true,
            "shopperCancelled" : true,
            "shopperRefundApproved" : true,
            "shopperRefundRefused" : true,
            "shopperVoid" : true
          },
          "signature" : {
            "askSignatureOnScreen" : true,
            "skipSignature" : false,
            "deviceName" : "Amsterdam-236203386"
          },
          "wifiProfiles" : {
            "profiles" : [
              {
                "authType" : "wpa-psk",
                "autoWifi" : false,
                "bssType" : "infra",
                "channel" : 0,
                "defaultProfile" : true,
                "hiddenSsid" : false,
                "name" : "Guest Wi-Fi",
                "psk" : "4R8R2R3V456X",
                "ssid" : "G470P37660D4G",
                "wsec" : "ccmp"
              }
            ],
            "settings" : {
              "band" : "All",
              "roaming" : true
            }
          },
          "timeouts" : {
            "fromActiveToSleep" : 30
          },
          "hardware" : {
            "displayMaximumBackLight" : 75
          }
        }
      },
      "get-companies-companyId-webhooks-get-company-webhooks-200" : {
        "summary" : "OK 200 - Get the list of webhook configurations",
        "description" : "Example response for getting the list of webhook configurations.",
        "value" : {
          "_links" : {
            "first" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/webhooks?pageNumber=1&pageSize=10"
            },
            "last" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/webhooks?pageNumber=1&pageSize=10"
            },
            "self" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/webhooks?pageNumber=1&pageSize=10"
            }
          },
          "itemsTotal" : 1,
          "pagesTotal" : 1,
          "data" : [
            {
              "id" : "S2-4A3B33202A46",
              "type" : "standard",
              "url" : "YOUR_WEBHOOK_URL",
              "description" : "Webhook for YOUR_COMPANY_ACCOUNT - YOUR_COMPANY_CODE",
              "filterMerchantAccountType" : "allAccounts",
              "username" : "adyen",
              "hasPassword" : true,
              "active" : true,
              "hasError" : false,
              "sslVersion" : "TLSv1.2",
              "communicationFormat" : "json",
              "acceptsExpiredCertificate" : false,
              "acceptsSelfSignedCertificate" : false,
              "acceptsUntrustedRootCertificate" : false,
              "populateSoapActionHeader" : false,
              "additionalSettings" : {
                "properties" : {
                  "includePosTerminalInfo" : false,
                  "includeARN" : false,
                  "includePosDetails" : false,
                  "includeCardInfoForRecurringContractNotification" : false,
                  "includeRiskData" : false,
                  "includeRiskExperimentReference" : false,
                  "includeSoapSecurityHeader" : false,
                  "includeContactlessWalletTokenInformation" : false,
                  "includeAcquirerReference" : false,
                  "includeRiskProfileReference" : false,
                  "includeOriginalMerchantReferenceCancelOrRefundNotification" : false,
                  "includeNfcTokenInformation" : false,
                  "includeSubvariant" : false,
                  "includeThreeDSVersion" : false,
                  "includeInstallmentsInfo" : false,
                  "includeAliasInfo" : false,
                  "includeShopperCountry" : false,
                  "includeRawThreeDSecureResult" : false,
                  "includeAirlineData" : false,
                  "includeGrossCurrencyChargebackDetails" : false,
                  "includeThreeDSecureResult" : false,
                  "includeMetadataIn3DSecurePaymentNotification" : false,
                  "includeOriginalReferenceForChargebackReversed" : false,
                  "addAcquirerResult" : false,
                  "includeDeliveryAddress" : false,
                  "includeRetryAttempts" : false,
                  "includeExtraCosts" : false,
                  "includeCardHolderName" : false,
                  "includeShopperDetail" : false,
                  "includeBankAccountDetails" : false,
                  "includeMandateDetails" : false,
                  "includeAuthAmountForDynamicZeroAuth" : false,
                  "includeIssuerCountry" : false,
                  "includeAcquirerErrorDetails" : false,
                  "includeCoBrandedWith" : false,
                  "includeShopperInteraction" : false,
                  "includeDeviceAndBrowserInfo" : false,
                  "addRawAcquirerResult" : false,
                  "includeCardBin" : false,
                  "includeFundingSource" : false,
                  "includeThreeDS2ChallengeInformation" : false,
                  "includeRiskProfile" : false,
                  "includeRealtimeAccountUpdaterStatus" : false,
                  "includeDunningProjectData" : false,
                  "includePaymentResultInOrderClosedNotification" : false,
                  "includeCardBinDetails" : false,
                  "includeNotesInManualReviewNotifications" : false,
                  "includeZeroAuthFlag" : false,
                  "addCaptureReferenceToDisputeNotification" : false,
                  "includePayPalDetails" : false,
                  "includeRawThreeDSecureDetailsResult" : false,
                  "includeBankVerificationResults" : false,
                  "includeCaptureDelayHours" : false,
                  "addPaymentAccountReference" : false,
                  "includePayULatamDetails" : false,
                  "includeStore" : false,
                  "returnAvsData" : false,
                  "includeWeChatPayOpenid" : false,
                  "includeUpiVpa" : false,
                  "includeCustomRoutingFlagging" : false,
                  "includeTokenisedPaymentMetaData" : false
                }
              },
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/webhooks/S2-4A3B33202A46"
                },
                "company" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT"
                },
                "generateHmac" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/webhooks/S2-4A3B33202A46/generateHmac"
                },
                "testWebhook" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/webhooks/S2-4A3B33202A46/test"
                }
              }
            }
          ]
        }
      },
      "get-companies-companyId-webhooks-webhookId-get-company-webhook-200" : {
        "summary" : "OK 200 - Get a webhook configuration",
        "description" : "Example response for getting a webhook configuration.",
        "value" : {
          "id" : "S2-4A3B33202A46",
          "type" : "standard",
          "url" : "YOUR_WEBHOOK_URL",
          "description" : "Webhook for YOUR_COMPANY_ACCOUNT - YOUR_COMPANY_CODE",
          "filterMerchantAccountType" : "allAccounts",
          "username" : "adyen",
          "hasPassword" : true,
          "active" : true,
          "hasError" : false,
          "sslVersion" : "TLSv1.2",
          "communicationFormat" : "json",
          "acceptsExpiredCertificate" : false,
          "acceptsSelfSignedCertificate" : false,
          "acceptsUntrustedRootCertificate" : false,
          "populateSoapActionHeader" : false,
          "additionalSettings" : {
            "properties" : {
              "includePosTerminalInfo" : false,
              "includeARN" : false,
              "includePosDetails" : false,
              "includeCardInfoForRecurringContractNotification" : false,
              "includeRiskData" : false,
              "includeRiskExperimentReference" : false,
              "includeSoapSecurityHeader" : false,
              "includeContactlessWalletTokenInformation" : false,
              "includeAcquirerReference" : false,
              "includeRiskProfileReference" : false,
              "includeOriginalMerchantReferenceCancelOrRefundNotification" : false,
              "includeNfcTokenInformation" : false,
              "includeSubvariant" : false,
              "includeThreeDSVersion" : false,
              "includeInstallmentsInfo" : false,
              "includeAliasInfo" : false,
              "includeShopperCountry" : false,
              "includeRawThreeDSecureResult" : false,
              "includeAirlineData" : false,
              "includeGrossCurrencyChargebackDetails" : false,
              "includeThreeDSecureResult" : false,
              "includeMetadataIn3DSecurePaymentNotification" : false,
              "includeOriginalReferenceForChargebackReversed" : false,
              "addAcquirerResult" : false,
              "includeDeliveryAddress" : false,
              "includeRetryAttempts" : false,
              "includeExtraCosts" : false,
              "includeCardHolderName" : false,
              "includeShopperDetail" : false,
              "includeBankAccountDetails" : false,
              "includeMandateDetails" : false,
              "includeAuthAmountForDynamicZeroAuth" : false,
              "includeIssuerCountry" : false,
              "includeAcquirerErrorDetails" : false,
              "includeCoBrandedWith" : false,
              "includeShopperInteraction" : false,
              "includeDeviceAndBrowserInfo" : false,
              "addRawAcquirerResult" : false,
              "includeCardBin" : false,
              "includeFundingSource" : false,
              "includeThreeDS2ChallengeInformation" : false,
              "includeRiskProfile" : false,
              "includeRealtimeAccountUpdaterStatus" : false,
              "includeDunningProjectData" : false,
              "includePaymentResultInOrderClosedNotification" : false,
              "includeCardBinDetails" : false,
              "includeNotesInManualReviewNotifications" : false,
              "includeZeroAuthFlag" : false,
              "addCaptureReferenceToDisputeNotification" : false,
              "includePayPalDetails" : false,
              "includeRawThreeDSecureDetailsResult" : false,
              "includeBankVerificationResults" : false,
              "includeCaptureDelayHours" : false,
              "addPaymentAccountReference" : false,
              "includePayULatamDetails" : false,
              "includeStore" : false,
              "returnAvsData" : false,
              "includeWeChatPayOpenid" : false,
              "includeUpiVpa" : false,
              "includeCustomRoutingFlagging" : false,
              "includeTokenisedPaymentMetaData" : false
            }
          },
          "_links" : {
            "self" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/webhooks/S2-4A3B33202A46"
            },
            "company" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT"
            },
            "generateHmac" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/webhooks/S2-4A3B33202A46/generateHmac"
            },
            "testWebhook" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/webhooks/S2-4A3B33202A46/test"
            }
          }
        }
      },
      "get-companies-success-200" : {
        "summary" : "List of company accounts",
        "description" : "Example response when your API credential has access to one company account.",
        "value" : {
          "_links" : {
            "first" : {
              "href" : "https://management-test.adyen.com/v1/companies?pageNumber=1&pageSize=10"
            },
            "last" : {
              "href" : "https://management-test.adyen.com/v1/companies?pageNumber=1&pageSize=10"
            },
            "self" : {
              "href" : "https://management-test.adyen.com/v1/companies?pageNumber=1&pageSize=10"
            }
          },
          "itemsTotal" : 1,
          "pagesTotal" : 1,
          "data" : [
            {
              "id" : "YOUR_COMPANY_ACCOUNT",
              "name" : "YOUR_COMPANY_NAME",
              "status" : "Active",
              "dataCenters" : [
                {
                  "name" : "default",
                  "livePrefix" : ""
                }
              ],
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT"
                },
                "apiCredentials" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials"
                },
                "users" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/users"
                },
                "webhooks" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/webhooks"
                }
              }
            }
          ]
        }
      },
      "get-merchants-merchantId-apiCredentials-apiCredentialId-allowedOrigins-get-allowed-origin-200" : {
        "summary" : "OK 200 - Get the list of allowed origins for the API credential",
        "description" : "Example response for getting the list of allowed origins for the API credential.",
        "value" : {
          "data" : [
            {
              "id" : "YOUR_ALLOWED_ORIGIN_1",
              "domain" : "https://www.eu.mystore.com",
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/allowedOrigins/YOUR_ALLOWED_ORIGIN_1"
                }
              }
            },
            {
              "id" : "YOUR_ALLOWED_ORIGIN_2",
              "domain" : "https://www.us.mystore.com",
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/allowedOrigins/YOUR_ALLOWED_ORIGIN_2"
                }
              }
            }
          ]
        }
      },
      "get-merchants-merchantId-apiCredentials-apiCredentialId-allowedOrigins-originId-get-allowed-origins-200" : {
        "summary" : "OK 200 - Get an allowed origin for the API credential",
        "description" : "Example response for getting an allowed origin for the API credential.",
        "value" : {
          "id" : "YOUR_ALLOWED_ORIGIN",
          "domain" : "https://www.eu.mystore.com",
          "_links" : {
            "self" : {
              "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/allowedOrigins/YOUR_ALLOWED_ORIGIN"
            }
          }
        }
      },
      "get-merchants-merchantId-apiCredentials-apiCredentialId-success-200" : {
        "summary" : "Details of the API credential",
        "description" : "Example response with details of the API credential at the merchant level",
        "value" : {
          "id" : "YOUR_API_CREDENTIAL",
          "username" : "YOUR_USERNAME",
          "clientKey" : "YOUR_CLIENT_KEY",
          "allowedIpAddresses" : [
          ],
          "roles" : [
            "Merchant Report Download role"
          ],
          "active" : true,
          "_links" : {
            "self" : {
              "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_CREDENTIAL"
            },
            "allowedOrigins" : {
              "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_CREDENTIAL/allowedOrigins"
            },
            "generateApiKey" : {
              "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_CREDENTIAL/generateApiKey"
            },
            "generateClientKey" : {
              "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_CREDENTIAL/generateClientKey"
            },
            "merchant" : {
              "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT"
            }
          }
        }
      },
      "get-merchants-merchantId-apiCredentials-success-200" : {
        "summary" : "List of API credentials at the merchant level",
        "description" : "Example response when your API credential has access to 11 API credentials at the merchant level",
        "value" : {
          "_links" : {
            "first" : {
              "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials?pageNumber=1&pageSize=10"
            },
            "last" : {
              "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials?pageNumber=2&pageSize=10"
            },
            "next" : {
              "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials?pageNumber=2&pageSize=10"
            },
            "self" : {
              "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials?pageNumber=1&pageSize=10"
            }
          },
          "itemsTotal" : 11,
          "pagesTotal" : 2,
          "data" : [
            {
              "id" : "YOUR_API_CREDENTIAL_1",
              "username" : "YOUR_USERNAME_1",
              "clientKey" : "YOUR_CLIENT_KEY_1",
              "allowedIpAddresses" : [
              ],
              "roles" : [
                "Merchant Report Download role"
              ],
              "active" : true,
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_CREDENTIAL_1"
                },
                "allowedOrigins" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_CREDENTIAL_1/allowedOrigins"
                },
                "generateApiKey" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_CREDENTIAL_1/generateApiKey"
                },
                "generateClientKey" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_CREDENTIAL_1/generateClientKey"
                },
                "merchant" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT"
                }
              }
            },
            {
              "id" : "YOUR_API_CREDENTIAL_2",
              "username" : "YOUR_USERNAME_2",
              "clientKey" : "YOUR_CLIENT_KEY_2",
              "allowedIpAddresses" : [
              ],
              "roles" : [
                "Merchant Rss feed role"
              ],
              "active" : true,
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_2"
                },
                "allowedOrigins" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_2/allowedOrigins"
                },
                "generateApiKey" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_2/generateApiKey"
                },
                "generateClientKey" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_2/generateClientKey"
                },
                "merchant" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT"
                }
              }
            },
            {
              "id" : "YOUR_API_CREDENTIAL_3",
              "username" : "YOUR_USERNAME_3",
              "clientKey" : "YOUR_CLIENT_KEY_3",
              "allowedIpAddresses" : [
              ],
              "roles" : [
                "Merchant iDeal-API Webservice role",
                "Management API - Accounts read",
                "Management API - API credentials read and write",
                "Management API — Payment methods read",
                "Merchant PAL Donation role",
                "Merchant PAL Charity role",
                "Checkout encrypted cardholder data",
                "Checkout webservice role",
                "Store payout detail and submit payout - withdrawal",
                "Management API - Accounts read and write",
                "Management API - Webhooks read",
                "Merchant Payout role",
                "API tokenise payment details",
                "General API Payments role",
                "API Supply MPI data with Payments",
                "API Authorise Referred Payments",
                "API PCI Payments role",
                "CSC Tokenization Webservice role",
                "Management API - Stores read",
                "API Payment RefundWithData",
                "API Clientside Encryption Payments role",
                "API to retrieve authentication data",
                "Management API - Stores read and write",
                "Management API - Webhooks read and write",
                "Mastercard inControl service",
                "Merchant Recurring role",
                "Management API - Payout Account Settings Read",
                "API surcharge cost estimation and regulatory information",
                "Store payout detail",
                "Merchant PAL Webservice role"
              ],
              "active" : true,
              "allowedOrigins" : [
                {
                  "id" : "YOUR_ALLOWED_ORIGIN_1",
                  "domain" : "YOUR_DOMAIN_1",
                  "_links" : {
                    "self" : {
                      "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_3/allowedOrigins/YOUR_ALLOWED_ORIGIN_1"
                    }
                  }
                },
                {
                  "id" : "YOUR_ALLOWED_ORIGIN_2",
                  "domain" : "YOUR_DOMAIN_2",
                  "_links" : {
                    "self" : {
                      "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_3/allowedOrigins/YOUR_ALLOWED_ORIGIN_2"
                    }
                  }
                }
              ],
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_3"
                },
                "allowedOrigins" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_3/allowedOrigins"
                },
                "generateApiKey" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_3/generateApiKey"
                },
                "generateClientKey" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_3/generateClientKey"
                },
                "merchant" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT"
                }
              }
            },
            {
              "id" : "YOUR_API_CREDENTIAL_4",
              "username" : "YOUR_USERNAME_4",
              "clientKey" : "YOUR_CLIENT_KEY_4",
              "allowedIpAddresses" : [
              ],
              "roles" : [
                "API Clientside Encryption Payments role",
                "API tokenise payment details",
                "General API Payments role",
                "Checkout encrypted cardholder data",
                "Merchant Recurring role",
                "API PCI Payments role",
                "CSC Tokenization Webservice role",
                "Checkout webservice role",
                "ThreeDSecure WebService Role",
                "Merchant PAL Webservice role"
              ],
              "active" : true,
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_4"
                },
                "allowedOrigins" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_4/allowedOrigins"
                },
                "generateApiKey" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_4/generateApiKey"
                },
                "generateClientKey" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_4/generateClientKey"
                },
                "merchant" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT"
                }
              }
            },
            {
              "id" : "YOUR_API_CREDENTIAL_5",
              "username" : "YOUR_USERNAME_5",
              "clientKey" : "YOUR_CLIENT_KEY_5",
              "allowedIpAddresses" : [
              ],
              "roles" : [
                "Merchant iDeal-API Webservice role",
                "General API Payments role",
                "Checkout encrypted cardholder data",
                "Merchant Recurring role",
                "Checkout webservice role",
                "Merchant PAL Webservice role"
              ],
              "active" : true,
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_5"
                },
                "allowedOrigins" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_5/allowedOrigins"
                },
                "generateApiKey" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_5/generateApiKey"
                },
                "generateClientKey" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_5/generateClientKey"
                },
                "merchant" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT"
                }
              }
            },
            {
              "id" : "YOUR_API_CREDENTIAL_6",
              "username" : "YOUR_USERNAME_6",
              "clientKey" : "YOUR_CLIENT_KEY_6",
              "allowedIpAddresses" : [
              ],
              "roles" : [
                "Checkout encrypted cardholder data",
                "Merchant Recurring role",
                "API PCI Payments role",
                "Checkout webservice role",
                "Merchant PAL Webservice role"
              ],
              "active" : true,
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_6"
                },
                "allowedOrigins" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_6/allowedOrigins"
                },
                "generateApiKey" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_6/generateApiKey"
                },
                "generateClientKey" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_6/generateClientKey"
                },
                "merchant" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT"
                }
              }
            },
            {
              "id" : "YOUR_API_CREDENTIAL_7",
              "username" : "YOUR_USERNAME_7",
              "clientKey" : "YOUR_CLIENT_KEY_7",
              "allowedIpAddresses" : [
              ],
              "roles" : [
                "Checkout encrypted cardholder data",
                "Checkout webservice role",
                "Merchant PAL Webservice role"
              ],
              "active" : true,
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_7"
                },
                "allowedOrigins" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_7/allowedOrigins"
                },
                "generateApiKey" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_7/generateApiKey"
                },
                "generateClientKey" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_7/generateClientKey"
                },
                "merchant" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT"
                }
              }
            },
            {
              "id" : "YOUR_API_CREDENTIAL_8",
              "username" : "YOUR_USERNAME_8",
              "clientKey" : "YOUR_CLIENT_KEY_8",
              "allowedIpAddresses" : [
              ],
              "roles" : [
                "Checkout encrypted cardholder data",
                "Merchant Recurring role",
                "Checkout webservice role",
                "Merchant PAL Webservice role"
              ],
              "active" : true,
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_8"
                },
                "allowedOrigins" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_8/allowedOrigins"
                },
                "generateApiKey" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_8/generateApiKey"
                },
                "generateClientKey" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_8/generateClientKey"
                },
                "merchant" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT"
                }
              }
            },
            {
              "id" : "YOUR_API_CREDENTIAL_9",
              "username" : "YOUR_USERNAME_9",
              "clientKey" : "YOUR_CLIENT_KEY_9",
              "allowedIpAddresses" : [
              ],
              "roles" : [
                "Checkout encrypted cardholder data",
                "Merchant Recurring role",
                "API PCI Payments role",
                "Checkout webservice role",
                "Merchant PAL Webservice role"
              ],
              "active" : true,
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_9"
                },
                "allowedOrigins" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_9/allowedOrigins"
                },
                "generateApiKey" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_9/generateApiKey"
                },
                "generateClientKey" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_9/generateClientKey"
                },
                "merchant" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT"
                }
              }
            },
            {
              "id" : "YOUR_API_CREDENTIAL_10",
              "username" : "YOUR_USERNAME_10",
              "clientKey" : "YOUR_CLIENT_KEY_10",
              "allowedIpAddresses" : [
              ],
              "roles" : [
                "Checkout encrypted cardholder data",
                "Merchant Recurring role",
                "Checkout webservice role",
                "Merchant PAL Webservice role"
              ],
              "active" : true,
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_10"
                },
                "allowedOrigins" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_10/allowedOrigins"
                },
                "generateApiKey" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_10/generateApiKey"
                },
                "generateClientKey" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_10/generateClientKey"
                },
                "merchant" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT"
                }
              }
            }
          ]
        }
      },
      "get-merchants-merchantId-billingEntities-success-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response with billing entities for a merchant account",
        "value" : {
          "data" : [
            {
              "id" : "MerchantAccount.YOUR_MERCHANT_ACCOUNT",
              "name" : "YOUR_MERCHANT_ACCOUNT",
              "taxId" : "ES1234567890",
              "email" : "Pablo.Mengano@company.com",
              "address" : {
                "streetAddress" : "Paseo de la Castellana 43, 7",
                "postalCode" : "28046",
                "city" : "Madrid",
                "country" : "ES"
              }
            }
          ]
        }
      },
      "get-merchants-merchantId-shippingLocations-success-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response with shipping locations for a merchant account",
        "value" : {
          "data" : [
            {
              "id" : "S2-6A6C2E3432747D4F2F2C3455485E3836457D",
              "name" : "YOUR_COMPANY Spain",
              "contact" : {
                "firstName" : "Pablo",
                "lastName" : "Mengano",
                "phoneNumber" : "+34911234567",
                "email" : "Pablo.Mengano@company.com"
              },
              "address" : {
                "streetAddress" : "Paseo de la Castellana 43",
                "streetAddress2" : "7 piso",
                "postalCode" : "28046",
                "city" : "Madrid",
                "country" : "ES"
              }
            }
          ]
        }
      },
      "get-merchants-merchantId-splitConfigurations-splitConfigurationId-success-200" : {
        "summary" : "Details of the split configuration",
        "description" : "Example response with details of the split configuration",
        "value" : {
          "description" : "Your description for the split configuration",
          "rules" : [
            {
              "currency" : "ANY",
              "fundingSource" : "ANY",
              "paymentMethod" : "ANY",
              "ruleId" : "SCRL4224P22322585HPCX384JW65VW",
              "shopperInteraction" : "ANY",
              "splitLogic" : {
                "additionalCommission" : {
                  "fixedAmount" : 10,
                  "variablePercentage" : 50,
                  "balanceAccountId" : "BA3227C223222H5HQ2XX77VVH"
                },
                "chargeback" : "deductFromLiableAccount",
                "commission" : {
                  "fixedAmount" : 10,
                  "variablePercentage" : 100
                },
                "splitLogicId" : "SCLG4224P22322585HPCX384JX52M2",
                "paymentFee" : "deductFromLiableAccount",
                "remainder" : "addToOneBalanceAccount",
                "tip" : "addToOneBalanceAccount"
              }
            },
            {
              "currency" : "EUR",
              "fundingSource" : "ANY",
              "paymentMethod" : "visa",
              "ruleId" : "SCRL4224P22322585HPCX5V4KV6L2R",
              "shopperInteraction" : "ANY",
              "splitLogic" : {
                "additionalCommission" : {
                  "fixedAmount" : 100,
                  "variablePercentage" : 0,
                  "balanceAccountId" : "BA3227C223222H5HQ2XX77VVH"
                },
                "chargeback" : "deductFromLiableAccount",
                "commission" : {
                  "fixedAmount" : 100,
                  "variablePercentage" : 100
                },
                "splitLogicId" : "SCLG4224P22322585HPCX5V4KW26C9",
                "paymentFee" : "deductFromLiableAccount",
                "remainder" : "addToLiableAccount",
                "tip" : "addToLiableAccount"
              }
            }
          ],
          "splitConfigurationId" : "SCNF4224P22322585HPCX384JV6JGX"
        }
      },
      "get-merchants-merchantId-splitConfigurations-success-200" : {
        "summary" : "List of split configurations",
        "description" : "Example response when retrieving the list of split configurations in your merchant account",
        "value" : {
          "data" : [
            {
              "description" : "Your description for the split configuration",
              "rules" : [
                {
                  "currency" : "GBP",
                  "fundingSource" : "ANY",
                  "paymentMethod" : "ANY",
                  "ruleId" : "SCRL4224P22322585HP89PPCST6BCZ",
                  "shopperInteraction" : "ANY",
                  "splitLogic" : {
                    "additionalCommission" : {
                      "fixedAmount" : 100,
                      "variablePercentage" : 100,
                      "balanceAccountId" : "BA3227C223222H5HQ2XX77VVH"
                    },
                    "chargeback" : "deductFromLiableAccount",
                    "commission" : {
                      "fixedAmount" : 200,
                      "variablePercentage" : 100
                    },
                    "splitLogicId" : "SCLG4224P22322585HP89PPCSV27VP",
                    "paymentFee" : "deductFromLiableAccount",
                    "remainder" : "addToOneBalanceAccount",
                    "tip" : "addToOneBalanceAccount"
                  }
                }
              ],
              "splitConfigurationId" : "SCNF4224P22322585HP89PPCSS24MF"
            },
            {
              "description" : "Your description for the second split configuration",
              "rules" : [
                {
                  "currency" : "ANY",
                  "fundingSource" : "ANY",
                  "paymentMethod" : "ANY",
                  "ruleId" : "SCRL4224P22322585HPCX384JW65VW",
                  "shopperInteraction" : "ANY",
                  "splitLogic" : {
                    "additionalCommission" : {
                      "fixedAmount" : 10,
                      "variablePercentage" : 50,
                      "balanceAccountId" : "BA3227C223222H5HQ2XX77VVH"
                    },
                    "chargeback" : "deductFromLiableAccount",
                    "commission" : {
                      "fixedAmount" : 10,
                      "variablePercentage" : 100
                    },
                    "splitLogicId" : "SCLG4224P22322585HPCX384JX52M2",
                    "paymentFee" : "deductFromLiableAccount",
                    "remainder" : "addToOneBalanceAccount",
                    "tip" : "addToOneBalanceAccount"
                  }
                },
                {
                  "currency" : "EUR",
                  "fundingSource" : "ANY",
                  "paymentMethod" : "visa",
                  "ruleId" : "SCRL4224P22322585HPCX5V4KV6L2R",
                  "shopperInteraction" : "ANY",
                  "splitLogic" : {
                    "additionalCommission" : {
                      "fixedAmount" : 100,
                      "variablePercentage" : 0,
                      "balanceAccountId" : "BA3227C223222H5HQ2XX77VVH"
                    },
                    "chargeback" : "deductFromLiableAccount",
                    "commission" : {
                      "fixedAmount" : 100,
                      "variablePercentage" : 100
                    },
                    "splitLogicId" : "SCLG4224P22322585HPCX5V4KW26C9",
                    "paymentFee" : "deductFromLiableAccount",
                    "remainder" : "addToLiableAccount",
                    "tip" : "addToLiableAccount"
                  }
                }
              ],
              "splitConfigurationId" : "SCNF4224P22322585HPCX384JV6JGX"
            }
          ]
        }
      },
      "get-merchants-merchantId-stores-reference-terminalLogos-success-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response when getting the logo of a payment terminal",
        "value" : {
          "data" : "BASE-64_ENCODED_STRING"
        }
      },
      "get-merchants-merchantId-stores-reference-terminalSettings-success-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response when getting the settings of a payment terminal",
        "value" : {
          "cardholderReceipt" : {
            "headerForAuthorizedReceipt" : "header1,header2,filler"
          },
          "gratuities" : [
            {
              "currency" : "EUR",
              "usePredefinedTipEntries" : true,
              "predefinedTipEntries" : [
                "100",
                "1%",
                "5%"
              ],
              "allowCustomAmount" : true
            }
          ],
          "nexo" : {
            "nexoEventUrls" : [
              "https://your-event-notifications-endpoint.com"
            ]
          },
          "opi" : {
            "enablePayAtTable" : true,
            "payAtTableStoreNumber" : "1",
            "payAtTableURL" : "https:/your-pay-at-table-endpoint.com"
          },
          "receiptOptions" : {

          },
          "receiptPrinting" : {
            "shopperApproved" : true,
            "shopperRefused" : true,
            "shopperCancelled" : true,
            "shopperRefundApproved" : true,
            "shopperRefundRefused" : true,
            "shopperVoid" : true
          },
          "signature" : {
            "askSignatureOnScreen" : true,
            "skipSignature" : false,
            "deviceName" : "Amsterdam-236203386"
          },
          "wifiProfiles" : {
            "profiles" : [
              {
                "authType" : "wpa-psk",
                "autoWifi" : false,
                "bssType" : "infra",
                "channel" : 0,
                "defaultProfile" : true,
                "name" : "Guest Wi-Fi",
                "psk" : "4R8R2R3V456X",
                "ssid" : "G470P37660D4G",
                "wsec" : "ccmp"
              }
            ],
            "settings" : {
              "band" : "All",
              "roaming" : true
            }
          },
          "timeouts" : {
            "fromActiveToSleep" : 30
          },
          "hardware" : {
            "displayMaximumBackLight" : 75
          }
        }
      },
      "get-merchants-merchantId-stores-storeId-success-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response when getting the details of a store",
        "value" : {
          "storeId" : "ST322LJ223223K5F4SQNR9XL5",
          "address" : {
            "city" : "Springfield",
            "country" : "US",
            "line1" : "200 Main Street",
            "line2" : "Building 5A",
            "line3" : "Suite 3",
            "postalCode" : "20250",
            "stateOrProvince" : "NY"
          },
          "description" : "City centre store",
          "merchantId" : "YOUR_MERCHANT_ACCOUNT_ID",
          "phoneNumber" : "+1813702551707653",
          "reference" : "Springfield Shop",
          "status" : "active",
          "_links" : {
            "self" : {
              "href" : "https://management-test.adyen.com/v1/stores/ST322LJ223223K5F4SQNR9XL5"
            }
          }
        }
      },
      "get-merchants-merchantId-stores-success-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response when getting a list of stores for a merchant account",
        "value" : {
          "_links" : {
            "first" : {
              "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_ID/stores?pageNumber=1&pageSize=1"
            },
            "last" : {
              "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_ID/stores?pageNumber=2&pageSize=1"
            },
            "next" : {
              "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_ID/stores?pageNumber=2&pageSize=1"
            },
            "self" : {
              "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_ID/stores?pageNumber=1&pageSize=1"
            }
          },
          "itemsTotal" : 2,
          "pagesTotal" : 1,
          "data" : [
            {
              "id" : "ST322LJ223223K5F4SQNR9XL5",
              "address" : {
                "city" : "Springfield",
                "country" : "US",
                "line1" : "200 Main Street",
                "line2" : "Building 5A",
                "line3" : "Suite 3",
                "postalCode" : "20250",
                "stateOrProvince" : "NY"
              },
              "description" : "City centre store",
              "merchantId" : "YOUR_MERCHANT_ACCOUNT_ID",
              "phoneNumber" : "+1813702551707653",
              "reference" : "Springfield Shop",
              "status" : "active",
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/stores/ST322LJ223223K5F4SQNR9XL5"
                }
              }
            },
            {
              "id" : "ST322LJ223223K5F4SQNR9XL6",
              "address" : {
                "city" : "North Madison",
                "country" : "US",
                "line1" : "1492 Townline Road",
                "line2" : "Rowland Business Park",
                "postalCode" : "20577",
                "stateOrProvince" : "NY"
              },
              "description" : "West location",
              "merchantId" : "YOUR_MERCHANT_ACCOUNT_ID",
              "phoneNumber" : "+1211992213193020",
              "reference" : "Second Madison store",
              "status" : "active",
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/stores/ST322LJ223223K5F4SQNR9XL6"
                }
              }
            }
          ]
        }
      },
      "get-merchants-merchantId-success-200" : {
        "summary" : "Details of the merchant account",
        "description" : "Example response with details of the merchant account",
        "value" : {
          "id" : "YOUR_MERCHANT_ACCOUNT",
          "name" : "YOUR_MERCHANT_NAME",
          "captureDelay" : "manual",
          "defaultShopperInteraction" : "Ecommerce",
          "status" : "Active",
          "shopWebAddress" : "YOUR_SHOP_URL",
          "merchantCity" : "Amsterdam",
          "primarySettlementCurrency" : "EUR",
          "_links" : {
            "self" : {
              "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT"
            },
            "apiCredentials" : {
              "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials"
            },
            "users" : {
              "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/users"
            },
            "webhooks" : {
              "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/webhooks"
            }
          }
        }
      },
      "get-merchants-merchantId-terminalLogos-success-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response when getting the logo of a payment terminal",
        "value" : {
          "data" : "BASE-64_ENCODED_STRING"
        }
      },
      "get-merchants-merchantId-terminalModels-success-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response with the terminal models that the merchant account has access to",
        "value" : {
          "data" : [
            {
              "id" : "Verifone.e315",
              "name" : "Verifone e315"
            },
            {
              "id" : "Verifone.e315M",
              "name" : "Verifone e315M"
            },
            {
              "id" : "Verifone.E355",
              "name" : "Verifone E355"
            },
            {
              "id" : "Verifone.M400",
              "name" : "Verifone M400"
            },
            {
              "id" : "Verifone.MX915",
              "name" : "Verifone MX915"
            },
            {
              "id" : "Verifone.MX925",
              "name" : "Verifone MX925"
            },
            {
              "id" : "Verifone.P400",
              "name" : "Verifone P400"
            },
            {
              "id" : "Verifone.P400Plus",
              "name" : "Verifone P400Plus"
            },
            {
              "id" : "Verifone.P400Eth",
              "name" : "Verifone P400Eth"
            },
            {
              "id" : "Verifone.V240m",
              "name" : "Verifone V240m"
            },
            {
              "id" : "Verifone.V240mPlus",
              "name" : "Verifone V240mPlus"
            },
            {
              "id" : "Verifone.UX300",
              "name" : "Verifone UX300"
            },
            {
              "id" : "Verifone.V200cPlus",
              "name" : "Verifone V200cPlus"
            },
            {
              "id" : "Verifone.V400cPlus",
              "name" : "Verifone V400cPlus"
            },
            {
              "id" : "Verifone.V400m",
              "name" : "Verifone V400m"
            },
            {
              "id" : "Verifone.V210mPlus",
              "name" : "Verifone V210mPlus"
            },
            {
              "id" : "Verifone.VX520",
              "name" : "Verifone VX520"
            },
            {
              "id" : "Verifone.VX6753G",
              "name" : "Verifone VX6753G"
            },
            {
              "id" : "Verifone.VX675WIFIBT",
              "name" : "Verifone VX675WIFIBT"
            },
            {
              "id" : "Verifone.VX680",
              "name" : "Verifone VX680"
            },
            {
              "id" : "Verifone.VX6803G",
              "name" : "Verifone VX6803G"
            },
            {
              "id" : "Verifone.VX690",
              "name" : "Verifone VX690"
            },
            {
              "id" : "Verifone.VX700",
              "name" : "Verifone VX700"
            },
            {
              "id" : "Verifone.VX810",
              "name" : "Verifone VX810"
            },
            {
              "id" : "Verifone.VX820",
              "name" : "Verifone VX820"
            },
            {
              "id" : "Verifone.VX825",
              "name" : "Verifone VX825"
            },
            {
              "id" : "Verifone.e285",
              "name" : "Verifone e285"
            },
            {
              "id" : "Verifone.E285",
              "name" : "Verifone E285"
            },
            {
              "id" : "Verifone.e285p",
              "name" : "Verifone e285p"
            },
            {
              "id" : "Verifone.e280",
              "name" : "Verifone e280"
            },
            {
              "id" : "Verifone.UX410",
              "name" : "Verifone UX410"
            },
            {
              "id" : "Castles.S1E",
              "name" : "Castles S1E"
            },
            {
              "id" : "Castles.S1EL",
              "name" : "Castles S1EL"
            },
            {
              "id" : "Castles.S1F",
              "name" : "Castles S1F"
            },
            {
              "id" : "Castles.S1F2",
              "name" : "Castles S1F2"
            },
            {
              "id" : "Castles.S1F2L",
              "name" : "Castles S1F2L"
            },
            {
              "id" : "Castles.S1E2",
              "name" : "Castles S1E2"
            },
            {
              "id" : "Castles.S1E2L",
              "name" : "Castles S1E2L"
            }
          ]
        }
      },
      "get-merchants-merchantId-terminalOrders-orderId-success-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response with the details of the terminal products order",
        "value" : {
          "id" : "4154567890100682",
          "customerOrderReference" : "YOUR_REFERENCE",
          "status" : "Placed",
          "shippingLocation" : {
            "id" : "S2-6A6C2E3432747D4F2F2C3455485E3836457D",
            "name" : "YOUR_COMPANY Spain",
            "contact" : {
              "firstName" : "Pablo",
              "lastName" : "Mengano",
              "phoneNumber" : "+34911234567",
              "email" : "Pablo.Mengano@company.com"
            },
            "address" : {
              "streetAddress" : "Paseo de la Castellana 43",
              "streetAddress2" : "7 piso",
              "postalCode" : "28046",
              "city" : "Madrid",
              "country" : "ES"
            }
          },
          "billingEntity" : {
            "id" : "MerchantAccount.YOUR_MERCHANT_ACCOUNT",
            "name" : "YOUR_MERCHANT_ACCOUNT",
            "taxId" : "ES1234567890",
            "email" : "Pablo.Mengano@company.com",
            "address" : {
              "streetAddress" : "Paseo de la Castellana 43, 7",
              "postalCode" : "28046",
              "city" : "Madrid",
              "country" : "ES"
            }
          },
          "orderDate" : "2022-01-21T16:12:33Z",
          "items" : [
            {
              "id" : "PART-287001-EU",
              "name" : "Bluetooth Charging Base - V400m",
              "quantity" : 2
            },
            {
              "id" : "PART-620222-EU",
              "name" : "Receipt Roll",
              "quantity" : 20
            }
          ]
        }
      },
      "get-merchants-merchantId-terminalOrders-success-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response with the terminal orders for a merchant account",
        "value" : {
          "data" : [
            {
              "id" : "4154567890100682",
              "customerOrderReference" : "YOUR_REFERENCE_M2",
              "status" : "Placed",
              "shippingLocation" : {
                "id" : "S2-6A6C2E3432747D4F2F2C3455485E3836457D",
                "name" : "YOUR_COMPANY Spain",
                "contact" : {
                  "firstName" : "Pablo",
                  "lastName" : "Mengano",
                  "phoneNumber" : "+34911234567",
                  "email" : "Pablo.Mengano@company.com"
                },
                "address" : {
                  "streetAddress" : "Paseo de la Castellana 43",
                  "streetAddress2" : "7 piso",
                  "postalCode" : "28046",
                  "city" : "Madrid",
                  "country" : "ES"
                }
              },
              "billingEntity" : {
                "id" : "MerchantAccount.YOUR_MERCHANT_ACCOUNT",
                "name" : "YOUR_MERCHANT_ACCOUNT",
                "taxId" : "ES1234567890",
                "email" : "Pablo.Mengano@company.com",
                "address" : {
                  "streetAddress" : "Paseo de la Castellana 43, 7",
                  "postalCode" : "28046",
                  "city" : "Madrid",
                  "country" : "ES"
                }
              },
              "orderDate" : "2022-01-21T16:12:33Z",
              "items" : [
                {
                  "id" : "PART-287001-EU",
                  "name" : "Bluetooth Charging Base - V400m",
                  "quantity" : 2
                },
                {
                  "id" : "PART-620222-EU",
                  "name" : "Receipt Roll",
                  "quantity" : 20
                }
              ]
            },
            {
              "id" : "8315943674501996",
              "customerOrderReference" : "YOUR_REFERENCE_M1",
              "status" : "Cancelled",
              "shippingLocation" : {
                "id" : "S2-6A6C2E3432747D4F2F2C3455485E3836457D",
                "name" : "YOUR_COMPANY Spain",
                "contact" : {
                  "firstName" : "Pablo",
                  "lastName" : "Mengano",
                  "phoneNumber" : "+34911234567",
                  "email" : "Pablo.Mengano@company.com"
                },
                "address" : {
                  "streetAddress" : "Paseo de la Castellana 43",
                  "streetAddress2" : "7 piso",
                  "postalCode" : "28046",
                  "city" : "Madrid",
                  "country" : "ES"
                }
              },
              "billingEntity" : {
                "id" : "MerchantAccount.YOUR_MERCHANT_ACCOUNT",
                "name" : "YOUR_MERCHANT_ACCOUNT",
                "taxId" : "ES1234567890",
                "email" : "Pablo.Mengano@company.com",
                "address" : {
                  "streetAddress" : "Paseo de la Castellana 43, 7",
                  "postalCode" : "28046",
                  "city" : "Madrid",
                  "country" : "ES"
                }
              },
              "orderDate" : "2022-01-04T09:41:07.000Z",
              "items" : [
                {
                  "id" : "TBOX-V400m-774-EU",
                  "name" : "V400m Package",
                  "quantity" : 1
                }
              ]
            }
          ]
        }
      },
      "get-merchants-merchantId-terminalProducts-success-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response with V400m products available in Spain",
        "value" : {
          "data" : [
            {
              "id" : "PART-620222-EU",
              "name" : "Receipt Roll",
              "price" : {
                "currency" : "EUR",
                "value" : 0.00
              }
            },
            {
              "id" : "PART-175746-EU",
              "name" : "Adyen Test Card",
              "price" : {
                "currency" : "EUR",
                "value" : 0.00
              }
            },
            {
              "id" : "PART-327486-EU",
              "name" : "Battery - V400m",
              "price" : {
                "currency" : "EUR",
                "value" : 0.00
              }
            },
            {
              "id" : "PART-287001-EU",
              "name" : "Bluetooth Charging Base - V400m",
              "price" : {
                "currency" : "EUR",
                "value" : 0.00
              }
            },
            {
              "id" : "PART-745984-EU",
              "name" : "Power Supply EU - V400m",
              "price" : {
                "currency" : "EUR",
                "value" : 0.00
              }
            },
            {
              "id" : "TBOX-V400m-684-EU",
              "name" : "V400m Package",
              "description" : "Includes an EU Power Supply, SIM Card and battery",
              "price" : {
                "currency" : "EUR",
                "value" : 0.00
              },
              "itemsIncluded" : [
                "Receipt Roll",
                "Terminal Device V400m EU/GB"
              ]
            }
          ]
        }
      },
      "get-merchants-merchantId-terminalSettings-success-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response when getting the settings of a payment terminal",
        "value" : {
          "cardholderReceipt" : {
            "headerForAuthorizedReceipt" : "header1,header2,filler"
          },
          "gratuities" : [
            {
              "currency" : "EUR",
              "usePredefinedTipEntries" : true,
              "predefinedTipEntries" : [
                "100",
                "1%",
                "5%"
              ],
              "allowCustomAmount" : true
            }
          ],
          "nexo" : {
            "displayUrls" : {
              "localUrls" : [
                {
                  "password" : "BASIC_AUTH_PASSWORD",
                  "url" : "https://your-display-notifications-endpoint.com",
                  "username" : "BASIC_AUTH_USERNAME"
                }
              ]
            },
            "encryptionKey" : {
              "identifier" : "KEY_IDENTIFIER",
              "passphrase" : "KEY_PASSPHRASE",
              "version" : 1
            },
            "eventUrls" : {
              "eventPublicUrls" : [
                {
                  "password" : "BASIC_AUTH_PASSWORD",
                  "url" : "https://your-event-notifications-endpoint.com",
                  "username" : "BASIC_AUTH_USERNAME"
                }
              ]
            }
          },
          "opi" : {
            "enablePayAtTable" : true,
            "payAtTableStoreNumber" : "1",
            "payAtTableURL" : "https:/your-pay-at-table-endpoint.com"
          },
          "offlineProcessing" : {
            "chipFloorLimit" : 0
          },
          "receiptOptions" : {
            "qrCodeData" : "http://www.example.com/order/${pspreference}/${merchantreference}"
          },
          "receiptPrinting" : {
            "shopperApproved" : true,
            "shopperRefused" : true,
            "shopperCancelled" : true,
            "shopperRefundApproved" : true,
            "shopperRefundRefused" : true,
            "shopperVoid" : true
          },
          "signature" : {
            "askSignatureOnScreen" : true,
            "skipSignature" : false,
            "deviceName" : "Amsterdam-236203386"
          },
          "wifiProfiles" : {
            "profiles" : [
              {
                "authType" : "wpa-psk",
                "autoWifi" : false,
                "bssType" : "infra",
                "channel" : 0,
                "defaultProfile" : true,
                "hiddenSsid" : false,
                "name" : "Guest Wi-Fi",
                "psk" : "4R8R2R3V456X",
                "ssid" : "G470P37660D4G",
                "wsec" : "ccmp"
              }
            ],
            "settings" : {
              "band" : "All",
              "roaming" : true
            }
          },
          "timeouts" : {
            "fromActiveToSleep" : 30
          },
          "hardware" : {
            "displayMaximumBackLight" : 75
          }
        }
      },
      "get-merchants-merchantId-webhooks-get-merchant-webhooks-200" : {
        "summary" : "OK 200 - Get the list of webhook configurations",
        "description" : "Example response for getting the list of webhook configurations.",
        "value" : {
          "_links" : {
            "first" : {
              "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/webhooks?pageNumber=1&pageSize=10"
            },
            "last" : {
              "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/webhooks?pageNumber=1&pageSize=10"
            },
            "self" : {
              "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/webhooks?pageNumber=1&pageSize=10"
            }
          },
          "itemsTotal" : 1,
          "pagesTotal" : 1,
          "data" : [
            {
              "id" : "S2-3E5E42476641",
              "type" : "standard",
              "url" : "YOUR_WEBHOOK_URL",
              "description" : "Webhook for YOUR_MERCHANT_ACCOUNT - YOUR_MERCHANT_CODE",
              "username" : "",
              "hasPassword" : false,
              "active" : true,
              "hasError" : false,
              "sslVersion" : "TLSv1.2",
              "communicationFormat" : "json",
              "acceptsExpiredCertificate" : false,
              "acceptsSelfSignedCertificate" : false,
              "acceptsUntrustedRootCertificate" : false,
              "populateSoapActionHeader" : false,
              "additionalSettings" : {
                "properties" : {
                  "includePosTerminalInfo" : false,
                  "includeARN" : false,
                  "includePosDetails" : false,
                  "includeCardInfoForRecurringContractNotification" : false,
                  "includeRiskData" : false,
                  "includeRiskExperimentReference" : false,
                  "includeSoapSecurityHeader" : false,
                  "includeContactlessWalletTokenInformation" : false,
                  "includeAcquirerReference" : false,
                  "includeRiskProfileReference" : false,
                  "includeOriginalMerchantReferenceCancelOrRefundNotification" : false,
                  "includeNfcTokenInformation" : false,
                  "includeSubvariant" : false,
                  "includeThreeDSVersion" : false,
                  "includeInstallmentsInfo" : false,
                  "includeAliasInfo" : false,
                  "includeShopperCountry" : false,
                  "includeRawThreeDSecureResult" : false,
                  "includeAirlineData" : false,
                  "includeGrossCurrencyChargebackDetails" : false,
                  "includeThreeDSecureResult" : false,
                  "includeMetadataIn3DSecurePaymentNotification" : false,
                  "includeOriginalReferenceForChargebackReversed" : false,
                  "addAcquirerResult" : false,
                  "includeDeliveryAddress" : false,
                  "includeRetryAttempts" : false,
                  "includeExtraCosts" : false,
                  "includeCardHolderName" : false,
                  "includeShopperDetail" : false,
                  "includeBankAccountDetails" : false,
                  "includeMandateDetails" : false,
                  "includeAuthAmountForDynamicZeroAuth" : false,
                  "includeIssuerCountry" : false,
                  "includeAcquirerErrorDetails" : false,
                  "includeCoBrandedWith" : false,
                  "includeShopperInteraction" : false,
                  "includeDeviceAndBrowserInfo" : false,
                  "addRawAcquirerResult" : false,
                  "includeCardBin" : false,
                  "includeFundingSource" : false,
                  "includeThreeDS2ChallengeInformation" : false,
                  "includeRiskProfile" : false,
                  "includeRealtimeAccountUpdaterStatus" : false,
                  "includeDunningProjectData" : false,
                  "includePaymentResultInOrderClosedNotification" : false,
                  "includeCardBinDetails" : false,
                  "includeNotesInManualReviewNotifications" : false,
                  "includeZeroAuthFlag" : false,
                  "addCaptureReferenceToDisputeNotification" : false,
                  "includePayPalDetails" : false,
                  "includeRawThreeDSecureDetailsResult" : false,
                  "includeBankVerificationResults" : false,
                  "includeCaptureDelayHours" : false,
                  "addPaymentAccountReference" : false,
                  "includePayULatamDetails" : false,
                  "includeStore" : false,
                  "returnAvsData" : false,
                  "includeWeChatPayOpenid" : false,
                  "includeUpiVpa" : false,
                  "includeCustomRoutingFlagging" : false,
                  "includeTokenisedPaymentMetaData" : false
                }
              },
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/webhooks/S2-3E5E42476641"
                },
                "generateHmac" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/webhooks/S2-3E5E42476641/generateHmac"
                },
                "merchant" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT"
                },
                "testWebhook" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/webhooks/S2-3E5E42476641/test"
                }
              }
            }
          ]
        }
      },
      "get-merchants-merchantId-webhooks-webhookId-get-merchant-webhook-200" : {
        "summary" : "OK 200 - Get a webhook configuration",
        "description" : "Example response for getting a webhook configuration.",
        "value" : {
          "id" : "S2-3E5E42476641",
          "type" : "standard",
          "url" : "YOUR_WEBHOOK_URL",
          "description" : "Webhook for YOUR_MERCHANT_ACCOUNT - YOUR_MERCHANT_CODE",
          "username" : "",
          "hasPassword" : false,
          "active" : true,
          "hasError" : false,
          "sslVersion" : "TLSv1.2",
          "communicationFormat" : "json",
          "acceptsExpiredCertificate" : false,
          "acceptsSelfSignedCertificate" : false,
          "acceptsUntrustedRootCertificate" : false,
          "populateSoapActionHeader" : false,
          "additionalSettings" : {
            "properties" : {
              "includePosTerminalInfo" : false,
              "includeARN" : false,
              "includePosDetails" : false,
              "includeCardInfoForRecurringContractNotification" : false,
              "includeRiskData" : false,
              "includeRiskExperimentReference" : false,
              "includeSoapSecurityHeader" : false,
              "includeContactlessWalletTokenInformation" : false,
              "includeAcquirerReference" : false,
              "includeRiskProfileReference" : false,
              "includeOriginalMerchantReferenceCancelOrRefundNotification" : false,
              "includeNfcTokenInformation" : false,
              "includeSubvariant" : false,
              "includeThreeDSVersion" : false,
              "includeInstallmentsInfo" : false,
              "includeAliasInfo" : false,
              "includeShopperCountry" : false,
              "includeRawThreeDSecureResult" : false,
              "includeAirlineData" : false,
              "includeGrossCurrencyChargebackDetails" : false,
              "includeThreeDSecureResult" : false,
              "includeMetadataIn3DSecurePaymentNotification" : false,
              "includeOriginalReferenceForChargebackReversed" : false,
              "addAcquirerResult" : false,
              "includeDeliveryAddress" : false,
              "includeRetryAttempts" : false,
              "includeExtraCosts" : false,
              "includeCardHolderName" : false,
              "includeShopperDetail" : false,
              "includeBankAccountDetails" : false,
              "includeMandateDetails" : false,
              "includeAuthAmountForDynamicZeroAuth" : false,
              "includeIssuerCountry" : false,
              "includeAcquirerErrorDetails" : false,
              "includeCoBrandedWith" : false,
              "includeShopperInteraction" : false,
              "includeDeviceAndBrowserInfo" : false,
              "addRawAcquirerResult" : false,
              "includeCardBin" : false,
              "includeFundingSource" : false,
              "includeThreeDS2ChallengeInformation" : false,
              "includeRiskProfile" : false,
              "includeRealtimeAccountUpdaterStatus" : false,
              "includeDunningProjectData" : false,
              "includePaymentResultInOrderClosedNotification" : false,
              "includeCardBinDetails" : false,
              "includeNotesInManualReviewNotifications" : false,
              "includeZeroAuthFlag" : false,
              "addCaptureReferenceToDisputeNotification" : false,
              "includePayPalDetails" : false,
              "includeRawThreeDSecureDetailsResult" : false,
              "includeBankVerificationResults" : false,
              "includeCaptureDelayHours" : false,
              "addPaymentAccountReference" : false,
              "includePayULatamDetails" : false,
              "includeStore" : false,
              "returnAvsData" : false,
              "includeWeChatPayOpenid" : false,
              "includeUpiVpa" : false,
              "includeCustomRoutingFlagging" : false,
              "includeTokenisedPaymentMetaData" : false
            }
          },
          "_links" : {
            "self" : {
              "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/webhooks/S2-3E5E42476641"
            },
            "generateHmac" : {
              "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/webhooks/S2-3E5E42476641/generateHmac"
            },
            "merchant" : {
              "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT"
            },
            "testWebhook" : {
              "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/webhooks/S2-3E5E42476641/test"
            }
          }
        }
      },
      "get-merchants-success-200" : {
        "summary" : "List of merchant accounts",
        "description" : "Example response when your API credential has access to 23 merchant accounts",
        "value" : {
          "_links" : {
            "first" : {
              "href" : "https://management-test.adyen.com/v1/merchants?pageNumber=1&pageSize=10"
            },
            "last" : {
              "href" : "https://management-test.adyen.com/v1/merchants?pageNumber=3&pageSize=10"
            },
            "next" : {
              "href" : "https://management-test.adyen.com/v1/merchants?pageNumber=2&pageSize=10"
            },
            "self" : {
              "href" : "https://management-test.adyen.com/v1/merchants?pageNumber=1&pageSize=10"
            }
          },
          "itemsTotal" : 23,
          "pagesTotal" : 3,
          "data" : [
            {
              "id" : "YOUR_MERCHANT_ACCOUNT_1",
              "name" : "YOUR_MERCHANT_NAME_1",
              "captureDelay" : "immediate",
              "defaultShopperInteraction" : "Ecommerce",
              "status" : "Active",
              "shopWebAddress" : "YOUR_SHOP_URL_1",
              "merchantCity" : "Amsterdam",
              "primarySettlementCurrency" : "EUR",
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_1"
                },
                "apiCredentials" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_1/apiCredentials"
                },
                "users" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_1/users"
                },
                "webhooks" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_1/webhooks"
                }
              }
            },
            {
              "id" : "YOUR_MERCHANT_ACCOUNT_2",
              "name" : "YOUR_MERCHANT_NAME_2",
              "captureDelay" : "immediate",
              "defaultShopperInteraction" : "POS",
              "status" : "Active",
              "shopWebAddress" : "YOUR_SHOP_URL_2",
              "merchantCity" : "",
              "primarySettlementCurrency" : "EUR",
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_2"
                },
                "apiCredentials" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_2/apiCredentials"
                },
                "users" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_2/users"
                },
                "webhooks" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_2/webhooks"
                }
              }
            },
            {
              "id" : "YOUR_MERCHANT_ACCOUNT_3",
              "status" : "YOUR_MERCHANT_NAME_3",
              "merchantCity" : "Amsterdam",
              "primarySettlementCurrency" : "EUR",
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_3"
                },
                "apiCredentials" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_3/apiCredentials"
                },
                "users" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_3/users"
                },
                "webhooks" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_3/webhooks"
                }
              }
            },
            {
              "id" : "YOUR_MERCHANT_ACCOUNT_4",
              "name" : "YOUR_MERCHANT_NAME_4",
              "captureDelay" : "immediate",
              "defaultShopperInteraction" : "Ecommerce",
              "status" : "Active",
              "shopWebAddress" : "YOUR_SHOP_URL_4",
              "merchantCity" : "Sao Paulo",
              "primarySettlementCurrency" : "BRL",
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_4"
                },
                "apiCredentials" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_4/apiCredentials"
                },
                "users" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_4/users"
                },
                "webhooks" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_4/webhooks"
                }
              }
            },
            {
              "id" : "YOUR_MERCHANT_ACCOUNT_5",
              "name" : "YOUR_MERCHANT_NAME_5",
              "captureDelay" : "3",
              "defaultShopperInteraction" : "Ecommerce",
              "status" : "Active",
              "shopWebAddress" : "YOUR_SHOP_URL_5",
              "primarySettlementCurrency" : "EUR",
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_5"
                },
                "apiCredentials" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_5/apiCredentials"
                },
                "users" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_5/users"
                },
                "webhooks" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_5/webhooks"
                }
              }
            },
            {
              "id" : "YOUR_MERCHANT_ACCOUNT_6",
              "name" : "YOUR_MERCHANT_NAME_6",
              "captureDelay" : "immediate",
              "defaultShopperInteraction" : "Ecommerce",
              "status" : "Active",
              "shopWebAddress" : "YOUR_SHOP_URL_6",
              "merchantCity" : "Zagreb",
              "primarySettlementCurrency" : "BRL",
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_NAME_6"
                },
                "apiCredentials" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_NAME_6/apiCredentials"
                },
                "users" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_NAME_6/users"
                },
                "webhooks" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_NAME_6/webhooks"
                }
              }
            },
            {
              "id" : "YOUR_MERCHANT_ACCOUNT_7",
              "name" : "YOUR_MERCHANT_NAME_7",
              "captureDelay" : "manual",
              "defaultShopperInteraction" : "Moto",
              "status" : "Active",
              "shopWebAddress" : "YOUR_SHOP_URL_7",
              "merchantCity" : "Amsterdam",
              "primarySettlementCurrency" : "EUR",
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_7"
                },
                "apiCredentials" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_7/apiCredentials"
                },
                "users" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_7/users"
                },
                "webhooks" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_7/webhooks"
                }
              }
            },
            {
              "id" : "YOUR_MERCHANT_ACCOUNT_8",
              "name" : "YOUR_MERCHANT_NAME_8",
              "captureDelay" : "immediate",
              "defaultShopperInteraction" : "Ecommerce",
              "status" : "Active",
              "shopWebAddress" : "YOUR_SHOP_URL_8",
              "merchantCity" : "Amsterdam",
              "primarySettlementCurrency" : "EUR",
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_8"
                },
                "apiCredentials" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_8/apiCredentials"
                },
                "users" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_8/users"
                },
                "webhooks" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_8/webhooks"
                }
              }
            },
            {
              "id" : "YOUR_MERCHANT_ACCOUNT_9",
              "name" : "YOUR_MERCHANT_NAME_9",
              "captureDelay" : "3",
              "defaultShopperInteraction" : "Ecommerce",
              "status" : "Active",
              "shopWebAddress" : "YOUR_SHOP_URL_9",
              "merchantCity" : "",
              "primarySettlementCurrency" : "EUR",
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_9"
                },
                "apiCredentials" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_9/apiCredentials"
                },
                "users" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_9/users"
                },
                "webhooks" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_9/webhooks"
                }
              }
            },
            {
              "id" : "YOUR_MERCHANT_ACCOUNT_10",
              "name" : "YOUR_MERCHANT_NAME_10",
              "captureDelay" : "manual",
              "defaultShopperInteraction" : "Ecommerce",
              "status" : "Active",
              "shopWebAddress" : "YOUR_SHOP_URL_10",
              "merchantCity" : "Paris",
              "primarySettlementCurrency" : "EUR",
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_10"
                },
                "apiCredentials" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_10/apiCredentials"
                },
                "users" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_10/users"
                },
                "webhooks" : {
                  "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_10/webhooks"
                }
              }
            }
          ]
        }
      },
      "get-stores-storeId-success-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response when getting the details of a store",
        "value" : {
          "id" : "ST322LJ223223K5F4SQNR9XL5",
          "address" : {
            "city" : "Springfield",
            "country" : "US",
            "line1" : "200 Main Street",
            "line2" : "Building 5A",
            "line3" : "Suite 3",
            "postalCode" : "20250",
            "stateOrProvince" : "NY"
          },
          "description" : "City centre store",
          "merchantId" : "YOUR_MERCHANT_ACCOUNT_ID",
          "phoneNumber" : "+1813702551707653",
          "reference" : "Springfield Shop",
          "status" : "active",
          "_links" : {
            "self" : {
              "href" : "https://management-test.adyen.com/v1/stores/ST322LJ223223K5F4SQNR9XL5"
            }
          }
        }
      },
      "get-stores-storeId-terminalLogos-success-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response when getting the logo of a payment terminal",
        "value" : {
          "data" : "BASE-64_ENCODED_STRING"
        }
      },
      "get-stores-storeId-terminalSettings-success-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response when getting the settings of a payment terminal",
        "value" : {
          "cardholderReceipt" : {
            "headerForAuthorizedReceipt" : "header1,header2,filler"
          },
          "gratuities" : [
            {
              "currency" : "EUR",
              "usePredefinedTipEntries" : true,
              "predefinedTipEntries" : [
                "100",
                "1%",
                "5%"
              ],
              "allowCustomAmount" : true
            }
          ],
          "nexo" : {
            "displayUrls" : {
              "localUrls" : [
                {
                  "password" : "BASIC_AUTH_PASSWORD",
                  "url" : "https://your-display-notifications-endpoint.com",
                  "username" : "BASIC_AUTH_USERNAME"
                }
              ]
            },
            "encryptionKey" : {
              "identifier" : "KEY_IDENTIFIER",
              "passphrase" : "KEY_PASSPHRASE",
              "version" : 1
            },
            "eventUrls" : {
              "eventPublicUrls" : [
                {
                  "password" : "BASIC_AUTH_PASSWORD",
                  "url" : "https://your-event-notifications-endpoint.com",
                  "username" : "BASIC_AUTH_USERNAME"
                }
              ]
            }
          },
          "opi" : {
            "enablePayAtTable" : true,
            "payAtTableStoreNumber" : "1",
            "payAtTableURL" : "https:/your-pay-at-table-endpoint.com"
          },
          "offlineProcessing" : {
            "chipFloorLimit" : 0
          },
          "receiptOptions" : {
            "qrCodeData" : "http://www.example.com/order/${pspreference}/${merchantreference}"
          },
          "receiptPrinting" : {
            "shopperApproved" : true,
            "shopperRefused" : true,
            "shopperCancelled" : true,
            "shopperRefundApproved" : true,
            "shopperRefundRefused" : true,
            "shopperVoid" : true
          },
          "signature" : {
            "askSignatureOnScreen" : true,
            "skipSignature" : false,
            "deviceName" : "Amsterdam-236203386"
          },
          "wifiProfiles" : {
            "profiles" : [
              {
                "authType" : "wpa-psk",
                "autoWifi" : false,
                "bssType" : "infra",
                "channel" : 0,
                "defaultProfile" : true,
                "hiddenSsid" : false,
                "name" : "Guest Wi-Fi",
                "psk" : "4R8R2R3V456X",
                "ssid" : "G470P37660D4G",
                "wsec" : "ccmp"
              }
            ],
            "settings" : {
              "band" : "All",
              "roaming" : true
            }
          },
          "timeouts" : {
            "fromActiveToSleep" : 30
          },
          "hardware" : {
            "displayMaximumBackLight" : 75
          }
        }
      },
      "get-stores-success-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response when getting a list of stores",
        "value" : {
          "_links" : {
            "first" : {
              "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_ID/stores?pageNumber=1&pageSize=1"
            },
            "last" : {
              "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_ID/stores?pageNumber=2&pageSize=1"
            },
            "next" : {
              "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_ID/stores?pageNumber=2&pageSize=1"
            },
            "self" : {
              "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_ID/stores?pageNumber=1&pageSize=1"
            }
          },
          "itemsTotal" : 2,
          "pagesTotal" : 1,
          "data" : [
            {
              "id" : "ST322LJ223223K5F4SQNR9XL5",
              "address" : {
                "city" : "Springfield",
                "country" : "US",
                "line1" : "200 Main Street",
                "line2" : "Building 5A",
                "line3" : "Suite 3",
                "postalCode" : "20250",
                "stateOrProvince" : "NY"
              },
              "description" : "City centre store",
              "merchantId" : "YOUR_MERCHANT_ACCOUNT_ID",
              "phoneNumber" : "+1813702551707653",
              "reference" : "Springfield Shop",
              "status" : "active",
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/stores/ST322LJ223223K5F4SQNR9XL5"
                }
              }
            },
            {
              "id" : "ST322LJ223223K5F4SQNR9XL6",
              "address" : {
                "city" : "North Madison",
                "country" : "US",
                "line1" : "1492 Townline Road",
                "line2" : "Rowland Business Park",
                "postalCode" : "20577",
                "stateOrProvince" : "NY"
              },
              "description" : "West location",
              "merchantId" : "YOUR_MERCHANT_ACCOUNT_ID",
              "phoneNumber" : "+1211992213193020",
              "reference" : "Second Madison store",
              "status" : "active",
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/stores/ST322LJ223223K5F4SQNR9XL6"
                }
              }
            }
          ]
        }
      },
      "get-terminals-success-200" : {
        "summary" : "List of terminals",
        "description" : "Example response when getting terminals that your API credential has access to.",
        "value" : {
          "_links" : {
            "first" : {
              "href" : "https://management-test.adyen.com/v3/terminals?pageNumber=1&pageSize=20"
            },
            "last" : {
              "href" : "https://management-test.adyen.com/v3/terminals?pageNumber=1&pageSize=20"
            },
            "next" : {
              "href" : "https://management-test.adyen.com/v3/terminals?pageNumber=1&pageSize=20"
            },
            "self" : {
              "href" : "https://management-test.adyen.com/v3/terminals?pageNumber=0&pageSize=20"
            }
          },
          "itemsTotal" : 1,
          "pagesTotal" : 1,
          "data" : [
            {
              "id" : "AMS1-000150183300032",
              "model" : "AMS1",
              "serialNumber" : "000150183300032",
              "firmwareVersion" : "Castles_Android 1.89.4",
              "assignment" : {
                "companyId" : "YOUR_COMPANY_ACCOUNT",
                "merchantId" : "YOUR_MERCHANT_ACCOUNT",
                "storeId" : "YOUR_STORE_ID",
                "status" : "reassignmentInProgress",
                "reassignmentTarget" : {
                  "inventory" : true
                }
              },
              "connectivity" : {
                "cellular" : {
                  "iccid" : "6006491286999921374"
                },
                "wifi" : {
                  "ipAddress" : "198.51.100.1",
                  "macAddress" : "C4:6E:33:26:36:E4"
                }
              }
            }
          ]
        }
      },
      "get-terminals-terminalId-terminalLogos-success-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response when getting the logo of a payment terminal",
        "value" : {
          "data" : "BASE-64_ENCODED_STRING"
        }
      },
      "get-terminals-terminalId-terminalSettings-success-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response when getting the settings of a payment terminal",
        "value" : {
          "cardholderReceipt" : {
            "headerForAuthorizedReceipt" : "header1,header2,filler"
          },
          "gratuities" : [
            {
              "currency" : "EUR",
              "usePredefinedTipEntries" : true,
              "predefinedTipEntries" : [
                "100",
                "1%",
                "5%"
              ],
              "allowCustomAmount" : true
            }
          ],
          "nexo" : {
            "displayUrls" : {
              "localUrls" : [
                {
                  "password" : "BASIC_AUTH_PASSWORD",
                  "url" : "https://your-display-notifications-endpoint.com",
                  "username" : "BASIC_AUTH_USERNAME"
                }
              ]
            },
            "encryptionKey" : {
              "identifier" : "KEY_IDENTIFIER",
              "passphrase" : "KEY_PASSPHRASE",
              "version" : 1
            },
            "eventUrls" : {
              "eventPublicUrls" : [
                {
                  "password" : "BASIC_AUTH_PASSWORD",
                  "url" : "https://your-event-notifications-endpoint.com",
                  "username" : "BASIC_AUTH_USERNAME"
                }
              ]
            },
            "notification" : {
              "showButton" : true
            }
          },
          "opi" : {
            "enablePayAtTable" : true,
            "payAtTableStoreNumber" : "1",
            "payAtTableURL" : "https:/your-pay-at-table-endpoint.com"
          },
          "offlineProcessing" : {
            "chipFloorLimit" : 0
          },
          "receiptOptions" : {
            "qrCodeData" : "http://www.example.com/order/${pspreference}/${merchantreference}"
          },
          "receiptPrinting" : {
            "shopperApproved" : true,
            "shopperRefused" : true,
            "shopperCancelled" : true,
            "shopperRefundApproved" : true,
            "shopperRefundRefused" : true,
            "shopperVoid" : true
          },
          "signature" : {
            "askSignatureOnScreen" : true,
            "skipSignature" : false,
            "deviceName" : "Amsterdam-236203386"
          },
          "wifiProfiles" : {
            "profiles" : [
              {
                "authType" : "wpa-psk",
                "autoWifi" : false,
                "bssType" : "infra",
                "channel" : 0,
                "defaultProfile" : true,
                "hiddenSsid" : false,
                "name" : "Guest Wi-Fi",
                "psk" : "4R8R2R3V456X",
                "ssid" : "G470P37660D4G",
                "wsec" : "ccmp"
              }
            ],
            "settings" : {
              "band" : "All",
              "roaming" : true
            }
          },
          "timeouts" : {
            "fromActiveToSleep" : 30
          },
          "hardware" : {
            "displayMaximumBackLight" : 75,
            "restartHour" : 5
          },
          "passcodes" : {
            "adminMenuPin" : "1234",
            "txMenuPin" : "1234",
            "refundPin" : "123456",
            "screenLockPin" : "1111"
          },
          "connectivity" : {
            "simcardStatus" : "INVENTORY"
          }
        }
      },
      "patch-companies-companyId-apiCredentials-apiCredentialId-patch-company-credential" : {
        "summary" : "Activate an API credential",
        "description" : "Example request for activating an API credential.",
        "value" : {
          "active" : true
        }
      },
      "patch-companies-companyId-apiCredentials-apiCredentialId-patch-company-credential-200" : {
        "summary" : "OK 200 - Activate an API credential",
        "description" : "Example response for activating an API credential.",
        "value" : {
          "id" : "YOUR_API_CREDENTIAL",
          "username" : "YOUR_USERNAME",
          "clientKey" : "YOUR_CLIENT_KEY",
          "allowedIpAddresses" : [
          ],
          "roles" : [
            "Management API - Accounts read",
            "Management API - Webhooks read",
            "Management API - API credentials read and write",
            "Management API - Stores read",
            "Management API — Payment methods read",
            "Management API - Stores read and write",
            "Management API - Webhooks read and write",
            "Merchant Recurring role",
            "Data Protection API",
            "Management API - Payout Account Settings Read",
            "Checkout webservice role",
            "Management API - Accounts read and write",
            "Merchant PAL Webservice role"
          ],
          "active" : true,
          "_links" : {
            "self" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL"
            },
            "allowedOrigins" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/allowedOrigins"
            },
            "company" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT"
            },
            "generateApiKey" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/generateApiKey"
            },
            "generateClientKey" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/generateClientKey"
            }
          },
          "associatedMerchantAccounts" : [
          ]
        }
      },
      "patch-companies-companyId-terminalLogos-remove-logo" : {
        "summary" : "Remove logo to restore the logo from a higher level",
        "description" : "Example request to remove the payment terminal logo configured at the current level, and inherit the logo from a higher level",
        "value" : {
          "data" : ""
        }
      },
      "patch-companies-companyId-terminalLogos-remove-logo-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response for removing a payment terminal logo to restore the logo from a higher level",
        "value" : {
          "data" : "LOGO_INHERITED_FROM_HIGHER_LEVEL_BASE-64_ENCODED_STRING"
        }
      },
      "patch-companies-companyId-terminalLogos-upload-logo" : {
        "summary" : "Upload terminal logo",
        "description" : "Example request to upload a payment terminal logo",
        "value" : {
          "data" : "LOGO_FILE_CONVERTED_TO_A_BASE-64_ENCODED_STRING"
        }
      },
      "patch-companies-companyId-terminalLogos-upload-logo-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response for uploading a payment terminal logo",
        "value" : {
          "data" : "BASE-64_ENCODED_STRING_FROM_THE_REQUEST"
        }
      },
      "patch-companies-companyId-terminalOrders-orderId-update-order" : {
        "summary" : "Update a terminal order",
        "description" : "Example request to update an order for terminal products",
        "value" : {
          "shippingLocation" : "S2-7973536B20662642215526704F302044452F714622375D476169",
          "items" : [
            {
              "id" : "TBOX-V400m-684-EU",
              "name" : "V400m Package",
              "quantity" : 1
            },
            {
              "id" : "PART-175746-EU",
              "name" : "Adyen Test Card",
              "quantity" : 1
            },
            {
              "id" : "PART-620222-EU",
              "name" : "Receipt Roll",
              "quantity" : 5
            }
          ]
        }
      },
      "patch-companies-companyId-terminalOrders-orderId-update-order-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response after updating an order for terminal products",
        "value" : {
          "id" : "5265677890100681",
          "customerOrderReference" : "YOUR_REFERENCE_1",
          "status" : "Placed",
          "shippingLocation" : {
            "id" : "S2-7973536B20662642215526704F302044452F714622375D476169",
            "name" : "YOUR_COMPANY Rokin depot",
            "contact" : {
              "firstName" : "Paul",
              "lastName" : "Green",
              "phoneNumber" : "+31 020 1234567",
              "email" : "Paul.Green@company.com"
            },
            "address" : {
              "companyName" : "YOUR_COMPANY",
              "streetAddress" : "Rokin 21",
              "postalCode" : "1012 KS",
              "city" : "Amsterdam",
              "stateOrProvince" : "",
              "country" : "NL"
            }
          },
          "billingEntity" : {
            "id" : "Company.YOUR_COMPANY",
            "name" : "YOUR_COMPANY",
            "taxId" : "NL1234567890",
            "email" : "Paul.Green@company.com",
            "address" : {
              "streetAddress" : "Simon Carmiggeltstraat 6-50",
              "postalCode" : "1011 DJ",
              "city" : "Amsterdam",
              "country" : "NL"
            }
          },
          "orderDate" : "2022-01-20T14:12:33Z",
          "items" : [
            {
              "id" : "TBOX-V400m-684-EU",
              "name" : "V400m Package",
              "quantity" : 1
            },
            {
              "id" : "PART-175746-EU",
              "name" : "Adyen Test Card",
              "quantity" : 1
            },
            {
              "id" : "PART-620222-EU",
              "name" : "Receipt Roll",
              "quantity" : 5
            }
          ]
        }
      },
      "patch-companies-companyId-terminalSettings-add-eap-peap-and-psk-wifi-profiles" : {
        "summary" : "Add EAP-PEAP and PSK Wi-Fi profiles",
        "description" : "Example request to add an EAP-PEAP Wi-Fi profile and a PSK Wi-Fi profile for a terminal",
        "value" : {
          "wifiProfiles" : {
            "profiles" : [
              {
                "authType" : "wpa-eap",
                "autoWifi" : false,
                "bssType" : "infra",
                "channel" : 0,
                "defaultProfile" : true,
                "eap" : "peap",
                "eapCaCert" : {
                  "data" : "MD1rKS05M2JqRVFNQ...RTtLH1tLWo=",
                  "name" : "eap-peap-ca.pem"
                },
                "eapIdentity" : "admin",
                "eapIntermediateCert" : {
                  "data" : "PD3tUS1CRDdJTiGDR...EFoLS0tLQg=",
                  "name" : "eap-peap-client.pem"
                },
                "eapPwd" : "EAP_PEAP_PASSWORD",
                "hiddenSsid" : false,
                "name" : "Profile-eap-peap-1",
                "ssid" : "your-network",
                "wsec" : "ccmp"
              },
              {
                "authType" : "wpa-psk",
                "autoWifi" : false,
                "bssType" : "infra",
                "channel" : 0,
                "defaultProfile" : false,
                "hiddenSsid" : false,
                "name" : "Profile-guest-wifi",
                "psk" : "WIFI_PASSWORD",
                "ssid" : "your-network",
                "wsec" : "ccmp"
              }
            ],
            "settings" : {
              "band" : "2.4GHz",
              "roaming" : true,
              "timeout" : 5
            }
          }
        }
      },
      "patch-companies-companyId-terminalSettings-add-eap-peap-and-psk-wifi-profiles-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response for adding an EAP-PEAP Wi-Fi profile and a PSK Wi-Fi profile for a terminal",
        "value" : {
          "cardholderReceipt" : {
            "headerForAuthorizedReceipt" : "header1,header2,filler"
          },
          "gratuities" : [
            {
              "currency" : "EUR",
              "usePredefinedTipEntries" : true,
              "predefinedTipEntries" : [
                "100",
                "1%",
                "5%"
              ],
              "allowCustomAmount" : true
            }
          ],
          "nexo" : {
            "displayUrls" : {
              "localUrls" : [
                {
                  "password" : "BASIC_AUTH_PASSWORD",
                  "url" : "https://your-display-notifications-endpoint.com",
                  "username" : "BASIC_AUTH_USERNAME"
                }
              ]
            },
            "encryptionKey" : {
              "identifier" : "KEY_IDENTIFIER",
              "passphrase" : "KEY_PASSPHRASE",
              "version" : 1
            },
            "eventUrls" : {
              "eventPublicUrls" : [
                {
                  "password" : "BASIC_AUTH_PASSWORD",
                  "url" : "https://your-event-notifications-endpoint.com",
                  "username" : "BASIC_AUTH_USERNAME"
                }
              ]
            }
          },
          "opi" : {
            "enablePayAtTable" : true,
            "payAtTableStoreNumber" : "1",
            "payAtTableURL" : "https:/your-pay-at-table-endpoint.com"
          },
          "offlineProcessing" : {
            "chipFloorLimit" : 0
          },
          "receiptOptions" : {
            "qrCodeData" : "http://www.example.com/order/${pspreference}/${merchantreference}"
          },
          "receiptPrinting" : {
            "shopperApproved" : true,
            "shopperRefused" : true,
            "shopperCancelled" : true,
            "shopperRefundApproved" : true,
            "shopperRefundRefused" : true,
            "shopperVoid" : true
          },
          "signature" : {
            "askSignatureOnScreen" : true,
            "skipSignature" : false,
            "deviceName" : "Amsterdam-236203386"
          },
          "wifiProfiles" : {
            "profiles" : [
              {
                "authType" : "wpa-eap",
                "autoWifi" : false,
                "bssType" : "infra",
                "channel" : 0,
                "defaultProfile" : true,
                "eap" : "peap",
                "eapCaCert" : {
                  "data" : "MD1rKS05M2JqRVFNQ...RTtLH1tLWo=",
                  "name" : "eap-peap-ca.pem"
                },
                "eapIdentity" : "admin",
                "eapIntermediateCert" : {
                  "data" : "PD3tUS1CRDdJTiGDR...EFoLS0tLQg=",
                  "name" : "eap-peap-client.pem"
                },
                "eapPwd" : "EAP_PEAP_PASSWORD",
                "hiddenSsid" : false,
                "name" : "Profile-eap-peap-1",
                "ssid" : "your-network",
                "wsec" : "ccmp"
              },
              {
                "authType" : "wpa-psk",
                "autoWifi" : false,
                "bssType" : "infra",
                "channel" : 0,
                "defaultProfile" : false,
                "hiddenSsid" : false,
                "name" : "Profile-guest-wifi",
                "psk" : "WIFI_PASSWORD",
                "ssid" : "your-network",
                "wsec" : "ccmp"
              }
            ],
            "settings" : {
              "band" : "2.4GHz",
              "roaming" : true,
              "timeout" : 5
            }
          },
          "timeouts" : {
            "fromActiveToSleep" : 30
          },
          "hardware" : {
            "displayMaximumBackLight" : 75
          }
        }
      },
      "patch-companies-companyId-terminalSettings-add-eap-tls-wifi-profile" : {
        "summary" : "Add EAP-TLS Wi-Fi profile",
        "description" : "Example request to add an EAP-TLS Wi-Fi profile for a terminal",
        "value" : {
          "wifiProfiles" : {
            "profiles" : [
              {
                "authType" : "wpa-eap",
                "autoWifi" : false,
                "bssType" : "infra",
                "channel" : 0,
                "defaultProfile" : true,
                "eap" : "tls",
                "eapCaCert" : {
                  "data" : "LS0tLS05M2JqRVFNQ...EUtLS0tLQo=",
                  "name" : "eap-tls-ca.pem"
                },
                "eapClientCert" : {
                  "data" : "LS0tLS1CRUdJTiBDR...EUtLS0tLQo=",
                  "name" : "eap-tls-client.pem"
                },
                "eapClientKey" : {
                  "data" : "AAAB3NzaC1...Rtah3KLFwPU=",
                  "name" : "rsa-private.key"
                },
                "eapClientPwd" : "",
                "eapIdentity" : "admin",
                "hiddenSsid" : false,
                "name" : "Profile-eap-tls-1",
                "ssid" : "your-network",
                "wsec" : "ccmp"
              }
            ],
            "settings" : {
              "band" : "2.4GHz",
              "roaming" : true,
              "timeout" : 5
            }
          }
        }
      },
      "patch-companies-companyId-terminalSettings-add-eap-tls-wifi-profile-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response for adding an EAP-TLS Wi-Fi profile for a terminal",
        "value" : {
          "cardholderReceipt" : {
            "headerForAuthorizedReceipt" : "header1,header2,filler"
          },
          "gratuities" : [
            {
              "currency" : "EUR",
              "usePredefinedTipEntries" : true,
              "predefinedTipEntries" : [
                "100",
                "1%",
                "5%"
              ],
              "allowCustomAmount" : true
            }
          ],
          "nexo" : {
            "displayUrls" : {
              "localUrls" : [
                {
                  "password" : "BASIC_AUTH_PASSWORD",
                  "url" : "https://your-display-notifications-endpoint.com",
                  "username" : "BASIC_AUTH_USERNAME"
                }
              ]
            },
            "encryptionKey" : {
              "identifier" : "KEY_IDENTIFIER",
              "passphrase" : "KEY_PASSPHRASE",
              "version" : 1
            },
            "eventUrls" : {
              "eventPublicUrls" : [
                {
                  "password" : "BASIC_AUTH_PASSWORD",
                  "url" : "https://your-event-notifications-endpoint.com",
                  "username" : "BASIC_AUTH_USERNAME"
                }
              ]
            }
          },
          "opi" : {
            "enablePayAtTable" : true,
            "payAtTableStoreNumber" : "1",
            "payAtTableURL" : "https:/your-pay-at-table-endpoint.com"
          },
          "offlineProcessing" : {
            "chipFloorLimit" : 0
          },
          "receiptOptions" : {
            "qrCodeData" : "http://www.example.com/order/${pspreference}/${merchantreference}"
          },
          "receiptPrinting" : {
            "shopperApproved" : true,
            "shopperRefused" : true,
            "shopperCancelled" : true,
            "shopperRefundApproved" : true,
            "shopperRefundRefused" : true,
            "shopperVoid" : true
          },
          "signature" : {
            "askSignatureOnScreen" : true,
            "skipSignature" : false,
            "deviceName" : "Amsterdam-236203386"
          },
          "wifiProfiles" : {
            "profiles" : [
              {
                "authType" : "wpa-eap",
                "autoWifi" : false,
                "bssType" : "infra",
                "channel" : 0,
                "defaultProfile" : true,
                "eap" : "tls",
                "eapCaCert" : {
                  "data" : "LS0tLS05M2JqRVFNQ...EUtLS0tLQo=",
                  "name" : "eap-tls-ca.pem"
                },
                "eapClientCert" : {
                  "data" : "LS0tLS1CRUdJTiBDR...EUtLS0tLQo=",
                  "name" : "eap-tls-client.pem"
                },
                "eapClientKey" : {
                  "data" : "AAAB3NzaC1...Rtah3KLFwPU=",
                  "name" : "rsa-private.key"
                },
                "eapClientPwd" : "",
                "eapIdentity" : "admin",
                "hiddenSsid" : false,
                "name" : "Profile-eap-tls-1",
                "ssid" : "your-network",
                "wsec" : "ccmp"
              }
            ],
            "settings" : {
              "band" : "2.4GHz",
              "roaming" : true,
              "timeout" : 5
            }
          },
          "timeouts" : {
            "fromActiveToSleep" : 30
          },
          "hardware" : {
            "displayMaximumBackLight" : 75
          }
        }
      },
      "patch-companies-companyId-webhooks-webhookId-patch-company-webhook" : {
        "summary" : "Activate the webhook",
        "description" : "Example request for activating a webhook configuration.",
        "value" : {
          "active" : true
        }
      },
      "patch-companies-companyId-webhooks-webhookId-patch-company-webhook-200" : {
        "summary" : "OK 200 - Activate the webhook",
        "description" : "Example response for activating a webhook configuration.",
        "value" : {
          "id" : "S2-4A3B33202A46",
          "type" : "standard",
          "url" : "YOUR_WEBHOOK_URL",
          "description" : "Webhook for YOUR_COMPANY_ACCOUNT - YOUR_COMPANY_CODE",
          "filterMerchantAccountType" : "allAccounts",
          "username" : "",
          "hasPassword" : false,
          "active" : true,
          "hasError" : false,
          "sslVersion" : "TLSv1.2",
          "communicationFormat" : "json",
          "acceptsExpiredCertificate" : false,
          "acceptsSelfSignedCertificate" : false,
          "acceptsUntrustedRootCertificate" : false,
          "populateSoapActionHeader" : false,
          "additionalSettings" : {
            "properties" : {
              "includePosTerminalInfo" : false,
              "includeARN" : false,
              "includePosDetails" : false,
              "includeCardInfoForRecurringContractNotification" : false,
              "includeRiskData" : false,
              "includeRiskExperimentReference" : false,
              "includeSoapSecurityHeader" : false,
              "includeContactlessWalletTokenInformation" : false,
              "includeAcquirerReference" : false,
              "includeRiskProfileReference" : false,
              "includeOriginalMerchantReferenceCancelOrRefundNotification" : false,
              "includeNfcTokenInformation" : false,
              "includeSubvariant" : false,
              "includeThreeDSVersion" : false,
              "includeInstallmentsInfo" : false,
              "includeAliasInfo" : false,
              "includeShopperCountry" : false,
              "includeRawThreeDSecureResult" : false,
              "includeAirlineData" : false,
              "includeGrossCurrencyChargebackDetails" : false,
              "includeThreeDSecureResult" : false,
              "includeMetadataIn3DSecurePaymentNotification" : false,
              "includeOriginalReferenceForChargebackReversed" : false,
              "addAcquirerResult" : false,
              "includeDeliveryAddress" : false,
              "includeRetryAttempts" : false,
              "includeExtraCosts" : false,
              "includeCardHolderName" : false,
              "includeShopperDetail" : false,
              "includeBankAccountDetails" : false,
              "includeMandateDetails" : false,
              "includeAuthAmountForDynamicZeroAuth" : false,
              "includeIssuerCountry" : false,
              "includeAcquirerErrorDetails" : false,
              "includeCoBrandedWith" : false,
              "includeShopperInteraction" : false,
              "includeDeviceAndBrowserInfo" : false,
              "addRawAcquirerResult" : false,
              "includeCardBin" : false,
              "includeFundingSource" : false,
              "includeThreeDS2ChallengeInformation" : false,
              "includeRiskProfile" : false,
              "includeRealtimeAccountUpdaterStatus" : false,
              "includeDunningProjectData" : false,
              "includePaymentResultInOrderClosedNotification" : false,
              "includeCardBinDetails" : false,
              "includeNotesInManualReviewNotifications" : false,
              "includeZeroAuthFlag" : false,
              "addCaptureReferenceToDisputeNotification" : false,
              "includePayPalDetails" : false,
              "includeRawThreeDSecureDetailsResult" : false,
              "includeBankVerificationResults" : false,
              "includeCaptureDelayHours" : false,
              "addPaymentAccountReference" : false,
              "includePayULatamDetails" : false,
              "includeStore" : false,
              "returnAvsData" : false,
              "includeWeChatPayOpenid" : false,
              "includeUpiVpa" : false,
              "includeCustomRoutingFlagging" : false,
              "includeTokenisedPaymentMetaData" : false
            }
          },
          "_links" : {
            "self" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/webhooks/S2-4A3B33202A46"
            },
            "company" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT"
            },
            "generateHmac" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/webhooks/S2-4A3B33202A46/generateHmac"
            },
            "testWebhook" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/webhooks/S2-4A3B33202A46/test"
            }
          }
        }
      },
      "patch-merchants-merchantId-apiCredentials-apiCredentialId-patch-merchant-credential" : {
        "summary" : "Activate an API credential",
        "description" : "Example request for activating an API credential.",
        "value" : {
          "active" : true
        }
      },
      "patch-merchants-merchantId-apiCredentials-apiCredentialId-patch-merchant-credential-200" : {
        "summary" : "OK 200 - Activate an API credential",
        "description" : "Example response for activating an API credential.",
        "value" : {
          "id" : "YOUR_API_CREDENTIAL",
          "username" : "YOUR_USERNAME",
          "clientKey" : "YOUR_CLIENT_KEY",
          "allowedIpAddresses" : [
          ],
          "roles" : [
            "Checkout webservice role",
            "Merchant PAL Webservice role"
          ],
          "active" : true,
          "allowedOrigins" : [
            {
              "id" : "YOUR_ALLOWED_ORIGIN",
              "domain" : "https://www.mystore.com",
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/allowedOrigins/YOUR_ALLOWED_ORIGIN"
                }
              }
            }
          ],
          "_links" : {
            "self" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL"
            },
            "allowedOrigins" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/allowedOrigins"
            },
            "generateApiKey" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/generateApiKey"
            },
            "generateClientKey" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/generateClientKey"
            },
            "merchant" : {
              "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT"
            }
          }
        }
      },
      "patch-merchants-merchantId-splitConfigurations-splitConfigurationId-patch-splitConfiguration-description" : {
        "summary" : "Update split configuration description",
        "description" : "Example request for updating the description of a split configuration",
        "value" : {
          "description" : "Updated description for the split configuration"
        }
      },
      "patch-merchants-merchantId-splitConfigurations-splitConfigurationId-patch-splitConfiguration-description-200" : {
        "summary" : "Split configuration description updated",
        "description" : "Example response after updating the description of a split configuration",
        "value" : {
          "description" : "Updated description for the split configuration",
          "rules" : [
            {
              "currency" : "ANY",
              "fundingSource" : "ANY",
              "paymentMethod" : "ANY",
              "ruleId" : "SCRL4224P22322585HPCX384JW65VW",
              "shopperInteraction" : "ANY",
              "splitLogic" : {
                "additionalCommission" : {
                  "fixedAmount" : 10,
                  "variablePercentage" : 50,
                  "balanceAccountId" : "BA3227C223222H5HQ2XX77VVH"
                },
                "chargeback" : "deductFromLiableAccount",
                "commission" : {
                  "fixedAmount" : 10,
                  "variablePercentage" : 100
                },
                "splitLogicId" : "SCLG4224P22322585HPCX384JX52M2",
                "paymentFee" : "deductFromLiableAccount",
                "remainder" : "addToOneBalanceAccount",
                "tip" : "addToOneBalanceAccount"
              }
            },
            {
              "currency" : "EUR",
              "fundingSource" : "ANY",
              "paymentMethod" : "visa",
              "ruleId" : "SCRL4224P22322585HPCX5V4KV6L2R",
              "shopperInteraction" : "ANY",
              "splitLogic" : {
                "additionalCommission" : {
                  "fixedAmount" : 100,
                  "variablePercentage" : 0,
                  "balanceAccountId" : "BA3227C223222H5HQ2XX77VVH"
                },
                "chargeback" : "deductFromLiableAccount",
                "commission" : {
                  "fixedAmount" : 100,
                  "variablePercentage" : 100
                },
                "splitLogicId" : "SCLG4224P22322585HPCX5V4KW26C9",
                "paymentFee" : "deductFromLiableAccount",
                "remainder" : "addToLiableAccount",
                "tip" : "addToLiableAccount"
              }
            }
          ],
          "splitConfigurationId" : "SCNF4224P22322585HPCX384JV6JGX"
        }
      },
      "patch-merchants-merchantId-splitConfigurations-splitConfigurationId-rules-ruleId-patch-splitConfiguration-rule" : {
        "summary" : "Update the conditions in split configuration rule",
        "description" : "Example request for updating the conditions of a rule in a split configuration",
        "value" : {
          "currency" : "EUR",
          "fundingSource" : "ANY",
          "paymentMethod" : "visa",
          "shopperInteraction" : "ANY"
        }
      },
      "patch-merchants-merchantId-splitConfigurations-splitConfigurationId-rules-ruleId-patch-splitConfiguration-rule-200" : {
        "summary" : "Split configuration rule updated",
        "description" : "Example response after updating a rule in a split configuration",
        "value" : {
          "description" : "Your description for the split configuration",
          "rules" : [
            {
              "currency" : "ANY",
              "fundingSource" : "ANY",
              "paymentMethod" : "ANY",
              "ruleId" : "SCRL4224P22322585HPCX384JW65VW",
              "shopperInteraction" : "ANY",
              "splitLogic" : {
                "additionalCommission" : {
                  "fixedAmount" : 10,
                  "variablePercentage" : 50,
                  "balanceAccountId" : "BA3227C223222H5HQ2XX77VVH"
                },
                "chargeback" : "deductFromLiableAccount",
                "commission" : {
                  "fixedAmount" : 10,
                  "variablePercentage" : 100
                },
                "splitLogicId" : "SCLG4224P22322585HPCX384JX52M2",
                "paymentFee" : "deductFromLiableAccount",
                "remainder" : "addToOneBalanceAccount",
                "tip" : "addToOneBalanceAccount"
              }
            },
            {
              "currency" : "EUR",
              "fundingSource" : "ANY",
              "paymentMethod" : "visa",
              "ruleId" : "SCRL4224P22322585HPCX5V4KV6L2R",
              "shopperInteraction" : "ANY",
              "splitLogic" : {
                "additionalCommission" : {
                  "fixedAmount" : 10,
                  "variablePercentage" : 50,
                  "balanceAccountId" : "BA3227C223222H5HQ2XX77VVH"
                },
                "chargeback" : "deductFromLiableAccount",
                "commission" : {
                  "fixedAmount" : 10,
                  "variablePercentage" : 100
                },
                "splitLogicId" : "SCLG4224P22322585HPCX5V4KW26C9",
                "paymentFee" : "deductFromLiableAccount",
                "remainder" : "addToLiableAccount",
                "tip" : "addToOneBalanceAccount"
              }
            }
          ],
          "splitConfigurationId" : "SCNF4224P22322585HPCX384JV6JGX"
        }
      },
      "patch-merchants-merchantId-splitConfigurations-splitConfigurationId-rules-ruleId-splitLogic-splitLogicId-patch-splitConfiguration-rule-splitLogic" : {
        "summary" : "Update the split logic",
        "description" : "Example request for updating the split logic in a split configuration rule",
        "value" : {
          "additionalCommission" : {
            "fixedAmount" : 100,
            "variablePercentage" : 0,
            "balanceAccountId" : "BA3227C223222H5HQ2XX77VVH"
          },
          "chargeback" : "deductFromLiableAccount",
          "commission" : {
            "fixedAmount" : 100,
            "variablePercentage" : 100
          },
          "paymentFee" : "deductFromLiableAccount",
          "remainder" : "addToLiableAccount",
          "tip" : "addToLiableAccount"
        }
      },
      "patch-merchants-merchantId-splitConfigurations-splitConfigurationId-rules-ruleId-splitLogic-splitLogicId-patch-splitConfiguration-rule-splitLogic-200" : {
        "summary" : "Split logic updated",
        "description" : "Example response after updating the split logic",
        "value" : {
          "description" : "Your description for the split configuration",
          "rules" : [
            {
              "currency" : "ANY",
              "fundingSource" : "ANY",
              "paymentMethod" : "ANY",
              "ruleId" : "SCRL4224P22322585HPCX384JW65VW",
              "shopperInteraction" : "ANY",
              "splitLogic" : {
                "additionalCommission" : {
                  "fixedAmount" : 10,
                  "variablePercentage" : 50,
                  "balanceAccountId" : "BA3227C223222H5HQ2XX77VVH"
                },
                "chargeback" : "deductFromLiableAccount",
                "commission" : {
                  "fixedAmount" : 10,
                  "variablePercentage" : 100
                },
                "splitLogicId" : "SCLG4224P22322585HPCX384JX52M2",
                "paymentFee" : "deductFromLiableAccount",
                "remainder" : "addToOneBalanceAccount",
                "tip" : "addToOneBalanceAccount"
              }
            },
            {
              "currency" : "EUR",
              "fundingSource" : "ANY",
              "paymentMethod" : "visa",
              "ruleId" : "SCRL4224P22322585HPCX5V4KV6L2R",
              "shopperInteraction" : "ANY",
              "splitLogic" : {
                "additionalCommission" : {
                  "fixedAmount" : 100,
                  "variablePercentage" : 0,
                  "balanceAccountId" : "BA3227C223222H5HQ2XX77VVH"
                },
                "chargeback" : "deductFromLiableAccount",
                "commission" : {
                  "fixedAmount" : 100,
                  "variablePercentage" : 100
                },
                "splitLogicId" : "SCLG4224P22322585HPCX5V4KW26C9",
                "paymentFee" : "deductFromLiableAccount",
                "remainder" : "addToLiableAccount",
                "tip" : "addToLiableAccount"
              }
            }
          ],
          "splitConfigurationId" : "SCNF4224P22322585HPCX384JV6JGX"
        }
      },
      "patch-merchants-merchantId-stores-reference-terminalLogos-remove-logo" : {
        "summary" : "Remove logo to restore the logo from a higher level",
        "description" : "Example request to remove the payment terminal logo configured at the current level, and inherit the logo from a higher level",
        "value" : {
          "data" : ""
        }
      },
      "patch-merchants-merchantId-stores-reference-terminalLogos-remove-logo-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response for removing a payment terminal logo to restore the logo from a higher level",
        "value" : {
          "data" : "LOGO_INHERITED_FROM_HIGHER_LEVEL_BASE-64_ENCODED_STRING"
        }
      },
      "patch-merchants-merchantId-stores-reference-terminalLogos-upload-logo" : {
        "summary" : "Upload terminal logo",
        "description" : "Example request to upload a payment terminal logo",
        "value" : {
          "data" : "LOGO_FILE_CONVERTED_TO_A_BASE-64_ENCODED_STRING"
        }
      },
      "patch-merchants-merchantId-stores-reference-terminalLogos-upload-logo-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response for uploading a payment terminal logo",
        "value" : {
          "data" : "BASE-64_ENCODED_STRING_FROM_THE_REQUEST"
        }
      },
      "patch-merchants-merchantId-stores-reference-terminalSettings-add-eap-peap-and-psk-wifi-profiles" : {
        "summary" : "Add EAP-PEAP and PSK Wi-Fi profiles",
        "description" : "Example request to add an EAP-PEAP Wi-Fi profile and a PSK Wi-Fi profile for a terminal",
        "value" : {
          "wifiProfiles" : {
            "profiles" : [
              {
                "authType" : "wpa-eap",
                "autoWifi" : false,
                "bssType" : "infra",
                "channel" : 0,
                "defaultProfile" : true,
                "eap" : "peap",
                "eapCaCert" : {
                  "data" : "MD1rKS05M2JqRVFNQ...RTtLH1tLWo=",
                  "name" : "eap-peap-ca.pem"
                },
                "eapIdentity" : "admin",
                "eapIntermediateCert" : {
                  "data" : "PD3tUS1CRDdJTiGDR...EFoLS0tLQg=",
                  "name" : "eap-peap-client.pem"
                },
                "eapPwd" : "EAP_PEAP_PASSWORD",
                "name" : "Profile-eap-peap-1",
                "ssid" : "your-network",
                "wsec" : "ccmp"
              },
              {
                "authType" : "wpa-psk",
                "autoWifi" : false,
                "bssType" : "infra",
                "channel" : 0,
                "defaultProfile" : false,
                "name" : "Profile-guest-wifi",
                "psk" : "WIFI_PASSWORD",
                "ssid" : "your-network",
                "wsec" : "ccmp"
              }
            ],
            "settings" : {
              "band" : "2.4GHz",
              "roaming" : true,
              "timeout" : 5
            }
          }
        }
      },
      "patch-merchants-merchantId-stores-reference-terminalSettings-add-eap-peap-and-psk-wifi-profiles-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response for adding an EAP-PEAP Wi-Fi profile and a PSK Wi-Fi profile for a terminal",
        "value" : {
          "cardholderReceipt" : {
            "headerForAuthorizedReceipt" : "header1,header2,filler"
          },
          "gratuities" : [
            {
              "currency" : "EUR",
              "usePredefinedTipEntries" : true,
              "predefinedTipEntries" : [
                "100",
                "1%",
                "5%"
              ],
              "allowCustomAmount" : true
            }
          ],
          "nexo" : {
            "displayUrls" : {
              "localUrls" : [
                {
                  "password" : "BASIC_AUTH_PASSWORD",
                  "url" : "https://your-display-notifications-endpoint.com",
                  "username" : "BASIC_AUTH_USERNAME"
                }
              ]
            },
            "encryptionKey" : {
              "identifier" : "KEY_IDENTIFIER",
              "passphrase" : "KEY_PASSPHRASE",
              "version" : 1
            },
            "eventUrls" : {
              "eventPublicUrls" : [
                {
                  "password" : "BASIC_AUTH_PASSWORD",
                  "url" : "https://your-event-notifications-endpoint.com",
                  "username" : "BASIC_AUTH_USERNAME"
                }
              ]
            }
          },
          "opi" : {
            "enablePayAtTable" : true,
            "payAtTableStoreNumber" : "1",
            "payAtTableURL" : "https:/your-pay-at-table-endpoint.com"
          },
          "offlineProcessing" : {
            "chipFloorLimit" : 0
          },
          "receiptOptions" : {
            "qrCodeData" : "http://www.example.com/order/${pspreference}/${merchantreference}"
          },
          "receiptPrinting" : {
            "shopperApproved" : true,
            "shopperRefused" : true,
            "shopperCancelled" : true,
            "shopperRefundApproved" : true,
            "shopperRefundRefused" : true,
            "shopperVoid" : true
          },
          "signature" : {
            "askSignatureOnScreen" : true,
            "skipSignature" : false,
            "deviceName" : "Amsterdam-236203386"
          },
          "wifiProfiles" : {
            "profiles" : [
              {
                "authType" : "wpa-eap",
                "autoWifi" : false,
                "bssType" : "infra",
                "channel" : 0,
                "defaultProfile" : true,
                "eap" : "peap",
                "eapCaCert" : {
                  "data" : "MD1rKS05M2JqRVFNQ...RTtLH1tLWo=",
                  "name" : "eap-peap-ca.pem"
                },
                "eapIdentity" : "admin",
                "eapIntermediateCert" : {
                  "data" : "PD3tUS1CRDdJTiGDR...EFoLS0tLQg=",
                  "name" : "eap-peap-client.pem"
                },
                "eapPwd" : "EAP_PEAP_PASSWORD",
                "name" : "Profile-eap-peap-1",
                "ssid" : "your-network",
                "wsec" : "ccmp"
              },
              {
                "authType" : "wpa-psk",
                "autoWifi" : false,
                "bssType" : "infra",
                "channel" : 0,
                "defaultProfile" : false,
                "name" : "Profile-guest-wifi",
                "psk" : "WIFI_PASSWORD",
                "ssid" : "your-network",
                "wsec" : "ccmp"
              }
            ],
            "settings" : {
              "band" : "2.4GHz",
              "roaming" : true,
              "timeout" : 5
            }
          },
          "timeouts" : {
            "fromActiveToSleep" : 30
          },
          "hardware" : {
            "displayMaximumBackLight" : 75
          }
        }
      },
      "patch-merchants-merchantId-stores-reference-terminalSettings-add-eap-tls-wifi-profile" : {
        "summary" : "Add EAP-TLS Wi-Fi profile",
        "description" : "Example request to add an EAP-TLS Wi-Fi profile for a terminal",
        "value" : {
          "wifiProfiles" : {
            "profiles" : [
              {
                "authType" : "wpa-eap",
                "autoWifi" : false,
                "bssType" : "infra",
                "channel" : 0,
                "defaultProfile" : true,
                "eap" : "tls",
                "eapCaCert" : {
                  "data" : "LS0tLS05M2JqRVFNQ...EUtLS0tLQo=",
                  "name" : "eap-tls-ca.pem"
                },
                "eapClientCert" : {
                  "data" : "LS0tLS1CRUdJTiBDR...EUtLS0tLQo=",
                  "name" : "eap-tls-client.pem"
                },
                "eapClientKey" : {
                  "data" : "AAAB3NzaC1...Rtah3KLFwPU=",
                  "name" : "rsa-private.key"
                },
                "eapClientPwd" : "",
                "eapIdentity" : "admin",
                "name" : "Profile-eap-tls-1",
                "ssid" : "your-network",
                "wsec" : "ccmp"
              }
            ],
            "settings" : {
              "band" : "2.4GHz",
              "roaming" : true,
              "timeout" : 5
            }
          }
        }
      },
      "patch-merchants-merchantId-stores-reference-terminalSettings-add-eap-tls-wifi-profile-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response for adding an EAP-TLS Wi-Fi profile for a terminal",
        "value" : {
          "cardholderReceipt" : {
            "headerForAuthorizedReceipt" : "header1,header2,filler"
          },
          "gratuities" : [
            {
              "currency" : "EUR",
              "usePredefinedTipEntries" : true,
              "predefinedTipEntries" : [
                "100",
                "1%",
                "5%"
              ],
              "allowCustomAmount" : true
            }
          ],
          "nexo" : {
            "displayUrls" : {
              "localUrls" : [
                {
                  "password" : "BASIC_AUTH_PASSWORD",
                  "url" : "https://your-display-notifications-endpoint.com",
                  "username" : "BASIC_AUTH_USERNAME"
                }
              ]
            },
            "encryptionKey" : {
              "identifier" : "KEY_IDENTIFIER",
              "passphrase" : "KEY_PASSPHRASE",
              "version" : 1
            },
            "eventUrls" : {
              "eventPublicUrls" : [
                {
                  "password" : "BASIC_AUTH_PASSWORD",
                  "url" : "https://your-event-notifications-endpoint.com",
                  "username" : "BASIC_AUTH_USERNAME"
                }
              ]
            }
          },
          "opi" : {
            "enablePayAtTable" : true,
            "payAtTableStoreNumber" : "1",
            "payAtTableURL" : "https:/your-pay-at-table-endpoint.com"
          },
          "offlineProcessing" : {
            "chipFloorLimit" : 0
          },
          "receiptOptions" : {
            "qrCodeData" : "http://www.example.com/order/${pspreference}/${merchantreference}"
          },
          "receiptPrinting" : {
            "shopperApproved" : true,
            "shopperRefused" : true,
            "shopperCancelled" : true,
            "shopperRefundApproved" : true,
            "shopperRefundRefused" : true,
            "shopperVoid" : true
          },
          "signature" : {
            "askSignatureOnScreen" : true,
            "skipSignature" : false,
            "deviceName" : "Amsterdam-236203386"
          },
          "wifiProfiles" : {
            "profiles" : [
              {
                "authType" : "wpa-eap",
                "autoWifi" : false,
                "bssType" : "infra",
                "channel" : 0,
                "defaultProfile" : true,
                "eap" : "tls",
                "eapCaCert" : {
                  "data" : "LS0tLS05M2JqRVFNQ...EUtLS0tLQo=",
                  "name" : "eap-tls-ca.pem"
                },
                "eapClientCert" : {
                  "data" : "LS0tLS1CRUdJTiBDR...EUtLS0tLQo=",
                  "name" : "eap-tls-client.pem"
                },
                "eapClientKey" : {
                  "data" : "AAAB3NzaC1...Rtah3KLFwPU=",
                  "name" : "rsa-private.key"
                },
                "eapClientPwd" : "",
                "eapIdentity" : "admin",
                "name" : "Profile-eap-tls-1",
                "ssid" : "your-network",
                "wsec" : "ccmp"
              }
            ],
            "settings" : {
              "band" : "2.4GHz",
              "roaming" : true,
              "timeout" : 5
            }
          },
          "timeouts" : {
            "fromActiveToSleep" : 30
          },
          "hardware" : {
            "displayMaximumBackLight" : 75
          }
        }
      },
      "patch-merchants-merchantId-stores-storeId-patch-stores" : {
        "summary" : "Update store address.",
        "description" : "Example request to update the address of a store",
        "value" : {
          "address" : {
            "line1" : "1776 West Pinewood Avenue",
            "line2" : "Heartland Building",
            "line3" : "",
            "postalCode" : "20251"
          }
        }
      },
      "patch-merchants-merchantId-stores-storeId-patch-stores-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response after updating the store",
        "value" : {
          "id" : "YOUR_STORE_ID",
          "address" : {
            "country" : "US",
            "line1" : "1776 West Pinewood Avenue",
            "line2" : "Heartland Building",
            "line3" : "",
            "city" : "Springfield",
            "stateOrProvince" : "NY",
            "postalCode" : "20251"
          },
          "description" : "City centre store",
          "merchantId" : "YOUR_MERCHANT_ACCOUNT_ID",
          "shopperStatement" : "Springfield Shop",
          "phoneNumber" : "+1813702551707653",
          "reference" : "Spring_store_2",
          "status" : "active",
          "_links" : {
            "self" : {
              "href" : "https://management-test.adyen.com/v1/stores/YOUR_STORE_ID"
            }
          }
        }
      },
      "patch-merchants-merchantId-stores-storeId-patch-stores-splitConfiguration" : {
        "summary" : "Add split configuration to store",
        "description" : "Example request to add a split configuration to the store",
        "value" : {
          "splitConfiguration" : {
            "balanceAccountId" : "BA3227C223222H5HQ2XX77VVH",
            "splitConfigurationId" : "SCNF4224P22322585HPCX384JV6JGX"
          }
        }
      },
      "patch-merchants-merchantId-stores-storeId-patch-stores-splitConfiguration-200" : {
        "summary" : "Split configuration added to store",
        "description" : "Example response after adding a split confuguration to the store",
        "value" : {
          "id" : "YOUR_STORE_ID",
          "address" : {
            "country" : "US",
            "line1" : "1776 West Pinewood Avenue",
            "line2" : "Heartland Building",
            "line3" : "",
            "city" : "Springfield",
            "stateOrProvince" : "NY",
            "postalCode" : "20251"
          },
          "description" : "City centre store",
          "merchantId" : "YOUR_MERCHANT_ACCOUNT_ID",
          "shopperStatement" : "Springfield Shop",
          "phoneNumber" : "+1813702551707653",
          "reference" : "Spring_store_2",
          "splitConfiguration" : {
            "balanceAccountId" : "BA3227C223222H5HQ2XX77VVH",
            "splitConfigurationId" : "SCNF4224P22322585HPCX384JV6JGX"
          },
          "status" : "active",
          "_links" : {
            "self" : {
              "href" : "https://management-test.adyen.com/v1/stores/YOUR_STORE_ID"
            }
          }
        }
      },
      "patch-merchants-merchantId-terminalLogos-remove-logo" : {
        "summary" : "Remove logo to restore the logo from a higher level",
        "description" : "Example request to remove the payment terminal logo configured at the current level, and inherit the logo from a higher level",
        "value" : {
          "data" : ""
        }
      },
      "patch-merchants-merchantId-terminalLogos-remove-logo-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response for removing a payment terminal logo to restore the logo from a higher level",
        "value" : {
          "data" : "LOGO_INHERITED_FROM_HIGHER_LEVEL_BASE-64_ENCODED_STRING"
        }
      },
      "patch-merchants-merchantId-terminalLogos-upload-logo" : {
        "summary" : "Upload terminal logo",
        "description" : "Example request to upload a payment terminal logo",
        "value" : {
          "data" : "LOGO_FILE_CONVERTED_TO_A_BASE-64_ENCODED_STRING"
        }
      },
      "patch-merchants-merchantId-terminalLogos-upload-logo-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response for uploading a payment terminal logo",
        "value" : {
          "data" : "BASE-64_ENCODED_STRING_FROM_THE_REQUEST"
        }
      },
      "patch-merchants-merchantId-terminalOrders-orderId-update-order" : {
        "summary" : "Update a terminal order",
        "description" : "Example request to update an order for terminal products",
        "value" : {
          "shippingLocation" : "S2-73536B20665526704F30792642212044452F714622375D477270",
          "items" : [
            {
              "id" : "TBOX-V400m-684-EU",
              "name" : "V400m Package",
              "quantity" : 1
            },
            {
              "id" : "PART-287001-EU",
              "name" : "Bluetooth Charging Base - V400m",
              "quantity" : 2
            },
            {
              "id" : "PART-620222-EU",
              "name" : "Receipt Roll",
              "quantity" : 20
            }
          ]
        }
      },
      "patch-merchants-merchantId-terminalOrders-orderId-update-order-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response after updating an order for terminal products",
        "value" : {
          "id" : "4154567890100682",
          "customerOrderReference" : "YOUR_REFERENCE",
          "status" : "Placed",
          "shippingLocation" : {
            "id" : "S2-73536B20665526704F30792642212044452F714622375D477270",
            "name" : "YOUR_MERCHANT_ACCOUNT Barcelona depot",
            "contact" : {
              "firstName" : "Rita",
              "lastName" : "Perengano",
              "phoneNumber" : "+34931234567",
              "email" : "Rita.Perengano@company.com"
            },
            "address" : {
              "companyName" : "YOUR_COMPANY",
              "streetAddress" : "El quinto pino 42",
              "postalCode" : "08012",
              "city" : "Barcelona",
              "stateOrProvince" : "",
              "country" : "ES"
            }
          },
          "billingEntity" : {
            "id" : "MerchantAccount.YOUR_MERCHANT_ACCOUNT",
            "name" : "YOUR_MERCHANT_ACCOUNT",
            "taxId" : "ES1234567890",
            "email" : "Pablo.Mengano@company.com",
            "address" : {
              "streetAddress" : "Paseo de la Castellana 43, 7",
              "postalCode" : "28046",
              "city" : "Madrid",
              "country" : "ES"
            }
          },
          "orderDate" : "2022-01-21T16:12:33Z",
          "items" : [
            {
              "id" : "TBOX-V400m-684-EU",
              "name" : "V400m Package",
              "quantity" : 1
            },
            {
              "id" : "PART-287001-EU",
              "name" : "Bluetooth Charging Base - V400m",
              "quantity" : 2
            },
            {
              "id" : "PART-620222-EU",
              "name" : "Receipt Roll",
              "quantity" : 20
            }
          ]
        }
      },
      "patch-merchants-merchantId-terminalSettings-add-eap-peap-and-psk-wifi-profiles" : {
        "summary" : "Add EAP-PEAP and PSK Wi-Fi profiles",
        "description" : "Example request to add an EAP-PEAP Wi-Fi profile and a PSK Wi-Fi profile for a terminal",
        "value" : {
          "wifiProfiles" : {
            "profiles" : [
              {
                "authType" : "wpa-eap",
                "autoWifi" : false,
                "bssType" : "infra",
                "channel" : 0,
                "defaultProfile" : true,
                "eap" : "peap",
                "eapCaCert" : {
                  "data" : "MD1rKS05M2JqRVFNQ...RTtLH1tLWo=",
                  "name" : "eap-peap-ca.pem"
                },
                "eapIdentity" : "admin",
                "eapIntermediateCert" : {
                  "data" : "PD3tUS1CRDdJTiGDR...EFoLS0tLQg=",
                  "name" : "eap-peap-client.pem"
                },
                "eapPwd" : "EAP_PEAP_PASSWORD",
                "hiddenSsid" : false,
                "name" : "Profile-eap-peap-1",
                "ssid" : "your-network",
                "wsec" : "ccmp"
              },
              {
                "authType" : "wpa-psk",
                "autoWifi" : false,
                "bssType" : "infra",
                "channel" : 0,
                "defaultProfile" : false,
                "hiddenSsid" : false,
                "name" : "Profile-guest-wifi",
                "psk" : "WIFI_PASSWORD",
                "ssid" : "your-network",
                "wsec" : "ccmp"
              }
            ],
            "settings" : {
              "band" : "2.4GHz",
              "roaming" : true,
              "timeout" : 5
            }
          }
        }
      },
      "patch-merchants-merchantId-terminalSettings-add-eap-peap-and-psk-wifi-profiles-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response for adding an EAP-PEAP Wi-Fi profile and a PSK Wi-Fi profile for a terminal",
        "value" : {
          "cardholderReceipt" : {
            "headerForAuthorizedReceipt" : "header1,header2,filler"
          },
          "gratuities" : [
            {
              "currency" : "EUR",
              "usePredefinedTipEntries" : true,
              "predefinedTipEntries" : [
                "100",
                "1%",
                "5%"
              ],
              "allowCustomAmount" : true
            }
          ],
          "nexo" : {
            "nexoEventUrls" : [
              "https://your-event-notifications-endpoint.com"
            ]
          },
          "opi" : {
            "enablePayAtTable" : true,
            "payAtTableStoreNumber" : "1",
            "payAtTableURL" : "https:/your-pay-at-table-endpoint.com"
          },
          "offlineProcessing" : {
            "chipFloorLimit" : 0
          },
          "receiptOptions" : {
            "qrCodeData" : "http://www.example.com/order/${pspreference}/${merchantreference}"
          },
          "receiptPrinting" : {
            "shopperApproved" : true,
            "shopperRefused" : true,
            "shopperCancelled" : true,
            "shopperRefundApproved" : true,
            "shopperRefundRefused" : true,
            "shopperVoid" : true
          },
          "signature" : {
            "askSignatureOnScreen" : true,
            "skipSignature" : false,
            "deviceName" : "Amsterdam-236203386"
          },
          "wifiProfiles" : {
            "profiles" : [
              {
                "authType" : "wpa-eap",
                "autoWifi" : false,
                "bssType" : "infra",
                "channel" : 0,
                "defaultProfile" : true,
                "eap" : "peap",
                "eapCaCert" : {
                  "data" : "MD1rKS05M2JqRVFNQ...RTtLH1tLWo=",
                  "name" : "eap-peap-ca.pem"
                },
                "eapIdentity" : "admin",
                "eapIntermediateCert" : {
                  "data" : "PD3tUS1CRDdJTiGDR...EFoLS0tLQg=",
                  "name" : "eap-peap-client.pem"
                },
                "eapPwd" : "EAP_PEAP_PASSWORD",
                "hiddenSsid" : false,
                "name" : "Profile-eap-peap-1",
                "ssid" : "your-network",
                "wsec" : "ccmp"
              },
              {
                "authType" : "wpa-psk",
                "autoWifi" : false,
                "bssType" : "infra",
                "channel" : 0,
                "defaultProfile" : false,
                "hiddenSsid" : false,
                "name" : "Profile-guest-wifi",
                "psk" : "WIFI_PASSWORD",
                "ssid" : "your-network",
                "wsec" : "ccmp"
              }
            ],
            "settings" : {
              "band" : "2.4GHz",
              "roaming" : true,
              "timeout" : 5
            }
          },
          "timeouts" : {
            "fromActiveToSleep" : 30
          },
          "hardware" : {
            "displayMaximumBackLight" : 75
          }
        }
      },
      "patch-merchants-merchantId-terminalSettings-add-eap-tls-wifi-profile" : {
        "summary" : "Add EAP-TLS Wi-Fi profile",
        "description" : "Example request to add an EAP-TLS Wi-Fi profile for a terminal",
        "value" : {
          "wifiProfiles" : {
            "profiles" : [
              {
                "authType" : "wpa-eap",
                "autoWifi" : false,
                "bssType" : "infra",
                "channel" : 0,
                "defaultProfile" : true,
                "eap" : "tls",
                "eapCaCert" : {
                  "data" : "LS0tLS05M2JqRVFNQ...EUtLS0tLQo=",
                  "name" : "eap-tls-ca.pem"
                },
                "eapClientCert" : {
                  "data" : "LS0tLS1CRUdJTiBDR...EUtLS0tLQo=",
                  "name" : "eap-tls-client.pem"
                },
                "eapClientKey" : {
                  "data" : "AAAB3NzaC1...Rtah3KLFwPU=",
                  "name" : "rsa-private.key"
                },
                "eapClientPwd" : "",
                "eapIdentity" : "admin",
                "hiddenSsid" : false,
                "name" : "Profile-eap-tls-1",
                "ssid" : "your-network",
                "wsec" : "ccmp"
              }
            ],
            "settings" : {
              "band" : "2.4GHz",
              "roaming" : true,
              "timeout" : 5
            }
          }
        }
      },
      "patch-merchants-merchantId-terminalSettings-add-eap-tls-wifi-profile-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response for adding an EAP-TLS Wi-Fi profile for a terminal",
        "value" : {
          "cardholderReceipt" : {
            "headerForAuthorizedReceipt" : "header1,header2,filler"
          },
          "gratuities" : [
            {
              "currency" : "EUR",
              "usePredefinedTipEntries" : true,
              "predefinedTipEntries" : [
                "100",
                "1%",
                "5%"
              ],
              "allowCustomAmount" : true
            }
          ],
          "nexo" : {
            "nexoEventUrls" : [
              "https://your-event-notifications-endpoint.com"
            ]
          },
          "opi" : {
            "enablePayAtTable" : true,
            "payAtTableStoreNumber" : "1",
            "payAtTableURL" : "https:/your-pay-at-table-endpoint.com"
          },
          "offlineProcessing" : {
            "chipFloorLimit" : 0
          },
          "receiptOptions" : {
            "qrCodeData" : "http://www.example.com/order/${pspreference}/${merchantreference}"
          },
          "receiptPrinting" : {
            "shopperApproved" : true,
            "shopperRefused" : true,
            "shopperCancelled" : true,
            "shopperRefundApproved" : true,
            "shopperRefundRefused" : true,
            "shopperVoid" : true
          },
          "signature" : {
            "askSignatureOnScreen" : true,
            "skipSignature" : false,
            "deviceName" : "Amsterdam-236203386"
          },
          "wifiProfiles" : {
            "profiles" : [
              {
                "authType" : "wpa-eap",
                "autoWifi" : false,
                "bssType" : "infra",
                "channel" : 0,
                "defaultProfile" : true,
                "eap" : "tls",
                "eapCaCert" : {
                  "data" : "LS0tLS05M2JqRVFNQ...EUtLS0tLQo=",
                  "name" : "eap-tls-ca.pem"
                },
                "eapClientCert" : {
                  "data" : "LS0tLS1CRUdJTiBDR...EUtLS0tLQo=",
                  "name" : "eap-tls-client.pem"
                },
                "eapClientKey" : {
                  "data" : "AAAB3NzaC1...Rtah3KLFwPU=",
                  "name" : "rsa-private.key"
                },
                "eapClientPwd" : "",
                "eapIdentity" : "admin",
                "hiddenSsid" : false,
                "name" : "Profile-eap-tls-1",
                "ssid" : "your-network",
                "wsec" : "ccmp"
              }
            ],
            "settings" : {
              "band" : "2.4GHz",
              "roaming" : true,
              "timeout" : 5
            }
          },
          "timeouts" : {
            "fromActiveToSleep" : 30
          },
          "hardware" : {
            "displayMaximumBackLight" : 75
          }
        }
      },
      "patch-merchants-merchantId-webhooks-webhookId-patch-merchant-webhook" : {
        "summary" : "Activate the webhook",
        "description" : "Example request for activating a webhook configuration.",
        "value" : {
          "active" : true
        }
      },
      "patch-merchants-merchantId-webhooks-webhookId-patch-merchant-webhook-200" : {
        "summary" : "OK 200 - Activate the webhook",
        "description" : "Example response for activating a webhook configuration.",
        "value" : {
          "id" : "S2-3E5E42476641",
          "type" : "standard",
          "url" : "YOUR_WEBHOOK_URL",
          "description" : "Webhook for YOUR_MERCHANT_ACCOUNT - YOUR_MERCHANT_CODE",
          "username" : "",
          "hasPassword" : false,
          "active" : true,
          "hasError" : false,
          "sslVersion" : "TLSv1.2",
          "communicationFormat" : "json",
          "acceptsExpiredCertificate" : false,
          "acceptsSelfSignedCertificate" : false,
          "acceptsUntrustedRootCertificate" : false,
          "populateSoapActionHeader" : false,
          "additionalSettings" : {
            "properties" : {
              "includePosTerminalInfo" : false,
              "includeARN" : false,
              "includePosDetails" : false,
              "includeCardInfoForRecurringContractNotification" : false,
              "includeRiskData" : false,
              "includeRiskExperimentReference" : false,
              "includeSoapSecurityHeader" : false,
              "includeContactlessWalletTokenInformation" : false,
              "includeAcquirerReference" : false,
              "includeRiskProfileReference" : false,
              "includeOriginalMerchantReferenceCancelOrRefundNotification" : false,
              "includeNfcTokenInformation" : false,
              "includeSubvariant" : false,
              "includeThreeDSVersion" : false,
              "includeInstallmentsInfo" : false,
              "includeAliasInfo" : false,
              "includeShopperCountry" : false,
              "includeRawThreeDSecureResult" : false,
              "includeAirlineData" : false,
              "includeGrossCurrencyChargebackDetails" : false,
              "includeThreeDSecureResult" : false,
              "includeMetadataIn3DSecurePaymentNotification" : false,
              "includeOriginalReferenceForChargebackReversed" : false,
              "addAcquirerResult" : false,
              "includeDeliveryAddress" : false,
              "includeRetryAttempts" : false,
              "includeExtraCosts" : false,
              "includeCardHolderName" : false,
              "includeShopperDetail" : false,
              "includeBankAccountDetails" : false,
              "includeMandateDetails" : false,
              "includeAuthAmountForDynamicZeroAuth" : false,
              "includeIssuerCountry" : false,
              "includeAcquirerErrorDetails" : false,
              "includeCoBrandedWith" : false,
              "includeShopperInteraction" : false,
              "includeDeviceAndBrowserInfo" : false,
              "addRawAcquirerResult" : false,
              "includeCardBin" : false,
              "includeFundingSource" : false,
              "includeThreeDS2ChallengeInformation" : false,
              "includeRiskProfile" : false,
              "includeRealtimeAccountUpdaterStatus" : false,
              "includeDunningProjectData" : false,
              "includePaymentResultInOrderClosedNotification" : false,
              "includeCardBinDetails" : false,
              "includeNotesInManualReviewNotifications" : false,
              "includeZeroAuthFlag" : false,
              "addCaptureReferenceToDisputeNotification" : false,
              "includePayPalDetails" : false,
              "includeRawThreeDSecureDetailsResult" : false,
              "includeBankVerificationResults" : false,
              "includeCaptureDelayHours" : false,
              "addPaymentAccountReference" : false,
              "includePayULatamDetails" : false,
              "includeStore" : false,
              "returnAvsData" : false,
              "includeWeChatPayOpenid" : false,
              "includeUpiVpa" : false,
              "includeCustomRoutingFlagging" : false,
              "includeTokenisedPaymentMetaData" : false
            }
          },
          "_links" : {
            "self" : {
              "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/webhooks/S2-3E5E42476641"
            },
            "generateHmac" : {
              "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/webhooks/S2-3E5E42476641/generateHmac"
            },
            "merchant" : {
              "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT"
            },
            "testWebhook" : {
              "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/webhooks/S2-3E5E42476641/test"
            }
          }
        }
      },
      "patch-stores-storeId-patch-stores" : {
        "summary" : "Update store address.",
        "description" : "Example request to update the address of a store",
        "value" : {
          "address" : {
            "line1" : "1776 West Pinewood Avenue",
            "line2" : "Heartland Building",
            "line3" : "",
            "postalCode" : "20251"
          }
        }
      },
      "patch-stores-storeId-patch-stores-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response after updating a store",
        "value" : {
          "id" : "YOUR_STORE_ID",
          "address" : {
            "country" : "US",
            "line1" : "1776 West Pinewood Avenue",
            "line2" : "Heartland Building",
            "line3" : "",
            "city" : "Springfield",
            "stateOrProvince" : "NY",
            "postalCode" : "20251"
          },
          "description" : "City centre store",
          "merchantId" : "YOUR_MERCHANT_ACCOUNT_ID",
          "shopperStatement" : "Springfield Shop",
          "phoneNumber" : "+1813702551707653",
          "reference" : "Spring_store_2",
          "status" : "active",
          "_links" : {
            "self" : {
              "href" : "https://management-test.adyen.com/v1/stores/YOUR_STORE_ID"
            }
          }
        }
      },
      "patch-stores-storeId-patch-stores-splitConfiguration" : {
        "summary" : "Add split configuration to store",
        "description" : "Example request to add a split configuration to the store",
        "value" : {
          "splitConfiguration" : {
            "balanceAccountId" : "BA3227C223222H5HQ2XX77VVH",
            "splitConfigurationId" : "SCNF4224P22322585HPCX384JV6JGX"
          }
        }
      },
      "patch-stores-storeId-terminalLogos-remove-logo" : {
        "summary" : "Remove logo to restore the logo from a higher level",
        "description" : "Example request to remove the payment terminal logo configured at the current level, and inherit the logo from a higher level",
        "value" : {
          "data" : ""
        }
      },
      "patch-stores-storeId-terminalLogos-remove-logo-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response for removing a payment terminal logo to restore the logo from a higher level",
        "value" : {
          "data" : "LOGO_INHERITED_FROM_HIGHER_LEVEL_BASE-64_ENCODED_STRING"
        }
      },
      "patch-stores-storeId-terminalLogos-upload-logo" : {
        "summary" : "Upload terminal logo",
        "description" : "Example request to upload a payment terminal logo",
        "value" : {
          "data" : "LOGO_FILE_CONVERTED_TO_A_BASE-64_ENCODED_STRING"
        }
      },
      "patch-stores-storeId-terminalLogos-upload-logo-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response for uploading a payment terminal logo",
        "value" : {
          "data" : "BASE-64_ENCODED_STRING_FROM_THE_REQUEST"
        }
      },
      "patch-stores-storeId-terminalSettings-add-eap-peap-and-psk-wifi-profiles" : {
        "summary" : "Add EAP-PEAP and PSK Wi-Fi profiles",
        "description" : "Example request to add an EAP-PEAP Wi-Fi profile and a PSK Wi-Fi profile for a terminal",
        "value" : {
          "wifiProfiles" : {
            "profiles" : [
              {
                "authType" : "wpa-eap",
                "autoWifi" : false,
                "bssType" : "infra",
                "channel" : 0,
                "defaultProfile" : true,
                "eap" : "peap",
                "eapCaCert" : {
                  "data" : "MD1rKS05M2JqRVFNQ...RTtLH1tLWo=",
                  "name" : "eap-peap-ca.pem"
                },
                "eapIdentity" : "admin",
                "eapIntermediateCert" : {
                  "data" : "PD3tUS1CRDdJTiGDR...EFoLS0tLQg=",
                  "name" : "eap-peap-client.pem"
                },
                "eapPwd" : "EAP_PEAP_PASSWORD",
                "hiddenSsid" : false,
                "name" : "Profile-eap-peap-1",
                "ssid" : "your-network",
                "wsec" : "ccmp"
              },
              {
                "authType" : "wpa-psk",
                "autoWifi" : false,
                "bssType" : "infra",
                "channel" : 0,
                "defaultProfile" : false,
                "hiddenSsid" : false,
                "name" : "Profile-guest-wifi",
                "psk" : "WIFI_PASSWORD",
                "ssid" : "your-network",
                "wsec" : "ccmp"
              }
            ],
            "settings" : {
              "band" : "2.4GHz",
              "roaming" : true,
              "timeout" : 5
            }
          }
        }
      },
      "patch-stores-storeId-terminalSettings-add-eap-peap-and-psk-wifi-profiles-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response for adding an EAP-PEAP Wi-Fi profile and a PSK Wi-Fi profile for a terminal",
        "value" : {
          "cardholderReceipt" : {
            "headerForAuthorizedReceipt" : "header1,header2,filler"
          },
          "gratuities" : [
            {
              "currency" : "EUR",
              "usePredefinedTipEntries" : true,
              "predefinedTipEntries" : [
                "100",
                "1%",
                "5%"
              ],
              "allowCustomAmount" : true
            }
          ],
          "nexo" : {
            "displayUrls" : {
              "localUrls" : [
                {
                  "password" : "BASIC_AUTH_PASSWORD",
                  "url" : "https://your-display-notifications-endpoint.com",
                  "username" : "BASIC_AUTH_USERNAME"
                }
              ]
            },
            "encryptionKey" : {
              "identifier" : "KEY_IDENTIFIER",
              "passphrase" : "KEY_PASSPHRASE",
              "version" : 1
            },
            "eventUrls" : {
              "eventPublicUrls" : [
                {
                  "password" : "BASIC_AUTH_PASSWORD",
                  "url" : "https://your-event-notifications-endpoint.com",
                  "username" : "BASIC_AUTH_USERNAME"
                }
              ]
            }
          },
          "opi" : {
            "enablePayAtTable" : true,
            "payAtTableStoreNumber" : "1",
            "payAtTableURL" : "https:/your-pay-at-table-endpoint.com"
          },
          "offlineProcessing" : {
            "chipFloorLimit" : 0
          },
          "receiptOptions" : {
            "qrCodeData" : "http://www.example.com/order/${pspreference}/${merchantreference}"
          },
          "receiptPrinting" : {
            "shopperApproved" : true,
            "shopperRefused" : true,
            "shopperCancelled" : true,
            "shopperRefundApproved" : true,
            "shopperRefundRefused" : true,
            "shopperVoid" : true
          },
          "signature" : {
            "askSignatureOnScreen" : true,
            "skipSignature" : false,
            "deviceName" : "Amsterdam-236203386"
          },
          "wifiProfiles" : {
            "profiles" : [
              {
                "authType" : "wpa-eap",
                "autoWifi" : false,
                "bssType" : "infra",
                "channel" : 0,
                "defaultProfile" : true,
                "eap" : "peap",
                "eapCaCert" : {
                  "data" : "MD1rKS05M2JqRVFNQ...RTtLH1tLWo=",
                  "name" : "eap-peap-ca.pem"
                },
                "eapIdentity" : "admin",
                "eapIntermediateCert" : {
                  "data" : "PD3tUS1CRDdJTiGDR...EFoLS0tLQg=",
                  "name" : "eap-peap-client.pem"
                },
                "eapPwd" : "EAP_PEAP_PASSWORD",
                "hiddenSsid" : false,
                "name" : "Profile-eap-peap-1",
                "ssid" : "your-network",
                "wsec" : "ccmp"
              },
              {
                "authType" : "wpa-psk",
                "autoWifi" : false,
                "bssType" : "infra",
                "channel" : 0,
                "defaultProfile" : false,
                "hiddenSsid" : false,
                "name" : "Profile-guest-wifi",
                "psk" : "WIFI_PASSWORD",
                "ssid" : "your-network",
                "wsec" : "ccmp"
              }
            ],
            "settings" : {
              "band" : "2.4GHz",
              "roaming" : true,
              "timeout" : 5
            }
          },
          "timeouts" : {
            "fromActiveToSleep" : 30
          },
          "hardware" : {
            "displayMaximumBackLight" : 75
          }
        }
      },
      "patch-stores-storeId-terminalSettings-add-eap-tls-wifi-profile" : {
        "summary" : "Add EAP-TLS Wi-Fi profile",
        "description" : "Example request to add an EAP-TLS Wi-Fi profile for a terminal",
        "value" : {
          "wifiProfiles" : {
            "profiles" : [
              {
                "authType" : "wpa-eap",
                "autoWifi" : false,
                "bssType" : "infra",
                "channel" : 0,
                "defaultProfile" : true,
                "eap" : "tls",
                "eapCaCert" : {
                  "data" : "LS0tLS05M2JqRVFNQ...EUtLS0tLQo=",
                  "name" : "eap-tls-ca.pem"
                },
                "eapClientCert" : {
                  "data" : "LS0tLS1CRUdJTiBDR...EUtLS0tLQo=",
                  "name" : "eap-tls-client.pem"
                },
                "eapClientKey" : {
                  "data" : "AAAB3NzaC1...Rtah3KLFwPU=",
                  "name" : "rsa-private.key"
                },
                "eapClientPwd" : "",
                "eapIdentity" : "admin",
                "hiddenSsid" : false,
                "name" : "Profile-eap-tls-1",
                "ssid" : "your-network",
                "wsec" : "ccmp"
              }
            ],
            "settings" : {
              "band" : "2.4GHz",
              "roaming" : true,
              "timeout" : 5
            }
          }
        }
      },
      "patch-stores-storeId-terminalSettings-add-eap-tls-wifi-profile-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response for adding an EAP-TLS Wi-Fi profile for a terminal",
        "value" : {
          "cardholderReceipt" : {
            "headerForAuthorizedReceipt" : "header1,header2,filler"
          },
          "gratuities" : [
            {
              "currency" : "EUR",
              "usePredefinedTipEntries" : true,
              "predefinedTipEntries" : [
                "100",
                "1%",
                "5%"
              ],
              "allowCustomAmount" : true
            }
          ],
          "nexo" : {
            "displayUrls" : {
              "localUrls" : [
                {
                  "password" : "BASIC_AUTH_PASSWORD",
                  "url" : "https://your-display-notifications-endpoint.com",
                  "username" : "BASIC_AUTH_USERNAME"
                }
              ]
            },
            "encryptionKey" : {
              "identifier" : "KEY_IDENTIFIER",
              "passphrase" : "KEY_PASSPHRASE",
              "version" : 1
            },
            "eventUrls" : {
              "eventPublicUrls" : [
                {
                  "password" : "BASIC_AUTH_PASSWORD",
                  "url" : "https://your-event-notifications-endpoint.com",
                  "username" : "BASIC_AUTH_USERNAME"
                }
              ]
            }
          },
          "opi" : {
            "enablePayAtTable" : true,
            "payAtTableStoreNumber" : "1",
            "payAtTableURL" : "https:/your-pay-at-table-endpoint.com"
          },
          "offlineProcessing" : {
            "chipFloorLimit" : 0
          },
          "receiptOptions" : {
            "qrCodeData" : "http://www.example.com/order/${pspreference}/${merchantreference}"
          },
          "receiptPrinting" : {
            "shopperApproved" : true,
            "shopperRefused" : true,
            "shopperCancelled" : true,
            "shopperRefundApproved" : true,
            "shopperRefundRefused" : true,
            "shopperVoid" : true
          },
          "signature" : {
            "askSignatureOnScreen" : true,
            "skipSignature" : false,
            "deviceName" : "Amsterdam-236203386"
          },
          "wifiProfiles" : {
            "profiles" : [
              {
                "authType" : "wpa-eap",
                "autoWifi" : false,
                "bssType" : "infra",
                "channel" : 0,
                "defaultProfile" : true,
                "eap" : "tls",
                "eapCaCert" : {
                  "data" : "LS0tLS05M2JqRVFNQ...EUtLS0tLQo=",
                  "name" : "eap-tls-ca.pem"
                },
                "eapClientCert" : {
                  "data" : "LS0tLS1CRUdJTiBDR...EUtLS0tLQo=",
                  "name" : "eap-tls-client.pem"
                },
                "eapClientKey" : {
                  "data" : "AAAB3NzaC1...Rtah3KLFwPU=",
                  "name" : "rsa-private.key"
                },
                "eapClientPwd" : "",
                "eapIdentity" : "admin",
                "hiddenSsid" : false,
                "name" : "Profile-eap-tls-1",
                "ssid" : "your-network",
                "wsec" : "ccmp"
              }
            ],
            "settings" : {
              "band" : "2.4GHz",
              "roaming" : true,
              "timeout" : 5
            }
          },
          "timeouts" : {
            "fromActiveToSleep" : 30
          },
          "hardware" : {
            "displayMaximumBackLight" : 75
          }
        }
      },
      "patch-terminals-terminalId-terminalLogos-remove-logo" : {
        "summary" : "Remove logo to restore the logo from a higher level",
        "description" : "Example request to remove the payment terminal logo configured at the current level, and inherit the logo from a higher level",
        "value" : {
          "data" : ""
        }
      },
      "patch-terminals-terminalId-terminalLogos-remove-logo-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response for removing a payment terminal logo to restore the logo from a higher level",
        "value" : {
          "data" : "LOGO_INHERITED_FROM_HIGHER_LEVEL_BASE-64_ENCODED_STRING"
        }
      },
      "patch-terminals-terminalId-terminalLogos-upload-logo" : {
        "summary" : "Upload terminal logo",
        "description" : "Example request to upload a payment terminal logo",
        "value" : {
          "data" : "LOGO_FILE_CONVERTED_TO_A_BASE-64_ENCODED_STRING"
        }
      },
      "patch-terminals-terminalId-terminalLogos-upload-logo-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response for uploading a payment terminal logo",
        "value" : {
          "data" : "BASE-64_ENCODED_STRING_FROM_THE_REQUEST"
        }
      },
      "patch-terminals-terminalId-terminalSettings-add-eap-peap-and-psk-wifi-profiles" : {
        "summary" : "Add EAP-PEAP and PSK Wi-Fi profiles",
        "description" : "Example request to add an EAP-PEAP Wi-Fi profile and a PSK Wi-Fi profile for a terminal",
        "value" : {
          "wifiProfiles" : {
            "profiles" : [
              {
                "authType" : "wpa-eap",
                "autoWifi" : false,
                "bssType" : "infra",
                "channel" : 0,
                "defaultProfile" : true,
                "eap" : "peap",
                "eapCaCert" : {
                  "data" : "MD1rKS05M2JqRVFNQ...RTtLH1tLWo=",
                  "name" : "eap-peap-ca.pem"
                },
                "eapIdentity" : "admin",
                "eapIntermediateCert" : {
                  "data" : "PD3tUS1CRDdJTiGDR...EFoLS0tLQg=",
                  "name" : "eap-peap-client.pem"
                },
                "eapPwd" : "EAP_PEAP_PASSWORD",
                "hiddenSsid" : false,
                "name" : "Profile-eap-peap-1",
                "ssid" : "your-network",
                "wsec" : "ccmp"
              },
              {
                "authType" : "wpa-psk",
                "autoWifi" : false,
                "bssType" : "infra",
                "channel" : 0,
                "defaultProfile" : false,
                "hiddenSsid" : false,
                "name" : "Profile-guest-wifi",
                "psk" : "WIFI_PASSWORD",
                "ssid" : "your-network",
                "wsec" : "ccmp"
              }
            ],
            "settings" : {
              "band" : "2.4GHz",
              "roaming" : true,
              "timeout" : 5
            }
          }
        }
      },
      "patch-terminals-terminalId-terminalSettings-add-eap-peap-and-psk-wifi-profiles-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response for adding an EAP-PEAP Wi-Fi profile and a PSK Wi-Fi profile for a terminal",
        "value" : {
          "cardholderReceipt" : {
            "headerForAuthorizedReceipt" : "header1,header2,filler"
          },
          "gratuities" : [
            {
              "currency" : "EUR",
              "usePredefinedTipEntries" : true,
              "predefinedTipEntries" : [
                "100",
                "1%",
                "5%"
              ],
              "allowCustomAmount" : true
            }
          ],
          "nexo" : {
            "displayUrls" : {
              "localUrls" : [
                {
                  "password" : "BASIC_AUTH_PASSWORD",
                  "url" : "https://your-display-notifications-endpoint.com",
                  "username" : "BASIC_AUTH_USERNAME"
                }
              ]
            },
            "encryptionKey" : {
              "identifier" : "KEY_IDENTIFIER",
              "passphrase" : "KEY_PASSPHRASE",
              "version" : 1
            },
            "eventUrls" : {
              "eventPublicUrls" : [
                {
                  "password" : "BASIC_AUTH_PASSWORD",
                  "url" : "https://your-event-notifications-endpoint.com",
                  "username" : "BASIC_AUTH_USERNAME"
                }
              ]
            },
            "notification" : {
              "showButton" : true
            }
          },
          "opi" : {
            "enablePayAtTable" : true,
            "payAtTableStoreNumber" : "1",
            "payAtTableURL" : "https:/your-pay-at-table-endpoint.com"
          },
          "offlineProcessing" : {
            "chipFloorLimit" : 0
          },
          "receiptOptions" : {
            "qrCodeData" : "http://www.example.com/order/${pspreference}/${merchantreference}"
          },
          "receiptPrinting" : {
            "shopperApproved" : true,
            "shopperRefused" : true,
            "shopperCancelled" : true,
            "shopperRefundApproved" : true,
            "shopperRefundRefused" : true,
            "shopperVoid" : true
          },
          "signature" : {
            "askSignatureOnScreen" : true,
            "skipSignature" : false,
            "deviceName" : "Amsterdam-236203386"
          },
          "wifiProfiles" : {
            "profiles" : [
              {
                "authType" : "wpa-eap",
                "autoWifi" : false,
                "bssType" : "infra",
                "channel" : 0,
                "defaultProfile" : true,
                "eap" : "peap",
                "eapCaCert" : {
                  "data" : "MD1rKS05M2JqRVFNQ...RTtLH1tLWo=",
                  "name" : "eap-peap-ca.pem"
                },
                "eapIdentity" : "admin",
                "eapIntermediateCert" : {
                  "data" : "PD3tUS1CRDdJTiGDR...EFoLS0tLQg=",
                  "name" : "eap-peap-client.pem"
                },
                "eapPwd" : "EAP_PEAP_PASSWORD",
                "hiddenSsid" : false,
                "name" : "Profile-eap-peap-1",
                "ssid" : "your-network",
                "wsec" : "ccmp"
              },
              {
                "authType" : "wpa-psk",
                "autoWifi" : false,
                "bssType" : "infra",
                "channel" : 0,
                "defaultProfile" : false,
                "hiddenSsid" : false,
                "name" : "Profile-guest-wifi",
                "psk" : "WIFI_PASSWORD",
                "ssid" : "your-network",
                "wsec" : "ccmp"
              }
            ],
            "settings" : {
              "band" : "2.4GHz",
              "roaming" : true,
              "timeout" : 5
            }
          },
          "timeouts" : {
            "fromActiveToSleep" : 30
          },
          "hardware" : {
            "displayMaximumBackLight" : 75,
            "restartHour" : 5
          },
          "passcodes" : {
            "adminMenuPin" : "1234",
            "txMenuPin" : "1234",
            "refundPin" : "123456",
            "screenLockPin" : "1111"
          },
          "connectivity" : {
            "simcardStatus" : "INVENTORY"
          }
        }
      },
      "patch-terminals-terminalId-terminalSettings-add-eap-tls-wifi-profile" : {
        "summary" : "Add EAP-TLS Wi-Fi profile",
        "description" : "Example request to add an EAP-TLS Wi-Fi profile for a terminal",
        "value" : {
          "wifiProfiles" : {
            "profiles" : [
              {
                "authType" : "wpa-eap",
                "autoWifi" : false,
                "bssType" : "infra",
                "channel" : 0,
                "defaultProfile" : true,
                "eap" : "tls",
                "eapCaCert" : {
                  "data" : "LS0tLS05M2JqRVFNQ...EUtLS0tLQo=",
                  "name" : "eap-tls-ca.pem"
                },
                "eapClientCert" : {
                  "data" : "LS0tLS1CRUdJTiBDR...EUtLS0tLQo=",
                  "name" : "eap-tls-client.pem"
                },
                "eapClientKey" : {
                  "data" : "AAAB3NzaC1...Rtah3KLFwPU=",
                  "name" : "rsa-private.key"
                },
                "eapClientPwd" : "",
                "eapIdentity" : "admin",
                "hiddenSsid" : false,
                "name" : "Profile-eap-tls-1",
                "ssid" : "your-network",
                "wsec" : "ccmp"
              }
            ],
            "settings" : {
              "band" : "2.4GHz",
              "roaming" : true,
              "timeout" : 5
            }
          }
        }
      },
      "patch-terminals-terminalId-terminalSettings-add-eap-tls-wifi-profile-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response for adding an EAP-TLS Wi-Fi profile for a terminal",
        "value" : {
          "cardholderReceipt" : {
            "headerForAuthorizedReceipt" : "header1,header2,filler"
          },
          "gratuities" : [
            {
              "currency" : "EUR",
              "usePredefinedTipEntries" : true,
              "predefinedTipEntries" : [
                "100",
                "1%",
                "5%"
              ],
              "allowCustomAmount" : true
            }
          ],
          "nexo" : {
            "displayUrls" : {
              "localUrls" : [
                {
                  "password" : "BASIC_AUTH_PASSWORD",
                  "url" : "https://your-display-notifications-endpoint.com",
                  "username" : "BASIC_AUTH_USERNAME"
                }
              ]
            },
            "encryptionKey" : {
              "identifier" : "KEY_IDENTIFIER",
              "passphrase" : "KEY_PASSPHRASE",
              "version" : 1
            },
            "eventUrls" : {
              "eventPublicUrls" : [
                {
                  "password" : "BASIC_AUTH_PASSWORD",
                  "url" : "https://your-event-notifications-endpoint.com",
                  "username" : "BASIC_AUTH_USERNAME"
                }
              ]
            },
            "notification" : {
              "showButton" : true
            }
          },
          "opi" : {
            "enablePayAtTable" : true,
            "payAtTableStoreNumber" : "1",
            "payAtTableURL" : "https:/your-pay-at-table-endpoint.com"
          },
          "offlineProcessing" : {
            "chipFloorLimit" : 0
          },
          "receiptOptions" : {
            "qrCodeData" : "http://www.example.com/order/${pspreference}/${merchantreference}"
          },
          "receiptPrinting" : {
            "shopperApproved" : true,
            "shopperRefused" : true,
            "shopperCancelled" : true,
            "shopperRefundApproved" : true,
            "shopperRefundRefused" : true,
            "shopperVoid" : true
          },
          "signature" : {
            "askSignatureOnScreen" : true,
            "skipSignature" : false,
            "deviceName" : "Amsterdam-236203386"
          },
          "wifiProfiles" : {
            "profiles" : [
              {
                "authType" : "wpa-eap",
                "autoWifi" : false,
                "bssType" : "infra",
                "channel" : 0,
                "defaultProfile" : true,
                "eap" : "tls",
                "eapCaCert" : {
                  "data" : "LS0tLS05M2JqRVFNQ...EUtLS0tLQo=",
                  "name" : "eap-tls-ca.pem"
                },
                "eapClientCert" : {
                  "data" : "LS0tLS1CRUdJTiBDR...EUtLS0tLQo=",
                  "name" : "eap-tls-client.pem"
                },
                "eapClientKey" : {
                  "data" : "AAAB3NzaC1...Rtah3KLFwPU=",
                  "name" : "rsa-private.key"
                },
                "eapClientPwd" : "",
                "eapIdentity" : "admin",
                "hiddenSsid" : false,
                "name" : "Profile-eap-tls-1",
                "ssid" : "your-network",
                "wsec" : "ccmp"
              }
            ],
            "settings" : {
              "band" : "2.4GHz",
              "roaming" : true,
              "timeout" : 5
            }
          },
          "timeouts" : {
            "fromActiveToSleep" : 30
          },
          "hardware" : {
            "displayMaximumBackLight" : 75,
            "restartHour" : 5
          },
          "passcodes" : {
            "adminMenuPin" : "1234",
            "txMenuPin" : "1234",
            "refundPin" : "123456",
            "screenLockPin" : "1111"
          },
          "connectivity" : {
            "simcardStatus" : "INVENTORY"
          }
        }
      },
      "post-companies-companyId-apiCredentials-apiCredentialId-allowedOrigins-add-allowed-origin" : {
        "summary" : "Add an allowed origin for the API credential",
        "description" : "Example request for adding an allowed origin for the API credential.",
        "value" : {
          "domain" : "https://www.eu.mystore.com"
        }
      },
      "post-companies-companyId-apiCredentials-apiCredentialId-allowedOrigins-add-allowed-origin-200" : {
        "summary" : "OK 200 - Add an allowed origin for the API credential",
        "description" : "Example response for adding an allowed origin for the API credential.",
        "value" : {
          "id" : "YOUR_ALLOWED_ORIGIN",
          "domain" : "https://www.eu.mystore.com",
          "_links" : {
            "self" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/allowedOrigins/YOUR_ALLOWED_ORIGIN"
            }
          }
        }
      },
      "post-companies-companyId-apiCredentials-post-company-credential" : {
        "summary" : "Add an API credential",
        "description" : "Example request for adding an API credential.",
        "value" : {
          "roles" : [
            "Checkout webservice role"
          ],
          "allowedOrigins" : [
            "https://www.mystore.com"
          ],
          "associatedMerchantAccounts" : [
            "YOUR_MERCHANT_ACCOUNT_AU",
            "YOUR_MERCHANT_ACCOUNT_EU",
            "YOUR_MERCHANT_ACCOUNT_US"
          ]
        }
      },
      "post-companies-companyId-apiCredentials-post-company-credential-200" : {
        "summary" : "OK 200 - Add an API credential",
        "description" : "Example response for adding an API credential.",
        "value" : {
          "id" : "YOUR_API_CREDENTIAL",
          "username" : "YOUR_USERNAME",
          "clientKey" : "YOUR_CLIENT_KEY",
          "allowedIpAddresses" : [
          ],
          "roles" : [
            "Checkout webservice role"
          ],
          "active" : true,
          "allowedOrigins" : [
            {
              "id" : "YOUR_ALLOWED_ORIGIN",
              "domain" : "https://www.mystore.com",
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/allowedOrigins/YOUR_ALLOWED_ORIGIN"
                }
              }
            }
          ],
          "_links" : {
            "self" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL"
            },
            "allowedOrigins" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/allowedOrigins"
            },
            "company" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT"
            },
            "generateApiKey" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/generateApiKey"
            },
            "generateClientKey" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/generateClientKey"
            }
          },
          "apiKey" : "YOUR_API_KEY",
          "password" : "YOUR_PASSWORD",
          "associatedMerchantAccounts" : [
            "YOUR_MERCHANT_ACCOUNT_AU",
            "YOUR_MERCHANT_ACCOUNT_EU",
            "YOUR_MERCHANT_ACCOUNT_US"
          ]
        }
      },
      "post-companies-companyId-shippingLocations-create-shipping-location" : {
        "summary" : "Create a shipping location",
        "description" : "Example request to create a shipping location",
        "value" : {
          "name" : "YOUR_COMPANY Rokin depot",
          "address" : {
            "companyName" : "YOUR_COMPANY",
            "streetAddress" : "Rokin 21",
            "postalCode" : "1012 KS",
            "city" : "Amsterdam",
            "stateOrProvince" : "",
            "country" : "NL"
          },
          "contact" : {
            "firstName" : "Paul",
            "lastName" : "Green",
            "phoneNumber" : "+31 020 1234567",
            "email" : "Paul.Green@company.com"
          }
        }
      },
      "post-companies-companyId-shippingLocations-create-shipping-location-200" : {
        "summary" : "Shipping location created",
        "description" : "Example response after creating a shipping location",
        "value" : {
          "id" : "S2-7973536B20662642215526704F302044452F714622375D476169",
          "name" : "YOUR_COMPANY Rokin depot",
          "contact" : {
            "firstName" : "Paul",
            "lastName" : "Green",
            "phoneNumber" : "+31 020 1234567",
            "email" : "Paul.Green@company.com"
          },
          "address" : {
            "companyName" : "YOUR_COMPANY",
            "streetAddress" : "Rokin 21",
            "postalCode" : "1012 KS",
            "city" : "Amsterdam",
            "stateOrProvince" : ""
          }
        }
      },
      "post-companies-companyId-terminalOrders-create-order" : {
        "summary" : "Create an order",
        "description" : "Example request to create an order for terminal products",
        "value" : {
          "customerOrderReference" : "YOUR_REFERENCE",
          "shippingLocationId" : "S2-6A6C2E3432747D4F2F2C3455485E3836457D",
          "billingEntityId" : "Company.YOUR_COMPANY",
          "items" : [
            {
              "id" : "TBOX-V400m-684-EU",
              "name" : "V400m Package",
              "quantity" : 1
            },
            {
              "id" : "PART-175746-EU",
              "name" : "Adyen Test Card",
              "quantity" : 1
            }
          ]
        }
      },
      "post-companies-companyId-terminalOrders-create-order-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response after creating an order for terminal products",
        "value" : {
          "id" : "5265677890100681",
          "customerOrderReference" : "YOUR_REFERENCE",
          "status" : "Placed",
          "shippingLocation" : {
            "id" : "S2-232A6D2967356F424F4369432B3F486B6A6D",
            "name" : "YOUR_COMPANY HQ - POS Ops",
            "contact" : {
              "firstName" : "Paul",
              "lastName" : "Green",
              "email" : "Paul.Green@company.com"
            },
            "address" : {
              "streetAddress" : "Simon Carmiggeltstraat",
              "streetAddress2" : "6-50",
              "postalCode" : "1011 DJ",
              "city" : "Amsterdam",
              "country" : "NL"
            }
          },
          "billingEntity" : {
            "id" : "Company.YOUR_COMPANY",
            "name" : "YOUR_COMPANY",
            "taxId" : "NL1234567890",
            "email" : "Paul.Green@company.com",
            "address" : {
              "streetAddress" : "Simon Carmiggeltstraat 6-50",
              "postalCode" : "1011 DJ",
              "city" : "Amsterdam",
              "country" : "NL"
            }
          },
          "orderDate" : "2022-01-20T14:12:33Z",
          "items" : [
            {
              "id" : "TBOX-V400m-684-EU",
              "name" : "V400m Package",
              "quantity" : 1
            },
            {
              "id" : "PART-175746-EU",
              "name" : "Adyen Test Card",
              "quantity" : 1
            }
          ]
        }
      },
      "post-companies-companyId-terminalOrders-orderId-cancel-cancel-order-200" : {
        "summary" : "Terminal order cancelled",
        "description" : "Example response after cancelling an order for terminal products",
        "value" : {
          "id" : "5265677890100681",
          "customerOrderReference" : "YOUR_REFERENCE",
          "status" : "Cancelled",
          "shippingLocation" : {
            "id" : "S2-232A6D2967356F424F4369432B3F486B6A6D",
            "name" : "YOUR_COMPANY HQ - POS Ops",
            "contact" : {
              "firstName" : "Paul",
              "lastName" : "Green",
              "email" : "Paul.Green@company.com"
            },
            "address" : {
              "streetAddress" : "Simon Carmiggeltstraat",
              "streetAddress2" : "6-50",
              "postalCode" : "1011 DJ",
              "city" : "Amsterdam",
              "country" : "Netherlands"
            }
          },
          "billingEntity" : {
            "id" : "Company.YOUR_COMPANY",
            "name" : "YOUR_COMPANY",
            "taxId" : "NL1234567890",
            "email" : "Paul.Green@company.com",
            "address" : {
              "streetAddress" : "Simon Carmiggeltstraat 6-50",
              "postalCode" : "1011 DJ",
              "city" : "Amsterdam",
              "country" : "Netherlands"
            }
          },
          "orderDate" : "2022-01-20T14:12:33Z",
          "items" : [
            {
              "id" : "TBOX-V400m-684-EU",
              "name" : "V400m Package",
              "quantity" : 1
            },
            {
              "id" : "PART-175746-EU",
              "name" : "Adyen Test Card",
              "quantity" : 1
            }
          ]
        }
      },
      "post-companies-companyId-users-create-user" : {
        "summary" : "Create a user",
        "description" : "Example request to create a user on the company level",
        "value" : {
          "name" : {
            "firstName" : "John",
            "lastName" : "Smith"
          },
          "username" : "johnsmith",
          "email" : "john.smith@example.com",
          "timeZoneCode" : "Europe/Amsterdam",
          "roles" : [
            "Merchant standard role",
            "Merchant admin"
          ],
          "associatedMerchantAccounts" : [
            "YOUR_MERCHANT_ACCOUNT"
          ]
        }
      },
      "post-companies-companyId-users-create-user-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response after creating a user on the company level",
        "value" : {
          "id" : "S2-5C334C6770",
          "name" : {
            "firstName" : "John",
            "gender" : "UNKNOWN",
            "lastName" : "Smith"
          },
          "email" : "john.smith@example.com",
          "timeZoneCode" : "Europe/Amsterdam",
          "username" : "johnsmith",
          "roles" : [
            "Merchant standard role",
            "Merchant admin"
          ],
          "active" : true,
          "_links" : {
            "self" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/users/S2-5C334C6770"
            }
          },
          "associatedMerchantAccounts" : [
            "YOUR_MERCHANT_ACCOUNT"
          ]
        }
      },
      "post-companies-companyId-webhooks-post-company-webhook" : {
        "summary" : "Add a webhook configuration",
        "description" : "Example request for adding a standard webhook configuration.",
        "value" : {
          "type" : "standard",
          "url" : "YOUR_WEBHOOK_URL",
          "username" : "YOUR_USER",
          "password" : "YOUR_PASSWORD",
          "active" : true,
          "sslVersion" : "TLSv1.2",
          "communicationFormat" : "soap",
          "acceptsExpiredCertificate" : false,
          "acceptsSelfSignedCertificate" : true,
          "acceptsUntrustedRootCertificate" : true,
          "populateSoapActionHeader" : false,
          "filterMerchantAccountType" : "includeAccounts",
          "filterMerchantAccounts" : [
            "YOUR_MERCHANT_ACCOUNT"
          ]
        }
      },
      "post-companies-companyId-webhooks-post-company-webhook-200" : {
        "summary" : "OK 200 - Add a webhook configuration",
        "description" : "Example response for adding a webhook configuration.",
        "value" : {
          "id" : "S2-6933523D2772",
          "type" : "standard",
          "url" : "YOUR_WEBHOOK_URL",
          "description" : "Webhook for YOUR_COMPANY_ACCOUNT - YOUR_COMPANY_CODE",
          "filterMerchantAccountType" : "includeAccounts",
          "filterMerchantAccounts" : [
            "YOUR_MERCHANT_ACCOUNT"
          ],
          "username" : "myuser",
          "hasPassword" : true,
          "active" : true,
          "hasError" : false,
          "sslVersion" : "TLSv1.2",
          "communicationFormat" : "soap",
          "acceptsExpiredCertificate" : false,
          "acceptsSelfSignedCertificate" : true,
          "acceptsUntrustedRootCertificate" : true,
          "certificateAlias" : "signed-test.adyen.com_2023",
          "populateSoapActionHeader" : false,
          "additionalSettings" : {
            "properties" : {
              "includePosTerminalInfo" : false,
              "includeARN" : false,
              "includePosDetails" : false,
              "includeCardInfoForRecurringContractNotification" : false,
              "includeRiskData" : false,
              "includeRiskExperimentReference" : false,
              "includeSoapSecurityHeader" : false,
              "includeContactlessWalletTokenInformation" : false,
              "includeAcquirerReference" : false,
              "includeRiskProfileReference" : false,
              "includeOriginalMerchantReferenceCancelOrRefundNotification" : false,
              "includeNfcTokenInformation" : false,
              "includeSubvariant" : false,
              "includeThreeDSVersion" : false,
              "includeInstallmentsInfo" : false,
              "includeAliasInfo" : false,
              "includeShopperCountry" : false,
              "includeRawThreeDSecureResult" : false,
              "includeAirlineData" : false,
              "includeGrossCurrencyChargebackDetails" : false,
              "includeThreeDSecureResult" : false,
              "includeMetadataIn3DSecurePaymentNotification" : false,
              "includeOriginalReferenceForChargebackReversed" : false,
              "addAcquirerResult" : false,
              "includeDeliveryAddress" : false,
              "includeRetryAttempts" : false,
              "includeExtraCosts" : false,
              "includeCardHolderName" : false,
              "includeShopperDetail" : false,
              "includeBankAccountDetails" : false,
              "includeMandateDetails" : false,
              "includeAuthAmountForDynamicZeroAuth" : false,
              "includeIssuerCountry" : false,
              "includeAcquirerErrorDetails" : false,
              "includeCoBrandedWith" : false,
              "includeShopperInteraction" : false,
              "includeDeviceAndBrowserInfo" : false,
              "addRawAcquirerResult" : false,
              "includeCardBin" : false,
              "includeFundingSource" : false,
              "includeThreeDS2ChallengeInformation" : false,
              "includeRiskProfile" : false,
              "includeRealtimeAccountUpdaterStatus" : false,
              "includeDunningProjectData" : false,
              "includePaymentResultInOrderClosedNotification" : false,
              "includeCardBinDetails" : false,
              "includeNotesInManualReviewNotifications" : false,
              "includeZeroAuthFlag" : false,
              "addCaptureReferenceToDisputeNotification" : false,
              "includePayPalDetails" : false,
              "includeRawThreeDSecureDetailsResult" : false,
              "includeBankVerificationResults" : false,
              "includeCaptureDelayHours" : false,
              "addPaymentAccountReference" : false,
              "includePayULatamDetails" : false,
              "includeStore" : false,
              "returnAvsData" : false,
              "includeWeChatPayOpenid" : false,
              "includeUpiVpa" : false,
              "includeCustomRoutingFlagging" : false,
              "includeTokenisedPaymentMetaData" : false
            }
          },
          "_links" : {
            "self" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/webhooks/S2-6933523D2772"
            },
            "company" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT"
            },
            "generateHmac" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/webhooks/S2-6933523D2772/generateHmac"
            },
            "testWebhook" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/webhooks/S2-6933523D2772/test"
            }
          }
        }
      },
      "post-companies-companyId-webhooks-webhookId-generateHmac-post-company-webhook-generateHmac-200" : {
        "summary" : "OK 200 - Generate a webhook HMAC key",
        "description" : "Example response for generating a webhook HMAC.",
        "value" : {
          "hmacKey" : "7052E6804F0AF40DCC390464C817F4F963516FA42AC8816D518DC5D39F41E902"
        }
      },
      "post-companies-companyId-webhooks-webhookId-test-post-company-webhook-test" : {
        "summary" : "Test a webhook notification",
        "description" : "Example request for testing a webhook notification.",
        "value" : {
          "notification" : {
            "paymentMethod" : "visa",
            "eventCode" : "AUTHORISATION",
            "amount" : {
              "currency" : "EUR",
              "value" : 2000
            },
            "reason" : "Authorize visa payment",
            "success" : true
          },
          "types" : [
            "CUSTOM"
          ]
        }
      },
      "post-companies-companyId-webhooks-webhookId-test-post-company-webhook-test-200" : {
        "summary" : "OK 200 - Test a webhook notification",
        "description" : "Example response for testing a webhook notification.",
        "value" : {
          "data" : [
            {
              "merchantId" : "YOUR_MERCHANT_ACCOUNT_AU",
              "output" : "[accepted]",
              "requestSent" : "{\"live\":\"false\",\"notificationItems\":[{\"NotificationRequestItem\":{\"amount\":{\"currency\":\"EUR\",\"value\":100},\"eventCode\":\"AUTHORISATION\",\"eventDate\":\"2022-05-10T16:57:19+02:00\",\"merchantAccountCode\":\"YOUR_MERCHANT_ACCOUNT_AU\",\"merchantReference\":\"6GZBF5ML\",\"operations\":[\"CANCEL\",\"CAPTURE\",\"REFUND\"],\"paymentMethod\":\"visa\",\"pspReference\":\"KDN7UP7S1JIK6XES\",\"reason\":\"\",\"success\":\"true\"}}]}",
              "responseCode" : "200",
              "responseTime" : "657 ms",
              "status" : "success"
            },
            {
              "merchantId" : "YOUR_MERCHANT_ACCOUNT_EU",
              "output" : "[accepted]",
              "requestSent" : "{\"live\":\"false\",\"notificationItems\":[{\"NotificationRequestItem\":{\"amount\":{\"currency\":\"EUR\",\"value\":100},\"eventCode\":\"AUTHORISATION\",\"eventDate\":\"2022-05-10T16:57:19+02:00\",\"merchantAccountCode\":\"YOUR_MERCHANT_ACCOUNT_EU\",\"merchantReference\":\"6GZBF5ML\",\"operations\":[\"CANCEL\",\"CAPTURE\",\"REFUND\"],\"paymentMethod\":\"visa\",\"pspReference\":\"KDN7UP7S1JIK6XES\",\"reason\":\"\",\"success\":\"true\"}}]}",
              "responseCode" : "200",
              "responseTime" : "590 ms",
              "status" : "success"
            },
            {
              "merchantId" : "YOUR_MERCHANT_ACCOUNT_US",
              "output" : "[accepted]",
              "requestSent" : "{\"live\":\"false\",\"notificationItems\":[{\"NotificationRequestItem\":{\"amount\":{\"currency\":\"EUR\",\"value\":100},\"eventCode\":\"AUTHORISATION\",\"eventDate\":\"2022-05-10T16:57:19+02:00\",\"merchantAccountCode\":\"YOUR_MERCHANT_ACCOUNT_US\",\"merchantReference\":\"6GZBF5ML\",\"operations\":[\"CANCEL\",\"CAPTURE\",\"REFUND\"],\"paymentMethod\":\"visa\",\"pspReference\":\"KDN7UP7S1JIK6XES\",\"reason\":\"\",\"success\":\"true\"}}]}",
              "responseCode" : "200",
              "responseTime" : "248 ms",
              "status" : "success"
            }
          ]
        }
      },
      "post-merchants-merchantId-apiCredentials-apiCredentialId-allowedOrigins-add-allowed-origin" : {
        "summary" : "Add an allowed origin for the API credential",
        "description" : "Example request for adding an allowed origin for the API credential.",
        "value" : {
          "domain" : "https://www.eu.mystore.com"
        }
      },
      "post-merchants-merchantId-apiCredentials-apiCredentialId-allowedOrigins-add-allowed-origin-200" : {
        "summary" : "OK 200 - Add an allowed origin for the API credential",
        "description" : "Example response for adding an allowed origin for the API credential.",
        "value" : {
          "id" : "YOUR_ALLOWED_ORIGIN",
          "domain" : "https://www.eu.mystore.com",
          "_links" : {
            "self" : {
              "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/allowedOrigins/YOUR_ALLOWED_ORIGIN"
            }
          }
        }
      },
      "post-merchants-merchantId-apiCredentials-post-merchant-credential" : {
        "summary" : "Add an API credential",
        "description" : "Example request for adding an API credential.",
        "value" : {
          "roles" : [
            "Checkout webservice role"
          ],
          "allowedOrigins" : [
            "https://www.mystore.com"
          ]
        }
      },
      "post-merchants-merchantId-apiCredentials-post-merchant-credential-200" : {
        "summary" : "OK 200 - Add an API credential",
        "description" : "Example response for adding an API credential.",
        "value" : {
          "id" : "YOUR_API_CREDENTIAL",
          "username" : "YOUR_USERNAME",
          "clientKey" : "YOUR_CLIENT_KEY",
          "allowedIpAddresses" : [
          ],
          "roles" : [
            "Checkout webservice role"
          ],
          "active" : true,
          "allowedOrigins" : [
            {
              "id" : "YOUR_ALLOWED_ORIGIN",
              "domain" : "https://www.mystore.com",
              "_links" : {
                "self" : {
                  "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/allowedOrigins/YOUR_ALLOWED_ORIGIN"
                }
              }
            }
          ],
          "_links" : {
            "self" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL"
            },
            "allowedOrigins" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/allowedOrigins"
            },
            "generateApiKey" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/generateApiKey"
            },
            "generateClientKey" : {
              "href" : "https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL/generateClientKey"
            },
            "merchant" : {
              "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT"
            }
          },
          "apiKey" : "YOUR_API_KEY",
          "password" : "YOUR_PASSWORD"
        }
      },
      "post-merchants-merchantId-paymentMethodSettings-add-payment-method-partner-model" : {
        "summary" : "Request to add Swish",
        "description" : "Example request to add Swish with a partner model setup",
        "value" : {
          "businessLineId" : "BL322KV223222D5F8H2J4BQ6C",
          "storeIds" : [
            "ST322LJ223223K5F4SQNR9XL5"
          ],
          "type" : "swish",
          "swish" : {
            "swishNumber" : "1231111111"
          },
          "currencies" : [
            "SEK"
          ],
          "countries" : [
            "SE"
          ]
        }
      },
      "post-merchants-merchantId-paymentMethodSettings-add-payment-method-partner-model-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response after sending a request to add Swish in a partner model setup",
        "value" : {
          "id" : "PM3227C223224K5FH84M8CBNH",
          "businessLineId" : "BL322KV223222D5F8H2J4BQ6C",
          "storeIds" : [
            "ST322LJ223223K5F4SQNR9XL5"
          ],
          "type" : "swish",
          "countries" : [
            "SE"
          ],
          "currencies" : [
            "SEK"
          ],
          "swish" : {
            "swishNumber" : "1231111111"
          }
        }
      },
      "post-merchants-merchantId-paymentMethodSettings-paymentMethodId-addApplePayDomains-add-applepay-domain" : {
        "summary" : "Add an Apple Pay domain",
        "description" : "Example request to add an Apple Pay domain",
        "value" : {
          "domains" : [
            "https://example.com"
          ]
        }
      },
      "post-merchants-merchantId-paymentMethodSettings-paymentMethodId-addApplePayDomains-add-applepay-domain-202" : {
        "summary" : "Apple Pay domain requested - 202 OK",
        "description" : "Example response after sending a request to add an Apple Pay domain",
        "value" : {
          "domains" : [
            "https://example.com"
          ]
        }
      },
      "post-merchants-merchantId-shippingLocations-create-shipping-location" : {
        "summary" : "Create a shipping location",
        "description" : "Example request to create a shipping location",
        "value" : {
          "name" : "YOUR_MERCHANT_ACCOUNT Barcelona depot",
          "address" : {
            "companyName" : "YOUR_COMPANY",
            "streetAddress" : "El quinto pino 42",
            "postalCode" : "08012",
            "city" : "Barcelona",
            "stateOrProvince" : "",
            "country" : "ES"
          },
          "contact" : {
            "firstName" : "Rita",
            "lastName" : "Perengano",
            "phoneNumber" : "+34 93 1234567",
            "email" : "Rita.Perengano@company.com"
          }
        }
      },
      "post-merchants-merchantId-shippingLocations-create-shipping-location-200" : {
        "summary" : "Shipping location created",
        "description" : "Example response after creating a shipping location",
        "value" : {
          "id" : "S2-73536B20665526704F30792642212044452F714622375D477270",
          "name" : "YOUR_MERCHANT_ACCOUNT Barcelona depot",
          "contact" : {
            "firstName" : "Rita",
            "lastName" : "Perengano",
            "phoneNumber" : "+34931234567",
            "email" : "Rita.Perengano@company.com"
          },
          "address" : {
            "companyName" : "YOUR_COMPANY",
            "streetAddress" : "El quinto pino 42",
            "postalCode" : "08012",
            "city" : "Barcelona",
            "stateOrProvince" : ""
          }
        }
      },
      "post-merchants-merchantId-splitConfigurations-post-splitConfiguration" : {
        "summary" : "Create a split configuration",
        "description" : "Example request to create a split configuration",
        "value" : {
          "description" : "Your description for the split configuration",
          "rules" : [
            {
              "paymentMethod" : "ANY",
              "shopperInteraction" : "ANY",
              "fundingSource" : "ANY",
              "currency" : "ANY",
              "splitLogic" : {
                "paymentFee" : "deductFromLiableAccount",
                "chargeback" : "deductFromLiableAccount",
                "tip" : "addToOneBalanceAccount",
                "remainder" : "addToOneBalanceAccount",
                "commission" : {
                  "fixedAmount" : 10,
                  "variablePercentage" : 100
                },
                "additionalCommission" : {
                  "fixedAmount" : 10,
                  "variablePercentage" : 50,
                  "balanceAccountId" : "BA3227C223222H5HQ2XX77VVH"
                }
              }
            }
          ]
        }
      },
      "post-merchants-merchantId-splitConfigurations-post-splitConfiguration-200" : {
        "summary" : "Split configuration created",
        "description" : "Example response after creating a split configuration",
        "value" : {
          "description" : "Your description for the split configuration",
          "rules" : [
            {
              "currency" : "ANY",
              "fundingSource" : "ANY",
              "paymentMethod" : "ANY",
              "ruleId" : "SCRL4224P22322585HPCX384JW65VW",
              "shopperInteraction" : "ANY",
              "splitLogic" : {
                "additionalCommission" : {
                  "fixedAmount" : 10,
                  "variablePercentage" : 50,
                  "balanceAccountId" : "BA3227C223222H5HQ2XX77VVH"
                },
                "chargeback" : "deductFromLiableAccount",
                "commission" : {
                  "fixedAmount" : 10,
                  "variablePercentage" : 100
                },
                "splitLogicId" : "SCLG4224P22322585HPCX384JX52M2",
                "paymentFee" : "deductFromLiableAccount",
                "remainder" : "addToOneBalanceAccount",
                "tip" : "addToOneBalanceAccount"
              }
            }
          ],
          "splitConfigurationId" : "SCNF4224P22322585HPCX384JV6JGX"
        }
      },
      "post-merchants-merchantId-splitConfigurations-splitConfigurationId-post-splitConfiguration-rule" : {
        "summary" : "Add rule to a split configuration",
        "description" : "Example request to add a rule to a split configuration",
        "value" : {
          "paymentMethod" : "visa",
          "shopperInteraction" : "POS",
          "fundingSource" : "ANY",
          "currency" : "USD",
          "splitLogic" : {
            "paymentFee" : "deductFromLiableAccount",
            "chargeback" : "deductFromLiableAccount",
            "tip" : "addToOneBalanceAccount",
            "remainder" : "addToLiableAccount",
            "commission" : {
              "fixedAmount" : 10,
              "variablePercentage" : 100
            },
            "additionalCommission" : {
              "fixedAmount" : 10,
              "variablePercentage" : 50,
              "balanceAccountId" : "BA3227C223222H5HQ2XX77VVH"
            }
          }
        }
      },
      "post-merchants-merchantId-splitConfigurations-splitConfigurationId-post-splitConfiguration-rule-200" : {
        "summary" : "Split configuration created",
        "description" : "Example response after creating a split configuration",
        "value" : {
          "description" : "My first split configuration",
          "rules" : [
            {
              "currency" : "ANY",
              "fundingSource" : "ANY",
              "paymentMethod" : "ANY",
              "ruleId" : "SCRL4224P22322585HPCX384JW65VW",
              "shopperInteraction" : "ANY",
              "splitLogic" : {
                "additionalCommission" : {
                  "fixedAmount" : 10,
                  "variablePercentage" : 50,
                  "balanceAccountId" : "BA3227C223222H5HQ2XX77VVH"
                },
                "chargeback" : "deductFromLiableAccount",
                "commission" : {
                  "fixedAmount" : 10,
                  "variablePercentage" : 100
                },
                "splitLogicId" : "SCLG4224P22322585HPCX384JX52M2",
                "paymentFee" : "deductFromLiableAccount",
                "remainder" : "addToOneBalanceAccount",
                "tip" : "addToOneBalanceAccount"
              }
            },
            {
              "currency" : "USD",
              "fundingSource" : "ANY",
              "paymentMethod" : "visa",
              "ruleId" : "SCRL4224P22322585HPCX5V4KV6L2R",
              "shopperInteraction" : "POS",
              "splitLogic" : {
                "additionalCommission" : {
                  "fixedAmount" : 10,
                  "variablePercentage" : 50,
                  "balanceAccountId" : "BA3227C223222H5HQ2XX77VVH"
                },
                "chargeback" : "deductFromLiableAccount",
                "commission" : {
                  "fixedAmount" : 10,
                  "variablePercentage" : 100
                },
                "splitLogicId" : "SCLG4224P22322585HPCX5V4KW26C9",
                "paymentFee" : "deductFromLiableAccount",
                "remainder" : "addToLiableAccount",
                "tip" : "addToOneBalanceAccount"
              }
            }
          ],
          "splitConfigurationId" : "SCNF4224P22322585HPCX384JV6JGX"
        }
      },
      "post-merchants-merchantId-stores-post-stores" : {
        "summary" : "Create a store under the merchant account specified in the path.",
        "description" : "Example request to create a store",
        "value" : {
          "description" : "City centre store",
          "shopperStatement" : "Springfield Shop",
          "phoneNumber" : "1813702551707653",
          "reference" : "Spring_store_2",
          "address" : {
            "country" : "US",
            "line1" : "200 Main Street",
            "line2" : "Building 5A",
            "line3" : "Suite 3",
            "city" : "Springfield",
            "stateOrProvince" : "NY",
            "postalCode" : "20250"
          }
        }
      },
      "post-merchants-merchantId-stores-post-stores-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response after creating a store",
        "value" : {
          "id" : "YOUR_STORE_ID",
          "address" : {
            "country" : "US",
            "line1" : "200 Main Street",
            "line2" : "Building 5A",
            "line3" : "Suite 3",
            "city" : "Springfield",
            "stateOrProvince" : "NY",
            "postalCode" : "20250"
          },
          "description" : "City centre store",
          "merchantId" : "YOUR_MERCHANT_ACCOUNT_ID",
          "shopperStatement" : "Springfield Shop",
          "phoneNumber" : "1813702551707653",
          "reference" : "Spring_store_2",
          "status" : "active",
          "_links" : {
            "self" : {
              "href" : "https://management-test.adyen.com/v1/stores/YOUR_STORE_ID"
            }
          }
        }
      },
      "post-merchants-merchantId-terminalOrders-create-order" : {
        "summary" : "Create an order",
        "description" : "Example request to create an order for terminal products",
        "value" : {
          "customerOrderReference" : "YOUR_REFERENCE",
          "shippingLocationId" : "S2-6A6C2E3432747D4F2F2C3455485E3836457D",
          "billingEntityId" : "MerchantAccount.YOUR_MERCHANT_ACCOUNT",
          "items" : [
            {
              "id" : "PART-287001-EU",
              "name" : "Bluetooth Charging Base - V400m",
              "quantity" : 2
            },
            {
              "id" : "PART-620222-EU",
              "name" : "Receipt Roll",
              "quantity" : 20
            }
          ]
        }
      },
      "post-merchants-merchantId-terminalOrders-create-order-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response after creating an order for terminal products",
        "value" : {
          "id" : "4154567890100682",
          "customerOrderReference" : "YOUR_REFERENCE",
          "status" : "Placed",
          "shippingLocation" : {
            "id" : "S2-6A6C2E3432747D4F2F2C3455485E3836457D",
            "name" : "YOUR_COMPANY Spain",
            "contact" : {
              "firstName" : "Pablo",
              "lastName" : "Mengano",
              "phoneNumber" : "+34911234567",
              "email" : "Pablo.Mengano@company.com"
            },
            "address" : {
              "streetAddress" : "Paseo de la Castellana 43",
              "streetAddress2" : "7 piso",
              "postalCode" : "28046",
              "city" : "Madrid",
              "country" : "ES"
            }
          },
          "billingEntity" : {
            "id" : "MerchantAccount.YOUR_MERCHANT_ACCOUNT",
            "name" : "YOUR_MERCHANT_ACCOUNT",
            "taxId" : "ES1234567890",
            "email" : "Pablo.Mengano@company.com",
            "address" : {
              "streetAddress" : "Paseo de la Castellana 43, 7",
              "postalCode" : "28046",
              "city" : "Madrid",
              "country" : "ES"
            }
          },
          "orderDate" : "2022-01-21T16:12:33Z",
          "items" : [
            {
              "id" : "PART-287001-EU",
              "name" : "Bluetooth Charging Base - V400m",
              "quantity" : 2
            },
            {
              "id" : "PART-620222-EU",
              "name" : "Receipt Roll",
              "quantity" : 20
            }
          ]
        }
      },
      "post-merchants-merchantId-terminalOrders-orderId-cancel-cancel-order-200" : {
        "summary" : "Terminal order cancelled",
        "description" : "Example response after cancelling an order for terminal products",
        "value" : {
          "id" : "4154567890100682",
          "customerOrderReference" : "YOUR_REFERENCE",
          "status" : "Cancelled",
          "shippingLocation" : {
            "id" : "S2-6A6C2E3432747D4F2F2C3455485E3836457D",
            "name" : "YOUR_COMPANY Spain",
            "contact" : {
              "firstName" : "Pablo",
              "lastName" : "Mengano",
              "phoneNumber" : "+34911234567",
              "email" : "Pablo.Mengano@company.com"
            },
            "address" : {
              "streetAddress" : "Paseo de la Castellana 43",
              "streetAddress2" : "7 piso",
              "postalCode" : "28046",
              "city" : "Madrid",
              "country" : "ES"
            }
          },
          "billingEntity" : {
            "id" : "MerchantAccount.YOUR_MERCHANT_ACCOUNT",
            "name" : "YOUR_MERCHANT_ACCOUNT",
            "taxId" : "ES1234567890",
            "email" : "Pablo.Mengano@company.com",
            "address" : {
              "streetAddress" : "Paseo de la Castellana 43, 7",
              "postalCode" : "28046",
              "city" : "Madrid",
              "country" : "ES"
            }
          },
          "orderDate" : "2022-01-21T16:12:33Z",
          "items" : [
            {
              "id" : "PART-287001-EU",
              "name" : "Bluetooth Charging Base - V400m",
              "quantity" : 2
            },
            {
              "id" : "PART-620222-EU",
              "name" : "Receipt Roll",
              "quantity" : 20
            }
          ]
        }
      },
      "post-merchants-merchantId-users-create-user" : {
        "summary" : "Create a user",
        "description" : "Example request to create a user on the merchant level",
        "value" : {
          "name" : {
            "firstName" : "John",
            "lastName" : "Smith"
          },
          "username" : "johnsmith",
          "email" : "john.smith@example.com",
          "timeZoneCode" : "Europe/Amsterdam",
          "roles" : [
            "Merchant standard role"
          ],
          "associatedMerchantAccounts" : [
            "YOUR_MERCHANT_ACCOUNT"
          ]
        }
      },
      "post-merchants-merchantId-users-create-user-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response after creating a user on the merchant level",
        "value" : {
          "id" : "S2-3B3C3C3B22",
          "name" : {
            "firstName" : "John",
            "gender" : "UNKNOWN",
            "lastName" : "Smith"
          },
          "email" : "john.smith@example.com",
          "timeZoneCode" : "Europe/Amsterdam",
          "username" : "johnsmith",
          "roles" : [
            "Merchant standard role"
          ],
          "active" : true,
          "_links" : {
            "self" : {
              "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/users/S2-3B3C3C3B22"
            }
          },
          "associatedMerchantAccounts" : [
            "YOUR_MERCHANT_ACCOUNT"
          ]
        }
      },
      "post-merchants-merchantId-webhooks-post-merchant-webhook" : {
        "summary" : "Add a webhook configuration",
        "description" : "Example request for adding a standard webhook configuration.",
        "value" : {
          "type" : "standard",
          "url" : "YOUR_WEBHOOK_URL",
          "username" : "YOUR_USER",
          "password" : "YOUR_PASSWORD",
          "active" : true,
          "sslVersion" : "TLSv1.2",
          "communicationFormat" : "json",
          "acceptsExpiredCertificate" : false,
          "acceptsSelfSignedCertificate" : true,
          "acceptsUntrustedRootCertificate" : true,
          "populateSoapActionHeader" : false
        }
      },
      "post-merchants-merchantId-webhooks-post-merchant-webhook-200" : {
        "summary" : "OK 200 - Add a webhook configuration",
        "description" : "Example response for adding a webhook configuration.",
        "value" : {
          "id" : "S2-31433949437F",
          "type" : "standard",
          "url" : "YOUR_WEBHOOK_URL",
          "description" : "Webhook for YOUR_MERCHANT_ACCOUNT - YOUR_MERCHANT_CODE",
          "username" : "myuser",
          "hasPassword" : true,
          "active" : true,
          "hasError" : false,
          "sslVersion" : "TLSv1.2",
          "communicationFormat" : "json",
          "acceptsExpiredCertificate" : false,
          "acceptsSelfSignedCertificate" : true,
          "acceptsUntrustedRootCertificate" : true,
          "certificateAlias" : "signed-test.adyen.com_2023",
          "populateSoapActionHeader" : false,
          "additionalSettings" : {
            "properties" : {
              "includePosTerminalInfo" : false,
              "includeARN" : false,
              "includePosDetails" : false,
              "includeCardInfoForRecurringContractNotification" : false,
              "includeRiskData" : false,
              "includeRiskExperimentReference" : false,
              "includeSoapSecurityHeader" : false,
              "includeContactlessWalletTokenInformation" : false,
              "includeAcquirerReference" : false,
              "includeRiskProfileReference" : false,
              "includeOriginalMerchantReferenceCancelOrRefundNotification" : false,
              "includeNfcTokenInformation" : false,
              "includeSubvariant" : false,
              "includeThreeDSVersion" : false,
              "includeInstallmentsInfo" : false,
              "includeAliasInfo" : false,
              "includeShopperCountry" : false,
              "includeRawThreeDSecureResult" : false,
              "includeAirlineData" : false,
              "includeGrossCurrencyChargebackDetails" : false,
              "includeThreeDSecureResult" : false,
              "includeMetadataIn3DSecurePaymentNotification" : false,
              "includeOriginalReferenceForChargebackReversed" : false,
              "addAcquirerResult" : false,
              "includeDeliveryAddress" : false,
              "includeRetryAttempts" : false,
              "includeExtraCosts" : false,
              "includeCardHolderName" : false,
              "includeShopperDetail" : false,
              "includeBankAccountDetails" : false,
              "includeMandateDetails" : false,
              "includeAuthAmountForDynamicZeroAuth" : false,
              "includeIssuerCountry" : false,
              "includeAcquirerErrorDetails" : false,
              "includeCoBrandedWith" : false,
              "includeShopperInteraction" : false,
              "includeDeviceAndBrowserInfo" : false,
              "addRawAcquirerResult" : false,
              "includeCardBin" : false,
              "includeFundingSource" : false,
              "includeThreeDS2ChallengeInformation" : false,
              "includeRiskProfile" : false,
              "includeRealtimeAccountUpdaterStatus" : false,
              "includeDunningProjectData" : false,
              "includePaymentResultInOrderClosedNotification" : false,
              "includeCardBinDetails" : false,
              "includeNotesInManualReviewNotifications" : false,
              "includeZeroAuthFlag" : false,
              "addCaptureReferenceToDisputeNotification" : false,
              "includePayPalDetails" : false,
              "includeRawThreeDSecureDetailsResult" : false,
              "includeBankVerificationResults" : false,
              "includeCaptureDelayHours" : false,
              "addPaymentAccountReference" : false,
              "includePayULatamDetails" : false,
              "includeStore" : false,
              "returnAvsData" : false,
              "includeWeChatPayOpenid" : false,
              "includeUpiVpa" : false,
              "includeCustomRoutingFlagging" : false,
              "includeTokenisedPaymentMetaData" : false
            }
          },
          "_links" : {
            "self" : {
              "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/webhooks/S2-31433949437F"
            },
            "generateHmac" : {
              "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/webhooks/S2-31433949437F/generateHmac"
            },
            "merchant" : {
              "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT"
            },
            "testWebhook" : {
              "href" : "https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT/webhooks/S2-31433949437F/test"
            }
          }
        }
      },
      "post-merchants-merchantId-webhooks-webhookId-generateHmac-post-merchant-webhook-generateHmac-200" : {
        "summary" : "OK 200 - Generate a webhook HMAC key",
        "description" : "Example response for generating a webhook HMAC.",
        "value" : {
          "hmacKey" : "7052E6804F0AF40DCC390464C817F4F963516FA42AC8816D518DC5D39F41E902"
        }
      },
      "post-merchants-merchantId-webhooks-webhookId-test-post-merchant-webhook-test" : {
        "summary" : "Test a webhook notification",
        "description" : "Example request for testing a webhook notification.",
        "value" : {
          "notification" : {
            "paymentMethod" : "visa",
            "eventCode" : "AUTHORISATION",
            "amount" : {
              "currency" : "EUR",
              "value" : 1000
            },
            "reason" : "Authorize visa payment",
            "success" : true
          },
          "types" : [
            "CUSTOM"
          ]
        }
      },
      "post-merchants-merchantId-webhooks-webhookId-test-post-merchant-webhook-test-200" : {
        "summary" : "OK 200 - Test a webhook notification",
        "description" : "Example response for testing a webhook notification.",
        "value" : {
          "data" : [
            {
              "merchantId" : "YOUR_MERCHANT_ACCOUNT",
              "output" : "[accepted]",
              "requestSent" : "{\"live\":\"false\",\"notificationItems\":[{\"NotificationRequestItem\":{\"amount\":{\"currency\":\"EUR\",\"value\":100},\"eventCode\":\"AUTHORISATION\",\"eventDate\":\"2022-05-10T17:02:03+02:00\",\"merchantAccountCode\":\"YOUR_MERCHANT_ACCOUNT\",\"merchantReference\":\"4TZLD23Y\",\"operations\":[\"CANCEL\",\"CAPTURE\",\"REFUND\"],\"paymentMethod\":\"visa\",\"pspReference\":\"E05WW50L6IOBRGA0\",\"reason\":\"\",\"success\":\"true\"}}]}",
              "responseCode" : "200",
              "responseTime" : "532 ms",
              "status" : "success"
            }
          ]
        }
      },
      "post-merchants-post-merchants" : {
        "summary" : "Create a merchant account for an Adyen for Platforms Manage integration",
        "description" : "Example request for creating a merchant account",
        "value" : {
          "companyId" : "YOUR_COMPANY_ACCOUNT",
          "legalEntityId" : "YOUR_LEGAL_ENTITY_ID",
          "businessLineId" : "YOUR_BUSINESS_LINE_ID",
          "description" : "YOUR_DESCRIPTION",
          "reference" : "YOUR_OWN_REFERENCE"
        }
      },
      "post-merchants-post-merchants-200" : {
        "summary" : "Merchant account created",
        "description" : "Example response for creating a merchant account",
        "value" : {
          "companyId" : "YOUR_COMPANY_ACCOUNT",
          "legalEntityId" : "YOUR_LEGAL_ENTITY_ID",
          "businessLineId" : "YOUR_BUSINESS_LINE_ID",
          "description" : "YOUR_DESCRIPTION",
          "reference" : "YOUR_OWN_REFERENCE",
          "id" : "YOUR_OWN_REFERENCE"
        }
      },
      "post-stores-post-stores" : {
        "summary" : "Create a store",
        "description" : "Example request to create a store",
        "value" : {
          "merchantId" : "YOUR_MERCHANT_ACCOUNT_ID",
          "description" : "City centre store",
          "shopperStatement" : "Springfield Shop",
          "phoneNumber" : "+1813702551707653",
          "reference" : "Spring_store_2",
          "address" : {
            "country" : "US",
            "line1" : "200 Main Street",
            "line2" : "Building 5A",
            "line3" : "Suite 3",
            "city" : "Springfield",
            "stateOrProvince" : "NY",
            "postalCode" : "20250"
          }
        }
      },
      "post-stores-post-stores-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response after creating a store",
        "value" : {
          "id" : "YOUR_STORE_ID",
          "address" : {
            "country" : "US",
            "line1" : "200 Main Street",
            "line2" : "Building 5A",
            "line3" : "Suite 3",
            "city" : "Springfield",
            "stateOrProvince" : "NY",
            "postalCode" : "20250"
          },
          "description" : "City centre store",
          "merchantId" : "YOUR_MERCHANT_ACCOUNT_ID",
          "shopperStatement" : "Springfield Shop",
          "phoneNumber" : "+1813702551707653",
          "reference" : "Spring_store_2",
          "status" : "active",
          "_links" : {
            "self" : {
              "href" : "https://management-test.adyen.com/v1/stores/YOUR_STORE_ID"
            }
          }
        }
      },
      "post-terminals-scheduleActions-install-app" : {
        "summary" : "Schedule installing an Android app",
        "description" : "Example request to schedule installing an Android app",
        "value" : {
          "terminalIds" : [
            "S1E-000150183300032",
            "S1E-000150183300033",
            "S1F2-000150183300034"
          ],
          "storeId" : "",
          "scheduledAt" : "2021-12-12T20:21:22-0100",
          "actionDetails" : {
            "type" : "InstallAndroidApp",
            "appId" : "ANDA422LZ223223K5F694GCCF732K8"
          }
        }
      },
      "post-terminals-scheduleActions-install-app-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response after scheduling the installation of an Android app",
        "value" : {
          "actionDetails" : {
            "appId" : "ANDA422LZ223223K5F694GCCF732K8",
            "type" : "InstallAndroidApp"
          },
          "scheduledAt" : "2021-12-12T20:21:22-0100",
          "storeId" : "",
          "items" : [
            {
              "id" : "TRAC422T2223223K5GFMQHM6WQ4KB6",
              "terminalId" : "S1E-000150183300032"
            },
            {
              "id" : "TRAC4224X22338VQ5GD4CQJCQT5PC2",
              "terminalId" : "S1E-000150183300033"
            },
            {
              "id" : "TRAC4224Z223223K5GD89RLBWQ6CWT",
              "terminalId" : "S1F2-000150183300034"
            }
          ],
          "terminalIds" : [
            "S1E-000150183300032",
            "S1E-000150183300033",
            "S1F2-000150183300034"
          ],
          "terminalsWithErrors" : {

          },
          "totalScheduled" : 3,
          "totalErrors" : 0
        }
      },
      "post-terminals-scheduleActions-uninstall-cert" : {
        "summary" : "Schedule uninstalling an Android certificate",
        "description" : "Example request to schedule uninstalling an Android certificate",
        "value" : {
          "terminalIds" : [
            "S1E-000150183300032",
            "S1E-000150183300033",
            "S1F2-000150183300034"
          ],
          "storeId" : "",
          "scheduledAt" : "2021-12-12T20:21:22-0100",
          "actionDetails" : {
            "type" : "UninstallAndroidCertificate",
            "certificateId" : "ANDC422LZ223223K5F78NVN9SL4VPH"
          }
        }
      },
      "post-terminals-scheduleActions-uninstall-cert-200" : {
        "summary" : "Response code - 200 OK",
        "description" : "Example response after scheduling the removal of an Android certificate",
        "value" : {
          "actionDetails" : {
            "certificateId" : "ANDC422LZ223223K5F78NVN9SL4VPH",
            "type" : "UninstallAndroidCertificate"
          },
          "scheduledAt" : "2021-12-12T20:21:22-0100",
          "storeId" : "",
          "items" : [
            {
              "id" : "TRAC422T2223223K5GFMQHM6WQ4KB6",
              "terminalId" : "S1E-000150183300032"
            },
            {
              "id" : "TRAC4224X22338VQ5GD4CQJCQT5PC2",
              "terminalId" : "S1E-000150183300033"
            },
            {
              "id" : "TRAC4224Z223223K5GD89RLBWQ6CWT",
              "terminalId" : "S1F2-000150183300034"
            }
          ],
          "terminalIds" : [
            "S1E-000150183300032",
            "S1E-000150183300033",
            "S1F2-000150183300034"
          ],
          "terminalsWithErrors" : {

          },
          "totalScheduled" : 3,
          "totalErrors" : 0
        }
      },
      "post-terminals-scheduleActions-verification-error" : {
        "summary" : "Invalid terminal ID in the request",
        "description" : "Example request to see what validation errors look like",
        "value" : {
          "terminalIds" : [
            "S1E-000150183300032",
            "S1E-000150183300033",
            "S1F2-000150183300034"
          ],
          "storeId" : "",
          "scheduledAt" : "2021-12-11T20:21:22-0100",
          "actionDetails" : {
            "type" : "InstallAndroidApp",
            "appId" : "ANDA422LZ223223K5F694GCCF621J7"
          }
        }
      },
      "post-terminals-scheduleActions-verification-error-422" : {
        "summary" : "Response code - 422 Unprocessable Entity",
        "description" : "Example response for failed verification of terminal IDs",
        "value" : {
          "type" : "https://docs.adyen.com/errors/unprocessable-entity",
          "errorCode" : "02_005",
          "title" : "Terminal ID verification failed.",
          "status" : 422,
          "detail" : "Terminal IDs are empty"
        }
      }
    }
  }
}