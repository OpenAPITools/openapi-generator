openapi: 3.0.2
info:
  version: 1.0.0
  title: OpenAPI Petstore
  license:
    name: Apache-2.0
paths:
  /generate_from_response_schema_with_no_example:
    get:
      operationId: generateFromResponseSchemaWithNoExample
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: string
  /generate_from_response_schema_with_primitive_type:
    get:
      operationId: generateFromResponseSchemaWithNoExample
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: string
                example: primitive type example value
  /generate_from_response_schema_with_date_format:
    get:
      operationId: generateFromResponseSchemaWithDateFormat
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DateSchema'
  /generate_from_response_schema_with_array_of_model:
    get:
      operationId: generateFromResponseSchemaWithArrayOfModel
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StringSchema'
  /generate_from_response_schema_with_array_of_primitive_types:
    get:
      operationId: generateFromResponseSchemaWithArrayOfPrimitiveTypes
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  example: primitive types example value
  /generate_from_response_schema_with_model:
    get:
      operationId: generateFromResponseSchemaWithModel
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExampleSchema'
  /generate_from_response_schema_with_allOf_composed_model:
    get:
      operationId: generateFromResponseSchemaWithAllOfModel
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExampleAllOfSchema'
  /generate_from_response_schema_with_anyOf_composed_model:
    get:
      operationId: generateFromResponseSchemaWithAnyOfModel
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExampleAnyOfSchema'
  /generate_from_response_schema_with_oneOf_composed_model:
    get:
      operationId: generateFromResponseSchemaWithOneOfModel
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExampleOneOfSchema'
components:
  schemas:
    DateSchema:
      type: object
      properties:
        date_with_example:
          type: string
          format: date
          example: 2024-01-01
        date_without_example:
          type: string
          format: date
    StringSchema:
      type: string
      example: string schema example value
    ExampleSchema:
      type: object
      properties:
        example_schema_property:
          type: string
          example: example schema property value
    ExampleAllOfSchema:
      type: object
      allOf:
        - $ref: '#/components/schemas/ExampleSchema'
        - type: object
          properties:
            example_schema_property_composed:
              type: string
              example: example schema property value composed
    ExampleAnyOfSchema:
      type: object
      anyOf:
        - $ref: '#/components/schemas/ExampleSchema'
        - type: object
          properties:
            example_schema_property_composed:
              type: string
              example: example schema property value composed
    ExampleOneOfSchema:
      type: object
      oneOf:
        - $ref: '#/components/schemas/ExampleSchema'
        - type: object
          properties:
            example_schema_property_composed:
              type: string
              example: example schema property value composed
