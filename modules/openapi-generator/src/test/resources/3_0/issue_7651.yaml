openapi: 3.0.1
info:
  title: OpenAPI Petstore
  description: "sample spec"
  license:
    name: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: http://petstore.swagger.io:80/v2
tags:
  - name: isX
    description: an api that ensures that isX properties are present on Schema classes
paths:
  /ref_date_with_validation/{date}:
    post:
      tags:
        - isX
      operationId: refDateWithValidation
      parameters:
        - name: date
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/DateWithValidation'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DateWithValidation'
        required: true
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DateWithValidation'
  /date_with_validation/{date}:
    post:
      tags:
        - isX
      operationId: dateWithValidation
      parameters:
        - name: date
          in: path
          required: true
          schema:
            type: string
            format: date
            pattern: '^2020.*'
      requestBody:
        content:
          application/json:
            schema:
              type: string
              format: date
              pattern: '^2020.*'
        required: true
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: string
                format: date
                pattern: '^2020.*'
  /ref_date_time_with_validation/{dateTime}:
    post:
      tags:
        - isX
      operationId: refDateTimeWithValidation
      parameters:
        - name: dateTime
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/DateTimeWithValidation'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DateTimeWithValidation'
        required: true
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DateTimeWithValidation'
  /date_time_with_validation/{dateTime}:
    post:
      tags:
        - isX
      operationId: dateTimeWithValidation
      parameters:
        - name: dateTime
          in: path
          required: true
          schema:
            type: string
            format: date-time
            pattern: '^2020.*'
      requestBody:
        content:
          application/json:
            schema:
              type: string
              format: date-time
              pattern: '^2020.*'
        required: true
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: string
                format: date-time
                pattern: '^2020.*'
  /null/{param}:
    post:
      tags:
        - isX
      operationId: null
      parameters:
        - name: param
          in: path
          required: true
          schema:
            type: 'null'
      requestBody:
        content:
          application/json:
            schema:
              type: 'null'
        required: true
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: 'null'
  /ref_null/{param}:
    post:
      tags:
        - isX
      operationId: null
      parameters:
        - name: param
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/NullModel'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NullModel'
        required: true
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NullModel'
components:
  schemas:
    ArrayWithMaxItems:
      type: array
      maxItems: 2
      items:
        type: string
    ArrayWithMinItems:
      type: array
      minItems: 2
      items:
        type: string
    ArrayWithUniqueItems:
      type: array
      uniqueItems: true
      items:
        type: string
    ObjectWithMinProperties:
      type: object
      minProperties: 2
    ObjectWithMaxProperties:
      type: object
      maxProperties: 2
    StringWithMinLength:
      type: string
      minLength: 1
    DateWithMinLength:
      type: string
      format: date
      minLength: 10
    DateTimeWithMinLength:
      type: string
      format: date-time
      minLength: 20
    ByteWithMinLength:
      type: string
      format: byte
      minLength: 10
    BinaryWithMinLength:
      type: string
      format: binary
      minLength: 10
    StringWithMaxLength:
      type: string
      maxLength: 1
    DateWithMaxLength:
      type: string
      format: date
      maxLength: 10
    DateTimeWithMaxLength:
      type: string
      format: date-time
      maxLength: 20
    ByteWithMaxLength:
      type: string
      format: byte
      maxLength: 10
    BinaryWithMaxLength:
      type: string
      format: binary
      maxLength: 10
    IntegerWithMultipleOf:
      type: integer
      multipleOf: 2
    Integer32WithMultipleOf:
      type: integer
      format: int32
      multipleOf: 2
    Integer64WithMultipleOf:
      type: integer
      format: int64
      multipleOf: 2
    NumberWithMultipleOf:
      type: number
      multipleOf: 2
    NumberFloatWithMultipleOf:
      type: number
      format: float
      multipleOf: 2
    NumberDoubleWithMultipleOf:
      type: number
      format: double
      multipleOf: 2
    StringWithPattern:
      type: string
      pattern: '^2021.+'
    DateWithPattern:
      type: string
      format: date
      pattern: '^2021.+'
    DateTimeWithPattern:
      type: string
      format: date-time
      pattern: '^2021.+'
    ByteWithPattern:
      type: string
      format: byte
      pattern: '^2021.+'
    BinaryWithPattern:
      type: string
      format: binary
      pattern: '^2021.+'
    IntegerWithMinimum:
      type: integer
      minimum: 1
    Integer32WithMinimum:
      type: integer
      format: int32
      minimum: 1
    Integer64WithMinimum:
      type: integer
      format: int364
      minimum: 1
    NumberWithMinimum:
      type: number
      minimum: 1
    NumberFloatWithMinimum:
      type: number
      format: float
      minimum: 1
    NumberDoubleWithMinimum:
      type: number
      format: double
      minimum: 1
    IntegerWithMaximum:
      type: integer
      maximum: 10
    Integer32WithMaximum:
      type: integer
      format: int32
      maximum: 10
    Integer64WithMaximum:
      type: integer
      format: int64
      maximum: 10
    NumberWithMaximum:
      type: number
      maximum: 10
    NumberFloatWithMaximum:
      type: number
      format: float
      maximum: 10
    NumberDoubleWithMaximum:
      type: number
      format: double
      maximum: 10
    IntegerWithExclusiveMinimum:
      type: integer
      minimum: 1
      exclusiveMinimum: true
    Integer32WithExclusiveMinimum:
      type: integer
      format: int32
      minimum: 1
      exclusiveMinimum: true
    Integer64WithExclusiveMinimum:
      type: integer
      format: int364
      minimum: 1
      exclusiveMinimum: true
    NumberWithExclusiveMinimum:
      type: number
      minimum: 1
      exclusiveMinimum: true
    NumberFloatWithExclusiveMinimum:
      type: number
      format: float
      minimum: 1
      exclusiveMinimum: true
    NumberDoubleWithExclusiveMinimum:
      type: number
      format: double
      minimum: 1
      exclusiveMinimum: true
    IntegerWithExclusiveMaximum:
      type: integer
      maximum: 10
      exclusiveMaximum: true
    Integer32WithExclusiveMaximum:
      type: integer
      format: int32
      maximum: 10
      exclusiveMaximum: true
    Integer64WithExclusiveMaximum:
      type: integer
      format: int64
      maximum: 10
      exclusiveMaximum: true
    NumberWithExclusiveMaximum:
      type: number
      maximum: 10
      exclusiveMaximum: true
    NumberFloatWithExclusiveMaximum:
      type: number
      format: float
      maximum: 10
      exclusiveMaximum: true
    NumberDoubleWithExclusiveMaximum:
      type: number
      format: double
      maximum: 10
      exclusiveMaximum: true
    NullModel:
      type: 'null'
    ObjectWithTypeNullProperties:
      type: object
      properties:
        nullProp:
          type: 'null'
        listOfNulls:
          type: array
          items:
            type: 'null'
      additionalProperties:
        type: 'null'
    ArrayOfNulls:
      type: array
      items:
        type: 'null'
    DateWithValidation:
      type: string
      format: date
      pattern: '^2020.*'
    ObjectWithDateWithValidation:
      type: object
      properties:
        dateWithValidation:
          type: string
          format: date
          pattern: '^2020.*'
    DateTimeWithValidation:
      type: string
      format: date-time
      pattern: '^2020.*'
    ObjectWithDateTimeWithValidation:
      type: object
      properties:
        dateWithValidation:
          type: string
          format: date-time
          pattern: '^2020.*'
  securitySchemes: {}