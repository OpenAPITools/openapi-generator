openapi: 3.0.3
info:
  title: openapi 3.0.3 sample spec
  description: sample spec for testing openapi functionality, built from json schema
    tests for draft6
  version: 0.0.1
paths: {}
components:
  schemas:
    Oneof:
      oneOf:
      - type: integer
      - minimum: 2
    OneofWithBaseSchema:
      type: string
      oneOf:
      - minLength: 2
      - maxLength: 4
    OneofWithBooleanSchemasAllTrue:
      oneOf:
      - true
      - true
      - true
    OneofWithBooleanSchemasOneTrue:
      oneOf:
      - true
      - false
      - false
    OneofWithBooleanSchemasMoreThanOneTrue:
      oneOf:
      - true
      - true
      - false
    OneofWithBooleanSchemasAllFalse:
      oneOf:
      - false
      - false
      - false
    OneofComplexTypes:
      oneOf:
      - properties:
          bar:
            type: integer
        required:
        - bar
      - properties:
          foo:
            type: string
        required:
        - foo
    OneofWithEmptySchema:
      oneOf:
      - type: number
      - {}
    OneofWithRequired:
      type: object
      oneOf:
      - required:
        - foo
        - bar
      - required:
        - foo
        - baz
    NestedOneofToCheckValidationSemantics:
      oneOf:
      - oneOf:
        - type: 'null'
  x-schema-test-examples:
    Oneof:
      FirstOneofValid:
        description: first oneOf valid
        data: 1
        valid: true
      SecondOneofValid:
        description: second oneOf valid
        data: 2.5
        valid: true
      BothOneofValid:
        description: both oneOf valid
        data: 3
        valid: false
      NeitherOneofValid:
        description: neither oneOf valid
        data: 1.5
        valid: false
    OneofWithBaseSchema:
      MismatchBaseSchema:
        description: mismatch base schema
        data: 3
        valid: false
      OneOneofValid:
        description: one oneOf valid
        data: foobar
        valid: true
      BothOneofValid:
        description: both oneOf valid
        data: foo
        valid: false
    OneofWithBooleanSchemasAllTrue:
      AnyValueIsInvalid:
        description: any value is invalid
        data: foo
        valid: false
    OneofWithBooleanSchemasOneTrue:
      AnyValueIsValid:
        description: any value is valid
        data: foo
        valid: true
    OneofWithBooleanSchemasMoreThanOneTrue:
      AnyValueIsInvalid:
        description: any value is invalid
        data: foo
        valid: false
    OneofWithBooleanSchemasAllFalse:
      AnyValueIsInvalid:
        description: any value is invalid
        data: foo
        valid: false
    OneofComplexTypes:
      FirstOneofValidComplex:
        description: first oneOf valid (complex)
        data:
          bar: 2
        valid: true
      SecondOneofValidComplex:
        description: second oneOf valid (complex)
        data:
          foo: baz
        valid: true
      BothOneofValidComplex:
        description: both oneOf valid (complex)
        data:
          foo: baz
          bar: 2
        valid: false
      NeitherOneofValidComplex:
        description: neither oneOf valid (complex)
        data:
          foo: 2
          bar: quux
        valid: false
    OneofWithEmptySchema:
      OneValidValid:
        description: one valid - valid
        data: foo
        valid: true
      BothValidInvalid:
        description: both valid - invalid
        data: 123
        valid: false
    OneofWithRequired:
      BothInvalidInvalid:
        description: both invalid - invalid
        data:
          bar: 2
        valid: false
      FirstValidValid:
        description: first valid - valid
        data:
          foo: 1
          bar: 2
        valid: true
      SecondValidValid:
        description: second valid - valid
        data:
          foo: 1
          baz: 3
        valid: true
      BothValidInvalid:
        description: both valid - invalid
        data:
          foo: 1
          bar: 2
          baz: 3
        valid: false
    NestedOneofToCheckValidationSemantics:
      NullIsValid:
        description: null is valid
        data: null
        valid: true
      AnythingNonNullIsInvalid:
        description: anything non-null is invalid
        data: 123
        valid: false
