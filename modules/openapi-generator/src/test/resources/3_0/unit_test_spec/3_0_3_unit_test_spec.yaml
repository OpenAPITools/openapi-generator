openapi: 3.0.3
info:
  title: openapi 3.0.3 sample spec
  description: sample spec for testing openapi functionality, built from json schema
    tests for draft6
  version: 0.0.1
paths: {}
components:
  schemas:
    Anyof:
      anyOf:
      - type: integer
      - minimum: 2
    AnyofWithBaseSchema:
      type: string
      anyOf:
      - maxLength: 2
      - minLength: 4
    AnyofComplexTypes:
      anyOf:
      - properties:
          bar:
            type: integer
        required:
        - bar
      - properties:
          foo:
            type: string
        required:
        - foo
    AnyofWithOneEmptySchema:
      anyOf:
      - type: number
      - {}
    NestedAnyofToCheckValidationSemantics:
      anyOf:
      - anyOf:
        - type: 'null'
  x-schema-test-examples:
    Anyof:
      FirstAnyofValid:
        description: first anyOf valid
        data: 1
        valid: true
      SecondAnyofValid:
        description: second anyOf valid
        data: 2.5
        valid: true
      BothAnyofValid:
        description: both anyOf valid
        data: 3
        valid: true
      NeitherAnyofValid:
        description: neither anyOf valid
        data: 1.5
        valid: false
    AnyofWithBaseSchema:
      MismatchBaseSchema:
        description: mismatch base schema
        data: 3
        valid: false
      OneAnyofValid:
        description: one anyOf valid
        data: foobar
        valid: true
      BothAnyofInvalid:
        description: both anyOf invalid
        data: foo
        valid: false
    AnyofComplexTypes:
      FirstAnyofValidComplex:
        description: first anyOf valid (complex)
        data:
          bar: 2
        valid: true
      SecondAnyofValidComplex:
        description: second anyOf valid (complex)
        data:
          foo: baz
        valid: true
      BothAnyofValidComplex:
        description: both anyOf valid (complex)
        data:
          foo: baz
          bar: 2
        valid: true
      NeitherAnyofValidComplex:
        description: neither anyOf valid (complex)
        data:
          foo: 2
          bar: quux
        valid: false
    AnyofWithOneEmptySchema:
      StringIsValid:
        description: string is valid
        data: foo
        valid: true
      NumberIsValid:
        description: number is valid
        data: 123
        valid: true
    NestedAnyofToCheckValidationSemantics:
      NullIsValid:
        description: null is valid
        data: null
        valid: true
      AnythingNonNullIsInvalid:
        description: anything non-null is invalid
        data: 123
        valid: false
