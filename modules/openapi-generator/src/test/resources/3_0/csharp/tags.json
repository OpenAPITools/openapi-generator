{
  "info": {
      "title": "Files.com API",
      "contact": {
          "name": "Files.com Customer Success Team",
          "email": "support@files.com"
      },
      "version": "0.0.1"
  },
  "swagger": "2.0",
  "produces": [
      "application/json",
      "application/msgpack",
      "application/xml"
  ],
  "securityDefinitions": {
      "api_key": {
          "type": "apiKey",
          "description": "API Key - supports user-based or site-wide API keys",
          "name": "XFilesAPIKey",
          "in": "header"
      }
  },
  "host": "app.files.com",
  "basePath": "/api/rest/v1",
  "tags": [
      {
          "name": "api_key",
          "description": "Operations about api_keys"
      },
      {
          "name": "API Keys",
          "description": "Operations about API Keys"
      },
      {
          "name": "a_p_i_k_e_y_s",
          "description": "Operations about API keys"
      }
  ],
  "paths": {
      "/api_keys/{id}": {
          "get": {
              "summary": "Show API Key",
              "description": "Show API Key",
              "produces": [
                  "application/json"
              ],
              "parameters": [
                  {
                      "in": "path",
                      "name": "id",
                      "description": "Api Key ID.",
                      "type": "integer",
                      "format": "int32",
                      "required": true,
                      "x-ms-summary": "Api Key ID."
                  }
              ],
              "responses": {
                  "400": {
                      "description": "Bad Request",
                      "x-ms-summary": "Bad Request"
                  }
              },
              "tags": [
                  "api_keys",
                  "API Keys",
                  "a_p_i_k_e_y_s"
              ],
              "operationId": "GetApiKeysId",
              "x-authentication": [
                  "self_managed"
              ],
              "x-category": [
                  "developers"
              ]
          }
      }
  }
  ,
  "definitions": {
      "ActionNotificationExportEntity": {
          "type": "object",
          "properties": {
              "id": {
                  "type": "integer",
                  "format": "int32",
                  "example": 1,
                  "description": "History Export ID"
              },
              "export_version": {
                  "type": "string",
                  "example": "example",
                  "description": "Version of the underlying records for the export."
              },
              "start_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2000-01-01T01:00:00Z",
                  "description": "Start date/time of export range."
              },
              "end_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2000-01-01T01:00:00Z",
                  "description": "End date/time of export range."
              },
              "status": {
                  "type": "string",
                  "example": "ready",
                  "description": "Status of export.  Valid values: `building`, `ready`, or `failed`"
              },
              "query_path": {
                  "type": "string",
                  "example": "MyFile.txt",
                  "description": "Return notifications that were triggered by actions on this specific path."
              },
              "query_folder": {
                  "type": "string",
                  "example": "MyFolder",
                  "description": "Return notifications that were triggered by actions in this folder."
              },
              "query_message": {
                  "type": "string",
                  "example": "Connection Refused",
                  "description": "Error message associated with the request, if any."
              },
              "query_request_method": {
                  "type": "string",
                  "example": "GET",
                  "description": "The HTTP request method used by the webhook."
              },
              "query_request_url": {
                  "type": "string",
                  "example": "http://example.com/webhook",
                  "description": "The target webhook URL."
              },
              "query_status": {
                  "type": "string",
                  "example": "200",
                  "description": "The HTTP status returned from the server in response to the webhook request."
              },
              "query_success": {
                  "type": "boolean",
                  "example": true,
                  "description": "true if the webhook request succeeded (i.e. returned a 200 or 204 response status). false otherwise."
              },
              "results_url": {
                  "type": "string",
                  "example": "https://files.com/action_notification_results.csv",
                  "description": "If `status` is `ready`, this will be a URL where all the results can be downloaded at once as a CSV."
              }
          },
          "x-docs": "An ActionNotificationExport is an operation that provides access to outgoing webhook logs. Querying webhook logs is a little different than other APIs.\n\nAll queries against the archive must be submitted as Exports.  (Even our Web UI creates an Export behind the scenes.)\n\nIn any query field in this API, you may specify multiple values separated by commas.  That means that commas\ncannot be searched for themselves, and neither can single quotation marks.\n\nUse the following steps to complete an export:\n\n1. Initiate the export by using the Create Action Notification Export endpoint. Non Site Admins must query by folder or path.\n2. Using the `id` from the response to step 1, poll the Show Action Notification Export endpoint. Check the `status` field until it is `ready`.\n3. You can download the results of the export as a CSV file using the `results_url` field in the response from step 2. If you want to page through the records in JSON format, use the List Action Notification Export Results endpoint, passing the `id` that you got in step 1 as the `action_notification_export_id` parameter. Check the `X-Files-Cursor-Next` header to see if there are more records available, and resubmit the same request with a `cursor` parameter to fetch the next page of results.  Unlike most API Endpoints, this endpoint does not provide `X-Files-Cursor-Prev` cursors allowing reverse pagination through the results.  This is due to limitations in Amazon Athena, the underlying data lake for these records.\n\nIf you intend to use this API for high volume or automated use, please contact us with more information\nabout your use case.\n\n## Example Queries\n\n* History for a folder: `{ \"query_folder\": \"path/to/folder\" }`\n* History for a range of time: `{ \"start_at\": \"2021-03-18 12:00:00\", \"end_at\": \"2021-03-19 12:00:00\" }`\n* History of all notifications that used GET or POST: `{ \"query_request_method\": \"GET,POST\" }`\n",
          "description": "ActionNotificationExportEntity model"
      }
  }
}