# Test the mainline function of the XML part of the OpenAPI specification,
# as found here : https://swagger.io/docs/specification/data-models/representing-xml/
#
# Specifically, these tests are intended to include:
#   - namespaces
#   - arrays
#     - as the whole response body
#     - within another object
#     - wrapping and renaming to and from camelCase and snake_case
#   - objects
#     - renaming to and from camelCase and snake_case

openapi: 3.0.1
info:
  title: My title
  description: API under test
  version: 1.0.7
paths:
  /xml:
    post:
      summary: Post an array
      description: ''
      requestBody:
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/xml_array'
      responses:
        '201':
          description: 'OK'
        '400':
          description: Bad Request
    put:
      requestBody:
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/xml_object'
      responses:
        '201':
          description: 'OK'
        '400':
          description: Bad Request
  /xml_other:
    post:
      requestBody:
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/anotherXmlObject'
      responses:
        '201':
          description: 'OK'
        '400':
          description: Bad Request
    put:
      requestBody:
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/anotherXmlArray'
      responses:
        '201':
          description: 'OK'
        '400':
          description: Bad Request
  /xml_extra:
    post:
      requestBody:
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/duplicate_xml_object'
      responses:
        '201':
          description: 'OK'
        '400':
          description: Bad Request
  /required_octet_stream:
    put:
      requestBody:
        required: true
        content:
          application/octet-stream:
            schema:
              type: string
              format: byte
      responses:
        '200':
          description: 'OK'
components:
  schemas:
    UuidObject:
      description: Test a model containing a UUID
      type: string
      format: uuid
    xml_array:
      xml:
        name: CamelXmlArray
        wrapped: true
      type: array
      items:
        $ref: '#/components/schemas/xml_inner'
    xml_inner:
      type: string
      xml:
        name: camelXmlInner
    xml_object:
      title: an XML object
      description: An XML object
      type: object
      properties:
        innerString:
          type: string
        other_inner_rename:
          type: integer
      xml:
        name: camelXmlObject
        namespace: http://foo.bar
    duplicate_xml_object:
      description: An XML object
      type: object
      required:
        - inner_array
      properties:
        inner_string:
          type: string
        inner_array:
          $ref: '#/components/schemas/xml_array'
      xml:
        name: camelDuplicateXmlObject
        namespace: http://different.bar
    anotherXmlArray:
      type: array
      xml:
        wrapped: true
        name: snake_another_xml_array
      items:
        $ref: '#/components/schemas/anotherXmlInner'
    anotherXmlInner:
      type: string
      xml:
        name: snake_another_xml_inner
    anotherXmlObject:
      description: An XML object
      type: object
      properties:
        inner_string:
          type: string
      xml:
        name: snake_another_xml_object
        namespace: http://foo.bar
