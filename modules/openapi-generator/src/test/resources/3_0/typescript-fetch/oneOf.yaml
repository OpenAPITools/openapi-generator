openapi: 3.0.0
info:
  version: 1.0.0
  title: testing oneOf without discriminator
servers:
  - url: http://localhost:3000
paths:
  /test:
    get:
      operationId: test
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestResponse'
  /test-array:
    get:
      operationId: testArray
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestArrayResponse'
  /test-discriminator:
    get:
      operationId: testDiscriminator
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestDiscriminatorResponse'
components:
  schemas:
    TestArrayResponse:
      oneOf:
        - type: array
          items:
            $ref: "#/components/schemas/TestA"
        - type: array
          items:
            $ref: "#/components/schemas/TestB"
        - type: array
          items:
            type: string
    TestDiscriminatorResponse:
      discriminator:
        propertyName: discriminatorField
        mapping:
          optionOne: "#/components/schemas/OptionOne"
          optionTwo: "#/components/schemas/OptionTwo"
      oneOf:
        - $ref: "#/components/schemas/OptionOne"
        - $ref: "#/components/schemas/OptionTwo"
    TestResponse:
      oneOf:
        - $ref: "#/components/schemas/TestA"
        - $ref: "#/components/schemas/TestB"
        - type: string
    TestA:
      type: object
      properties:
        foo:
          type: string
      required:
        - foo
    TestB:
      type: object
      properties:
        bar:
          type: string
      required:
        - bar
    OptionOne:
      type: object
      properties:
        discriminatorField:
          enum:
            - "optionOne"
          type: string
      required:
        - discriminatorField
    OptionTwo:
      type: object
      properties:
        discriminatorField:
          enum:
            - "optionTwo"
          type: string
      required:
        - discriminatorField