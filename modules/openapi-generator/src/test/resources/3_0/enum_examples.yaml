openapi: 3.0.0
info:
  description: This spec is for testing all kinds of enum functionality and is generally applicable to any generator
  version: 1.0.0
  title: OpenAPI Enums Exemplar
  license:
    name: Apache-2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
paths:
  /enum-get:
    get:
      summary: To test enum parameters
      description: To test enum parameters
      operationId: enum_get
      #  curl 'http://localhost:8080/enum-get?enum_query_string_array=>&enum_query_string_array=$&enum_query_string=_abc&enum_query_integer=1&enum_query_double=1.1'  -H 'Content-Type: application/x-www-form-urlencoded' -H 'enum-header_string: _abc'  -H 'enum-header-string-array: >' -H 'enum_header_string_array: $' -X GET -v -d 'enum_form_string=_abc' -d 'enum_form_string_array=>'
      parameters:
        - name: enum-header_string-array
          in: header
          description: Header parameter  - HTTP convention for headers is hyphen NOT underscore but both are legal so we'll use both here deliberately to highlight what the processing does
          schema:
            type: array
            items:
              type: string
              default: $
              enum:
                - '>'
                - $
        - name: enum-header_string
          in: header
          description: Header parameter - HTTP convention for headers is hyphen NOT underscore but both are legal so we'll use both here deliberately to highlight what the processing does
          schema:
            type: string
            enum:
              - _abc
              - '-efg'
              - (xyz)
            default: '-efg'
        - name: enum_query_string_array
          in: query
          description: Query parameter enum test (string array)
          schema:
            type: array
            items:
              type: string
              default: $
              enum:
                - '>'
                - $
        - name: enum_query_string
          in: query
          description: Query parameter enum test (string)
          schema:
            type: string
            enum:
              - _abc
              - '-efg'
              - (xyz)
            default: '-efg'
        - name: enum_query_integer
          in: query
          description: Query parameter enum test (double)
          schema:
            type: integer
            format: int32
            enum:
              - 1
              - -2
        - name: enum_query_double
          in: query
          description: Query parameter enum test (double)
          schema:
            type: number
            format: double
            enum:
              - 1.1
              - -1.2
            example: 1.1
      responses:
        '400':
          description: Invalid request
        '404':
          description: Not found
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                enum_form_string_array:
                  description: Form parameter enum test (string array)
                  type: array
                  items:
                    type: string
                    default: $
                    enum:
                      - '>'
                      - $
                enum_form_string:
                  # Doesn't seem that connexions passes form parameters to the handler function as args when method is a GET
                  description: Form parameter enum test (string)
                  type: string
                  enum:
                    - _abc
                    - '-efg'
                    - (xyz)
                  default: '-efg'
  /enum-post-json:
    post:
      description: Test serialization of enum properties with examples
      operationId: enum_post_json
      # curl http://localhost:8080/enum-post-json?enum_int=1  -H 'Content-Type: application/json'   -X POST -d '{ "enum_string_required": "lower",  "outerEnumIntegerDefaultValue": 1, "outerEnumNumber": 2.2, "outerEnumStrange": "with Spaces", "decimal": "123e4" }'
      responses:
        '200':
          description: Output enum cornucopia
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EnumCornucopia'
      parameters:
      - description: Query outer enum parameter 
        in: query
        name: enum_query_int
        required: true
        # TODO Code gen doesn't pick this example up nor the one in the referred type unfortunately - and the generated controller test is not valid code
        # https://github.com/OpenAPITools/openapi-generator/issues/4300
        example: 2
        schema:
          $ref: '#/components/schemas/OuterEnumInteger'
      x-acodegen-request-body-name: overidden_body_param_name
      requestBody: 
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/EnumCornucopia'
  /enum-post-form:
    post:
      description: Test serialization of enum properties with examples
      operationId: enum_post_form
      # curl 'http://localhost:8080/enum-post-form?enum_int=2'  -H 'Content-Type: application/x-www-form-urlencoded'   -X POST -d enum_form_string=_abc -d enum_form_string_array=\$
      responses:
        '200':
          description: Output enum corncopia
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EnumCornucopia'
      parameters:
      - description: Query outer enum parameter 
        in: query
        name: enum_query_int
        required: true
        schema:
          $ref: '#/components/schemas/OuterEnumInteger'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                enum_form_string_array:
                  description: Form parameter enum test (string array)
                  type: array
                  items:
                    type: string
                    default: $
                    enum:
                      - '>'
                      - $
                enum_form_string:
                  # Doesn't seem that connexions passes form parameters to the handler function as args when method is a GET
                  description: Form parameter enum test (string)
                  type: string
                  enum:
                    - _abc
                    - '-efg'
                    - (xyz)
                  default: '-efg'
components:
  schemas:
    EnumCornucopia:
      type: object
      required:
        - enum_string_required
      properties:
        enum_string:
          type: string
          enum:
            - UPPER
            - lower
            - ''
        enum_string_required:
          type: string
          enum:
            - UPPER
            - lower
            - ''
        enum_integer:
          type: integer
          format: int32
          enum:
            - 1
            - -1
          example: 1
        enum_number:
          type: number
          format: double
          enum:
            - 1.1
            - -1.2
          example: -1.2
        outerEnumString:
          $ref: '#/components/schemas/OuterEnumString'
        outerEnumInteger:
          $ref: '#/components/schemas/OuterEnumInteger'
        outerEnumStringDefaultValue:
          $ref: '#/components/schemas/OuterEnumStringDefaultValue'
        outerEnumIntegerDefaultValue:
          $ref: '#/components/schemas/OuterEnumIntegerDefaultValue'
        outerEnumNumber:
          $ref: '#/components/schemas/OuterEnumNumber'
        outerEnumStrange:
          $ref: '#/components/schemas/OuterEnumStrange'
    EnumMap:
      type: object
      properties:
        map_of_enum_string:
          type: object
          additionalProperties:
            type: string
            enum:
              - UPPER
              - lower
    EnumArrays:
      type: object
      properties:
        just_symbol:
          type: string
          enum:
            - '>='
            - $
        array_enum:
          type: array
          items:
            type: string
            enum:
              - fish
              - crab
    OuterEnumStrange:
      type: string
      default: '-efg'
      enum:
        - _abc
        - '-efg'
        - (xyz)
        - with Spaces
    OuterEnumString:
      nullable: true
      type: string
      enum:
        - placed
        - approved
        - delivered
    OuterEnumInteger:
      type: integer
      enum:
      - 0
      - 1
      - 2
      example: 2
    OuterEnumNumber:
      type: number
      enum:
      - 0
      - 1.1
      - 2.2
    OuterEnumStringDefaultValue:
      type: string
      enum:
      - placed
      - approved
      - delivered
      default: placed
    OuterEnumIntegerDefaultValue:
      type: integer
      enum:
      - 0
      - 1
      - 2
      default: 0
      
