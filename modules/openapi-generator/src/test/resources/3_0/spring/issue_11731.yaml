openapi: 3.0.2
info:
  title: Petstore - OpenAPI 3.0
  description: Specification to reproduce issues with mediatypes other than common application/json
  termsOfService: http://inss.ch
  contact:
    email: openapi@inss.ch
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: http://localhost:8080/api/v3
paths:
  /pet/{petId}:
    get:
      tags:
        - pet
        - troublemaker
      summary: Find pet by ID
      description: Returns a single pet with example of a german Umlaut.
      operationId: getPetById
      parameters:
        - name: petId
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: integer
            format: int64
            example: 99
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
      security:
        - api_key: []
        - petstore_auth:
            - write:pets
            - read:pets
  /customers:
    get:
      tags:
        - customer-controller
      summary: getAll
      operationId: getAllUsingGET_1
      responses:
        200:
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ResourcesCustomerResource'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
    put:
      tags:
        - customer-controller
      summary: update
      operationId: updateUsingPUT
      requestBody:
        description: updCustomerResource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        200:
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ResourceCustomerResource'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: updCustomerResource
    post:
      tags:
        - customer-controller
      summary: insert
      operationId: insertUsingPOST
      requestBody:
        description: newCustomerResource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        200:
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ResourceCustomerResource'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: newCustomerResource
  /customers/{id}:
    get:
      tags:
        - customer-controller
      summary: get
      operationId: getUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ResourceCustomerResource'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
    delete:
      tags:
        - customer-controller
      summary: delete
      operationId: deleteUsingDELETE
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Resourceobject'
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}

  /version:
    get:
      tags:
        - troublemaker
      summary: Responds with a single plain text version.
      description: Returns plain text.
      operationId: getVersion

      responses:
        '200':
          description: successful operation
          content:
            text/plain:
              schema:
                type: string
                example: Version 1.0.0

components:
  schemas:
    Pet:
      required:
        - name
        - photoUrls
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
          description: 'Id'
        name:
          type: string
          example: SChäferhund
          description: 'Name'
        category:
          $ref: '#/components/schemas/Category'
        photoUrls:
          type: array
          items:
            type: string
          example: [http://example.com/photo.png, http://example.com/photo2,png]
          description: 'Photo urls.'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        status:
          type: string
          description: pet status in the store
          enum:
            - available
            - pending
            - sold
          example: available
    Customer:
      title: Customer
      type: object
      properties:
        company:
          type: string
        errorMsg:
          type: string
        id:
          type: integer
          format: int64
        name:
          type: string
    CustomerResource:
      title: CustomerResource
      type: object
      properties:
        _links:
          type: array
          xml:
            name: link
            attribute: false
            wrapped: false
          items:
            $ref: '#/components/schemas/Link'
        customer:
          $ref: '#/components/schemas/Customer'
    Link:
      title: Link
      type: object
      properties:
        deprecation:
          type: string
          xml:
            name: deprecation
            attribute: true
            wrapped: false
        href:
          type: string
          xml:
            name: href
            attribute: true
            wrapped: false
        hreflang:
          type: string
          xml:
            name: hreflang
            attribute: true
            wrapped: false
        media:
          type: string
          xml:
            name: media
            attribute: true
            wrapped: false
        rel:
          type: string
          xml:
            name: rel
            attribute: true
            wrapped: false
        templated:
          type: boolean
        title:
          type: string
          xml:
            name: title
            attribute: true
            wrapped: false
        type:
          type: string
          xml:
            name: type
            attribute: true
            wrapped: false
    ResourcesCustomerResource:
      title: Resources«CustomerResource»
      type: object
      properties:
        _embedded:
          type: array
          xml:
            name: embedded
            attribute: false
            wrapped: true
          items:
            $ref: '#/components/schemas/CustomerResource'
        _links:
          type: array
          xml:
            name: link
            attribute: false
            wrapped: false
          items:
            $ref: '#/components/schemas/Link'
    ResourceCustomerResource:
      title: Resource«CustomerResource»
      type: object
      properties:
        _links:
          type: array
          xml:
            name: link
            attribute: false
            wrapped: false
          items:
            $ref: '#/components/schemas/Link'
        customer:
          $ref: '#/components/schemas/Customer'
    Resourceobject:
      title: Resource«object»
      type: object
      properties:
        _links:
          type: array
          xml:
            name: link
            attribute: false
            wrapped: false
          items:
            $ref: '#/components/schemas/Link'
   
   