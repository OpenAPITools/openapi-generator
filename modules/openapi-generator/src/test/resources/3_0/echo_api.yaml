openapi: 3.0.3
info:
  title: Echo Server API
  description: Echo Server API
  contact:
    email: team@openapitools.org
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.1.0
servers:
  - url: http://localhost:3000/
paths:
  /query/style_form/explode_true/array_string:
    get:
      tags:
        - query
      summary: Test query parameter(s)
      description: Test query parameter(s)
      operationId: test/query/style_form/explode_true/array_string
      parameters:
      - in: query
        name: query_object
        style: form #default
        explode: true #default
        schema:
          type: object
          properties:
            values:
                type: array
                items:
                    type: string
      responses:
        '200':
          description: Successful operation
          content:
            text/plain:
              schema:
                type: string
  /query/style_form/explode_true/object:
    get:
      tags:
        - query
      summary: Test query parameter(s)
      description: Test query parameter(s)
      operationId: test/query/style_form/explode_true/object
      parameters:
      - in: query
        name: query_object
        style: form #default
        explode: true #default
        schema:
          $ref: '#/components/schemas/Pet'
      responses:
        '200':
          description: Successful operation
          content:
            text/plain:
              schema:
                type: string

components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Dogs
      xml:
        name: category
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: tag
    Pet:
      required:
        - name
        - photoUrls
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: doggie
        category:
          $ref: '#/components/schemas/Category'
        photoUrls:
          type: array
          xml:
            wrapped: true
          items:
            type: string
            xml:
              name: photoUrl
        tags:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Tag'
        status:
          type: string
          description: pet status in the store
          enum:
            - available
            - pending
            - sold
      xml:
        name: pet
