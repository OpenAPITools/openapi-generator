openapi: 3.0.3
info:
  title: Example
  version: 1.0.0

paths:
  /party/full/{partyId}:
    parameters:
      - $ref: '#/components/parameters/partyId'
    get:
      summary: Get party by ID
      operationId: getPartyById
      responses:
        '200':
          description: Full party retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullParty'
    put:
      summary: Store party by ID
      operationId: storePartyById
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FullParty'
      responses:
        '200':
          description: Full party updated
        '201':
          description: Full party created

components:
  parameters:
    partyId:
      name: partyId
      in: path
      required: true
      schema:
        type: string

  schemas:
    FullParty:
      type: object
      properties:
        partyId:
          type: string
        partyContacts:
          type: array
          items:
            $ref: '#/components/schemas/Contact'

    Contact:
      oneOf:
        - $ref: '#/components/schemas/Email'
        - $ref: '#/components/schemas/Phone'
        - $ref: '#/components/schemas/PostalAddress'
      discriminator:
        propertyName: contactTypeDiscriminator
        mapping:
          Email: '#/components/schemas/Email'
          Phone: '#/components/schemas/Phone'
          PostalAddress: '#/components/schemas/PostalAddress'

    Email:
      type: object
      required:
        - contactTypeDiscriminator
        - emailAddress
      properties:
        contactTypeDiscriminator:
          type: string
          enum:
            - Email
        emailAddress:
          type: string

    Phone:
      type: object
      required:
        - contactTypeDiscriminator
        - phoneNumber
      properties:
        contactTypeDiscriminator:
          type: string
          enum:
            - Phone
        phoneNumber:
          type: string

    PostalAddress:
      type: object
      required:
        - contactTypeDiscriminator
        - street
      properties:
        contactTypeDiscriminator:
          type: string
          enum:
            - PostalAddress
        street:
          type: string
