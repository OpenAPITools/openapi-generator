{
  "openapi": "3.0.3",
  "info": {
    "version": "30.8.0",
    "x-logo": {
      "url": "https://brand.segment.com/site-assets/images/brand-guidelines/content/twilio/twilio-segment-logo.png",
      "backgroundColor": "#fafbff",
      "altText": "Twilio Segment logo"
    },
    "contact": { "email": "beta@segment.com", "name": "Segment", "url": "https://www.segment.com" },
    "title": "Segment Public API",
    "description": "Public API for Segment customers"
  },
  "servers": [
    { "description": "Production", "url": "https://api.segmentapis.com" },
    { "description": "Staging", "url": "https://api.segmentapis.build" }
  ],
  "components": {
    "securitySchemes": { "token": { "type": "http", "scheme": "bearer" } },
    "schemas": {
      "AllowedLabelAlpha": {
        "description": "Defines a label that you may apply to resources within a workspace.",
        "title": "AllowedLabelAlpha",
        "type": "object",
        "properties": {
          "key": { "description": "The key identifier for this label.", "type": "string", "title": "key" },
          "value": { "description": "The value of this label.", "type": "string", "title": "value" },
          "description": {
            "description": "A description of what this label represents.",
            "type": "string",
            "title": "description"
          }
        },
        "required": ["key", "value"]
      },
      "AllowedLabelBeta": {
        "description": "Defines a label that you may apply to resources within a workspace.",
        "title": "AllowedLabelBeta",
        "type": "object",
        "properties": {
          "key": { "description": "The key identifier for this label.", "type": "string", "title": "key" },
          "value": { "description": "The value of this label.", "type": "string", "title": "value" },
          "description": {
            "description": "A description of what this label represents.",
            "type": "string",
            "title": "description"
          }
        },
        "required": ["key", "value"]
      },
      "GetDestinationsCatalogAlphaInput": {
        "description": "Contains filter parameters used for loading the destinations public catalog.",
        "title": "GetDestinationsCatalogAlphaInput",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Required pagination parameters used to filter the destinations catalog.",
            "title": "pagination"
          }
        },
        "required": ["pagination"]
      },
      "GetDestinationsCatalogAlphaOutput": {
        "description": "Returns a list of all destination catalog items contained within a given page.",
        "title": "GetDestinationsCatalogAlphaOutput",
        "type": "object",
        "properties": {
          "destinationsCatalog": {
            "description": "All destination catalog items contained within the requested page.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/DestinationMetadataAlpha" },
            "title": "destinationsCatalog"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["destinationsCatalog", "pagination"]
      },
      "GetDestinationMetadataAlphaInput": {
        "description": "Loads a destination catalog item by id.",
        "title": "GetDestinationMetadataAlphaInput",
        "type": "object",
        "properties": {
          "destinationMetadataId": {
            "description": "The id of the destination catalog item to load.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "destinationMetadataId"
          }
        },
        "required": ["destinationMetadataId"]
      },
      "GetDestinationMetadataAlphaOutput": {
        "description": "Returns a destination catalog item.",
        "title": "GetDestinationMetadataAlphaOutput",
        "type": "object",
        "properties": {
          "destinationMetadata": {
            "$ref": "#/components/schemas/DestinationMetadataAlpha",
            "description": "The catalog item matched by id.",
            "title": "destinationMetadata"
          }
        },
        "required": ["destinationMetadata"]
      },
      "GetDestinationsCatalogBetaInput": {
        "description": "Contains filter parameters used for loading the destinations public catalog.",
        "title": "GetDestinationsCatalogBetaInput",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Required pagination parameters used to filter the destinations catalog.",
            "title": "pagination"
          }
        },
        "required": ["pagination"]
      },
      "GetDestinationsCatalogBetaOutput": {
        "description": "Returns a list of all destination catalog items contained within a given page.",
        "title": "GetDestinationsCatalogBetaOutput",
        "type": "object",
        "properties": {
          "destinationsCatalog": {
            "description": "All destination catalog items contained within the requested page.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/DestinationMetadataBeta" },
            "title": "destinationsCatalog"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["destinationsCatalog", "pagination"]
      },
      "GetDestinationMetadataBetaInput": {
        "description": "Loads a destination catalog item by id.",
        "title": "GetDestinationMetadataBetaInput",
        "type": "object",
        "properties": {
          "destinationMetadataId": {
            "description": "The id of the destination catalog item to load.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "destinationMetadataId"
          }
        },
        "required": ["destinationMetadataId"]
      },
      "GetDestinationMetadataBetaOutput": {
        "description": "Returns a destination catalog item.",
        "title": "GetDestinationMetadataBetaOutput",
        "type": "object",
        "properties": {
          "destinationMetadata": {
            "$ref": "#/components/schemas/DestinationMetadataBeta",
            "description": "The catalog item matched by id.",
            "title": "destinationMetadata"
          }
        },
        "required": ["destinationMetadata"]
      },
      "GetDestinationsCatalogV1Input": {
        "description": "Contains filter parameters used for loading the destinations public catalog.",
        "title": "GetDestinationsCatalogV1Input",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Required pagination parameters used to filter the destinations catalog.",
            "title": "pagination"
          }
        },
        "required": ["pagination"]
      },
      "GetDestinationsCatalogV1Output": {
        "description": "Returns a list of all destination catalog items contained within a given page.",
        "title": "GetDestinationsCatalogV1Output",
        "type": "object",
        "properties": {
          "destinationsCatalog": {
            "description": "All destination catalog items contained within the requested page.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/DestinationMetadataV1" },
            "title": "destinationsCatalog"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["destinationsCatalog", "pagination"]
      },
      "GetDestinationMetadataV1Input": {
        "description": "Loads a destination catalog item by id.",
        "title": "GetDestinationMetadataV1Input",
        "type": "object",
        "properties": {
          "destinationMetadataId": {
            "description": "The id of the destination catalog item to load.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "destinationMetadataId"
          }
        },
        "required": ["destinationMetadataId"]
      },
      "GetDestinationMetadataV1Output": {
        "description": "Returns a destination catalog item.",
        "title": "GetDestinationMetadataV1Output",
        "type": "object",
        "properties": {
          "destinationMetadata": {
            "$ref": "#/components/schemas/DestinationMetadataV1",
            "description": "The catalog item matched by id.",
            "title": "destinationMetadata"
          }
        },
        "required": ["destinationMetadata"]
      },
      "ListFiltersFromDestinationAlphaInput": {
        "description": "Input for ListDestinationFiltersAlpha.",
        "title": "ListFiltersFromDestinationAlphaInput",
        "type": "object",
        "properties": {
          "destinationId": {
            "description": "The id of the destination instance to which the filter belongs.",
            "type": "string",
            "title": "destinationId"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination options.",
            "title": "pagination"
          }
        },
        "required": ["destinationId", "pagination"]
      },
      "GetFilterInDestinationAlphaInput": {
        "description": "Input for GetDestinationFilterAlpha.",
        "title": "GetFilterInDestinationAlphaInput",
        "type": "object",
        "properties": {
          "destinationId": {
            "description": "The id of the destination instance to which the filter belongs.",
            "type": "string",
            "title": "destinationId"
          },
          "filterId": { "description": "The id of the filter to retrieve.", "type": "string", "title": "filterId" }
        },
        "required": ["destinationId", "filterId"]
      },
      "RemoveFilterFromDestinationAlphaInput": {
        "description": "Input for DeleteDestinationFilterAlpha.",
        "title": "RemoveFilterFromDestinationAlphaInput",
        "type": "object",
        "properties": {
          "destinationId": {
            "description": "The id of the destination instance to which the filter belongs.",
            "type": "string",
            "title": "destinationId"
          },
          "filterId": { "description": "The id of the filter to remove.", "type": "string", "title": "filterId" }
        },
        "required": ["destinationId", "filterId"]
      },
      "DestinationFilterActionAlpha": {
        "description": "Represents a destination filter action.",
        "title": "DestinationFilterActionAlpha",
        "type": "object",
        "properties": {
          "type": {
            "description": "The kind of transformation to apply to any matched properties.",
            "enum": ["ALLOW_PROPERTIES", "DROP", "DROP_PROPERTIES", "SAMPLE"],
            "type": "string",
            "title": "type"
          },
          "fields": {
            "description": "A dictionary of paths to object keys that this filter applies to.\n  The literal string '' represents the top level of the object.",
            "type": "object",
            "additionalProperties": true,
            "title": "fields"
          },
          "percent": {
            "description": "A decimal between 0 and 1 used for 'sample' type events and\ninfluences the likelihood of sampling to occur.",
            "type": "number",
            "title": "percent"
          },
          "path": {
            "description": "The JSON path to a property within a payload object from which Segment generates a deterministic\nsampling rate.",
            "type": "string",
            "title": "path"
          }
        },
        "required": ["type"]
      },
      "CreateFilterForDestinationAlphaInput": {
        "description": "Input for CreateDestinationFilterAlpha.",
        "title": "CreateFilterForDestinationAlphaInput",
        "type": "object",
        "properties": {
          "destinationId": {
            "description": "The id of the destination instance to which the filter belongs.",
            "type": "string",
            "title": "destinationId"
          },
          "sourceId": {
            "description": "The id of the source associated with this filter.",
            "type": "string",
            "title": "sourceId"
          },
          "if": { "description": "The filter's condition.", "type": "string", "title": "if" },
          "actions": {
            "description": "Actions for the destination filter.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/DestinationFilterActionAlpha" },
            "title": "actions"
          },
          "title": { "description": "The title of the filter.", "type": "string", "title": "title" },
          "description": { "description": "The description of the filter.", "type": "string", "title": "description" },
          "enabled": {
            "description": "When set to true, the destination filter is active.",
            "type": "boolean",
            "title": "enabled"
          }
        },
        "required": ["actions", "destinationId", "enabled", "if", "sourceId", "title"]
      },
      "PreviewDestinationFilterAlpha": {
        "description": "A simplified destination filter that includes the if and actions for a DestinationFilter.",
        "title": "PreviewDestinationFilterAlpha",
        "type": "object",
        "properties": {
          "if": {
            "description": "A FQL statement which determines if the provided filter's actions will apply to the provided JSON payload.\nThe literal string \"all\" will result in this filter to all events.\nFor guidance on using FQL, see the Segment documentation site.",
            "type": "string",
            "title": "if"
          },
          "actions": {
            "description": "The filtering action to take on events that match the \"if\" statement.\nAction types must be one of: \"drop\", \"allow_properties\", \"drop_properties\" or \"sample\".",
            "type": "array",
            "items": { "$ref": "#/components/schemas/DestinationFilterActionAlpha" },
            "title": "actions"
          }
        },
        "required": ["actions", "if"]
      },
      "PreviewDestinationFilterAlphaInput": {
        "description": "Input of the destination filter to preview.\nFor guidance on using FQL, see the Segment documentation site.",
        "title": "PreviewDestinationFilterAlphaInput",
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/PreviewDestinationFilterAlpha",
            "description": "The filter to preview.",
            "title": "filter"
          },
          "payload": {
            "description": "The JSON payload to apply the filter to.",
            "type": "object",
            "additionalProperties": true,
            "title": "payload"
          }
        },
        "required": ["filter", "payload"]
      },
      "PreviewDestinationFilterAlphaOutput": {
        "description": "Preview output from applying the destination filter.\nSegment modifies or nullifies payloads depending on the provided filter actions.",
        "title": "PreviewDestinationFilterAlphaOutput",
        "type": "object",
        "properties": {
          "inputPayload": {
            "description": "The pre-filter JSON input.",
            "type": "object",
            "additionalProperties": true,
            "title": "inputPayload"
          },
          "result": {
            "type": "object",
            "additionalProperties": {},
            "description": "The filtered JSON output.",
            "title": "result",
            "nullable": true
          }
        },
        "required": ["inputPayload", "result"]
      },
      "DestinationFilterAlpha": {
        "description": "Represents a destination filter.",
        "title": "DestinationFilterAlpha",
        "type": "object",
        "properties": {
          "id": { "description": "The unique id of this filter.", "type": "string", "title": "id" },
          "sourceId": {
            "description": "The id of the source associated with this filter.",
            "type": "string",
            "title": "sourceId"
          },
          "destinationId": {
            "description": "The id of the destination associated with this filter.",
            "type": "string",
            "title": "destinationId"
          },
          "if": {
            "description": "A condition that defines whether to apply this filter to a payload.",
            "type": "string",
            "title": "if"
          },
          "actions": {
            "description": "A list of actions this filter performs.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/DestinationFilterActionAlpha" },
            "title": "actions"
          },
          "title": { "description": "A title for this filter.", "type": "string", "title": "title" },
          "description": { "description": "A description for this filter.", "type": "string", "title": "description" },
          "enabled": {
            "description": "When set to true, this filter is active.",
            "type": "boolean",
            "title": "enabled"
          },
          "createdAt": {
            "description": "The timestamp of this filter's creation.",
            "type": "string",
            "title": "createdAt"
          },
          "updatedAt": {
            "description": "The timestamp of this filter's last change.",
            "type": "string",
            "title": "updatedAt"
          }
        },
        "required": ["actions", "createdAt", "destinationId", "enabled", "id", "if", "sourceId", "title", "updatedAt"]
      },
      "ListFiltersFromDestinationAlphaOutput": {
        "description": "Output for ListDestinationFiltersAlpha.",
        "title": "ListFiltersFromDestinationAlphaOutput",
        "type": "object",
        "properties": {
          "filters": {
            "description": "A list of the filters that belong to the specified destination instance.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/DestinationFilterAlpha" },
            "title": "filters"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination options.",
            "title": "pagination"
          }
        },
        "required": ["filters", "pagination"]
      },
      "GetFilterInDestinationAlphaOutput": {
        "description": "Output for GetDestinationFiltersAlpha.",
        "title": "GetFilterInDestinationAlphaOutput",
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DestinationFilterAlpha",
            "description": "The requested destination filter.",
            "title": "filter"
          }
        },
        "required": ["filter"]
      },
      "CreateFilterForDestinationAlphaOutput": {
        "description": "Output for CreateDestinationFiltersAlpha.",
        "title": "CreateFilterForDestinationAlphaOutput",
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DestinationFilterAlpha",
            "description": "The newly created destination filter.",
            "title": "filter"
          }
        },
        "required": ["filter"]
      },
      "RemoveFilterFromDestinationAlphaOutput": {
        "description": "Output for DeleteDestinationFilterAlpha.",
        "title": "RemoveFilterFromDestinationAlphaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of delete operation.",
            "type": "string",
            "enum": ["SUCCESS"],
            "title": "status"
          }
        },
        "required": ["status"]
      },
      "UpdateFilterForDestinationAlphaInput": {
        "description": "Input for UpdateDestinationFilterAlpha.",
        "title": "UpdateFilterForDestinationAlphaInput",
        "type": "object",
        "properties": {
          "destinationId": {
            "description": "The id of the destination instance to which the filter belongs.",
            "type": "string",
            "title": "destinationId"
          },
          "filterId": {
            "description": "The id of the destination filter to retrieve.",
            "type": "string",
            "title": "filterId"
          },
          "if": { "description": "The FQL if condition to update.", "type": "string", "title": "if" },
          "actions": {
            "description": "Actions for this destination filter.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/DestinationFilterActionAlpha" },
            "title": "actions"
          },
          "title": { "description": "The title to update.", "type": "string", "title": "title" },
          "description": { "description": "The description of this filter.", "type": "string", "title": "description" },
          "enabled": {
            "description": "When set to true, this destination filter is active.",
            "type": "boolean",
            "title": "enabled"
          }
        },
        "required": ["destinationId", "filterId"]
      },
      "UpdateFilterForDestinationAlphaOutput": {
        "description": "Output for UpdateDestinationFilterAlpha.",
        "title": "UpdateFilterForDestinationAlphaOutput",
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DestinationFilterAlpha",
            "description": "The updated destination filter.",
            "title": "filter"
          }
        },
        "required": ["filter"]
      },
      "ListFiltersFromDestinationBetaInput": {
        "description": "Input for ListDestinationFiltersBeta.",
        "title": "ListFiltersFromDestinationBetaInput",
        "type": "object",
        "properties": {
          "destinationId": {
            "description": "The id of the destination instance to which the filter belongs.",
            "type": "string",
            "title": "destinationId"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination options.",
            "title": "pagination"
          }
        },
        "required": ["destinationId", "pagination"]
      },
      "GetFilterInDestinationBetaInput": {
        "description": "Input for GetDestinationFilterBeta.",
        "title": "GetFilterInDestinationBetaInput",
        "type": "object",
        "properties": {
          "destinationId": {
            "description": "The id of the destination instance to which the filter belongs.",
            "type": "string",
            "title": "destinationId"
          },
          "filterId": { "description": "The id of the filter to retrieve.", "type": "string", "title": "filterId" }
        },
        "required": ["destinationId", "filterId"]
      },
      "RemoveFilterFromDestinationBetaInput": {
        "description": "Input for DeleteDestinationFilterBeta.",
        "title": "RemoveFilterFromDestinationBetaInput",
        "type": "object",
        "properties": {
          "destinationId": {
            "description": "The id of the destination instance to which the filter belongs.",
            "type": "string",
            "title": "destinationId"
          },
          "filterId": { "description": "The id of the filter to remove.", "type": "string", "title": "filterId" }
        },
        "required": ["destinationId", "filterId"]
      },
      "DestinationFilterActionBeta": {
        "description": "Represents a destination filter action.",
        "title": "DestinationFilterActionBeta",
        "type": "object",
        "properties": {
          "type": {
            "description": "The kind of transformation to apply to any matched properties.",
            "enum": ["ALLOW_PROPERTIES", "DROP", "DROP_PROPERTIES", "SAMPLE"],
            "type": "string",
            "title": "type"
          },
          "fields": {
            "description": "A dictionary of paths to object keys that this filter applies to.\n  The literal string '' represents the top level of the object.",
            "type": "object",
            "additionalProperties": true,
            "title": "fields"
          },
          "percent": {
            "description": "A decimal between 0 and 1 used for 'sample' type events and\ninfluences the likelihood of sampling to occur.",
            "type": "number",
            "title": "percent"
          },
          "path": {
            "description": "The JSON path to a property within a payload object from which Segment generates a deterministic\nsampling rate.",
            "type": "string",
            "title": "path"
          }
        },
        "required": ["type"]
      },
      "CreateFilterForDestinationBetaInput": {
        "description": "Input for CreateDestinationFilterBeta.",
        "title": "CreateFilterForDestinationBetaInput",
        "type": "object",
        "properties": {
          "destinationId": {
            "description": "The id of the destination instance to which the filter belongs.",
            "type": "string",
            "title": "destinationId"
          },
          "sourceId": {
            "description": "The id of the source associated with this filter.",
            "type": "string",
            "title": "sourceId"
          },
          "if": { "description": "The filter's condition.", "type": "string", "title": "if" },
          "actions": {
            "description": "Actions for the destination filter.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/DestinationFilterActionBeta" },
            "title": "actions"
          },
          "title": { "description": "The title of the filter.", "type": "string", "title": "title" },
          "description": { "description": "The description of the filter.", "type": "string", "title": "description" },
          "enabled": {
            "description": "When set to true, the destination filter is active.",
            "type": "boolean",
            "title": "enabled"
          }
        },
        "required": ["actions", "destinationId", "enabled", "if", "sourceId", "title"]
      },
      "PreviewDestinationFilterBeta": {
        "description": "A simplified destination filter that includes the if and actions for a DestinationFilterBeta.",
        "title": "PreviewDestinationFilterBeta",
        "type": "object",
        "properties": {
          "if": {
            "description": "A FQL statement which determines if the provided filter's actions will apply to the provided JSON payload.\nThe literal string \"all\" will result in this filter to all events.\nFor guidance on using FQL, see the Segment documentation site.",
            "type": "string",
            "title": "if"
          },
          "actions": {
            "description": "The filtering action to take on events that match the \"if\" statement.\nAction types must be one of: \"drop\", \"allow_properties\", \"drop_properties\" or \"sample\".",
            "type": "array",
            "items": { "$ref": "#/components/schemas/DestinationFilterActionBeta" },
            "title": "actions"
          }
        },
        "required": ["actions", "if"]
      },
      "PreviewDestinationFilterBetaInput": {
        "description": "Input of the destination filter to preview.\nFor guidance on using FQL, see the Segment documentation site.",
        "title": "PreviewDestinationFilterBetaInput",
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/PreviewDestinationFilterBeta",
            "description": "The filter to preview.",
            "title": "filter"
          },
          "payload": {
            "description": "The JSON payload to apply the filter to.",
            "type": "object",
            "additionalProperties": true,
            "title": "payload"
          }
        },
        "required": ["filter", "payload"]
      },
      "PreviewDestinationFilterBetaOutput": {
        "description": "Preview output from applying the destination filter.\nSegment modifies or nullifies payloads depending on the provided filter actions.",
        "title": "PreviewDestinationFilterBetaOutput",
        "type": "object",
        "properties": {
          "inputPayload": {
            "description": "The pre-filter JSON input.",
            "type": "object",
            "additionalProperties": true,
            "title": "inputPayload"
          },
          "result": {
            "type": "object",
            "additionalProperties": {},
            "description": "The filtered JSON output.",
            "title": "result",
            "nullable": true
          }
        },
        "required": ["inputPayload", "result"]
      },
      "DestinationFilterBeta": {
        "description": "Represents a destination filter.",
        "title": "DestinationFilterBeta",
        "type": "object",
        "properties": {
          "id": { "description": "The unique id of this filter.", "type": "string", "title": "id" },
          "sourceId": {
            "description": "The id of the source associated with this filter.",
            "type": "string",
            "title": "sourceId"
          },
          "destinationId": {
            "description": "The id of the destination associated with this filter.",
            "type": "string",
            "title": "destinationId"
          },
          "if": {
            "description": "A condition that defines whether to apply this filter to a payload.",
            "type": "string",
            "title": "if"
          },
          "actions": {
            "description": "A list of actions this filter performs.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/DestinationFilterActionBeta" },
            "title": "actions"
          },
          "title": { "description": "A title for this filter.", "type": "string", "title": "title" },
          "description": { "description": "A description for this filter.", "type": "string", "title": "description" },
          "enabled": {
            "description": "When set to true, this filter is active.",
            "type": "boolean",
            "title": "enabled"
          },
          "createdAt": {
            "description": "The timestamp of this filter's creation.",
            "type": "string",
            "title": "createdAt"
          },
          "updatedAt": {
            "description": "The timestamp of this filter's last change.",
            "type": "string",
            "title": "updatedAt"
          }
        },
        "required": ["actions", "createdAt", "destinationId", "enabled", "id", "if", "sourceId", "title", "updatedAt"]
      },
      "ListFiltersFromDestinationBetaOutput": {
        "description": "Output for ListDestinationFiltersBeta.",
        "title": "ListFiltersFromDestinationBetaOutput",
        "type": "object",
        "properties": {
          "filters": {
            "description": "A list of the filters that belong to the specified destination instance.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/DestinationFilterBeta" },
            "title": "filters"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination options.",
            "title": "pagination"
          }
        },
        "required": ["filters", "pagination"]
      },
      "GetFilterInDestinationBetaOutput": {
        "description": "Output for GetDestinationFiltersBeta.",
        "title": "GetFilterInDestinationBetaOutput",
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DestinationFilterBeta",
            "description": "The requested destination filter.",
            "title": "filter"
          }
        },
        "required": ["filter"]
      },
      "CreateFilterForDestinationBetaOutput": {
        "description": "Output for CreateDestinationFiltersBeta.",
        "title": "CreateFilterForDestinationBetaOutput",
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DestinationFilterBeta",
            "description": "The newly created destination filter.",
            "title": "filter"
          }
        },
        "required": ["filter"]
      },
      "RemoveFilterFromDestinationBetaOutput": {
        "description": "Output for DeleteDestinationFilterBeta.",
        "title": "RemoveFilterFromDestinationBetaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of delete operation.",
            "type": "string",
            "enum": ["SUCCESS"],
            "title": "status"
          }
        },
        "required": ["status"]
      },
      "UpdateFilterForDestinationBetaInput": {
        "description": "Input for UpdateDestinationFilterBeta.",
        "title": "UpdateFilterForDestinationBetaInput",
        "type": "object",
        "properties": {
          "destinationId": {
            "description": "The id of the destination instance to which the filter belongs.",
            "type": "string",
            "title": "destinationId"
          },
          "filterId": {
            "description": "The id of the destination filter to retrieve.",
            "type": "string",
            "title": "filterId"
          },
          "if": { "description": "The FQL if condition to update.", "type": "string", "title": "if" },
          "actions": {
            "description": "Actions for this destination filter.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/DestinationFilterActionBeta" },
            "title": "actions"
          },
          "title": { "description": "The title to update.", "type": "string", "title": "title" },
          "description": { "description": "The description of this filter.", "type": "string", "title": "description" },
          "enabled": {
            "description": "When set to true, this destination filter is active.",
            "type": "boolean",
            "title": "enabled"
          }
        },
        "required": ["destinationId", "filterId"]
      },
      "UpdateFilterForDestinationBetaOutput": {
        "description": "Output for UpdateDestinationFilterBeta.",
        "title": "UpdateFilterForDestinationBetaOutput",
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DestinationFilterBeta",
            "description": "The updated destination filter.",
            "title": "filter"
          }
        },
        "required": ["filter"]
      },
      "ListFiltersFromDestinationV1Input": {
        "description": "Input for ListDestinationFiltersV1.",
        "title": "ListFiltersFromDestinationV1Input",
        "type": "object",
        "properties": {
          "destinationId": {
            "description": "The id of the destination instance to which the filter belongs.",
            "type": "string",
            "title": "destinationId"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination options.",
            "title": "pagination"
          }
        },
        "required": ["destinationId", "pagination"]
      },
      "GetFilterInDestinationV1Input": {
        "description": "Input for GetDestinationFilterV1.",
        "title": "GetFilterInDestinationV1Input",
        "type": "object",
        "properties": {
          "destinationId": {
            "description": "The id of the destination instance to which the filter belongs.",
            "type": "string",
            "title": "destinationId"
          },
          "filterId": { "description": "The id of the filter to retrieve.", "type": "string", "title": "filterId" }
        },
        "required": ["destinationId", "filterId"]
      },
      "RemoveFilterFromDestinationV1Input": {
        "description": "Input for DeleteDestinationFilterV1.",
        "title": "RemoveFilterFromDestinationV1Input",
        "type": "object",
        "properties": {
          "destinationId": {
            "description": "The id of the destination instance to which the filter belongs.",
            "type": "string",
            "title": "destinationId"
          },
          "filterId": { "description": "The id of the filter to remove.", "type": "string", "title": "filterId" }
        },
        "required": ["destinationId", "filterId"]
      },
      "DestinationFilterActionV1": {
        "description": "Represents a destination filter action.",
        "title": "DestinationFilterActionV1",
        "type": "object",
        "properties": {
          "type": {
            "description": "The kind of transformation to apply to any matched properties.",
            "enum": ["ALLOW_PROPERTIES", "DROP", "DROP_PROPERTIES", "SAMPLE"],
            "type": "string",
            "title": "type"
          },
          "fields": {
            "description": "A dictionary of paths to object keys that this filter applies to.\n  The literal string '' represents the top level of the object.",
            "type": "object",
            "additionalProperties": true,
            "title": "fields"
          },
          "percent": {
            "description": "A decimal between 0 and 1 used for 'sample' type events and\ninfluences the likelihood of sampling to occur.",
            "type": "number",
            "title": "percent"
          },
          "path": {
            "description": "The JSON path to a property within a payload object from which Segment generates a deterministic\nsampling rate.",
            "type": "string",
            "title": "path"
          }
        },
        "required": ["type"]
      },
      "CreateFilterForDestinationV1Input": {
        "description": "Input for CreateDestinationFilterV1.",
        "title": "CreateFilterForDestinationV1Input",
        "type": "object",
        "properties": {
          "destinationId": {
            "description": "The id of the destination instance to which the filter belongs.",
            "type": "string",
            "title": "destinationId"
          },
          "sourceId": {
            "description": "The id of the source associated with this filter.",
            "type": "string",
            "title": "sourceId"
          },
          "if": { "description": "The filter's condition.", "type": "string", "title": "if" },
          "actions": {
            "description": "Actions for the destination filter.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/DestinationFilterActionV1" },
            "title": "actions"
          },
          "title": { "description": "The title of the filter.", "type": "string", "title": "title" },
          "description": { "description": "The description of the filter.", "type": "string", "title": "description" },
          "enabled": {
            "description": "When set to true, the destination filter is active.",
            "type": "boolean",
            "title": "enabled"
          }
        },
        "required": ["actions", "destinationId", "enabled", "if", "sourceId", "title"]
      },
      "PreviewDestinationFilterV1": {
        "description": "A simplified destination filter that includes the if and actions for a DestinationFilterV1.",
        "title": "PreviewDestinationFilterV1",
        "type": "object",
        "properties": {
          "if": {
            "description": "A FQL statement which determines if the provided filter's actions will apply to the provided JSON payload.\nThe literal string \"all\" will result in this filter to all events.\nFor guidance on using FQL, see the Segment documentation site.",
            "type": "string",
            "title": "if"
          },
          "actions": {
            "description": "The filtering action to take on events that match the \"if\" statement.\nAction types must be one of: \"drop\", \"allow_properties\", \"drop_properties\" or \"sample\".",
            "type": "array",
            "items": { "$ref": "#/components/schemas/DestinationFilterActionV1" },
            "title": "actions"
          }
        },
        "required": ["actions", "if"]
      },
      "PreviewDestinationFilterV1Input": {
        "description": "Input of the destination filter to preview.\nFor guidance on using FQL, see the Segment documentation site.",
        "title": "PreviewDestinationFilterV1Input",
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/PreviewDestinationFilterV1",
            "description": "The filter to preview.",
            "title": "filter"
          },
          "payload": {
            "description": "The JSON payload to apply the filter to.",
            "type": "object",
            "additionalProperties": true,
            "title": "payload"
          }
        },
        "required": ["filter", "payload"]
      },
      "PreviewDestinationFilterV1Output": {
        "description": "Preview output from applying the destination filter.\nSegment modifies or nullifies payloads depending on the provided filter actions.",
        "title": "PreviewDestinationFilterV1Output",
        "type": "object",
        "properties": {
          "inputPayload": {
            "description": "The pre-filter JSON input.",
            "type": "object",
            "additionalProperties": true,
            "title": "inputPayload"
          },
          "result": {
            "type": "object",
            "additionalProperties": {},
            "description": "The filtered JSON output.",
            "title": "result",
            "nullable": true
          }
        },
        "required": ["inputPayload", "result"]
      },
      "DestinationFilterV1": {
        "description": "Represents a destination filter.",
        "title": "DestinationFilterV1",
        "type": "object",
        "properties": {
          "id": { "description": "The unique id of this filter.", "type": "string", "title": "id" },
          "sourceId": {
            "description": "The id of the source associated with this filter.",
            "type": "string",
            "title": "sourceId"
          },
          "destinationId": {
            "description": "The id of the destination associated with this filter.",
            "type": "string",
            "title": "destinationId"
          },
          "if": {
            "description": "A condition that defines whether to apply this filter to a payload.",
            "type": "string",
            "title": "if"
          },
          "actions": {
            "description": "A list of actions this filter performs.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/DestinationFilterActionV1" },
            "title": "actions"
          },
          "title": { "description": "A title for this filter.", "type": "string", "title": "title" },
          "description": { "description": "A description for this filter.", "type": "string", "title": "description" },
          "enabled": {
            "description": "When set to true, this filter is active.",
            "type": "boolean",
            "title": "enabled"
          },
          "createdAt": {
            "description": "The timestamp of this filter's creation.",
            "type": "string",
            "title": "createdAt"
          },
          "updatedAt": {
            "description": "The timestamp of this filter's last change.",
            "type": "string",
            "title": "updatedAt"
          }
        },
        "required": ["actions", "createdAt", "destinationId", "enabled", "id", "if", "sourceId", "title", "updatedAt"]
      },
      "ListFiltersFromDestinationV1Output": {
        "description": "Output for ListDestinationFiltersV1.",
        "title": "ListFiltersFromDestinationV1Output",
        "type": "object",
        "properties": {
          "filters": {
            "description": "A list of the filters that belong to the specified destination instance.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/DestinationFilterV1" },
            "title": "filters"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination options.",
            "title": "pagination"
          }
        },
        "required": ["filters", "pagination"]
      },
      "GetFilterInDestinationV1Output": {
        "description": "Output for GetDestinationFiltersV1.",
        "title": "GetFilterInDestinationV1Output",
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DestinationFilterV1",
            "description": "The requested destination filter.",
            "title": "filter"
          }
        },
        "required": ["filter"]
      },
      "CreateFilterForDestinationV1Output": {
        "description": "Output for CreateDestinationFiltersV1.",
        "title": "CreateFilterForDestinationV1Output",
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DestinationFilterV1",
            "description": "The newly created destination filter.",
            "title": "filter"
          }
        },
        "required": ["filter"]
      },
      "RemoveFilterFromDestinationV1Output": {
        "description": "Output for DeleteDestinationFilterV1.",
        "title": "RemoveFilterFromDestinationV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of delete operation.",
            "type": "string",
            "enum": ["SUCCESS"],
            "title": "status"
          }
        },
        "required": ["status"]
      },
      "UpdateFilterForDestinationV1Input": {
        "description": "Input for UpdateDestinationFilterV1.",
        "title": "UpdateFilterForDestinationV1Input",
        "type": "object",
        "properties": {
          "destinationId": {
            "description": "The id of the destination instance to which the filter belongs.",
            "type": "string",
            "title": "destinationId"
          },
          "filterId": {
            "description": "The id of the destination filter to retrieve.",
            "type": "string",
            "title": "filterId"
          },
          "if": { "description": "The FQL if condition to update.", "type": "string", "title": "if" },
          "actions": {
            "description": "Actions for this destination filter.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/DestinationFilterActionV1" },
            "title": "actions"
          },
          "title": { "description": "The title to update.", "type": "string", "title": "title" },
          "description": {
            "description": "The description of this filter.",
            "type": "string",
            "title": "description",
            "nullable": true
          },
          "enabled": {
            "description": "When set to true, this destination filter is active.",
            "type": "boolean",
            "title": "enabled"
          }
        },
        "required": ["destinationId", "filterId"]
      },
      "UpdateFilterForDestinationV1Output": {
        "description": "Output for UpdateDestinationFilterV1.",
        "title": "UpdateFilterForDestinationV1Output",
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/DestinationFilterV1",
            "description": "The updated destination filter.",
            "title": "filter"
          }
        },
        "required": ["filter"]
      },
      "AuditEventAlpha": {
        "description": "Represents an Audit Trail event.",
        "title": "AuditEventAlpha",
        "type": "object",
        "properties": {
          "id": { "description": "Unique identifier for this audit trail event.", "type": "string", "title": "id" },
          "timestamp": {
            "description": "The timestamp of this event in ISO-8601 format.",
            "type": "string",
            "title": "timestamp"
          },
          "type": { "description": "The type of this event.", "type": "string", "title": "type" },
          "actor": {
            "description": "The user or API token that triggered this event.",
            "type": "string",
            "title": "actor"
          },
          "resourceId": {
            "description": "The identifier of the resource affected by this event.",
            "type": "string",
            "title": "resourceId"
          },
          "resourceType": {
            "description": "The kind of resource affected by this event.",
            "type": "string",
            "title": "resourceType"
          },
          "resourceName": {
            "description": "The name of the resource affected by this event.",
            "type": "string",
            "title": "resourceName"
          }
        },
        "required": ["actor", "id", "resourceId", "resourceName", "resourceType", "timestamp", "type"]
      },
      "ListAuditEventsAlphaInput": {
        "description": "Retrieves all Audit Trail events for the current workspace.",
        "title": "ListAuditEventsAlphaInput",
        "type": "object",
        "properties": {
          "startTime": {
            "description": "Filter response to events that happened after this time.",
            "type": "string",
            "title": "startTime"
          },
          "endTime": {
            "description": "Filter response to events that happened before this time.\nDefaults to the current time, or the end time from the pagination cursor.",
            "type": "string",
            "title": "endTime"
          },
          "resourceId": {
            "description": "Filter response to events that affect a specific resource, for example, a single source.",
            "type": "string",
            "title": "resourceId"
          },
          "resourceType": {
            "description": "Filter response to events that affect a specific type, for example, sources, warehouses, and tracking plans.",
            "type": "string",
            "title": "resourceType"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Defines the pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["pagination"]
      },
      "ListAuditEventsAlphaOutput": {
        "description": "Returns a list of Audit Trail events for the current workspace.",
        "title": "ListAuditEventsAlphaOutput",
        "type": "object",
        "properties": {
          "events": {
            "description": "Audit trail events for the current workspace.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AuditEventAlpha" },
            "title": "events"
          },
          "pagination": {
            "description": "Pagination information about this result.",
            "$ref": "#/components/schemas/PaginationOutput",
            "title": "pagination"
          }
        },
        "required": ["events"]
      },
      "AuditEventBeta": {
        "description": "Represents an Audit Trail event.",
        "title": "AuditEventBeta",
        "type": "object",
        "properties": {
          "id": { "description": "Unique identifier for this audit trail event.", "type": "string", "title": "id" },
          "timestamp": {
            "description": "The timestamp of this event in ISO-8601 format.",
            "type": "string",
            "title": "timestamp"
          },
          "type": { "description": "The type of this event.", "type": "string", "title": "type" },
          "actor": {
            "description": "The user or API token that triggered this event.",
            "type": "string",
            "title": "actor"
          },
          "resourceId": {
            "description": "The identifier of the resource affected by this event.",
            "type": "string",
            "title": "resourceId"
          },
          "resourceType": {
            "description": "The kind of resource affected by this event.",
            "type": "string",
            "title": "resourceType"
          },
          "resourceName": {
            "description": "The name of the resource affected by this event.",
            "type": "string",
            "title": "resourceName"
          }
        },
        "required": ["actor", "id", "resourceId", "resourceName", "resourceType", "timestamp", "type"]
      },
      "ListAuditEventsBetaInput": {
        "description": "Retrieves all Audit Trail events for the current workspace.",
        "title": "ListAuditEventsBetaInput",
        "type": "object",
        "properties": {
          "startTime": {
            "description": "Filter response to events that happened after this time.",
            "type": "string",
            "title": "startTime"
          },
          "endTime": {
            "description": "Filter response to events that happened before this time.\nDefaults to the current time, or the end time from the pagination cursor.",
            "type": "string",
            "title": "endTime"
          },
          "resourceId": {
            "description": "Filter response to events that affect a specific resource, for example, a single source.",
            "type": "string",
            "title": "resourceId"
          },
          "resourceType": {
            "description": "Filter response to events that affect a specific type, for example, sources, warehouses, and tracking plans.",
            "type": "string",
            "title": "resourceType"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Defines the pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["pagination"]
      },
      "ListAuditEventsBetaOutput": {
        "description": "Returns a list of Audit Trail events for the current workspace.",
        "title": "ListAuditEventsBetaOutput",
        "type": "object",
        "properties": {
          "events": {
            "description": "Audit trail events for the current workspace.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AuditEventBeta" },
            "title": "events"
          },
          "pagination": {
            "description": "Pagination information about this result.",
            "$ref": "#/components/schemas/PaginationOutput",
            "title": "pagination"
          }
        },
        "required": ["events"]
      },
      "AuditEventV1": {
        "description": "Represents an Audit Trail event.",
        "title": "AuditEventV1",
        "type": "object",
        "properties": {
          "id": { "description": "Unique identifier for this audit trail event.", "type": "string", "title": "id" },
          "timestamp": {
            "description": "The timestamp of this event in ISO-8601 format.",
            "type": "string",
            "title": "timestamp"
          },
          "type": { "description": "The type of this event.", "type": "string", "title": "type" },
          "actor": {
            "description": "The user or API token that triggered this event.",
            "type": "string",
            "title": "actor"
          },
          "resourceId": {
            "description": "The identifier of the resource affected by this event.",
            "type": "string",
            "title": "resourceId"
          },
          "resourceType": {
            "description": "The kind of resource affected by this event.",
            "type": "string",
            "title": "resourceType"
          },
          "resourceName": {
            "description": "The name of the resource affected by this event.",
            "type": "string",
            "title": "resourceName"
          }
        },
        "required": ["actor", "id", "resourceId", "resourceName", "resourceType", "timestamp", "type"]
      },
      "ListAuditEventsV1Input": {
        "description": "Retrieves all Audit Trail events for the current workspace.",
        "title": "ListAuditEventsV1Input",
        "type": "object",
        "properties": {
          "startTime": {
            "description": "Filter response to events that happened after this time.",
            "type": "string",
            "title": "startTime"
          },
          "endTime": {
            "description": "Filter response to events that happened before this time.\nDefaults to the current time, or the end time from the pagination cursor.",
            "type": "string",
            "title": "endTime"
          },
          "resourceId": {
            "description": "Filter response to events that affect a specific resource, for example, a single source.",
            "type": "string",
            "title": "resourceId"
          },
          "resourceType": {
            "description": "Filter response to events that affect a specific type, for example, sources, warehouses, and tracking plans.",
            "type": "string",
            "title": "resourceType"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Defines the pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["pagination"]
      },
      "ListAuditEventsV1Output": {
        "description": "Returns a list of Audit Trail events for the current workspace.",
        "title": "ListAuditEventsV1Output",
        "type": "object",
        "properties": {
          "events": {
            "description": "Audit trail events for the current workspace.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AuditEventV1" },
            "title": "events"
          },
          "pagination": {
            "description": "Pagination information about this result.",
            "$ref": "#/components/schemas/PaginationOutput",
            "title": "pagination"
          }
        },
        "required": ["events"]
      },
      "DestinationMetadataAlpha": {
        "description": "Represents a destination within Segment.\n\nA destination is a target for Segment to forward data to, and represents a tool or storage destination.",
        "title": "DestinationMetadataAlpha",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of the destination metadata.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "id"
          },
          "name": {
            "description": "The user-friendly name of the destination.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "description": {
            "description": "The description of the destination.",
            "type": "string",
            "title": "description"
          },
          "slug": {
            "description": "The slug used to identify the destination in the Segment app.",
            "type": "string",
            "title": "slug"
          },
          "logos": {
            "$ref": "#/components/schemas/LogosAlpha",
            "description": "The destination's logos.",
            "title": "logos"
          },
          "options": {
            "description": "Options configured for the destination.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/IntegrationOptionAlpha" },
            "title": "options"
          },
          "status": {
            "description": "Support status of the destination.",
            "enum": [
              "DEPRECATED",
              "PRIVATE_BETA",
              "PRIVATE_BUILDING",
              "PRIVATE_SUBMITTED",
              "PUBLIC",
              "PUBLIC_BETA",
              "UNAVAILABLE"
            ],
            "type": "string",
            "title": "status"
          },
          "previousNames": {
            "description": "A list of names previously used by the destination.",
            "type": "array",
            "items": { "type": "string" },
            "title": "previousNames"
          },
          "categories": {
            "description": "A list of categories with which the destination is associated.",
            "type": "array",
            "items": { "type": "string" },
            "title": "categories"
          },
          "website": { "description": "A website URL for this destination.", "type": "string", "title": "website" },
          "components": {
            "description": "A list of components this destination provides.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/DestinationMetadataComponentAlpha" },
            "title": "components"
          },
          "supportedFeatures": {
            "$ref": "#/components/schemas/DestinationMetadataFeaturesAlpha",
            "description": "Features that this destination supports.\n\nConfig API note: holds `browserUnbundling` fields.",
            "title": "supportedFeatures"
          },
          "supportedMethods": {
            "$ref": "#/components/schemas/DestinationMetadataMethodsAlpha",
            "description": "Methods that this destination supports.\n\nConfig API note: equal to `methods`.",
            "title": "supportedMethods"
          },
          "supportedPlatforms": {
            "$ref": "#/components/schemas/DestinationMetadataPlatformsAlpha",
            "description": "Platforms from which the destination receives events.\n\nConfig API note: equal to `platforms`.",
            "title": "supportedPlatforms"
          },
          "actions": {
            "description": "Actions available for the destination.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/DestinationMetadataActionAlpha" },
            "title": "actions"
          },
          "presets": {
            "description": "Predefined destination subscriptions that can optionally be applied when connecting a new instance of the destination.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/DestinationMetadataSubscriptionPresetAlpha" },
            "title": "presets"
          }
        },
        "required": [
          "actions",
          "categories",
          "components",
          "description",
          "id",
          "logos",
          "name",
          "options",
          "presets",
          "previousNames",
          "slug",
          "status",
          "supportedFeatures",
          "supportedMethods",
          "supportedPlatforms",
          "website"
        ]
      },
      "DestinationMetadataComponentAlpha": {
        "description": "Represents a component this destination provides.",
        "title": "DestinationMetadataComponentAlpha",
        "type": "object",
        "properties": {
          "type": {
            "description": "The component type.",
            "enum": ["ANDROID", "BROWSER", "IOS", "SERVER"],
            "type": "string",
            "title": "type"
          },
          "code": {
            "description": "Link to the repository hosting the code for this component.",
            "type": "string",
            "title": "code"
          },
          "owner": {
            "description": "The owner of this component. Either 'SEGMENT' or 'PARTNER'.",
            "enum": ["PARTNER", "SEGMENT"],
            "type": "string",
            "title": "owner"
          }
        },
        "required": ["code", "type"]
      },
      "DestinationMetadataMethodsAlpha": {
        "description": "Represents methods that a given destination supports.",
        "title": "DestinationMetadataMethodsAlpha",
        "type": "object",
        "properties": {
          "pageview": {
            "description": "Identifies if the destination supports the `pageview` method.",
            "type": "boolean",
            "title": "pageview"
          },
          "identify": {
            "description": "Identifies if the destination supports the `identify` method.",
            "type": "boolean",
            "title": "identify"
          },
          "alias": {
            "description": "Identifies if the destination supports the `alias` method.",
            "type": "boolean",
            "title": "alias"
          },
          "track": {
            "description": "Identifies if the destination supports the `track` method.",
            "type": "boolean",
            "title": "track"
          },
          "group": {
            "description": "Identifies if the destination supports the `group` method.",
            "type": "boolean",
            "title": "group"
          }
        }
      },
      "DestinationMetadataPlatformsAlpha": {
        "description": "Represents platforms that a given destination supports.",
        "title": "DestinationMetadataPlatformsAlpha",
        "type": "object",
        "properties": {
          "browser": {
            "description": "Whether this destination supports browser events.",
            "type": "boolean",
            "title": "browser"
          },
          "server": {
            "description": "Whether this destination supports server events.",
            "type": "boolean",
            "title": "server"
          },
          "mobile": {
            "description": "Whether this destination supports mobile events.",
            "type": "boolean",
            "title": "mobile"
          }
        }
      },
      "DestinationMetadataFeaturesAlpha": {
        "description": "Represents features that a given destination supports.",
        "title": "DestinationMetadataFeaturesAlpha",
        "type": "object",
        "properties": {
          "cloudModeInstances": {
            "description": "This destination's support level for cloud mode instances.",
            "enum": ["0", "1", "MULTIPLE"],
            "type": "string",
            "title": "cloudModeInstances"
          },
          "deviceModeInstances": {
            "description": "This destination's support level for device mode instances.\nSupport for multiple device mode instances is currently not planned.",
            "enum": ["0", "1"],
            "type": "string",
            "title": "deviceModeInstances"
          },
          "replay": {
            "description": "Whether this destination supports replays.",
            "type": "boolean",
            "title": "replay"
          },
          "browserUnbundling": {
            "description": "Whether this destination supports browser unbundling.",
            "type": "boolean",
            "title": "browserUnbundling"
          },
          "browserUnbundlingPublic": {
            "description": "Whether this destination supports public browser unbundling.",
            "type": "boolean",
            "title": "browserUnbundlingPublic"
          }
        }
      },
      "DestinationMetadataActionAlpha": {
        "description": "Represents an Action, a building block of behavior that can be performed by the destination.",
        "title": "DestinationMetadataActionAlpha",
        "type": "object",
        "properties": {
          "id": { "description": "The primary key of the action.", "type": "string", "title": "id" },
          "slug": {
            "description": "A machine readable key unique to the action definition.",
            "type": "string",
            "title": "slug"
          },
          "name": { "description": "A human readable name for the action.", "type": "string", "title": "name" },
          "description": {
            "description": "A human readable description of the action. May include Markdown.",
            "type": "string",
            "title": "description"
          },
          "platform": {
            "description": "The platform on which this action runs.",
            "enum": ["CLOUD", "MOBILE", "WEB"],
            "type": "string",
            "title": "platform"
          },
          "hidden": { "description": "Whether the action should be hidden.", "type": "boolean", "title": "hidden" },
          "defaultTrigger": {
            "description": "The default value used as the trigger when connecting this action.",
            "type": "string",
            "title": "defaultTrigger",
            "nullable": true
          },
          "fields": {
            "description": "The fields expected in order to perform the action.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/DestinationMetadataActionFieldAlpha" },
            "title": "fields"
          }
        },
        "required": ["defaultTrigger", "description", "fields", "hidden", "id", "name", "platform", "slug"]
      },
      "DestinationMetadataActionFieldAlpha": {
        "description": "Represents a field used in configuring an action.",
        "title": "DestinationMetadataActionFieldAlpha",
        "type": "object",
        "properties": {
          "id": { "description": "The primary key of the field.", "type": "string", "title": "id" },
          "sortOrder": {
            "description": "The order this particular field is (used in the UI for displaying the fields in a specified order).",
            "type": "number",
            "title": "sortOrder"
          },
          "fieldKey": {
            "description": "A unique machine readable key for the field. Should ideally match the expected key in the action\\'s API request.",
            "type": "string",
            "title": "fieldKey"
          },
          "label": { "description": "A human readable label for this value.", "type": "string", "title": "label" },
          "type": {
            "description": "The data type for this value.",
            "enum": ["BOOLEAN", "DATETIME", "HIDDEN", "INTEGER", "NUMBER", "OBJECT", "PASSWORD", "STRING", "TEXT"],
            "type": "string",
            "title": "type"
          },
          "description": {
            "description": "A human readable description of this value. You can use Markdown.",
            "type": "string",
            "title": "description"
          },
          "placeholder": {
            "description": "An example value displayed but not saved.",
            "type": "string",
            "title": "placeholder"
          },
          "defaultValue": {
            "description": "A default value that is saved the first time an action is created.",
            "title": "defaultValue"
          },
          "required": { "description": "Whether this field is required.", "type": "boolean", "title": "required" },
          "multiple": {
            "description": "Whether a user can provide multiples of this field.",
            "type": "boolean",
            "title": "multiple"
          },
          "choices": {
            "description": "A list of machine readable value/label pairs to populate a static dropdown.",
            "title": "choices"
          },
          "dynamic": {
            "description": "Whether this field should execute a dynamic request to fetch choices to populate a dropdown. When true, `choices` is ignored.",
            "type": "boolean",
            "title": "dynamic"
          },
          "allowNull": {
            "description": "Whether this field allows null values.",
            "type": "boolean",
            "title": "allowNull"
          }
        },
        "required": [
          "allowNull",
          "description",
          "dynamic",
          "fieldKey",
          "id",
          "label",
          "multiple",
          "required",
          "sortOrder",
          "type"
        ]
      },
      "DestinationMetadataSubscriptionPresetAlpha": {
        "description": "Represents a set of defaults for a destination subscription.",
        "title": "DestinationMetadataSubscriptionPresetAlpha",
        "type": "object",
        "properties": {
          "actionId": {
            "description": "The unique identifier for the Destination Action to trigger.",
            "type": "string",
            "title": "actionId"
          },
          "name": { "description": "The name of the subscription.", "type": "string", "title": "name" },
          "fields": {
            "description": "The default settings for action fields.",
            "type": "object",
            "additionalProperties": true,
            "title": "fields"
          },
          "trigger": {
            "description": "FQL string that describes what events should trigger an action. See https://segment.com/docs/config-api/fql/ for more information regarding Segment's Filter Query Language (FQL).",
            "type": "string",
            "title": "trigger"
          }
        },
        "required": ["actionId", "fields", "name", "trigger"]
      },
      "DestinationMetadataBeta": {
        "description": "Represents a destination within Segment.\n\nA destination is a target for Segment to forward data to, and represents a tool or storage destination.",
        "title": "DestinationMetadataBeta",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of the destination metadata.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "id"
          },
          "name": {
            "description": "The user-friendly name of the destination.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "description": {
            "description": "The description of the destination.",
            "type": "string",
            "title": "description"
          },
          "slug": {
            "description": "The slug used to identify the destination in the Segment app.",
            "type": "string",
            "title": "slug"
          },
          "logos": {
            "$ref": "#/components/schemas/LogosBeta",
            "description": "The destination's logos.",
            "title": "logos"
          },
          "options": {
            "description": "Options configured for the destination.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/IntegrationOptionBeta" },
            "title": "options"
          },
          "status": {
            "description": "Support status of the destination.",
            "enum": [
              "DEPRECATED",
              "PRIVATE_BETA",
              "PRIVATE_BUILDING",
              "PRIVATE_SUBMITTED",
              "PUBLIC",
              "PUBLIC_BETA",
              "UNAVAILABLE"
            ],
            "type": "string",
            "title": "status"
          },
          "previousNames": {
            "description": "A list of names previously used by the destination.",
            "type": "array",
            "items": { "type": "string" },
            "title": "previousNames"
          },
          "categories": {
            "description": "A list of categories with which the destination is associated.",
            "type": "array",
            "items": { "type": "string" },
            "title": "categories"
          },
          "website": { "description": "A website URL for this destination.", "type": "string", "title": "website" },
          "components": {
            "description": "A list of components this destination provides.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/DestinationMetadataComponentBeta" },
            "title": "components"
          },
          "supportedFeatures": {
            "$ref": "#/components/schemas/DestinationMetadataFeaturesBeta",
            "description": "Features that this destination supports.\n\nConfig API note: holds `browserUnbundling` fields.",
            "title": "supportedFeatures"
          },
          "supportedMethods": {
            "$ref": "#/components/schemas/DestinationMetadataMethodsBeta",
            "description": "Methods that this destination supports.\n\nConfig API note: equal to `methods`.",
            "title": "supportedMethods"
          },
          "supportedPlatforms": {
            "$ref": "#/components/schemas/DestinationMetadataPlatformsBeta",
            "description": "Platforms from which the destination receives events.\n\nConfig API note: equal to `platforms`.",
            "title": "supportedPlatforms"
          },
          "actions": {
            "description": "Actions available for the destination.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/DestinationMetadataActionBeta" },
            "title": "actions"
          },
          "presets": {
            "description": "Predefined destination subscriptions that can optionally be applied when connecting a new instance of the destination.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/DestinationMetadataSubscriptionPresetBeta" },
            "title": "presets"
          }
        },
        "required": [
          "actions",
          "categories",
          "components",
          "description",
          "id",
          "logos",
          "name",
          "options",
          "presets",
          "previousNames",
          "slug",
          "status",
          "supportedFeatures",
          "supportedMethods",
          "supportedPlatforms",
          "website"
        ]
      },
      "DestinationMetadataComponentBeta": {
        "description": "Represents a component this destination provides.",
        "title": "DestinationMetadataComponentBeta",
        "type": "object",
        "properties": {
          "type": {
            "description": "The component type.",
            "enum": ["ANDROID", "BROWSER", "IOS", "SERVER"],
            "type": "string",
            "title": "type"
          },
          "code": {
            "description": "Link to the repository hosting the code for this component.",
            "type": "string",
            "title": "code"
          },
          "owner": {
            "description": "The owner of this component. Either 'SEGMENT' or 'PARTNER'.",
            "enum": ["PARTNER", "SEGMENT"],
            "type": "string",
            "title": "owner"
          }
        },
        "required": ["code", "type"]
      },
      "DestinationMetadataMethodsBeta": {
        "description": "Represents methods that a given destination supports.",
        "title": "DestinationMetadataMethodsBeta",
        "type": "object",
        "properties": {
          "pageview": {
            "description": "Identifies if the destination supports the `pageview` method.",
            "type": "boolean",
            "title": "pageview"
          },
          "identify": {
            "description": "Identifies if the destination supports the `identify` method.",
            "type": "boolean",
            "title": "identify"
          },
          "alias": {
            "description": "Identifies if the destination supports the `alias` method.",
            "type": "boolean",
            "title": "alias"
          },
          "track": {
            "description": "Identifies if the destination supports the `track` method.",
            "type": "boolean",
            "title": "track"
          },
          "group": {
            "description": "Identifies if the destination supports the `group` method.",
            "type": "boolean",
            "title": "group"
          }
        }
      },
      "DestinationMetadataPlatformsBeta": {
        "description": "Represents platforms that a given destination supports.",
        "title": "DestinationMetadataPlatformsBeta",
        "type": "object",
        "properties": {
          "browser": {
            "description": "Whether this destination supports browser events.",
            "type": "boolean",
            "title": "browser"
          },
          "server": {
            "description": "Whether this destination supports server events.",
            "type": "boolean",
            "title": "server"
          },
          "mobile": {
            "description": "Whether this destination supports mobile events.",
            "type": "boolean",
            "title": "mobile"
          }
        }
      },
      "DestinationMetadataFeaturesBeta": {
        "description": "Represents features that a given destination supports.",
        "title": "DestinationMetadataFeaturesBeta",
        "type": "object",
        "properties": {
          "cloudModeInstances": {
            "description": "This destination's support level for cloud mode instances.",
            "enum": ["0", "1", "MULTIPLE"],
            "type": "string",
            "title": "cloudModeInstances"
          },
          "deviceModeInstances": {
            "description": "This destination's support level for device mode instances.\nSupport for multiple device mode instances is currently not planned.",
            "enum": ["0", "1"],
            "type": "string",
            "title": "deviceModeInstances"
          },
          "replay": {
            "description": "Whether this destination supports replays.",
            "type": "boolean",
            "title": "replay"
          },
          "browserUnbundling": {
            "description": "Whether this destination supports browser unbundling.",
            "type": "boolean",
            "title": "browserUnbundling"
          },
          "browserUnbundlingPublic": {
            "description": "Whether this destination supports public browser unbundling.",
            "type": "boolean",
            "title": "browserUnbundlingPublic"
          }
        }
      },
      "DestinationMetadataActionBeta": {
        "description": "Represents an Action, a building block of behavior that can be performed by the destination.",
        "title": "DestinationMetadataActionBeta",
        "type": "object",
        "properties": {
          "id": { "description": "The primary key of the action.", "type": "string", "title": "id" },
          "slug": {
            "description": "A machine readable key unique to the action definition.",
            "type": "string",
            "title": "slug"
          },
          "name": { "description": "A human readable name for the action.", "type": "string", "title": "name" },
          "description": {
            "description": "A human readable description of the action. May include Markdown.",
            "type": "string",
            "title": "description"
          },
          "platform": {
            "description": "The platform on which this action runs.",
            "enum": ["CLOUD", "MOBILE", "WEB"],
            "type": "string",
            "title": "platform"
          },
          "hidden": { "description": "Whether the action should be hidden.", "type": "boolean", "title": "hidden" },
          "defaultTrigger": {
            "description": "The default value used as the trigger when connecting this action.",
            "type": "string",
            "title": "defaultTrigger",
            "nullable": true
          },
          "fields": {
            "description": "The fields expected in order to perform the action.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/DestinationMetadataActionFieldBeta" },
            "title": "fields"
          }
        },
        "required": ["defaultTrigger", "description", "fields", "hidden", "id", "name", "platform", "slug"]
      },
      "DestinationMetadataActionFieldBeta": {
        "description": "Represents a field used in configuring an action.",
        "title": "DestinationMetadataActionFieldBeta",
        "type": "object",
        "properties": {
          "id": { "description": "The primary key of the field.", "type": "string", "title": "id" },
          "sortOrder": {
            "description": "The order this particular field is (used in the UI for displaying the fields in a specified order).",
            "type": "number",
            "title": "sortOrder"
          },
          "fieldKey": {
            "description": "A unique machine readable key for the field. Should ideally match the expected key in the action\\'s API request.",
            "type": "string",
            "title": "fieldKey"
          },
          "label": { "description": "A human readable label for this value.", "type": "string", "title": "label" },
          "type": {
            "description": "The data type for this value.",
            "enum": ["BOOLEAN", "DATETIME", "HIDDEN", "INTEGER", "NUMBER", "OBJECT", "PASSWORD", "STRING", "TEXT"],
            "type": "string",
            "title": "type"
          },
          "description": {
            "description": "A human readable description of this value. You can use Markdown.",
            "type": "string",
            "title": "description"
          },
          "placeholder": {
            "description": "An example value displayed but not saved.",
            "type": "string",
            "title": "placeholder"
          },
          "defaultValue": {
            "description": "A default value that is saved the first time an action is created.",
            "title": "defaultValue"
          },
          "required": { "description": "Whether this field is required.", "type": "boolean", "title": "required" },
          "multiple": {
            "description": "Whether a user can provide multiples of this field.",
            "type": "boolean",
            "title": "multiple"
          },
          "choices": {
            "description": "A list of machine readable value/label pairs to populate a static dropdown.",
            "title": "choices"
          },
          "dynamic": {
            "description": "Whether this field should execute a dynamic request to fetch choices to populate a dropdown. When true, `choices` is ignored.",
            "type": "boolean",
            "title": "dynamic"
          },
          "allowNull": {
            "description": "Whether this field allows null values.",
            "type": "boolean",
            "title": "allowNull"
          }
        },
        "required": [
          "allowNull",
          "description",
          "dynamic",
          "fieldKey",
          "id",
          "label",
          "multiple",
          "required",
          "sortOrder",
          "type"
        ]
      },
      "DestinationMetadataSubscriptionPresetBeta": {
        "description": "Represents a set of defaults for a destination subscription.",
        "title": "DestinationMetadataSubscriptionPresetBeta",
        "type": "object",
        "properties": {
          "actionId": {
            "description": "The unique identifier for the Destination Action to trigger.",
            "type": "string",
            "title": "actionId"
          },
          "name": { "description": "The name of the subscription.", "type": "string", "title": "name" },
          "fields": {
            "description": "The default settings for action fields.",
            "type": "object",
            "additionalProperties": true,
            "title": "fields"
          },
          "trigger": {
            "description": "FQL string that describes what events should trigger an action. See https://segment.com/docs/config-api/fql/ for more information regarding Segment's Filter Query Language (FQL).",
            "type": "string",
            "title": "trigger"
          }
        },
        "required": ["actionId", "fields", "name", "trigger"]
      },
      "DestinationMetadataV1": {
        "description": "Represents a destination within Segment.\n\nA destination is a target for Segment to forward data to, and represents a tool or storage destination.",
        "title": "DestinationMetadataV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of the destination metadata.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "id"
          },
          "name": {
            "description": "The user-friendly name of the destination.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "description": {
            "description": "The description of the destination.",
            "type": "string",
            "title": "description"
          },
          "slug": {
            "description": "The slug used to identify the destination in the Segment app.",
            "type": "string",
            "title": "slug"
          },
          "logos": {
            "$ref": "#/components/schemas/LogosBeta",
            "description": "The destination's logos.",
            "title": "logos"
          },
          "options": {
            "description": "Options configured for the destination.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/IntegrationOptionBeta" },
            "title": "options"
          },
          "status": {
            "description": "Support status of the destination.",
            "enum": [
              "DEPRECATED",
              "PRIVATE_BETA",
              "PRIVATE_BUILDING",
              "PRIVATE_SUBMITTED",
              "PUBLIC",
              "PUBLIC_BETA",
              "UNAVAILABLE"
            ],
            "type": "string",
            "title": "status"
          },
          "previousNames": {
            "description": "A list of names previously used by the destination.",
            "type": "array",
            "items": { "type": "string" },
            "title": "previousNames"
          },
          "categories": {
            "description": "A list of categories with which the destination is associated.",
            "type": "array",
            "items": { "type": "string" },
            "title": "categories"
          },
          "website": { "description": "A website URL for this destination.", "type": "string", "title": "website" },
          "components": {
            "description": "A list of components this destination provides.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/DestinationMetadataComponentV1" },
            "title": "components"
          },
          "supportedFeatures": {
            "$ref": "#/components/schemas/DestinationMetadataFeaturesV1",
            "description": "Features that this destination supports.\n\nConfig API note: holds `browserUnbundling` fields.",
            "title": "supportedFeatures"
          },
          "supportedMethods": {
            "$ref": "#/components/schemas/DestinationMetadataMethodsV1",
            "description": "Methods that this destination supports.\n\nConfig API note: equal to `methods`.",
            "title": "supportedMethods"
          },
          "supportedPlatforms": {
            "$ref": "#/components/schemas/DestinationMetadataPlatformsV1",
            "description": "Platforms from which the destination receives events.\n\nConfig API note: equal to `platforms`.",
            "title": "supportedPlatforms"
          },
          "actions": {
            "description": "Actions available for the destination.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/DestinationMetadataActionV1" },
            "title": "actions"
          },
          "presets": {
            "description": "Predefined destination subscriptions that can optionally be applied when connecting a new instance of the destination.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/DestinationMetadataSubscriptionPresetV1" },
            "title": "presets"
          }
        },
        "required": [
          "actions",
          "categories",
          "components",
          "description",
          "id",
          "logos",
          "name",
          "options",
          "presets",
          "previousNames",
          "slug",
          "status",
          "supportedFeatures",
          "supportedMethods",
          "supportedPlatforms",
          "website"
        ]
      },
      "DestinationMetadataComponentV1": {
        "description": "Represents a component this destination provides.",
        "title": "DestinationMetadataComponentV1",
        "type": "object",
        "properties": {
          "type": {
            "description": "The component type.",
            "enum": ["ANDROID", "BROWSER", "IOS", "SERVER"],
            "type": "string",
            "title": "type"
          },
          "code": {
            "description": "Link to the repository hosting the code for this component.",
            "type": "string",
            "title": "code"
          },
          "owner": {
            "description": "The owner of this component. Either 'SEGMENT' or 'PARTNER'.",
            "enum": ["PARTNER", "SEGMENT"],
            "type": "string",
            "title": "owner"
          }
        },
        "required": ["code", "type"]
      },
      "DestinationMetadataMethodsV1": {
        "description": "Represents methods that a given destination supports.",
        "title": "DestinationMetadataMethodsV1",
        "type": "object",
        "properties": {
          "pageview": {
            "description": "Identifies if the destination supports the `pageview` method.",
            "type": "boolean",
            "title": "pageview"
          },
          "identify": {
            "description": "Identifies if the destination supports the `identify` method.",
            "type": "boolean",
            "title": "identify"
          },
          "alias": {
            "description": "Identifies if the destination supports the `alias` method.",
            "type": "boolean",
            "title": "alias"
          },
          "track": {
            "description": "Identifies if the destination supports the `track` method.",
            "type": "boolean",
            "title": "track"
          },
          "group": {
            "description": "Identifies if the destination supports the `group` method.",
            "type": "boolean",
            "title": "group"
          }
        }
      },
      "DestinationMetadataPlatformsV1": {
        "description": "Represents platforms that a given destination supports.",
        "title": "DestinationMetadataPlatformsV1",
        "type": "object",
        "properties": {
          "browser": {
            "description": "Whether this destination supports browser events.",
            "type": "boolean",
            "title": "browser"
          },
          "server": {
            "description": "Whether this destination supports server events.",
            "type": "boolean",
            "title": "server"
          },
          "mobile": {
            "description": "Whether this destination supports mobile events.",
            "type": "boolean",
            "title": "mobile"
          }
        }
      },
      "DestinationMetadataFeaturesV1": {
        "description": "Represents features that a given destination supports.",
        "title": "DestinationMetadataFeaturesV1",
        "type": "object",
        "properties": {
          "cloudModeInstances": {
            "description": "This destination's support level for cloud mode instances.",
            "enum": ["0", "1", "MULTIPLE"],
            "type": "string",
            "title": "cloudModeInstances"
          },
          "deviceModeInstances": {
            "description": "This destination's support level for device mode instances.\nSupport for multiple device mode instances is currently not planned.",
            "enum": ["0", "1"],
            "type": "string",
            "title": "deviceModeInstances"
          },
          "replay": {
            "description": "Whether this destination supports replays.",
            "type": "boolean",
            "title": "replay"
          },
          "browserUnbundling": {
            "description": "Whether this destination supports browser unbundling.",
            "type": "boolean",
            "title": "browserUnbundling"
          },
          "browserUnbundlingPublic": {
            "description": "Whether this destination supports public browser unbundling.",
            "type": "boolean",
            "title": "browserUnbundlingPublic"
          }
        }
      },
      "DestinationMetadataActionV1": {
        "description": "Represents an Action, a building block of behavior that can be performed by the destination.",
        "title": "DestinationMetadataActionV1",
        "type": "object",
        "properties": {
          "id": { "description": "The primary key of the action.", "type": "string", "title": "id" },
          "slug": {
            "description": "A machine readable key unique to the action definition.",
            "type": "string",
            "title": "slug"
          },
          "name": { "description": "A human readable name for the action.", "type": "string", "title": "name" },
          "description": {
            "description": "A human readable description of the action. May include Markdown.",
            "type": "string",
            "title": "description"
          },
          "platform": {
            "description": "The platform on which this action runs.",
            "enum": ["CLOUD", "MOBILE", "WEB"],
            "type": "string",
            "title": "platform"
          },
          "hidden": { "description": "Whether the action should be hidden.", "type": "boolean", "title": "hidden" },
          "defaultTrigger": {
            "description": "The default value used as the trigger when connecting this action.",
            "type": "string",
            "title": "defaultTrigger",
            "nullable": true
          },
          "fields": {
            "description": "The fields expected in order to perform the action.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/DestinationMetadataActionFieldV1" },
            "title": "fields"
          }
        },
        "required": ["defaultTrigger", "description", "fields", "hidden", "id", "name", "platform", "slug"]
      },
      "DestinationMetadataActionFieldV1": {
        "description": "Represents a field used in configuring an action.",
        "title": "DestinationMetadataActionFieldV1",
        "type": "object",
        "properties": {
          "id": { "description": "The primary key of the field.", "type": "string", "title": "id" },
          "sortOrder": {
            "description": "The order this particular field is (used in the UI for displaying the fields in a specified order).",
            "type": "number",
            "title": "sortOrder"
          },
          "fieldKey": {
            "description": "A unique machine readable key for the field. Should ideally match the expected key in the action\\'s API request.",
            "type": "string",
            "title": "fieldKey"
          },
          "label": { "description": "A human readable label for this value.", "type": "string", "title": "label" },
          "type": {
            "description": "The data type for this value.",
            "enum": ["BOOLEAN", "DATETIME", "HIDDEN", "INTEGER", "NUMBER", "OBJECT", "PASSWORD", "STRING", "TEXT"],
            "type": "string",
            "title": "type"
          },
          "description": {
            "description": "A human readable description of this value. You can use Markdown.",
            "type": "string",
            "title": "description"
          },
          "placeholder": {
            "description": "An example value displayed but not saved.",
            "type": "string",
            "title": "placeholder"
          },
          "defaultValue": {
            "description": "A default value that is saved the first time an action is created.",
            "title": "defaultValue"
          },
          "required": { "description": "Whether this field is required.", "type": "boolean", "title": "required" },
          "multiple": {
            "description": "Whether a user can provide multiples of this field.",
            "type": "boolean",
            "title": "multiple"
          },
          "choices": {
            "description": "A list of machine readable value/label pairs to populate a static dropdown.",
            "title": "choices"
          },
          "dynamic": {
            "description": "Whether this field should execute a dynamic request to fetch choices to populate a dropdown. When true, `choices` is ignored.",
            "type": "boolean",
            "title": "dynamic"
          },
          "allowNull": {
            "description": "Whether this field allows null values.",
            "type": "boolean",
            "title": "allowNull"
          }
        },
        "required": [
          "allowNull",
          "description",
          "dynamic",
          "fieldKey",
          "id",
          "label",
          "multiple",
          "required",
          "sortOrder",
          "type"
        ]
      },
      "DestinationMetadataSubscriptionPresetV1": {
        "description": "Represents a set of defaults for a destination subscription.",
        "title": "DestinationMetadataSubscriptionPresetV1",
        "type": "object",
        "properties": {
          "actionId": {
            "description": "The unique identifier for the Destination Action to trigger.",
            "type": "string",
            "title": "actionId"
          },
          "name": { "description": "The name of the subscription.", "type": "string", "title": "name" },
          "fields": {
            "description": "The default settings for action fields.",
            "type": "object",
            "additionalProperties": true,
            "title": "fields"
          },
          "trigger": {
            "description": "FQL string that describes what events should trigger an action. See https://segment.com/docs/config-api/fql/ for more information regarding Segment's Filter Query Language (FQL).",
            "type": "string",
            "title": "trigger"
          }
        },
        "required": ["actionId", "fields", "name", "trigger"]
      },
      "DestinationSubscription": {
        "title": "DestinationSubscription",
        "type": "object",
        "properties": {
          "id": { "description": "The unique identifier for the subscription.", "type": "string", "title": "id" },
          "name": { "description": "The name of the subscription.", "type": "string", "title": "name" },
          "actionId": {
            "description": "The unique identifier for the destination action to trigger.",
            "type": "string",
            "title": "actionId"
          },
          "actionSlug": {
            "description": "The URL-friendly key for the associated destination action.",
            "type": "string",
            "title": "actionSlug"
          },
          "destinationId": {
            "description": "The associated destination instance id.",
            "type": "string",
            "title": "destinationId"
          },
          "enabled": { "description": "Is the subscription enabled.", "type": "boolean", "title": "enabled" },
          "settings": {
            "$ref": "#/components/schemas/DestinationSubscriptionFields",
            "description": "The customer settings for action fields.",
            "title": "settings"
          },
          "trigger": {
            "description": "FQL string that describes what events should trigger a destination action.",
            "type": "string",
            "title": "trigger"
          }
        },
        "required": ["actionId", "actionSlug", "destinationId", "enabled", "id", "name", "settings", "trigger"]
      },
      "DestinationSubscriptionFields": {
        "description": "Represents settings used to configure an action subscription.",
        "title": "DestinationSubscriptionFields",
        "type": "object",
        "additionalProperties": {}
      },
      "ListSubscriptionsFromDestinationAlphaInput": {
        "description": "Input for ListDestinationSubscriptionsAlpha.",
        "title": "ListSubscriptionsFromDestinationAlphaInput",
        "type": "object",
        "properties": {
          "destinationId": {
            "description": "The destination id for these subscriptions.",
            "type": "string",
            "title": "destinationId"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination options.",
            "title": "pagination"
          }
        },
        "required": ["destinationId", "pagination"]
      },
      "ListSubscriptionsFromDestinationAlphaOutput": {
        "description": "Output for ListDestinationSubscriptionsAlpha.",
        "title": "ListSubscriptionsFromDestinationAlphaOutput",
        "type": "object",
        "properties": {
          "subscriptions": {
            "description": "A list of destination subscriptions.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/DestinationSubscription" },
            "title": "subscriptions"
          },
          "pagination": {
            "description": "Pagination options.",
            "$ref": "#/components/schemas/PaginationOutput",
            "title": "pagination"
          }
        },
        "required": ["subscriptions"]
      },
      "GetSubscriptionFromDestinationAlphaInput": {
        "description": "Fetches a destination subscription.",
        "title": "GetSubscriptionFromDestinationAlphaInput",
        "type": "object",
        "properties": {
          "id": { "description": "The id of the subscription.", "type": "string", "title": "id" },
          "destinationId": {
            "description": "The id of the destination instance.",
            "type": "string",
            "title": "destinationId"
          }
        },
        "required": ["destinationId", "id"]
      },
      "GetSubscriptionFromDestinationAlphaOutput": {
        "description": "Returns a subscription for a given subscription id.",
        "title": "GetSubscriptionFromDestinationAlphaOutput",
        "type": "object",
        "properties": {
          "subscription": {
            "$ref": "#/components/schemas/DestinationSubscription",
            "description": "The destination subscription.",
            "title": "subscription"
          }
        },
        "required": ["subscription"]
      },
      "CreateDestinationSubscriptionAlphaInput": {
        "description": "The basic input parameters for creating a destination subscription.",
        "title": "CreateDestinationSubscriptionAlphaInput",
        "type": "object",
        "properties": {
          "destinationId": {
            "description": "The associated destination instance id for the subscription.",
            "type": "string",
            "title": "destinationId"
          },
          "name": { "description": "A user-defined name for the subscription.", "type": "string", "title": "name" },
          "actionId": {
            "description": "The associated action id the subscription should trigger.",
            "type": "string",
            "title": "actionId"
          },
          "trigger": { "description": "The FQL statement.", "type": "string", "title": "trigger" },
          "enabled": { "description": "Is the subscription enabled.", "type": "boolean", "title": "enabled" },
          "settings": {
            "description": "The fields used for configuring this action.",
            "$ref": "#/components/schemas/DestinationSubscriptionFields",
            "title": "settings"
          }
        },
        "required": ["actionId", "destinationId", "enabled", "name", "trigger"]
      },
      "CreateDestinationSubscriptionAlphaOutput": {
        "description": "Returns a newly created destination subscription.",
        "title": "CreateDestinationSubscriptionAlphaOutput",
        "type": "object",
        "properties": {
          "destinationSubscription": {
            "$ref": "#/components/schemas/DestinationSubscription",
            "description": "The destination subscription.",
            "title": "destinationSubscription"
          }
        },
        "required": ["destinationSubscription"]
      },
      "DestinationSubscriptionUpdateInput": {
        "description": "The input parameters for updating a destination subscription.",
        "title": "DestinationSubscriptionUpdateInput",
        "type": "object",
        "properties": {
          "name": { "description": "The user-defined name for the subscription.", "type": "string", "title": "name" },
          "trigger": { "description": "The fql statement.", "type": "string", "title": "trigger" },
          "enabled": { "description": "Is the subscription enabled.", "type": "boolean", "title": "enabled" },
          "settings": {
            "description": "The fields used for configuring this action.",
            "$ref": "#/components/schemas/DestinationSubscriptionFields",
            "title": "settings"
          }
        }
      },
      "UpdateSubscriptionForDestinationAlphaInput": {
        "description": "The basic input parameters for updating a destination subscription.",
        "title": "UpdateSubscriptionForDestinationAlphaInput",
        "type": "object",
        "properties": {
          "id": { "description": "The id of the destination subscription to update.", "type": "string", "title": "id" },
          "destinationId": {
            "description": "The id of the destination instance.",
            "type": "string",
            "title": "destinationId"
          },
          "input": {
            "$ref": "#/components/schemas/DestinationSubscriptionUpdateInput",
            "description": "A set of valid destination input params required for updating.",
            "title": "input"
          }
        },
        "required": ["destinationId", "id", "input"]
      },
      "UpdateSubscriptionForDestinationAlphaOutput": {
        "description": "Returns the updated destination subscription.",
        "title": "UpdateSubscriptionForDestinationAlphaOutput",
        "type": "object",
        "properties": {
          "subscription": {
            "$ref": "#/components/schemas/DestinationSubscription",
            "description": "The destination subscription.",
            "title": "subscription"
          }
        },
        "required": ["subscription"]
      },
      "RemoveSubscriptionFromDestinationAlphaInput": {
        "description": "Deletes a destination by id.",
        "title": "RemoveSubscriptionFromDestinationAlphaInput",
        "type": "object",
        "properties": {
          "id": { "description": "The id of the destination to delete.", "type": "string", "title": "id" },
          "destinationId": {
            "description": "The id of the destination instance.",
            "type": "string",
            "title": "destinationId"
          }
        },
        "required": ["destinationId", "id"]
      },
      "RemoveSubscriptionFromDestinationAlphaOutput": {
        "description": "Returns a destination deletion flag.",
        "title": "RemoveSubscriptionFromDestinationAlphaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the operation.",
            "type": "string",
            "enum": ["SUCCESS"],
            "title": "status"
          }
        },
        "required": ["status"]
      },
      "DestinationAlpha": {
        "description": "Business tools or apps that you can connect to the data flowing through Segment.\n\nThis is equal to the destination object in Config API, with the following fields omitted:\n- catalogId\n- createTime\n- updateTime\n- connectionMode.",
        "title": "DestinationAlpha",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier of this instance of a destination.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "id"
          },
          "name": {
            "description": "The name of this instance of a destination.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "enabled": {
            "description": "Whether this instance of a destination receives data.",
            "type": "boolean",
            "title": "enabled"
          },
          "metadata": {
            "$ref": "#/components/schemas/DestinationMetadataAlpha",
            "description": "The metadata of the destination of which this destination is an instance of. For example, Google Analytics or Amplitude.",
            "title": "metadata"
          },
          "sourceId": {
            "description": "The id of a source connected to this instance of a destination.\n\nConfig API note: analogous to `parent`.",
            "type": "string",
            "title": "sourceId"
          },
          "settings": {
            "description": "The collection of settings associated with a destination.\n\nConfig API note: equal to `config`.",
            "type": "object",
            "additionalProperties": true,
            "title": "settings"
          }
        },
        "required": ["enabled", "id", "metadata", "settings", "sourceId"]
      },
      "ListDestinationsAlphaInput": {
        "description": "Loads all destinations connected to the current workspace.",
        "title": "ListDestinationsAlphaInput",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Required pagination params for the request.",
            "title": "pagination"
          }
        },
        "required": ["pagination"]
      },
      "ListDestinationsAlphaOutput": {
        "description": "Returns all destinations connected to the current workspace.",
        "title": "ListDestinationsAlphaOutput",
        "type": "object",
        "properties": {
          "destinations": {
            "description": "The list that contains the destinations connected to the workspace.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/DestinationAlpha" },
            "title": "destinations"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "The pagination object that constraints the returned list.",
            "title": "pagination"
          }
        },
        "required": ["destinations", "pagination"]
      },
      "GetDestinationAlphaInput": {
        "description": "Looks up a single destination by its id.",
        "title": "GetDestinationAlphaInput",
        "type": "object",
        "properties": {
          "destinationId": {
            "description": "The id of the destination to look up.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "destinationId"
          }
        },
        "required": ["destinationId"]
      },
      "GetDestinationAlphaOutput": {
        "description": "Returns a single destination by its id.",
        "title": "GetDestinationAlphaOutput",
        "type": "object",
        "properties": {
          "destination": {
            "$ref": "#/components/schemas/DestinationAlpha",
            "description": "The destination looked up.",
            "title": "destination"
          }
        },
        "required": ["destination"]
      },
      "DeleteDestinationAlphaInput": {
        "description": "Deletes a single destination by its id.",
        "title": "DeleteDestinationAlphaInput",
        "type": "object",
        "properties": {
          "destinationId": {
            "description": "The id of the destination to delete.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "destinationId"
          }
        },
        "required": ["destinationId"]
      },
      "DeleteDestinationAlphaOutput": {
        "description": "Returns the status of a destination deletion.",
        "title": "DeleteDestinationAlphaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the warehouse deletion operation.",
            "type": "string",
            "enum": ["SUCCESS"],
            "title": "status"
          }
        },
        "required": ["status"]
      },
      "UpdateDestinationAlphaInput": {
        "description": "Updates a single destination by its id.",
        "title": "UpdateDestinationAlphaInput",
        "type": "object",
        "properties": {
          "destinationId": {
            "description": "The id of the destination to update.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "destinationId"
          },
          "name": {
            "description": "Defines the display name of the destination.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "enabled": {
            "description": "Whether this destination should receive data.",
            "type": "boolean",
            "title": "enabled"
          },
          "settings": {
            "description": "An optional object that contains settings for the destination based on the \"required\" and \"advanced\" settings present\nin the destination metadata.\n\nConfig API note: equal to `config`.",
            "type": "object",
            "additionalProperties": true,
            "title": "settings"
          }
        },
        "required": ["destinationId"]
      },
      "UpdateDestinationAlphaOutput": {
        "description": "Returns the updated destination.",
        "title": "UpdateDestinationAlphaOutput",
        "type": "object",
        "properties": {
          "destination": {
            "$ref": "#/components/schemas/DestinationAlpha",
            "description": "The updated destination.",
            "title": "destination"
          }
        },
        "required": ["destination"]
      },
      "CreateDestinationAlphaInput": {
        "description": "Creates a new destination.",
        "title": "CreateDestinationAlphaInput",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the source to connect to this destination instance.\n\nConfig API note: analogous to `parent`.",
            "type": "string",
            "title": "sourceId"
          },
          "metadataId": {
            "description": "The id of the metadata to link to the new destination.",
            "type": "string",
            "title": "metadataId"
          },
          "enabled": {
            "description": "Whether this destination should receive data.",
            "type": "boolean",
            "title": "enabled"
          },
          "name": {
            "description": "Defines the display name of the destination.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "settings": {
            "description": "An object that contains settings for the destination based on the \"required\" and \"advanced\" settings present in the\ndestination metadata.\n\nConfig API note: equal to `config`.",
            "type": "object",
            "additionalProperties": true,
            "title": "settings"
          }
        },
        "required": ["metadataId", "settings", "sourceId"]
      },
      "CreateDestinationAlphaOutput": {
        "description": "Creates a new destination.",
        "title": "CreateDestinationAlphaOutput",
        "type": "object",
        "properties": {
          "destination": {
            "$ref": "#/components/schemas/DestinationAlpha",
            "description": "The created destination.",
            "title": "destination"
          }
        },
        "required": ["destination"]
      },
      "ListDeliveryMetricsSummaryFromDestinationAlphaInput": {
        "description": "Input to retrieve event delivery metrics summary for a Destination.",
        "title": "ListDeliveryMetricsSummaryFromDestinationAlphaInput",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the source linked to the destination.\n\nConfig API note: analogous to `parent`.",
            "type": "string",
            "title": "sourceId"
          },
          "destinationId": {
            "description": "The id of the destination to get event delivery metrics.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "destinationId"
          },
          "startTime": {
            "description": "Filter events that happened after this time.\n\nDefaults to:\n- 1 hour ago if granularity is `MINUTE`.\n- 7 days ago if granularity is `HOUR`.\n- 30 days ago if granularity is `DAY`.",
            "type": "string",
            "title": "startTime"
          },
          "endTime": {
            "description": "Filter events that happened before this time. Defaults to now if not set.",
            "type": "string",
            "title": "endTime"
          },
          "granularity": {
            "description": "The granularity to filter metrics to. Either `MINUTE`, `HOUR` or `DAY`.\n\nDefaults to `MINUTE` if not set.",
            "enum": ["DAY", "HOUR", "MINUTE"],
            "type": "string",
            "title": "granularity"
          }
        },
        "required": ["destinationId", "sourceId"]
      },
      "ListDeliveryMetricsSummaryFromDestinationAlphaOutput": {
        "description": "Output to retrieve event delivery metrics summary for a Destination.",
        "title": "ListDeliveryMetricsSummaryFromDestinationAlphaOutput",
        "type": "object",
        "properties": {
          "deliveryMetricsSummary": {
            "$ref": "#/components/schemas/DeliveryMetricsSummaryAlpha",
            "description": "The delivery metrics summary returned.",
            "title": "deliveryMetricsSummary"
          }
        },
        "required": ["deliveryMetricsSummary"]
      },
      "DeliveryMetricsSummaryAlpha": {
        "description": "Defines the summary of delivery metrics for a Destination.",
        "title": "DeliveryMetricsSummaryAlpha",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The source id.\n\nConfig API note: analogous to `parent`.",
            "type": "string",
            "title": "sourceId"
          },
          "destinationMetadataId": {
            "description": "The destination metadata id.",
            "type": "string",
            "title": "destinationMetadataId"
          },
          "metrics": {
            "description": "The summary of event delivery metrics for the requested destination.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/MetricAlpha" },
            "title": "metrics"
          }
        },
        "required": ["destinationMetadataId", "metrics", "sourceId"]
      },
      "MetricAlpha": {
        "description": "The event delivery metric.",
        "title": "MetricAlpha",
        "type": "object",
        "properties": {
          "metricName": { "description": "The name of the metric.", "type": "string", "title": "metricName" },
          "total": { "description": "Number of occurrences of the metric.", "type": "number", "title": "total" },
          "breakdown": {
            "description": "Breakdown of metrics within a metric.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/BreakdownAlpha" },
            "title": "breakdown"
          }
        },
        "required": ["metricName", "total"]
      },
      "BreakdownAlpha": {
        "description": "The breakdown of a metric.",
        "title": "BreakdownAlpha",
        "type": "object",
        "properties": {
          "metricName": { "description": "The name of the metric.", "type": "string", "title": "metricName" },
          "value": { "description": "Number of occurrences of the metric.", "type": "number", "title": "value" }
        },
        "required": ["metricName", "value"]
      },
      "DestinationBeta": {
        "description": "Business tools or apps that you can connect to the data flowing through Segment.\n\nThis is equal to the destination object in Config API, with the following fields omitted:\n- catalogId\n- createTime\n- updateTime\n- connectionMode.",
        "title": "DestinationBeta",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier of this instance of a destination.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "id"
          },
          "name": {
            "description": "The name of this instance of a destination.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "enabled": {
            "description": "Whether this instance of a destination receives data.",
            "type": "boolean",
            "title": "enabled"
          },
          "metadata": {
            "$ref": "#/components/schemas/DestinationMetadataBeta",
            "description": "The metadata of the destination of which this destination is an instance of. For example, Google Analytics or Amplitude.",
            "title": "metadata"
          },
          "sourceId": {
            "description": "The id of a source connected to this instance of a destination.\n\nConfig API note: analogous to `parent`.",
            "type": "string",
            "title": "sourceId"
          },
          "settings": {
            "description": "The collection of settings associated with a destination.\n\nConfig API note: equal to `config`.",
            "type": "object",
            "additionalProperties": true,
            "title": "settings"
          }
        },
        "required": ["enabled", "id", "metadata", "settings", "sourceId"]
      },
      "ListDestinationsBetaInput": {
        "description": "Loads all destinations connected to the current workspace.",
        "title": "ListDestinationsBetaInput",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Required pagination params for the request.",
            "title": "pagination"
          }
        },
        "required": ["pagination"]
      },
      "ListDestinationsBetaOutput": {
        "description": "Returns all destinations connected to the current workspace.",
        "title": "ListDestinationsBetaOutput",
        "type": "object",
        "properties": {
          "destinations": {
            "description": "The list that contains the destinations connected to the workspace.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/DestinationBeta" },
            "title": "destinations"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "The pagination object that constraints the returned list.",
            "title": "pagination"
          }
        },
        "required": ["destinations", "pagination"]
      },
      "GetDestinationBetaInput": {
        "description": "Looks up a single destination by its id.",
        "title": "GetDestinationBetaInput",
        "type": "object",
        "properties": {
          "destinationId": {
            "description": "The id of the destination to look up.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "destinationId"
          }
        },
        "required": ["destinationId"]
      },
      "GetDestinationBetaOutput": {
        "description": "Returns a single destination by its id.",
        "title": "GetDestinationBetaOutput",
        "type": "object",
        "properties": {
          "destination": {
            "$ref": "#/components/schemas/DestinationBeta",
            "description": "The destination looked up.",
            "title": "destination"
          }
        },
        "required": ["destination"]
      },
      "DeleteDestinationBetaInput": {
        "description": "Deletes a single destination by its id.",
        "title": "DeleteDestinationBetaInput",
        "type": "object",
        "properties": {
          "destinationId": {
            "description": "The id of the destination to delete.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "destinationId"
          }
        },
        "required": ["destinationId"]
      },
      "DeleteDestinationBetaOutput": {
        "description": "Returns the status of a destination deletion.",
        "title": "DeleteDestinationBetaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the warehouse deletion operation.",
            "type": "string",
            "enum": ["SUCCESS"],
            "title": "status"
          }
        },
        "required": ["status"]
      },
      "UpdateDestinationBetaOutput": {
        "description": "Returns the updated destination.",
        "title": "UpdateDestinationBetaOutput",
        "type": "object",
        "properties": {
          "destination": {
            "$ref": "#/components/schemas/DestinationBeta",
            "description": "The updated destination.",
            "title": "destination"
          }
        },
        "required": ["destination"]
      },
      "UpdateDestinationBetaInput": {
        "description": "Updates a single destination by its id.",
        "title": "UpdateDestinationBetaInput",
        "type": "object",
        "properties": {
          "destinationId": {
            "description": "The id of the destination to update.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "destinationId"
          },
          "name": {
            "description": "Defines the display name of the destination.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "enabled": {
            "description": "Whether this destination should receive data.",
            "type": "boolean",
            "title": "enabled"
          },
          "settings": {
            "description": "An optional object that contains settings for the destination based on the \"required\" and \"advanced\" settings present\nin the destination metadata.\n\nConfig API note: equal to `config`.",
            "type": "object",
            "additionalProperties": true,
            "title": "settings"
          }
        },
        "required": ["destinationId"]
      },
      "CreateDestinationBetaOutput": {
        "description": "Creates a new destination.",
        "title": "CreateDestinationBetaOutput",
        "type": "object",
        "properties": {
          "destination": {
            "$ref": "#/components/schemas/DestinationBeta",
            "description": "The created destination.",
            "title": "destination"
          }
        },
        "required": ["destination"]
      },
      "CreateDestinationBetaInput": {
        "description": "Creates a new destination.",
        "title": "CreateDestinationBetaInput",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the source to connect to this destination instance.\n\nConfig API note: analogous to `parent`.",
            "type": "string",
            "title": "sourceId"
          },
          "metadataId": {
            "description": "The id of the metadata to link to the new destination.",
            "type": "string",
            "title": "metadataId"
          },
          "enabled": {
            "description": "Whether this destination should receive data.",
            "type": "boolean",
            "title": "enabled"
          },
          "name": {
            "description": "Defines the display name of the destination.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "settings": {
            "description": "An object that contains settings for the destination based on the \"required\" and \"advanced\" settings present in the\ndestination metadata.\n\nConfig API note: equal to `config`.",
            "type": "object",
            "additionalProperties": true,
            "title": "settings"
          }
        },
        "required": ["metadataId", "settings", "sourceId"]
      },
      "ListDeliveryMetricsSummaryFromDestinationBetaInput": {
        "description": "Input to retrieve event delivery metrics summary for a Destination.",
        "title": "ListDeliveryMetricsSummaryFromDestinationBetaInput",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the source linked to the destination.\n\nConfig API note: analogous to `parent`.",
            "type": "string",
            "title": "sourceId"
          },
          "destinationId": {
            "description": "The id of the destination to get event delivery metrics.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "destinationId"
          },
          "startTime": {
            "description": "Filter events that happened after this time.\n\nDefaults to:\n- 1 hour ago if granularity is `MINUTE`.\n- 7 days ago if granularity is `HOUR`.\n- 30 days ago if granularity is `DAY`.",
            "type": "string",
            "title": "startTime"
          },
          "endTime": {
            "description": "Filter events that happened before this time. Defaults to now if not set.",
            "type": "string",
            "title": "endTime"
          },
          "granularity": {
            "description": "The granularity to filter metrics to. Either `MINUTE`, `HOUR` or `DAY`.\n\nDefaults to `MINUTE` if not set.",
            "enum": ["DAY", "HOUR", "MINUTE"],
            "type": "string",
            "title": "granularity"
          }
        },
        "required": ["destinationId", "sourceId"]
      },
      "ListDeliveryMetricsSummaryFromDestinationBetaOutput": {
        "description": "Output to retrieve event delivery metrics summary for a Destination.",
        "title": "ListDeliveryMetricsSummaryFromDestinationBetaOutput",
        "type": "object",
        "properties": {
          "deliveryMetricsSummary": {
            "$ref": "#/components/schemas/DeliveryMetricsSummaryBeta",
            "description": "The delivery metrics summary returned.",
            "title": "deliveryMetricsSummary"
          }
        },
        "required": ["deliveryMetricsSummary"]
      },
      "DeliveryMetricsSummaryBeta": {
        "description": "Defines the summary of delivery metrics for a Destination.",
        "title": "DeliveryMetricsSummaryBeta",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The source id.\n\nConfig API note: analogous to `parent`.",
            "type": "string",
            "title": "sourceId"
          },
          "destinationMetadataId": {
            "description": "The destination metadata id.",
            "type": "string",
            "title": "destinationMetadataId"
          },
          "metrics": {
            "description": "The summary of event delivery metrics for the requested destination.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/MetricBeta" },
            "title": "metrics"
          }
        },
        "required": ["destinationMetadataId", "metrics", "sourceId"]
      },
      "MetricBeta": {
        "description": "The event delivery metric.",
        "title": "MetricBeta",
        "type": "object",
        "properties": {
          "metricName": { "description": "The name of the metric.", "type": "string", "title": "metricName" },
          "total": { "description": "Number of occurrences of the metric.", "type": "number", "title": "total" },
          "breakdown": {
            "description": "Breakdown of metrics within a metric.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/BreakdownBeta" },
            "title": "breakdown"
          }
        },
        "required": ["metricName", "total"]
      },
      "BreakdownBeta": {
        "description": "The breakdown of a metric.",
        "title": "BreakdownBeta",
        "type": "object",
        "properties": {
          "metricName": { "description": "The name of the metric.", "type": "string", "title": "metricName" },
          "value": { "description": "Number of occurrences of the metric.", "type": "number", "title": "value" }
        },
        "required": ["metricName", "value"]
      },
      "DestinationV1": {
        "description": "Business tools or apps that you can connect to the data flowing through Segment.\n\nThis is equal to the destination object in Config API, with the following fields omitted:\n- catalogId\n- createTime\n- updateTime\n- connectionMode.",
        "title": "DestinationV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier of this instance of a destination.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "id"
          },
          "name": {
            "description": "The name of this instance of a destination.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "enabled": {
            "description": "Whether this instance of a destination receives data.",
            "type": "boolean",
            "title": "enabled"
          },
          "metadata": {
            "$ref": "#/components/schemas/DestinationMetadataBeta",
            "description": "The metadata of the destination of which this destination is an instance of. For example, Google Analytics or Amplitude.",
            "title": "metadata"
          },
          "sourceId": {
            "description": "The id of a source connected to this instance of a destination.\n\nConfig API note: analogous to `parent`.",
            "type": "string",
            "title": "sourceId"
          },
          "settings": {
            "description": "The collection of settings associated with a destination.\n\nConfig API note: equal to `config`.",
            "type": "object",
            "additionalProperties": true,
            "title": "settings"
          }
        },
        "required": ["enabled", "id", "metadata", "settings", "sourceId"]
      },
      "ListDestinationsV1Input": {
        "description": "Loads all destinations connected to the current workspace.",
        "title": "ListDestinationsV1Input",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Required pagination params for the request.",
            "title": "pagination"
          }
        },
        "required": ["pagination"]
      },
      "ListDestinationsV1Output": {
        "description": "Returns all destinations connected to the current workspace.",
        "title": "ListDestinationsV1Output",
        "type": "object",
        "properties": {
          "destinations": {
            "description": "The list that contains the destinations connected to the workspace.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/DestinationV1" },
            "title": "destinations"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "The pagination object that constraints the returned list.",
            "title": "pagination"
          }
        },
        "required": ["destinations", "pagination"]
      },
      "GetDestinationV1Input": {
        "description": "Looks up a single destination by its id.",
        "title": "GetDestinationV1Input",
        "type": "object",
        "properties": {
          "destinationId": {
            "description": "The id of the destination to look up.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "destinationId"
          }
        },
        "required": ["destinationId"]
      },
      "GetDestinationV1Output": {
        "description": "Returns a single destination by its id.",
        "title": "GetDestinationV1Output",
        "type": "object",
        "properties": {
          "destination": {
            "$ref": "#/components/schemas/DestinationV1",
            "description": "The destination looked up.",
            "title": "destination"
          }
        },
        "required": ["destination"]
      },
      "DeleteDestinationV1Input": {
        "description": "Deletes a single destination by its id.",
        "title": "DeleteDestinationV1Input",
        "type": "object",
        "properties": {
          "destinationId": {
            "description": "The id of the destination to delete.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "destinationId"
          }
        },
        "required": ["destinationId"]
      },
      "DeleteDestinationV1Output": {
        "description": "Returns the status of a destination deletion.",
        "title": "DeleteDestinationV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the warehouse deletion operation.",
            "type": "string",
            "enum": ["SUCCESS"],
            "title": "status"
          }
        },
        "required": ["status"]
      },
      "UpdateDestinationV1Output": {
        "description": "Returns the updated destination.",
        "title": "UpdateDestinationV1Output",
        "type": "object",
        "properties": {
          "destination": {
            "$ref": "#/components/schemas/DestinationV1",
            "description": "The updated destination.",
            "title": "destination"
          }
        },
        "required": ["destination"]
      },
      "UpdateDestinationV1Input": {
        "description": "Updates a single destination by its id.",
        "title": "UpdateDestinationV1Input",
        "type": "object",
        "properties": {
          "destinationId": {
            "description": "The id of the destination to update.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "destinationId"
          },
          "name": {
            "description": "Defines the display name of the destination.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name",
            "nullable": true
          },
          "enabled": {
            "description": "Whether this destination should receive data.",
            "type": "boolean",
            "title": "enabled"
          },
          "settings": {
            "description": "An optional object that contains settings for the destination based on the \"required\" and \"advanced\" settings present\nin the destination metadata.\n\nConfig API note: equal to `config`.",
            "type": "object",
            "additionalProperties": true,
            "title": "settings"
          }
        },
        "required": ["destinationId"]
      },
      "CreateDestinationV1Output": {
        "description": "Creates a new destination.",
        "title": "CreateDestinationV1Output",
        "type": "object",
        "properties": {
          "destination": {
            "$ref": "#/components/schemas/DestinationV1",
            "description": "The created destination.",
            "title": "destination"
          }
        },
        "required": ["destination"]
      },
      "CreateDestinationV1Input": {
        "description": "Creates a new destination.",
        "title": "CreateDestinationV1Input",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the source to connect to this destination instance.\n\nConfig API note: analogous to `parent`.",
            "type": "string",
            "title": "sourceId"
          },
          "metadataId": {
            "description": "The id of the metadata to link to the new destination.",
            "type": "string",
            "title": "metadataId"
          },
          "enabled": {
            "description": "Whether this destination should receive data.",
            "type": "boolean",
            "title": "enabled"
          },
          "name": {
            "description": "Defines the display name of the destination.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "settings": {
            "description": "An object that contains settings for the destination based on the \"required\" and \"advanced\" settings present in the\ndestination metadata.\n\nConfig API note: equal to `config`.",
            "type": "object",
            "additionalProperties": true,
            "title": "settings"
          }
        },
        "required": ["metadataId", "settings", "sourceId"]
      },
      "EchoAlphaInput": {
        "description": "Echo request with options.",
        "title": "EchoAlphaInput",
        "type": "object",
        "properties": {
          "message": {
            "description": "Sets the response `message` field. The response contains this field's entry.",
            "type": "string",
            "title": "message"
          },
          "delay": {
            "description": "The desired response delay, in milliseconds.",
            "type": "number",
            "title": "delay"
          },
          "triggerError": {
            "description": "If `true`, returns an HTTP `4xx` error that contains the string in `message`.",
            "type": "boolean",
            "title": "triggerError"
          },
          "triggerMultipleErrors": {
            "description": "If `true`, returns an HTTP `4xx` error that contains the value of the `message` field in the error message array.\n\nThis has no effect if the request sets `triggerError`.",
            "type": "boolean",
            "title": "triggerMultipleErrors"
          },
          "triggerUnexpectedError": {
            "description": "If `true`, triggers a `500` error.\n\nThis has no effect if the request sets either `triggerError` or `triggerMultipleErrors`.",
            "type": "boolean",
            "title": "triggerUnexpectedError"
          },
          "statusCode": {
            "description": "Sets the HTTP status code to return.",
            "type": "number",
            "title": "statusCode"
          }
        },
        "required": ["message"]
      },
      "EchoAlphaOutput": {
        "description": "Echo response.",
        "title": "EchoAlphaOutput",
        "type": "object",
        "properties": {
          "method": {
            "description": "The HTTP method used for this round-trip.\n\nCurrently, this endpoint supports only `get` and `post` methods.",
            "enum": ["get", "post"],
            "type": "string",
            "title": "method"
          },
          "message": {
            "description": "The string passed in the `message` input field.",
            "type": "string",
            "title": "message"
          },
          "headers": {
            "description": "The request's HTTP headers.",
            "type": "object",
            "additionalProperties": true,
            "title": "headers"
          }
        },
        "required": ["headers", "message", "method"]
      },
      "EchoV1Input": {
        "description": "Echo request with options.",
        "title": "EchoV1Input",
        "type": "object",
        "properties": {
          "message": {
            "description": "Sets the response `message` field. The response contains this field's entry.",
            "type": "string",
            "title": "message"
          },
          "delay": {
            "description": "The desired response delay, in milliseconds.",
            "type": "number",
            "title": "delay"
          },
          "triggerError": {
            "description": "If `true`, returns an HTTP `4xx` error that contains the string in `message`.",
            "type": "boolean",
            "title": "triggerError"
          },
          "triggerMultipleErrors": {
            "description": "If `true`, returns an HTTP `4xx` error that contains the value of the `message` field in the error message array.\n\nThis has no effect if the request sets `triggerError`.",
            "type": "boolean",
            "title": "triggerMultipleErrors"
          },
          "triggerUnexpectedError": {
            "description": "If `true`, triggers a `500` error.\n\nThis has no effect if the request sets either `triggerError` or `triggerMultipleErrors`.",
            "type": "boolean",
            "title": "triggerUnexpectedError"
          },
          "statusCode": {
            "description": "Sets the HTTP status code to return.",
            "type": "number",
            "title": "statusCode"
          }
        },
        "required": ["message"]
      },
      "EchoV1Output": {
        "description": "Echo response.",
        "title": "EchoV1Output",
        "type": "object",
        "properties": {
          "method": {
            "description": "The HTTP method used for this round-trip.\n\nCurrently, this endpoint supports only `get` and `post` methods.",
            "enum": ["get", "post"],
            "type": "string",
            "title": "method"
          },
          "message": {
            "description": "The string passed in the `message` input field.",
            "type": "string",
            "title": "message"
          },
          "headers": {
            "description": "The request's HTTP headers.",
            "type": "object",
            "additionalProperties": true,
            "title": "headers"
          }
        },
        "required": ["headers", "message", "method"]
      },
      "GenerateUploadURLForEdgeFunctionsAlphaInput": {
        "description": "Input for GenerateSignedUrl.",
        "title": "GenerateUploadURLForEdgeFunctionsAlphaInput",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the source associated with this edge function.",
            "type": "string",
            "title": "sourceId"
          }
        },
        "required": ["sourceId"]
      },
      "GenerateUploadURLForEdgeFunctionsAlphaOutput": {
        "description": "Output for GenerateSignedUrl.",
        "title": "GenerateUploadURLForEdgeFunctionsAlphaOutput",
        "type": "object",
        "properties": {
          "uploadURL": {
            "description": "A temporary URL that can be used to upload your Edge Functions bundle. Expires in 15 minutes.",
            "type": "string",
            "title": "uploadURL"
          }
        },
        "required": ["uploadURL"]
      },
      "CreateEdgeFunctionsAlphaInput": {
        "description": "Input for CreateEdgeFunctions.",
        "title": "CreateEdgeFunctionsAlphaInput",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the source associated with this edge function.",
            "type": "string",
            "title": "sourceId"
          },
          "uploadURL": {
            "description": "The id of the source associated with this edge function.",
            "type": "string",
            "title": "uploadURL"
          }
        },
        "required": ["sourceId", "uploadURL"]
      },
      "CreateEdgeFunctionsAlphaOutput": {
        "description": "Output for CreateEdgeFunctions.",
        "title": "CreateEdgeFunctionsAlphaOutput",
        "type": "object",
        "properties": {
          "edgeFunctions": {
            "$ref": "#/components/schemas/EdgeFunctionsAlpha",
            "description": "The created Edge Function.",
            "title": "edgeFunctions"
          }
        },
        "required": ["edgeFunctions"]
      },
      "GetLatestFromEdgeFunctionsAlphaInput": {
        "description": "Input for GetLatestFromEdgeFunctions.",
        "title": "GetLatestFromEdgeFunctionsAlphaInput",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the source associated with this edge function.",
            "type": "string",
            "title": "sourceId"
          }
        },
        "required": ["sourceId"]
      },
      "GetLatestFromEdgeFunctionsAlphaOutput": {
        "description": "Output for GetLatestFromEdgeFunctions.",
        "title": "GetLatestFromEdgeFunctionsAlphaOutput",
        "type": "object",
        "properties": {
          "edgeFunctions": {
            "$ref": "#/components/schemas/EdgeFunctionsAlpha",
            "description": "The latest version of Edge Function bundle.",
            "title": "edgeFunctions"
          }
        },
        "required": ["edgeFunctions"]
      },
      "DisableEdgeFunctionsAlphaInput": {
        "description": "Input for DisableEdgeFunctions.",
        "title": "DisableEdgeFunctionsAlphaInput",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the source associated with this edge function.",
            "type": "string",
            "title": "sourceId"
          }
        },
        "required": ["sourceId"]
      },
      "DisableEdgeFunctionsAlphaOutput": {
        "description": "Output for DisableEdgeFunctions.",
        "title": "DisableEdgeFunctionsAlphaOutput",
        "type": "object",
        "properties": {
          "edgeFunctions": {
            "$ref": "#/components/schemas/EdgeFunctionsAlpha",
            "description": "The latest version of Edge Function bundle.",
            "title": "edgeFunctions"
          }
        },
        "required": ["edgeFunctions"]
      },
      "EdgeFunctionsAlpha": {
        "description": "Represents an Edge Function bundle.",
        "title": "EdgeFunctionsAlpha",
        "type": "object",
        "properties": {
          "id": { "description": "The Edge Function id.", "type": "string", "title": "id" },
          "sourceId": { "description": "The source id.", "type": "string", "title": "sourceId" },
          "createdAt": { "description": "Creation date.", "type": "string", "title": "createdAt" },
          "createdBy": { "description": "Creating user's id.", "type": "string", "title": "createdBy" },
          "downloadURL": {
            "description": "The CDN URL that can be used to fetch your latest EdgeFunctions bundle.",
            "type": "string",
            "title": "downloadURL"
          },
          "version": {
            "description": "Revision number associated with the latest Edge Function.",
            "type": "number",
            "title": "version"
          }
        },
        "required": ["createdAt", "createdBy", "downloadURL", "id", "sourceId", "version"]
      },
      "FunctionSettingAlpha": {
        "title": "FunctionSettingAlpha",
        "type": "object",
        "properties": {
          "name": { "description": "The name of this function.", "type": "string", "title": "name" },
          "label": { "description": "The label for this function.", "type": "string", "title": "label" },
          "description": { "description": "A description of this function.", "type": "string", "title": "description" },
          "type": {
            "description": "The function type.",
            "enum": ["ARRAY", "BOOLEAN", "STRING", "TEXT_MAP"],
            "type": "string",
            "title": "type"
          },
          "required": { "description": "Whether this function is required.", "type": "boolean", "title": "required" },
          "sensitive": {
            "description": "Whether this function contains sensitive information.",
            "type": "boolean",
            "title": "sensitive"
          }
        },
        "required": ["description", "label", "name", "required", "sensitive", "type"]
      },
      "FunctionAlpha": {
        "description": "Represents a function.",
        "title": "FunctionAlpha",
        "type": "object",
        "properties": {
          "id": { "description": "An identifier for this function.", "type": "string", "title": "id" },
          "resourceType": {
            "description": "The function type.\n\nConfig API note: equal to `type`.",
            "enum": ["DESTINATION", "SOURCE"],
            "type": "string",
            "title": "resourceType"
          },
          "createdAt": { "description": "The time this function was created.", "type": "string", "title": "createdAt" },
          "createdBy": {
            "description": "The id of the user who created this function.",
            "type": "string",
            "title": "createdBy"
          },
          "code": { "description": "The function code.", "type": "string", "title": "code" },
          "deployedAt": {
            "description": "The time of this function's last deployment.",
            "type": "string",
            "title": "deployedAt",
            "nullable": true
          },
          "settings": {
            "description": "The list of settings for this function.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/FunctionSettingAlpha" },
            "title": "settings"
          },
          "displayName": {
            "description": "A display name for this function.",
            "type": "string",
            "title": "displayName"
          },
          "description": {
            "description": "A description for this function.",
            "type": "string",
            "title": "description"
          },
          "logoUrl": { "description": "The URL of the logo for this function.", "type": "string", "title": "logoUrl" },
          "previewWebhookUrl": {
            "description": "The preview webhook URL for this function.",
            "type": "string",
            "title": "previewWebhookUrl"
          },
          "batchMaxCount": {
            "description": "The max count of the batch for this function.",
            "type": "number",
            "title": "batchMaxCount"
          },
          "catalogId": { "description": "The catalog id of this function.", "type": "string", "title": "catalogId" },
          "isLatestVersion": {
            "description": "Whether the deployment of this function is the latest version.",
            "type": "boolean",
            "title": "isLatestVersion"
          }
        }
      },
      "ListFunctionItemAlpha": {
        "description": "Represents a function in a list.",
        "title": "ListFunctionItemAlpha",
        "type": "object",
        "properties": {
          "id": { "description": "An identifier for this function.", "type": "string", "title": "id" },
          "resourceType": {
            "description": "The function type.\n\nConfig API note: equal to `type`.",
            "enum": ["DESTINATION", "SOURCE"],
            "type": "string",
            "title": "resourceType"
          },
          "createdAt": { "description": "The time this function was created.", "type": "string", "title": "createdAt" },
          "createdBy": {
            "description": "The id of the user who created this function.",
            "type": "string",
            "title": "createdBy"
          },
          "displayName": {
            "description": "A display name for this function.",
            "type": "string",
            "title": "displayName"
          },
          "description": {
            "description": "A description for this function.",
            "type": "string",
            "title": "description"
          },
          "logoUrl": { "description": "The URL of the logo for this function.", "type": "string", "title": "logoUrl" },
          "catalogId": { "description": "The catalog id of this function.", "type": "string", "title": "catalogId" }
        }
      },
      "GetFunctionAlphaInput": {
        "description": "Gets a single function.",
        "title": "GetFunctionAlphaInput",
        "type": "object",
        "properties": {
          "functionId": { "description": "An identifier for this function.", "type": "string", "title": "functionId" }
        },
        "required": ["functionId"]
      },
      "GetFunctionAlphaOutput": {
        "description": "Gets a single function.",
        "title": "GetFunctionAlphaOutput",
        "type": "object",
        "properties": {
          "function": {
            "$ref": "#/components/schemas/FunctionAlpha",
            "description": "A function object.",
            "title": "function",
            "nullable": true
          }
        },
        "required": ["function"]
      },
      "ListFunctionsAlphaInput": {
        "description": "Lists all functions in a workspace.",
        "title": "ListFunctionsAlphaInput",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination parameters.",
            "title": "pagination"
          },
          "resourceType": {
            "description": "The function type.\n\nConfig API note: equal to `type`.",
            "enum": ["DESTINATION", "SOURCE"],
            "type": "string",
            "title": "resourceType"
          }
        },
        "required": ["pagination", "resourceType"]
      },
      "ListFunctionsAlphaOutput": {
        "description": "Lists functions in a workspace.",
        "title": "ListFunctionsAlphaOutput",
        "type": "object",
        "properties": {
          "functions": {
            "description": "An array of functions.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/ListFunctionItemAlpha" },
            "title": "functions"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["functions", "pagination"]
      },
      "CreateFunctionAlphaInput": {
        "description": "Creates a function.",
        "title": "CreateFunctionAlphaInput",
        "type": "object",
        "properties": {
          "code": { "description": "The function code.", "type": "string", "title": "code" },
          "settings": {
            "description": "The list of settings for this function.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/FunctionSettingAlpha" },
            "title": "settings"
          },
          "displayName": {
            "description": "A display name for this function.\n\nNote that destination functions append the workspace to the display name.",
            "type": "string",
            "title": "displayName"
          },
          "logoUrl": { "description": "The URL of the logo for this function.", "type": "string", "title": "logoUrl" },
          "resourceType": {
            "description": "The function type.\n\nConfig API note: equal to `type`.",
            "enum": ["DESTINATION", "SOURCE"],
            "type": "string",
            "title": "resourceType"
          },
          "description": { "description": "A description for this function.", "type": "string", "title": "description" }
        },
        "required": ["code", "displayName", "resourceType"]
      },
      "CreateFunctionAlphaOutput": {
        "description": "Create a function.",
        "title": "CreateFunctionAlphaOutput",
        "type": "object",
        "properties": {
          "function": {
            "$ref": "#/components/schemas/FunctionAlpha",
            "description": "A function object.",
            "title": "function"
          }
        },
        "required": ["function"]
      },
      "DeleteFunctionAlphaInput": {
        "description": "Delete a single function.",
        "title": "DeleteFunctionAlphaInput",
        "type": "object",
        "properties": {
          "functionId": { "description": "An identifier for this function.", "type": "string", "title": "functionId" }
        },
        "required": ["functionId"]
      },
      "DeleteFunctionAlphaOutput": {
        "description": "Delete a single function.",
        "title": "DeleteFunctionAlphaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the operation.",
            "type": "string",
            "enum": ["SUCCESS"],
            "title": "status"
          }
        },
        "required": ["status"]
      },
      "UpdateFunctionAlphaInput": {
        "description": "Update a function.",
        "title": "UpdateFunctionAlphaInput",
        "type": "object",
        "properties": {
          "functionId": { "description": "An identifier for this function.", "type": "string", "title": "functionId" },
          "code": { "description": "The function code.", "type": "string", "title": "code" },
          "settings": {
            "description": "The list of settings for this function.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/FunctionSettingAlpha" },
            "title": "settings"
          },
          "displayName": {
            "description": "A display name for this function.",
            "type": "string",
            "title": "displayName"
          },
          "logoUrl": { "description": "A logo for this function.", "type": "string", "title": "logoUrl" },
          "description": { "description": "A description for this function.", "type": "string", "title": "description" }
        },
        "required": ["functionId"]
      },
      "UpdateFunctionAlphaOutput": {
        "description": "Create a function.",
        "title": "UpdateFunctionAlphaOutput",
        "type": "object",
        "properties": {
          "function": {
            "$ref": "#/components/schemas/FunctionAlpha",
            "description": "The updated function object.",
            "title": "function"
          }
        },
        "required": ["function"]
      },
      "CreateFunctionDeploymentAlphaInput": {
        "description": "Updates the deployment for a source function instance.",
        "title": "CreateFunctionDeploymentAlphaInput",
        "type": "object",
        "properties": {
          "functionId": { "description": "An identifier for this function.", "type": "string", "title": "functionId" }
        },
        "required": ["functionId"]
      },
      "CreateFunctionDeploymentAlphaOutput": {
        "description": "Updates the deployment for a source function instance.",
        "title": "CreateFunctionDeploymentAlphaOutput",
        "type": "object",
        "properties": {
          "functionDeployment": {
            "description": "The status of the operation.",
            "type": "object",
            "properties": { "status": { "type": "string", "enum": ["SUCCESS"], "title": "status" } },
            "required": ["status"],
            "title": "functionDeployment"
          }
        },
        "required": ["functionDeployment"]
      },
      "FunctionSettingBeta": {
        "title": "FunctionSettingBeta",
        "type": "object",
        "properties": {
          "name": { "description": "The name of this function.", "type": "string", "title": "name" },
          "label": { "description": "The label for this function.", "type": "string", "title": "label" },
          "description": { "description": "A description of this function.", "type": "string", "title": "description" },
          "type": {
            "description": "The function type.",
            "enum": ["ARRAY", "BOOLEAN", "STRING", "TEXT_MAP"],
            "type": "string",
            "title": "type"
          },
          "required": { "description": "Whether this function is required.", "type": "boolean", "title": "required" },
          "sensitive": {
            "description": "Whether this function contains sensitive information.",
            "type": "boolean",
            "title": "sensitive"
          }
        },
        "required": ["description", "label", "name", "required", "sensitive", "type"]
      },
      "FunctionBeta": {
        "description": "Represents a function.",
        "title": "FunctionBeta",
        "type": "object",
        "properties": {
          "id": { "description": "An identifier for this function.", "type": "string", "title": "id" },
          "resourceType": {
            "description": "The function type.\n\nConfig API note: equal to `type`.",
            "enum": ["DESTINATION", "SOURCE"],
            "type": "string",
            "title": "resourceType"
          },
          "createdAt": { "description": "The time this function was created.", "type": "string", "title": "createdAt" },
          "createdBy": {
            "description": "The id of the user who created this function.",
            "type": "string",
            "title": "createdBy"
          },
          "code": { "description": "The function code.", "type": "string", "title": "code" },
          "deployedAt": {
            "description": "The time of this function's last deployment.",
            "type": "string",
            "title": "deployedAt",
            "nullable": true
          },
          "settings": {
            "description": "The list of settings for this function.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/FunctionSettingBeta" },
            "title": "settings"
          },
          "displayName": {
            "description": "A display name for this function.",
            "type": "string",
            "title": "displayName"
          },
          "description": {
            "description": "A description for this function.",
            "type": "string",
            "title": "description"
          },
          "logoUrl": { "description": "The URL of the logo for this function.", "type": "string", "title": "logoUrl" },
          "previewWebhookUrl": {
            "description": "The preview webhook URL for this function.",
            "type": "string",
            "title": "previewWebhookUrl"
          },
          "batchMaxCount": {
            "description": "The max count of the batch for this function.",
            "type": "number",
            "title": "batchMaxCount"
          },
          "catalogId": { "description": "The catalog id of this function.", "type": "string", "title": "catalogId" },
          "isLatestVersion": {
            "description": "Whether the deployment of this function is the latest version.",
            "type": "boolean",
            "title": "isLatestVersion"
          }
        }
      },
      "ListFunctionItemBeta": {
        "description": "Represents a function in a list.",
        "title": "ListFunctionItemBeta",
        "type": "object",
        "properties": {
          "id": { "description": "An identifier for this function.", "type": "string", "title": "id" },
          "resourceType": {
            "description": "The function type.\n\nConfig API note: equal to `type`.",
            "enum": ["DESTINATION", "SOURCE"],
            "type": "string",
            "title": "resourceType"
          },
          "createdAt": { "description": "The time this function was created.", "type": "string", "title": "createdAt" },
          "createdBy": {
            "description": "The id of the user who created this function.",
            "type": "string",
            "title": "createdBy"
          },
          "displayName": {
            "description": "A display name for this function.",
            "type": "string",
            "title": "displayName"
          },
          "description": {
            "description": "A description for this function.",
            "type": "string",
            "title": "description"
          },
          "logoUrl": { "description": "The URL of the logo for this function.", "type": "string", "title": "logoUrl" },
          "catalogId": { "description": "The catalog id of this function.", "type": "string", "title": "catalogId" }
        }
      },
      "GetFunctionBetaInput": {
        "description": "Gets a single function.",
        "title": "GetFunctionBetaInput",
        "type": "object",
        "properties": {
          "functionId": { "description": "An identifier for this function.", "type": "string", "title": "functionId" }
        },
        "required": ["functionId"]
      },
      "GetFunctionBetaOutput": {
        "description": "Gets a single function.",
        "title": "GetFunctionBetaOutput",
        "type": "object",
        "properties": {
          "function": {
            "$ref": "#/components/schemas/FunctionBeta",
            "description": "A function object.",
            "title": "function",
            "nullable": true
          }
        },
        "required": ["function"]
      },
      "ListFunctionsBetaInput": {
        "description": "Lists all functions in a workspace.",
        "title": "ListFunctionsBetaInput",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination parameters.",
            "title": "pagination"
          },
          "resourceType": {
            "description": "The function type.\n\nConfig API note: equal to `type`.",
            "enum": ["DESTINATION", "SOURCE"],
            "type": "string",
            "title": "resourceType"
          }
        },
        "required": ["pagination", "resourceType"]
      },
      "ListFunctionsBetaOutput": {
        "description": "Lists functions in a workspace.",
        "title": "ListFunctionsBetaOutput",
        "type": "object",
        "properties": {
          "functions": {
            "description": "An array of functions.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/ListFunctionItemBeta" },
            "title": "functions"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["functions", "pagination"]
      },
      "CreateFunctionBetaInput": {
        "description": "Creates a function.",
        "title": "CreateFunctionBetaInput",
        "type": "object",
        "properties": {
          "code": { "description": "The function code.", "type": "string", "title": "code" },
          "settings": {
            "description": "The list of settings for this function.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/FunctionSettingBeta" },
            "title": "settings"
          },
          "displayName": {
            "description": "A display name for this function.\n\nNote that destination functions append the workspace to the display name.",
            "type": "string",
            "title": "displayName"
          },
          "logoUrl": { "description": "The URL of the logo for this function.", "type": "string", "title": "logoUrl" },
          "resourceType": {
            "description": "The function type.\n\nConfig API note: equal to `type`.",
            "enum": ["DESTINATION", "SOURCE"],
            "type": "string",
            "title": "resourceType"
          },
          "description": { "description": "A description for this function.", "type": "string", "title": "description" }
        },
        "required": ["code", "displayName", "resourceType"]
      },
      "CreateFunctionBetaOutput": {
        "description": "Create a function.",
        "title": "CreateFunctionBetaOutput",
        "type": "object",
        "properties": {
          "function": {
            "$ref": "#/components/schemas/FunctionBeta",
            "description": "A function object.",
            "title": "function"
          }
        },
        "required": ["function"]
      },
      "DeleteFunctionBetaInput": {
        "description": "Delete a single function.",
        "title": "DeleteFunctionBetaInput",
        "type": "object",
        "properties": {
          "functionId": { "description": "An identifier for this function.", "type": "string", "title": "functionId" }
        },
        "required": ["functionId"]
      },
      "DeleteFunctionBetaOutput": {
        "description": "Delete a single function.",
        "title": "DeleteFunctionBetaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the operation.",
            "type": "string",
            "enum": ["SUCCESS"],
            "title": "status"
          }
        },
        "required": ["status"]
      },
      "UpdateFunctionBetaInput": {
        "description": "Update a function.",
        "title": "UpdateFunctionBetaInput",
        "type": "object",
        "properties": {
          "functionId": { "description": "An identifier for this function.", "type": "string", "title": "functionId" },
          "code": { "description": "The function code.", "type": "string", "title": "code" },
          "settings": {
            "description": "The list of settings for this function.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/FunctionSettingBeta" },
            "title": "settings"
          },
          "displayName": {
            "description": "A display name for this function.",
            "type": "string",
            "title": "displayName"
          },
          "logoUrl": { "description": "A logo for this function.", "type": "string", "title": "logoUrl" },
          "description": { "description": "A description for this function.", "type": "string", "title": "description" }
        },
        "required": ["functionId"]
      },
      "UpdateFunctionBetaOutput": {
        "description": "Create a function.",
        "title": "UpdateFunctionBetaOutput",
        "type": "object",
        "properties": {
          "function": {
            "$ref": "#/components/schemas/FunctionBeta",
            "description": "The updated function object.",
            "title": "function"
          }
        },
        "required": ["function"]
      },
      "CreateFunctionDeploymentBetaInput": {
        "description": "Updates the deployment for a source function instance.",
        "title": "CreateFunctionDeploymentBetaInput",
        "type": "object",
        "properties": {
          "functionId": { "description": "An identifier for this function.", "type": "string", "title": "functionId" }
        },
        "required": ["functionId"]
      },
      "CreateFunctionDeploymentBetaOutput": {
        "description": "Updates the deployment for a source function instance.",
        "title": "CreateFunctionDeploymentBetaOutput",
        "type": "object",
        "properties": {
          "functionDeployment": {
            "description": "The status of the operation.",
            "type": "object",
            "properties": { "status": { "type": "string", "enum": ["SUCCESS"], "title": "status" } },
            "required": ["status"],
            "title": "functionDeployment"
          }
        },
        "required": ["functionDeployment"]
      },
      "FunctionSettingV1": {
        "title": "FunctionSettingV1",
        "type": "object",
        "properties": {
          "name": { "description": "The name of this function.", "type": "string", "title": "name" },
          "label": { "description": "The label for this function.", "type": "string", "title": "label" },
          "description": { "description": "A description of this function.", "type": "string", "title": "description" },
          "type": {
            "description": "The function type.",
            "enum": ["ARRAY", "BOOLEAN", "STRING", "TEXT_MAP"],
            "type": "string",
            "title": "type"
          },
          "required": { "description": "Whether this function is required.", "type": "boolean", "title": "required" },
          "sensitive": {
            "description": "Whether this function contains sensitive information.",
            "type": "boolean",
            "title": "sensitive"
          }
        },
        "required": ["description", "label", "name", "required", "sensitive", "type"]
      },
      "FunctionV1": {
        "description": "Represents a function.",
        "title": "FunctionV1",
        "type": "object",
        "properties": {
          "id": { "description": "An identifier for this function.", "type": "string", "title": "id" },
          "resourceType": {
            "description": "The function type.\n\nConfig API note: equal to `type`.",
            "enum": ["DESTINATION", "SOURCE"],
            "type": "string",
            "title": "resourceType"
          },
          "createdAt": { "description": "The time this function was created.", "type": "string", "title": "createdAt" },
          "createdBy": {
            "description": "The id of the user who created this function.",
            "type": "string",
            "title": "createdBy"
          },
          "code": { "description": "The function code.", "type": "string", "title": "code" },
          "deployedAt": {
            "description": "The time of this function's last deployment.",
            "type": "string",
            "title": "deployedAt",
            "nullable": true
          },
          "settings": {
            "description": "The list of settings for this function.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/FunctionSettingV1" },
            "title": "settings"
          },
          "displayName": {
            "description": "A display name for this function.",
            "type": "string",
            "title": "displayName"
          },
          "description": {
            "description": "A description for this function.",
            "type": "string",
            "title": "description"
          },
          "logoUrl": { "description": "The URL of the logo for this function.", "type": "string", "title": "logoUrl" },
          "previewWebhookUrl": {
            "description": "The preview webhook URL for this function.",
            "type": "string",
            "title": "previewWebhookUrl"
          },
          "batchMaxCount": {
            "description": "The max count of the batch for this function.",
            "type": "number",
            "title": "batchMaxCount"
          },
          "catalogId": { "description": "The catalog id of this function.", "type": "string", "title": "catalogId" },
          "isLatestVersion": {
            "description": "Whether the deployment of this function is the latest version.",
            "type": "boolean",
            "title": "isLatestVersion"
          }
        }
      },
      "ListFunctionItemV1": {
        "description": "Represents a function in a list.",
        "title": "ListFunctionItemV1",
        "type": "object",
        "properties": {
          "id": { "description": "An identifier for this function.", "type": "string", "title": "id" },
          "resourceType": {
            "description": "The function type.\n\nConfig API note: equal to `type`.",
            "enum": ["DESTINATION", "SOURCE"],
            "type": "string",
            "title": "resourceType"
          },
          "createdAt": { "description": "The time this function was created.", "type": "string", "title": "createdAt" },
          "createdBy": {
            "description": "The id of the user who created this function.",
            "type": "string",
            "title": "createdBy"
          },
          "displayName": {
            "description": "A display name for this function.",
            "type": "string",
            "title": "displayName"
          },
          "description": {
            "description": "A description for this function.",
            "type": "string",
            "title": "description"
          },
          "logoUrl": { "description": "The URL of the logo for this function.", "type": "string", "title": "logoUrl" },
          "catalogId": { "description": "The catalog id of this function.", "type": "string", "title": "catalogId" }
        }
      },
      "GetFunctionV1Input": {
        "description": "Gets a single function.",
        "title": "GetFunctionV1Input",
        "type": "object",
        "properties": {
          "functionId": { "description": "An identifier for this function.", "type": "string", "title": "functionId" }
        },
        "required": ["functionId"]
      },
      "GetFunctionV1Output": {
        "description": "Gets a single function.",
        "title": "GetFunctionV1Output",
        "type": "object",
        "properties": {
          "function": {
            "$ref": "#/components/schemas/FunctionV1",
            "description": "A function object.",
            "title": "function",
            "nullable": true
          }
        },
        "required": ["function"]
      },
      "ListFunctionsV1Input": {
        "description": "Lists all functions in a workspace.",
        "title": "ListFunctionsV1Input",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination parameters.",
            "title": "pagination"
          },
          "resourceType": {
            "description": "The function type.\n\nConfig API note: equal to `type`.",
            "enum": ["DESTINATION", "SOURCE"],
            "type": "string",
            "title": "resourceType"
          }
        },
        "required": ["pagination", "resourceType"]
      },
      "ListFunctionsV1Output": {
        "description": "Lists functions in a workspace.",
        "title": "ListFunctionsV1Output",
        "type": "object",
        "properties": {
          "functions": {
            "description": "An array of functions.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/ListFunctionItemV1" },
            "title": "functions"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["functions", "pagination"]
      },
      "CreateFunctionV1Input": {
        "description": "Creates a function.",
        "title": "CreateFunctionV1Input",
        "type": "object",
        "properties": {
          "code": { "description": "The function code.", "type": "string", "title": "code" },
          "settings": {
            "description": "The list of settings for this function.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/FunctionSettingV1" },
            "title": "settings"
          },
          "displayName": {
            "description": "A display name for this function.\n\nNote that destination functions append the workspace to the display name.",
            "type": "string",
            "title": "displayName"
          },
          "logoUrl": { "description": "The URL of the logo for this function.", "type": "string", "title": "logoUrl" },
          "resourceType": {
            "description": "The function type.\n\nConfig API note: equal to `type`.",
            "enum": ["DESTINATION", "SOURCE"],
            "type": "string",
            "title": "resourceType"
          },
          "description": { "description": "A description for this function.", "type": "string", "title": "description" }
        },
        "required": ["code", "displayName", "resourceType"]
      },
      "CreateFunctionV1Output": {
        "description": "Create a function.",
        "title": "CreateFunctionV1Output",
        "type": "object",
        "properties": {
          "function": {
            "$ref": "#/components/schemas/FunctionV1",
            "description": "A function object.",
            "title": "function"
          }
        },
        "required": ["function"]
      },
      "DeleteFunctionV1Input": {
        "description": "Delete a single function.",
        "title": "DeleteFunctionV1Input",
        "type": "object",
        "properties": {
          "functionId": { "description": "An identifier for this function.", "type": "string", "title": "functionId" }
        },
        "required": ["functionId"]
      },
      "DeleteFunctionV1Output": {
        "description": "Delete a single function.",
        "title": "DeleteFunctionV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the operation.",
            "type": "string",
            "enum": ["SUCCESS"],
            "title": "status"
          }
        },
        "required": ["status"]
      },
      "UpdateFunctionV1Input": {
        "description": "Update a function.",
        "title": "UpdateFunctionV1Input",
        "type": "object",
        "properties": {
          "functionId": { "description": "An identifier for this function.", "type": "string", "title": "functionId" },
          "code": { "description": "The function code.", "type": "string", "title": "code" },
          "settings": {
            "description": "The list of settings for this function.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/FunctionSettingV1" },
            "title": "settings"
          },
          "displayName": {
            "description": "A display name for this function.",
            "type": "string",
            "title": "displayName"
          },
          "logoUrl": { "description": "A logo for this function.", "type": "string", "title": "logoUrl" },
          "description": { "description": "A description for this function.", "type": "string", "title": "description" }
        },
        "required": ["functionId"]
      },
      "UpdateFunctionV1Output": {
        "description": "Create a function.",
        "title": "UpdateFunctionV1Output",
        "type": "object",
        "properties": {
          "function": {
            "$ref": "#/components/schemas/FunctionV1",
            "description": "The updated function object.",
            "title": "function"
          }
        },
        "required": ["function"]
      },
      "CreateFunctionDeploymentV1Input": {
        "description": "Updates the deployment for a source function instance.",
        "title": "CreateFunctionDeploymentV1Input",
        "type": "object",
        "properties": {
          "functionId": { "description": "An identifier for this function.", "type": "string", "title": "functionId" }
        },
        "required": ["functionId"]
      },
      "CreateFunctionDeploymentV1Output": {
        "description": "Updates the deployment for a source function instance.",
        "title": "CreateFunctionDeploymentV1Output",
        "type": "object",
        "properties": {
          "functionDeployment": {
            "description": "The status of the operation.",
            "type": "object",
            "properties": { "status": { "type": "string", "enum": ["SUCCESS"], "title": "status" } },
            "required": ["status"],
            "title": "functionDeployment"
          }
        },
        "required": ["functionDeployment"]
      },
      "ResourceAlpha": {
        "description": "Represents a permission's resource.",
        "title": "ResourceAlpha",
        "type": "object",
        "properties": {
          "id": { "description": "The id of this resource.", "type": "string", "title": "id" },
          "type": {
            "description": "The kind of resource this permission applies to.",
            "enum": ["FUNCTION", "SOURCE", "SPACE", "WAREHOUSE", "WORKSPACE"],
            "type": "string",
            "title": "type"
          }
        },
        "required": ["id", "type"]
      },
      "InvitePermissionAlpha": {
        "description": "Defines a permission to apply to the user in an invite.",
        "title": "InvitePermissionAlpha",
        "type": "object",
        "properties": {
          "roleId": { "description": "The id of the role.", "type": "string", "title": "roleId" },
          "resources": {
            "description": "The resources to grant the invited users access to.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/ResourceAlpha" },
            "title": "resources"
          },
          "labels": {
            "description": "The labels that determine which resources to grant users access to.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AllowedLabelAlpha" },
            "title": "labels"
          }
        },
        "required": ["roleId"]
      },
      "InviteAlpha": {
        "description": "Defines an invitation to join a workspace.",
        "title": "InviteAlpha",
        "type": "object",
        "properties": {
          "email": {
            "description": "The invited user's email to attach the permissions to.",
            "type": "string",
            "title": "email"
          },
          "permissions": {
            "description": "The permissions to attach to the invited user.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/InvitePermissionAlpha" },
            "title": "permissions"
          }
        },
        "required": ["email"]
      },
      "CreateInvitesAlphaInput": {
        "description": "Invites a user to a workspace with specified permissions.",
        "title": "CreateInvitesAlphaInput",
        "type": "object",
        "properties": {
          "invites": {
            "description": "The list of invites.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/InviteAlpha" },
            "title": "invites"
          }
        },
        "required": ["invites"]
      },
      "CreateInvitesAlphaOutput": {
        "description": "Returns the emails of the invited users.",
        "title": "CreateInvitesAlphaOutput",
        "type": "object",
        "properties": {
          "emails": {
            "description": "The list of emails invited to the workspace.",
            "type": "array",
            "items": { "type": "string" },
            "title": "emails"
          }
        },
        "required": ["emails"]
      },
      "DeleteInvitesAlphaInput": {
        "description": "Removes pre-existing invitations to join a workspace.",
        "title": "DeleteInvitesAlphaInput",
        "type": "object",
        "properties": {
          "emails": {
            "description": "The list of emails to delete invites for.",
            "type": "array",
            "items": { "type": "string" },
            "title": "emails"
          }
        },
        "required": ["emails"]
      },
      "DeleteInvitesAlphaOutput": {
        "description": "Returns the status of the removal operation.",
        "title": "DeleteInvitesAlphaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the invite deletion operation.",
            "type": "string",
            "enum": ["SUCCESS"],
            "title": "status"
          }
        },
        "required": ["status"]
      },
      "ListInvitesAlphaInput": {
        "description": "Retrieves a list of existing invitations to join a workspace.",
        "title": "ListInvitesAlphaInput",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Defines the pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["pagination"]
      },
      "ListInvitesAlphaOutput": {
        "description": "Returns the list of invites.",
        "title": "ListInvitesAlphaOutput",
        "type": "object",
        "properties": {
          "invites": {
            "description": "The list of invites.",
            "type": "array",
            "items": { "type": "string" },
            "title": "invites"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination information about this resource.",
            "title": "pagination"
          }
        },
        "required": ["invites", "pagination"]
      },
      "PermissionResourceAlpha": {
        "description": "The most basic representation of a resource belonging to a set of permissions.",
        "title": "PermissionResourceAlpha",
        "type": "object",
        "properties": {
          "id": { "description": "The id of this resource.", "type": "string", "title": "id" },
          "type": {
            "description": "The type for this resource.",
            "enum": ["FUNCTION", "SOURCE", "SPACE", "WAREHOUSE", "WORKSPACE"],
            "type": "string",
            "title": "type"
          },
          "labels": {
            "description": "The labels that further refine access to this resource. Labels are exclusive to workspace-level permissions.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AllowedLabelAlpha" },
            "title": "labels"
          }
        },
        "required": ["id", "type"]
      },
      "PermissionAlpha": {
        "description": "A registered set of permissions for a subject, extending a role to a resource.",
        "title": "PermissionAlpha",
        "type": "object",
        "properties": {
          "roleName": {
            "description": "The name of the role associated with this permission.",
            "type": "string",
            "title": "roleName"
          },
          "roleId": {
            "description": "The id of the role associated with this permission.",
            "type": "string",
            "title": "roleId"
          },
          "resources": {
            "description": "The resources associated with this permission.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/PermissionResourceAlpha" },
            "title": "resources"
          },
          "labels": {
            "description": "The labels to attach to this permission.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AllowedLabelAlpha" },
            "title": "labels"
          }
        },
        "required": ["resources", "roleId", "roleName"]
      },
      "MinimalUserGroupAlpha": {
        "description": "The least amount of information needed to identify a user group.",
        "title": "MinimalUserGroupAlpha",
        "type": "object",
        "properties": {
          "id": { "description": "The id of the user group.", "type": "string", "title": "id" },
          "name": { "description": "The name of the user group.", "type": "string", "title": "name" }
        },
        "required": ["id", "name"]
      },
      "UserGroupAlpha": {
        "description": "A set of users with a set of shared permissions.",
        "title": "UserGroupAlpha",
        "type": "object",
        "properties": {
          "memberCount": {
            "description": "The number of members in the user group.",
            "type": "number",
            "title": "memberCount"
          },
          "permissions": {
            "description": "The permissions associated with the user group.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/PermissionAlpha" },
            "title": "permissions"
          },
          "id": { "description": "The id of the user group.", "type": "string", "title": "id" },
          "name": { "description": "The name of the user group.", "type": "string", "title": "name" }
        },
        "required": ["id", "memberCount", "name"]
      },
      "CreateUserGroupAlphaInput": {
        "description": "Creates a user group, used to bundle permissions for its members, within a workspace.",
        "title": "CreateUserGroupAlphaInput",
        "type": "object",
        "properties": {
          "name": { "description": "The name of the user group to create.", "type": "string", "title": "name" }
        },
        "required": ["name"]
      },
      "CreateUserGroupAlphaOutput": {
        "description": "Returns the newly created user group.",
        "title": "CreateUserGroupAlphaOutput",
        "type": "object",
        "properties": {
          "userGroup": {
            "$ref": "#/components/schemas/UserGroupAlpha",
            "description": "The newly created user group.",
            "title": "userGroup"
          }
        },
        "required": ["userGroup"]
      },
      "GetUserGroupAlphaInput": {
        "description": "Looks up a user group within a workspace.",
        "title": "GetUserGroupAlphaInput",
        "type": "object",
        "properties": {
          "userGroupId": { "description": "The id of the user group.", "type": "string", "title": "userGroupId" }
        },
        "required": ["userGroupId"]
      },
      "GetUserGroupAlphaOutput": {
        "description": "Returns a user group with the given id.",
        "title": "GetUserGroupAlphaOutput",
        "type": "object",
        "properties": {
          "userGroup": {
            "$ref": "#/components/schemas/UserGroupAlpha",
            "description": "The user group returned from the query.",
            "title": "userGroup"
          }
        },
        "required": ["userGroup"]
      },
      "UpdateUserGroupAlphaInput": {
        "description": "Updates a user group with a given id.",
        "title": "UpdateUserGroupAlphaInput",
        "type": "object",
        "properties": {
          "userGroupId": {
            "description": "The id of the user group to update.",
            "type": "string",
            "title": "userGroupId"
          },
          "name": {
            "description": "The intended value to rename the user group to.",
            "type": "string",
            "title": "name"
          }
        },
        "required": ["name", "userGroupId"]
      },
      "UpdateUserGroupAlphaOutput": {
        "description": "Returns the updated user group.",
        "title": "UpdateUserGroupAlphaOutput",
        "type": "object",
        "properties": {
          "userGroup": {
            "$ref": "#/components/schemas/UserGroupAlpha",
            "description": "The updated user group.",
            "title": "userGroup"
          }
        },
        "required": ["userGroup"]
      },
      "DeleteUserGroupAlphaInput": {
        "description": "Deletes a user group with a given group id from a workspace.",
        "title": "DeleteUserGroupAlphaInput",
        "type": "object",
        "properties": {
          "userGroupId": {
            "description": "The id of the user group to delete.",
            "type": "string",
            "title": "userGroupId"
          }
        },
        "required": ["userGroupId"]
      },
      "DeleteUserGroupAlphaOutput": {
        "description": "Returns the status of the completed deletion operation.",
        "title": "DeleteUserGroupAlphaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "A flag indicating the status of a successful deletion operation.",
            "type": "string",
            "enum": ["SUCCESS"],
            "title": "status"
          }
        },
        "required": ["status"]
      },
      "ListUsersFromUserGroupAlphaInput": {
        "description": "Looks up the members of a user group within a workspace.",
        "title": "ListUsersFromUserGroupAlphaInput",
        "type": "object",
        "properties": {
          "userGroupId": { "description": "The id of the user group.", "type": "string", "title": "userGroupId" },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination for members of a group.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "userGroupId"]
      },
      "ListUsersFromUserGroupAlphaOutput": {
        "description": "Returns the members of a user group with the given group id.",
        "title": "ListUsersFromUserGroupAlphaOutput",
        "type": "object",
        "properties": {
          "users": {
            "description": "The users of the user group.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/MinimalUserAlpha" },
            "title": "users"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination for users.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "users"]
      },
      "ListInvitesFromUserGroupAlphaInput": {
        "description": "Looks up the invitees to a user group within a workspace.",
        "title": "ListInvitesFromUserGroupAlphaInput",
        "type": "object",
        "properties": {
          "userGroupId": { "description": "The id of the user group.", "type": "string", "title": "userGroupId" },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination for invites to the group.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "userGroupId"]
      },
      "ListInvitesFromUserGroupAlphaOutput": {
        "description": "Returns the emails of invitees to a user group with the given group id.",
        "title": "ListInvitesFromUserGroupAlphaOutput",
        "type": "object",
        "properties": {
          "emails": {
            "description": "The emails of the invitees to the user group.",
            "type": "array",
            "items": { "type": "string" },
            "title": "emails"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination for invite emails.",
            "title": "pagination"
          }
        },
        "required": ["emails", "pagination"]
      },
      "DeleteUsersAlphaInput": {
        "description": "Removes users from a workspace.",
        "title": "DeleteUsersAlphaInput",
        "type": "object",
        "properties": {
          "userIds": {
            "description": "The ids of the users to remove.",
            "type": "array",
            "items": { "type": "string" },
            "title": "userIds"
          }
        },
        "required": ["userIds"]
      },
      "DeleteUsersAlphaOutput": {
        "description": "Returns the status of the removal operation.",
        "title": "DeleteUsersAlphaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "A flag that indicates the status of a successful deletion operation.",
            "type": "string",
            "enum": ["SUCCESS"],
            "title": "status"
          }
        },
        "required": ["status"]
      },
      "ListUserGroupsAlphaInput": {
        "description": "Loads all user groups for a workspace.",
        "title": "ListUserGroupsAlphaInput",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination for user groups.",
            "title": "pagination"
          }
        },
        "required": ["pagination"]
      },
      "ListUserGroupsAlphaOutput": {
        "description": "Returns a list of user groups with the given workspace id.",
        "title": "ListUserGroupsAlphaOutput",
        "type": "object",
        "properties": {
          "userGroups": {
            "description": "The user group returned from the query.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/UserGroupAlpha" },
            "title": "userGroups"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination for user groups.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "userGroups"]
      },
      "AccessPermissionAlpha": {
        "description": "A permission governing access to a resource.",
        "title": "AccessPermissionAlpha",
        "type": "object",
        "properties": {
          "roleId": {
            "description": "The id of the role that applies to this permission.",
            "type": "string",
            "title": "roleId"
          },
          "roleName": {
            "description": "The name of the role that applies to this permission.",
            "type": "string",
            "title": "roleName"
          },
          "resources": {
            "description": "The resources included with this permission.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/PermissionResourceAlpha" },
            "title": "resources"
          }
        },
        "required": ["resources", "roleId", "roleName"]
      },
      "PermissionInputAlpha": {
        "description": "The input for a permission, associated with a resource and/or labels.",
        "title": "PermissionInputAlpha",
        "type": "object",
        "properties": {
          "roleId": { "description": "The role id of this permission.", "type": "string", "title": "roleId" },
          "resources": {
            "description": "The resources to link the selected role to.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/PermissionResourceAlpha" },
            "title": "resources"
          }
        },
        "required": ["resources", "roleId"]
      },
      "AddPermissionsToUserAlphaInput": {
        "description": "Adds a list of permissions to a user.",
        "title": "AddPermissionsToUserAlphaInput",
        "type": "object",
        "properties": {
          "userId": {
            "description": "The id of the user to add the permissions to.",
            "type": "string",
            "title": "userId"
          },
          "permissions": {
            "description": "The permissions to add.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/PermissionInputAlpha" },
            "title": "permissions"
          }
        },
        "required": ["permissions", "userId"]
      },
      "AddPermissionsToUserAlphaOutput": {
        "description": "Returns the user's permissions, including the added permissions.",
        "title": "AddPermissionsToUserAlphaOutput",
        "type": "object",
        "properties": {
          "permissions": {
            "description": "The new permissions.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AccessPermissionAlpha" },
            "title": "permissions"
          }
        },
        "required": ["permissions"]
      },
      "ReplacePermissionsForUserAlphaInput": {
        "description": "Updates the list of permissions for a user.",
        "title": "ReplacePermissionsForUserAlphaInput",
        "type": "object",
        "properties": {
          "userId": {
            "description": "The id of the user to add the permissions to.",
            "type": "string",
            "title": "userId"
          },
          "permissions": {
            "description": "The permissions to add.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/PermissionInputAlpha" },
            "title": "permissions"
          }
        },
        "required": ["permissions", "userId"]
      },
      "ReplacePermissionsForUserAlphaOutput": {
        "description": "Returns the user's permissions, including the updated permissions.",
        "title": "ReplacePermissionsForUserAlphaOutput",
        "type": "object",
        "properties": {
          "permissions": {
            "description": "The updated permissions.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AccessPermissionAlpha" },
            "title": "permissions"
          }
        },
        "required": ["permissions"]
      },
      "AddPermissionsToUserGroupAlphaInput": {
        "description": "Adds a list of permissions to a user group.",
        "title": "AddPermissionsToUserGroupAlphaInput",
        "type": "object",
        "properties": {
          "userGroupId": {
            "description": "The id of the user group to add the permissions to.",
            "type": "string",
            "title": "userGroupId"
          },
          "permissions": {
            "description": "The permissions to add.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/PermissionInputAlpha" },
            "title": "permissions"
          }
        },
        "required": ["permissions", "userGroupId"]
      },
      "AddPermissionsToUserGroupAlphaOutput": {
        "description": "Returns the group's permissions, including the added permissions.",
        "title": "AddPermissionsToUserGroupAlphaOutput",
        "type": "object",
        "properties": {
          "permissions": {
            "description": "The updated set of permissions assigned to the user group.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AccessPermissionAlpha" },
            "title": "permissions"
          }
        },
        "required": ["permissions"]
      },
      "ReplacePermissionsForUserGroupAlphaInput": {
        "description": "Updates the list of permissions for a user group.",
        "title": "ReplacePermissionsForUserGroupAlphaInput",
        "type": "object",
        "properties": {
          "userGroupId": {
            "description": "The id of the user group to add the permissions to.",
            "type": "string",
            "title": "userGroupId"
          },
          "permissions": {
            "description": "The permissions to replace with.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/PermissionInputAlpha" },
            "title": "permissions"
          }
        },
        "required": ["permissions", "userGroupId"]
      },
      "ReplacePermissionsForUserGroupAlphaOutput": {
        "description": "Returns the user group's permissions, including the updated permissions.",
        "title": "ReplacePermissionsForUserGroupAlphaOutput",
        "type": "object",
        "properties": {
          "permissions": {
            "description": "The updated permissions.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AccessPermissionAlpha" },
            "title": "permissions"
          }
        },
        "required": ["permissions"]
      },
      "AddUsersToUserGroupAlphaInput": {
        "description": "Adds a list of users and invites to a user group.",
        "title": "AddUsersToUserGroupAlphaInput",
        "type": "object",
        "properties": {
          "userGroupId": {
            "description": "The id of the user group to add users to.",
            "type": "string",
            "title": "userGroupId"
          },
          "emails": {
            "description": "The email addresses of the users and invites to add.",
            "type": "array",
            "items": { "type": "string" },
            "title": "emails"
          }
        },
        "required": ["emails", "userGroupId"]
      },
      "AddUsersToUserGroupAlphaOutput": {
        "description": "Returns the updated user group.",
        "title": "AddUsersToUserGroupAlphaOutput",
        "type": "object",
        "properties": {
          "userGroup": {
            "$ref": "#/components/schemas/UserGroupAlpha",
            "description": "The updated the user group.",
            "title": "userGroup"
          }
        },
        "required": ["userGroup"]
      },
      "ReplaceUsersInUserGroupAlphaInput": {
        "description": "Replace a user group's list of users and invites with a new one.",
        "title": "ReplaceUsersInUserGroupAlphaInput",
        "type": "object",
        "properties": {
          "userGroupId": {
            "description": "The id of the user group to replace users.",
            "type": "string",
            "title": "userGroupId"
          },
          "emails": {
            "description": "The email addresses of the users and invites to replace.",
            "type": "array",
            "items": { "type": "string" },
            "title": "emails"
          }
        },
        "required": ["emails", "userGroupId"]
      },
      "ReplaceUsersInUserGroupAlphaOutput": {
        "description": "Returns the updated user group.",
        "title": "ReplaceUsersInUserGroupAlphaOutput",
        "type": "object",
        "properties": {
          "userGroup": {
            "$ref": "#/components/schemas/UserGroupAlpha",
            "description": "The updated the user group.",
            "title": "userGroup"
          }
        },
        "required": ["userGroup"]
      },
      "ListUsersAlphaInput": {
        "description": "Returns a list of users with access to the workspace.",
        "title": "ListUsersAlphaInput",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination for users.",
            "title": "pagination"
          }
        },
        "required": ["pagination"]
      },
      "ListUsersAlphaOutput": {
        "description": "Returns the list of users.",
        "title": "ListUsersAlphaOutput",
        "type": "object",
        "properties": {
          "users": {
            "description": "The list of users.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/UserAlpha" },
            "title": "users"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination for users.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "users"]
      },
      "GetUserAlphaInput": {
        "description": "Returns a user.",
        "title": "GetUserAlphaInput",
        "type": "object",
        "properties": {
          "userId": { "description": "The id of the user to return.", "type": "string", "title": "userId" }
        },
        "required": ["userId"]
      },
      "GetUserAlphaOutput": {
        "description": "Returns the user.",
        "title": "GetUserAlphaOutput",
        "type": "object",
        "properties": {
          "user": { "$ref": "#/components/schemas/UserAlpha", "description": "The user object.", "title": "user" }
        },
        "required": ["user"]
      },
      "MinimalUserAlpha": {
        "description": "A user belonging to a Segment workspace.",
        "title": "MinimalUserAlpha",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier of this user.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "id"
          },
          "name": { "description": "The human-readable name of this user.", "type": "string", "title": "name" },
          "email": { "description": "The email address associated with this user.", "type": "string", "title": "email" }
        },
        "required": ["email", "id", "name"]
      },
      "UserAlpha": {
        "description": "A Segment user.",
        "title": "UserAlpha",
        "type": "object",
        "properties": {
          "permissions": {
            "description": "The permissions associated with this user.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/PermissionAlpha" },
            "title": "permissions"
          },
          "id": {
            "description": "The unique identifier of this user.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "id"
          },
          "name": { "description": "The human-readable name of this user.", "type": "string", "title": "name" },
          "email": { "description": "The email address associated with this user.", "type": "string", "title": "email" }
        },
        "required": ["email", "id", "name"]
      },
      "ListRolesAlphaInput": {
        "description": "Returns a list of roles available to apply to permissions for users in the workspace.",
        "title": "ListRolesAlphaInput",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination for roles.",
            "title": "pagination"
          }
        },
        "required": ["pagination"]
      },
      "RoleAlpha": {
        "description": "Represents a role.",
        "title": "RoleAlpha",
        "type": "object",
        "properties": {
          "id": { "description": "The unique identifier of the role.", "type": "string", "title": "id" },
          "name": { "description": "The human-readable name of the role.", "type": "string", "title": "name" },
          "description": {
            "description": "The human-readable description of the role.",
            "type": "string",
            "title": "description"
          }
        },
        "required": ["description", "id", "name"]
      },
      "ListRolesAlphaOutput": {
        "description": "Returns the list of roles.",
        "title": "ListRolesAlphaOutput",
        "type": "object",
        "properties": {
          "roles": {
            "description": "The list of roles.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/RoleAlpha" },
            "title": "roles"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination for roles.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "roles"]
      },
      "ListUserGroupsFromUserAlphaInput": {
        "description": "Retrieves all user groups the user belongs to.",
        "title": "ListUserGroupsFromUserAlphaInput",
        "type": "object",
        "properties": {
          "userId": { "description": "The id of the user to get groups for.", "type": "string", "title": "userId" },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination for groups.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "userId"]
      },
      "ListUserGroupsFromUserAlphaOutput": {
        "description": "Returns all user groups the user belongs to.",
        "title": "ListUserGroupsFromUserAlphaOutput",
        "type": "object",
        "properties": {
          "groups": {
            "description": "The user groups that the user belongs to.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/MinimalUserGroupAlpha" },
            "title": "groups"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination for groups.",
            "title": "pagination"
          }
        },
        "required": ["groups", "pagination"]
      },
      "RemoveUsersFromUserGroupAlphaInput": {
        "description": "Removes users or invites from a user group.",
        "title": "RemoveUsersFromUserGroupAlphaInput",
        "type": "object",
        "properties": {
          "userGroupId": { "description": "The id of the user group.", "type": "string", "title": "userGroupId" },
          "emails": {
            "description": "The list of emails to remove from the user group.",
            "type": "array",
            "items": { "type": "string" },
            "title": "emails"
          }
        },
        "required": ["emails", "userGroupId"]
      },
      "RemoveUsersFromUserGroupAlphaOutput": {
        "description": "Returns the status of the removal operation.",
        "title": "RemoveUsersFromUserGroupAlphaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the user removal from user group operation.",
            "type": "string",
            "enum": ["SUCCESS"],
            "title": "status"
          }
        },
        "required": ["status"]
      },
      "ResourceBeta": {
        "description": "Represents a permission's resource.",
        "title": "ResourceBeta",
        "type": "object",
        "properties": {
          "id": { "description": "The id of this resource.", "type": "string", "title": "id" },
          "type": {
            "description": "The kind of resource this permission applies to.",
            "enum": ["FUNCTION", "SOURCE", "SPACE", "WAREHOUSE", "WORKSPACE"],
            "type": "string",
            "title": "type"
          }
        },
        "required": ["id", "type"]
      },
      "InvitePermissionBeta": {
        "description": "Defines a permission to apply to the user in an invite.",
        "title": "InvitePermissionBeta",
        "type": "object",
        "properties": {
          "roleId": { "description": "The id of the role.", "type": "string", "title": "roleId" },
          "resources": {
            "description": "The resources to grant the invited users access to.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/ResourceBeta" },
            "title": "resources"
          },
          "labels": {
            "description": "The labels that determine which resources to grant users access to.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AllowedLabelBeta" },
            "title": "labels"
          }
        },
        "required": ["roleId"]
      },
      "InviteBeta": {
        "description": "Defines an invitation to join a workspace.",
        "title": "InviteBeta",
        "type": "object",
        "properties": {
          "email": {
            "description": "The invited user's email to attach the permissions to.",
            "type": "string",
            "title": "email"
          },
          "permissions": {
            "description": "The permissions to attach to the invited user.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/InvitePermissionBeta" },
            "title": "permissions"
          }
        },
        "required": ["email"]
      },
      "CreateInvitesBetaInput": {
        "description": "Invites a user to a workspace with specified permissions.",
        "title": "CreateInvitesBetaInput",
        "type": "object",
        "properties": {
          "invites": {
            "description": "The list of invites.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/InviteBeta" },
            "title": "invites"
          }
        },
        "required": ["invites"]
      },
      "CreateInvitesBetaOutput": {
        "description": "Returns the emails of the invited users.",
        "title": "CreateInvitesBetaOutput",
        "type": "object",
        "properties": {
          "emails": {
            "description": "The list of emails invited to the workspace.",
            "type": "array",
            "items": { "type": "string" },
            "title": "emails"
          }
        },
        "required": ["emails"]
      },
      "DeleteInvitesBetaInput": {
        "description": "Removes pre-existing invitations to join a workspace.",
        "title": "DeleteInvitesBetaInput",
        "type": "object",
        "properties": {
          "emails": {
            "description": "The list of emails to delete invites for.",
            "type": "array",
            "items": { "type": "string" },
            "title": "emails"
          }
        },
        "required": ["emails"]
      },
      "DeleteInvitesBetaOutput": {
        "description": "Returns the status of the removal operation.",
        "title": "DeleteInvitesBetaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the invite deletion operation.",
            "type": "string",
            "enum": ["SUCCESS"],
            "title": "status"
          }
        },
        "required": ["status"]
      },
      "ListInvitesBetaInput": {
        "description": "Retrieves a list of existing invitations to join a workspace.",
        "title": "ListInvitesBetaInput",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Defines the pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["pagination"]
      },
      "ListInvitesBetaOutput": {
        "description": "Returns the list of invites.",
        "title": "ListInvitesBetaOutput",
        "type": "object",
        "properties": {
          "invites": {
            "description": "The list of invites.",
            "type": "array",
            "items": { "type": "string" },
            "title": "invites"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination information about this resource.",
            "title": "pagination"
          }
        },
        "required": ["invites", "pagination"]
      },
      "PermissionResourceBeta": {
        "description": "The most basic representation of a resource belonging to a set of permissions.",
        "title": "PermissionResourceBeta",
        "type": "object",
        "properties": {
          "id": { "description": "The id of this resource.", "type": "string", "title": "id" },
          "type": {
            "description": "The type for this resource.",
            "enum": ["FUNCTION", "SOURCE", "SPACE", "WAREHOUSE", "WORKSPACE"],
            "type": "string",
            "title": "type"
          },
          "labels": {
            "description": "The labels that further refine access to this resource. Labels are exclusive to workspace-level permissions.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AllowedLabelBeta" },
            "title": "labels"
          }
        },
        "required": ["id", "type"]
      },
      "PermissionBeta": {
        "description": "A registered set of permissions for a subject, extending a role to a resource.",
        "title": "PermissionBeta",
        "type": "object",
        "properties": {
          "roleName": {
            "description": "The name of the role associated with this permission.",
            "type": "string",
            "title": "roleName"
          },
          "roleId": {
            "description": "The id of the role associated with this permission.",
            "type": "string",
            "title": "roleId"
          },
          "resources": {
            "description": "The resources associated with this permission.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/PermissionResourceBeta" },
            "title": "resources"
          },
          "labels": {
            "description": "The labels to attach to this permission.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AllowedLabelBeta" },
            "title": "labels"
          }
        },
        "required": ["resources", "roleId", "roleName"]
      },
      "MinimalUserGroupBeta": {
        "description": "The least amount of information needed to identify a user group.",
        "title": "MinimalUserGroupBeta",
        "type": "object",
        "properties": {
          "id": { "description": "The id of the user group.", "type": "string", "title": "id" },
          "name": { "description": "The name of the user group.", "type": "string", "title": "name" }
        },
        "required": ["id", "name"]
      },
      "DeleteUsersBetaInput": {
        "description": "Removes users from a workspace.",
        "title": "DeleteUsersBetaInput",
        "type": "object",
        "properties": {
          "userIds": {
            "description": "The ids of the users to remove.",
            "type": "array",
            "items": { "type": "string" },
            "title": "userIds"
          }
        },
        "required": ["userIds"]
      },
      "DeleteUsersBetaOutput": {
        "description": "Returns the status of the removal operation.",
        "title": "DeleteUsersBetaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "A flag that indicates the status of a successful deletion operation.",
            "type": "string",
            "enum": ["SUCCESS"],
            "title": "status"
          }
        },
        "required": ["status"]
      },
      "AccessPermissionBeta": {
        "description": "A permission governing access to a resource.",
        "title": "AccessPermissionBeta",
        "type": "object",
        "properties": {
          "roleId": {
            "description": "The id of the role that applies to this permission.",
            "type": "string",
            "title": "roleId"
          },
          "roleName": {
            "description": "The name of the role that applies to this permission.",
            "type": "string",
            "title": "roleName"
          },
          "resources": {
            "description": "The resources included with this permission.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/PermissionResourceBeta" },
            "title": "resources"
          }
        },
        "required": ["resources", "roleId", "roleName"]
      },
      "PermissionInputBeta": {
        "description": "The input for a permission, associated with a resource and/or labels.",
        "title": "PermissionInputBeta",
        "type": "object",
        "properties": {
          "roleId": { "description": "The role id of this permission.", "type": "string", "title": "roleId" },
          "resources": {
            "description": "The resources to link the selected role to.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/PermissionResourceBeta" },
            "title": "resources"
          }
        },
        "required": ["resources", "roleId"]
      },
      "AddPermissionsToUserBetaInput": {
        "description": "Adds a list of permissions to a user.",
        "title": "AddPermissionsToUserBetaInput",
        "type": "object",
        "properties": {
          "userId": {
            "description": "The id of the user to add the permissions to.",
            "type": "string",
            "title": "userId"
          },
          "permissions": {
            "description": "The permissions to add.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/PermissionInputBeta" },
            "title": "permissions"
          }
        },
        "required": ["permissions", "userId"]
      },
      "AddPermissionsToUserBetaOutput": {
        "description": "Returns the user's permissions, including the added permissions.",
        "title": "AddPermissionsToUserBetaOutput",
        "type": "object",
        "properties": {
          "permissions": {
            "description": "The new permissions.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AccessPermissionBeta" },
            "title": "permissions"
          }
        },
        "required": ["permissions"]
      },
      "ReplacePermissionsForUserBetaInput": {
        "description": "Updates the list of permissions for a user.",
        "title": "ReplacePermissionsForUserBetaInput",
        "type": "object",
        "properties": {
          "userId": {
            "description": "The id of the user to add the permissions to.",
            "type": "string",
            "title": "userId"
          },
          "permissions": {
            "description": "The permissions to add.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/PermissionInputBeta" },
            "title": "permissions"
          }
        },
        "required": ["permissions", "userId"]
      },
      "ReplacePermissionsForUserBetaOutput": {
        "description": "Returns the user's permissions, including the updated permissions.",
        "title": "ReplacePermissionsForUserBetaOutput",
        "type": "object",
        "properties": {
          "permissions": {
            "description": "The updated permissions.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AccessPermissionBeta" },
            "title": "permissions"
          }
        },
        "required": ["permissions"]
      },
      "ListUsersBetaInput": {
        "description": "Returns a list of users with access to the workspace.",
        "title": "ListUsersBetaInput",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination for users.",
            "title": "pagination"
          }
        },
        "required": ["pagination"]
      },
      "ListUsersBetaOutput": {
        "description": "Returns the list of users.",
        "title": "ListUsersBetaOutput",
        "type": "object",
        "properties": {
          "users": {
            "description": "The list of users.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/UserBeta" },
            "title": "users"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination for users.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "users"]
      },
      "GetUserBetaInput": {
        "description": "Returns a user.",
        "title": "GetUserBetaInput",
        "type": "object",
        "properties": {
          "userId": { "description": "The id of the user to return.", "type": "string", "title": "userId" }
        },
        "required": ["userId"]
      },
      "GetUserBetaOutput": {
        "description": "Returns the user.",
        "title": "GetUserBetaOutput",
        "type": "object",
        "properties": {
          "user": { "$ref": "#/components/schemas/UserBeta", "description": "The user object.", "title": "user" }
        },
        "required": ["user"]
      },
      "UserBeta": {
        "description": "A user belonging to a Segment workspace.",
        "title": "UserBeta",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier of this user.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "id"
          },
          "name": { "description": "The human-readable name of this user.", "type": "string", "title": "name" },
          "email": {
            "description": "The email address associated with this user.",
            "type": "string",
            "title": "email"
          },
          "permissions": {
            "description": "The permissions associated with this user.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/PermissionBeta" },
            "title": "permissions"
          }
        },
        "required": ["email", "id", "name"]
      },
      "ListUserGroupsFromUserBetaInput": {
        "description": "Retrieves all user groups the user belongs to.",
        "title": "ListUserGroupsFromUserBetaInput",
        "type": "object",
        "properties": {
          "userId": { "description": "The id of the user to get groups for.", "type": "string", "title": "userId" },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination for groups.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "userId"]
      },
      "ListUserGroupsFromUserBetaOutput": {
        "description": "Returns all user groups the user belongs to.",
        "title": "ListUserGroupsFromUserBetaOutput",
        "type": "object",
        "properties": {
          "groups": {
            "description": "The user groups that the user belongs to.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/MinimalUserGroupBeta" },
            "title": "groups"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination for groups.",
            "title": "pagination"
          }
        },
        "required": ["groups", "pagination"]
      },
      "ListRolesBetaInput": {
        "description": "Returns a list of roles available to apply to permissions for users in the workspace.",
        "title": "ListRolesBetaInput",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination for roles.",
            "title": "pagination"
          }
        },
        "required": ["pagination"]
      },
      "RoleBeta": {
        "description": "Represents a role.",
        "title": "RoleBeta",
        "type": "object",
        "properties": {
          "id": { "description": "The unique identifier of the role.", "type": "string", "title": "id" },
          "name": { "description": "The human-readable name of the role.", "type": "string", "title": "name" },
          "description": {
            "description": "The human-readable description of the role.",
            "type": "string",
            "title": "description"
          }
        },
        "required": ["description", "id", "name"]
      },
      "ListRolesBetaOutput": {
        "description": "Returns the list of roles.",
        "title": "ListRolesBetaOutput",
        "type": "object",
        "properties": {
          "roles": {
            "description": "The list of roles.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/RoleBeta" },
            "title": "roles"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination for roles.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "roles"]
      },
      "MinimalUserBeta": {
        "description": "A user belonging to a Segment workspace.",
        "title": "MinimalUserBeta",
        "type": "object",
        "properties": {
          "id": { "description": "The unique identifier of this user.", "type": "string", "title": "id" },
          "name": { "description": "The human-readable name of this user.", "type": "string", "title": "name" },
          "email": { "description": "The email address associated with this user.", "type": "string", "title": "email" }
        },
        "required": ["email", "id", "name"]
      },
      "CreateUserGroupBetaInput": {
        "description": "Creates a user group, used to bundle permissions for its members, within a workspace.",
        "title": "CreateUserGroupBetaInput",
        "type": "object",
        "properties": {
          "name": { "description": "The name of the user group to create.", "type": "string", "title": "name" }
        },
        "required": ["name"]
      },
      "UserGroupBeta": {
        "description": "A set of users with a set of shared permissions.",
        "title": "UserGroupBeta",
        "type": "object",
        "properties": {
          "memberCount": {
            "description": "The number of members in the user group.",
            "type": "number",
            "title": "memberCount"
          },
          "permissions": {
            "description": "The permissions associated with the user group.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/PermissionBeta" },
            "title": "permissions"
          },
          "id": { "description": "The id of the user group.", "type": "string", "title": "id" },
          "name": { "description": "The name of the user group.", "type": "string", "title": "name" }
        },
        "required": ["id", "memberCount", "name"]
      },
      "CreateUserGroupBetaOutput": {
        "description": "Returns the newly created user group.",
        "title": "CreateUserGroupBetaOutput",
        "type": "object",
        "properties": {
          "userGroup": {
            "$ref": "#/components/schemas/UserGroupBeta",
            "description": "The newly created user group.",
            "title": "userGroup"
          }
        },
        "required": ["userGroup"]
      },
      "AddPermissionsToUserGroupBetaInput": {
        "description": "Adds a list of permissions to a user group.",
        "title": "AddPermissionsToUserGroupBetaInput",
        "type": "object",
        "properties": {
          "userGroupId": {
            "description": "The id of the user group to add the permissions to.",
            "type": "string",
            "title": "userGroupId"
          },
          "permissions": {
            "description": "The permissions to add.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/PermissionInputBeta" },
            "title": "permissions"
          }
        },
        "required": ["permissions", "userGroupId"]
      },
      "AddPermissionsToUserGroupBetaOutput": {
        "description": "Returns the group's permissions, including the added permissions.",
        "title": "AddPermissionsToUserGroupBetaOutput",
        "type": "object",
        "properties": {
          "permissions": {
            "description": "The updated set of permissions assigned to the user group.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AccessPermissionBeta" },
            "title": "permissions"
          }
        },
        "required": ["permissions"]
      },
      "AddUsersToUserGroupBetaInput": {
        "description": "Adds a list of users and invites to a user group.",
        "title": "AddUsersToUserGroupBetaInput",
        "type": "object",
        "properties": {
          "userGroupId": {
            "description": "The id of the user group to add users to.",
            "type": "string",
            "title": "userGroupId"
          },
          "emails": {
            "description": "The email addresses of the users and invites to add.",
            "type": "array",
            "items": { "type": "string" },
            "title": "emails"
          }
        },
        "required": ["emails", "userGroupId"]
      },
      "AddUsersToUserGroupBetaOutput": {
        "description": "Returns the updated user group.",
        "title": "AddUsersToUserGroupBetaOutput",
        "type": "object",
        "properties": {
          "userGroup": {
            "$ref": "#/components/schemas/UserGroupBeta",
            "description": "The updated the user group.",
            "title": "userGroup"
          }
        },
        "required": ["userGroup"]
      },
      "DeleteUserGroupBetaInput": {
        "description": "Deletes a user group with a given group id from a workspace.",
        "title": "DeleteUserGroupBetaInput",
        "type": "object",
        "properties": {
          "userGroupId": {
            "description": "The id of the user group to delete.",
            "type": "string",
            "title": "userGroupId"
          }
        },
        "required": ["userGroupId"]
      },
      "DeleteUserGroupBetaOutput": {
        "description": "Returns the status of the completed deletion operation.",
        "title": "DeleteUserGroupBetaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "A flag indicating the status of a successful deletion operation.",
            "type": "string",
            "enum": ["SUCCESS"],
            "title": "status"
          }
        },
        "required": ["status"]
      },
      "GetUserGroupBetaInput": {
        "description": "Looks up a user group within a workspace.",
        "title": "GetUserGroupBetaInput",
        "type": "object",
        "properties": {
          "userGroupId": { "description": "The id of the user group.", "type": "string", "title": "userGroupId" }
        },
        "required": ["userGroupId"]
      },
      "GetUserGroupBetaOutput": {
        "description": "Returns a user group with the given id.",
        "title": "GetUserGroupBetaOutput",
        "type": "object",
        "properties": {
          "userGroup": {
            "$ref": "#/components/schemas/UserGroupBeta",
            "description": "The user group returned from the query.",
            "title": "userGroup"
          }
        },
        "required": ["userGroup"]
      },
      "UpdateUserGroupBetaInput": {
        "description": "Updates a user group with a given id.",
        "title": "UpdateUserGroupBetaInput",
        "type": "object",
        "properties": {
          "userGroupId": {
            "description": "The id of the user group to update.",
            "type": "string",
            "title": "userGroupId"
          },
          "name": {
            "description": "The intended value to rename the user group to.",
            "type": "string",
            "title": "name"
          }
        },
        "required": ["name", "userGroupId"]
      },
      "UpdateUserGroupBetaOutput": {
        "description": "Returns the updated user group.",
        "title": "UpdateUserGroupBetaOutput",
        "type": "object",
        "properties": {
          "userGroup": {
            "$ref": "#/components/schemas/UserGroupBeta",
            "description": "The updated user group.",
            "title": "userGroup"
          }
        },
        "required": ["userGroup"]
      },
      "ListInvitesFromUserGroupBetaInput": {
        "description": "Looks up the invitees to a user group within a workspace.",
        "title": "ListInvitesFromUserGroupBetaInput",
        "type": "object",
        "properties": {
          "userGroupId": { "description": "The id of the user group.", "type": "string", "title": "userGroupId" },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination for invites to the group.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "userGroupId"]
      },
      "ListInvitesFromUserGroupBetaOutput": {
        "description": "Returns the emails of invitees to a user group with the given group id.",
        "title": "ListInvitesFromUserGroupBetaOutput",
        "type": "object",
        "properties": {
          "emails": {
            "description": "The emails of the invitees to the user group.",
            "type": "array",
            "items": { "type": "string" },
            "title": "emails"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination for invite emails.",
            "title": "pagination"
          }
        },
        "required": ["emails", "pagination"]
      },
      "ReplaceUsersInUserGroupBetaInput": {
        "description": "Replace a user group's list of users and invites with a new one.",
        "title": "ReplaceUsersInUserGroupBetaInput",
        "type": "object",
        "properties": {
          "userGroupId": {
            "description": "The id of the user group to replace users.",
            "type": "string",
            "title": "userGroupId"
          },
          "emails": {
            "description": "The email addresses of the users and invites to replace.",
            "type": "array",
            "items": { "type": "string" },
            "title": "emails"
          }
        },
        "required": ["emails", "userGroupId"]
      },
      "ReplaceUsersInUserGroupBetaOutput": {
        "description": "Returns the updated user group.",
        "title": "ReplaceUsersInUserGroupBetaOutput",
        "type": "object",
        "properties": {
          "userGroup": {
            "$ref": "#/components/schemas/UserGroupBeta",
            "description": "The updated the user group.",
            "title": "userGroup"
          }
        },
        "required": ["userGroup"]
      },
      "ListUserGroupsBetaInput": {
        "description": "Loads all user groups for a workspace.",
        "title": "ListUserGroupsBetaInput",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination for user groups.",
            "title": "pagination"
          }
        },
        "required": ["pagination"]
      },
      "ListUserGroupsBetaOutput": {
        "description": "Returns a list of user groups with the given workspace id.",
        "title": "ListUserGroupsBetaOutput",
        "type": "object",
        "properties": {
          "userGroups": {
            "description": "The user group returned from the query.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/UserGroupBeta" },
            "title": "userGroups"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination for user groups.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "userGroups"]
      },
      "RemoveUsersFromUserGroupBetaInput": {
        "description": "Removes users or invites from a user group.",
        "title": "RemoveUsersFromUserGroupBetaInput",
        "type": "object",
        "properties": {
          "userGroupId": { "description": "The id of the user group.", "type": "string", "title": "userGroupId" },
          "emails": {
            "description": "The list of emails to remove from the user group.",
            "type": "array",
            "items": { "type": "string" },
            "title": "emails"
          }
        },
        "required": ["emails", "userGroupId"]
      },
      "RemoveUsersFromUserGroupBetaOutput": {
        "description": "Returns the status of the removal operation.",
        "title": "RemoveUsersFromUserGroupBetaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the user removal from user group operation.",
            "type": "string",
            "enum": ["SUCCESS"],
            "title": "status"
          }
        },
        "required": ["status"]
      },
      "ReplacePermissionsForUserGroupBetaInput": {
        "description": "Updates the list of permissions for a user group.",
        "title": "ReplacePermissionsForUserGroupBetaInput",
        "type": "object",
        "properties": {
          "userGroupId": {
            "description": "The id of the user group to add the permissions to.",
            "type": "string",
            "title": "userGroupId"
          },
          "permissions": {
            "description": "The permissions to replace with.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/PermissionInputBeta" },
            "title": "permissions"
          }
        },
        "required": ["permissions", "userGroupId"]
      },
      "ReplacePermissionsForUserGroupBetaOutput": {
        "description": "Returns the user group's permissions, including the updated permissions.",
        "title": "ReplacePermissionsForUserGroupBetaOutput",
        "type": "object",
        "properties": {
          "permissions": {
            "description": "The updated permissions.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AccessPermissionBeta" },
            "title": "permissions"
          }
        },
        "required": ["permissions"]
      },
      "ListUsersFromUserGroupBetaInput": {
        "description": "Looks up the members of a user group within a workspace.",
        "title": "ListUsersFromUserGroupBetaInput",
        "type": "object",
        "properties": {
          "userGroupId": { "description": "The id of the user group.", "type": "string", "title": "userGroupId" },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination for members of a group.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "userGroupId"]
      },
      "ListUsersFromUserGroupBetaOutput": {
        "description": "Returns the members of a user group with the given group id.",
        "title": "ListUsersFromUserGroupBetaOutput",
        "type": "object",
        "properties": {
          "users": {
            "description": "The users of the user group.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/MinimalUserBeta" },
            "title": "users"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination for users.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "users"]
      },
      "ResourceV1": {
        "description": "Represents a permission's resource.",
        "title": "ResourceV1",
        "type": "object",
        "properties": {
          "id": { "description": "The id of this resource.", "type": "string", "title": "id" },
          "type": {
            "description": "The kind of resource this permission applies to.",
            "enum": ["FUNCTION", "SOURCE", "SPACE", "WAREHOUSE", "WORKSPACE"],
            "type": "string",
            "title": "type"
          }
        },
        "required": ["id", "type"]
      },
      "InvitePermissionV1": {
        "description": "Defines a permission to apply to the user in an invite.",
        "title": "InvitePermissionV1",
        "type": "object",
        "properties": {
          "roleId": { "description": "The id of the role.", "type": "string", "title": "roleId" },
          "resources": {
            "description": "The resources to grant the invited users access to.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/ResourceV1" },
            "title": "resources"
          },
          "labels": {
            "description": "The labels that determine which resources to grant users access to.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AllowedLabelBeta" },
            "title": "labels"
          }
        },
        "required": ["roleId"]
      },
      "InviteV1": {
        "description": "Defines an invitation to join a workspace.",
        "title": "InviteV1",
        "type": "object",
        "properties": {
          "email": {
            "description": "The invited user's email to attach the permissions to.",
            "type": "string",
            "title": "email"
          },
          "permissions": {
            "description": "The permissions to attach to the invited user.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/InvitePermissionV1" },
            "title": "permissions"
          }
        },
        "required": ["email"]
      },
      "CreateInvitesV1Input": {
        "description": "Invites a user to a workspace with specified permissions.",
        "title": "CreateInvitesV1Input",
        "type": "object",
        "properties": {
          "invites": {
            "description": "The list of invites.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/InviteV1" },
            "title": "invites"
          }
        },
        "required": ["invites"]
      },
      "CreateInvitesV1Output": {
        "description": "Returns the emails of the invited users.",
        "title": "CreateInvitesV1Output",
        "type": "object",
        "properties": {
          "emails": {
            "description": "The list of emails invited to the workspace.",
            "type": "array",
            "items": { "type": "string" },
            "title": "emails"
          }
        },
        "required": ["emails"]
      },
      "DeleteInvitesV1Input": {
        "description": "Removes pre-existing invitations to join a workspace.",
        "title": "DeleteInvitesV1Input",
        "type": "object",
        "properties": {
          "emails": {
            "description": "The list of emails to delete invites for.",
            "type": "array",
            "items": { "type": "string" },
            "title": "emails"
          }
        },
        "required": ["emails"]
      },
      "DeleteInvitesV1Output": {
        "description": "Returns the status of the removal operation.",
        "title": "DeleteInvitesV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the invite deletion operation.",
            "type": "string",
            "enum": ["SUCCESS"],
            "title": "status"
          }
        },
        "required": ["status"]
      },
      "ListInvitesV1Input": {
        "description": "Retrieves a list of existing invitations to join a workspace.",
        "title": "ListInvitesV1Input",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Defines the pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["pagination"]
      },
      "ListInvitesV1Output": {
        "description": "Returns the list of invites.",
        "title": "ListInvitesV1Output",
        "type": "object",
        "properties": {
          "invites": {
            "description": "The list of invites.",
            "type": "array",
            "items": { "type": "string" },
            "title": "invites"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination information about this resource.",
            "title": "pagination"
          }
        },
        "required": ["invites", "pagination"]
      },
      "PermissionResourceV1": {
        "description": "The most basic representation of a resource belonging to a set of permissions.",
        "title": "PermissionResourceV1",
        "type": "object",
        "properties": {
          "id": { "description": "The id of this resource.", "type": "string", "title": "id" },
          "type": {
            "description": "The type for this resource.",
            "enum": ["FUNCTION", "SOURCE", "SPACE", "WAREHOUSE", "WORKSPACE"],
            "type": "string",
            "title": "type"
          },
          "labels": {
            "description": "The labels that further refine access to this resource. Labels are exclusive to workspace-level permissions.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AllowedLabelBeta" },
            "title": "labels"
          }
        },
        "required": ["id", "type"]
      },
      "PermissionV1": {
        "description": "A registered set of permissions for a subject, extending a role to a resource.",
        "title": "PermissionV1",
        "type": "object",
        "properties": {
          "roleName": {
            "description": "The name of the role associated with this permission.",
            "type": "string",
            "title": "roleName"
          },
          "roleId": {
            "description": "The id of the role associated with this permission.",
            "type": "string",
            "title": "roleId"
          },
          "resources": {
            "description": "The resources associated with this permission.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/PermissionResourceV1" },
            "title": "resources"
          },
          "labels": {
            "description": "The labels to attach to this permission.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AllowedLabelBeta" },
            "title": "labels"
          }
        },
        "required": ["resources", "roleId", "roleName"]
      },
      "MinimalUserGroupV1": {
        "description": "The least amount of information needed to identify a user group.",
        "title": "MinimalUserGroupV1",
        "type": "object",
        "properties": {
          "id": { "description": "The id of the user group.", "type": "string", "title": "id" },
          "name": { "description": "The name of the user group.", "type": "string", "title": "name" }
        },
        "required": ["id", "name"]
      },
      "DeleteUsersV1Input": {
        "description": "Removes users from a workspace.",
        "title": "DeleteUsersV1Input",
        "type": "object",
        "properties": {
          "userIds": {
            "description": "The ids of the users to remove.",
            "type": "array",
            "items": { "type": "string" },
            "title": "userIds"
          }
        },
        "required": ["userIds"]
      },
      "DeleteUsersV1Output": {
        "description": "Returns the status of the removal operation.",
        "title": "DeleteUsersV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "A flag that indicates the status of a successful deletion operation.",
            "type": "string",
            "enum": ["SUCCESS"],
            "title": "status"
          }
        },
        "required": ["status"]
      },
      "AccessPermissionV1": {
        "description": "A permission governing access to a resource.",
        "title": "AccessPermissionV1",
        "type": "object",
        "properties": {
          "roleId": {
            "description": "The id of the role that applies to this permission.",
            "type": "string",
            "title": "roleId"
          },
          "roleName": {
            "description": "The name of the role that applies to this permission.",
            "type": "string",
            "title": "roleName"
          },
          "resources": {
            "description": "The resources included with this permission.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/PermissionResourceV1" },
            "title": "resources"
          }
        },
        "required": ["resources", "roleId", "roleName"]
      },
      "PermissionInputV1": {
        "description": "The input for a permission, associated with a resource and/or labels.",
        "title": "PermissionInputV1",
        "type": "object",
        "properties": {
          "roleId": { "description": "The role id of this permission.", "type": "string", "title": "roleId" },
          "resources": {
            "description": "The resources to link the selected role to.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/PermissionResourceV1" },
            "title": "resources"
          }
        },
        "required": ["resources", "roleId"]
      },
      "AddPermissionsToUserV1Input": {
        "description": "Adds a list of permissions to a user.",
        "title": "AddPermissionsToUserV1Input",
        "type": "object",
        "properties": {
          "userId": {
            "description": "The id of the user to add the permissions to.",
            "type": "string",
            "title": "userId"
          },
          "permissions": {
            "description": "The permissions to add.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/PermissionInputV1" },
            "title": "permissions"
          }
        },
        "required": ["permissions", "userId"]
      },
      "AddPermissionsToUserV1Output": {
        "description": "Returns the user's permissions, including the added permissions.",
        "title": "AddPermissionsToUserV1Output",
        "type": "object",
        "properties": {
          "permissions": {
            "description": "The new permissions.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AccessPermissionV1" },
            "title": "permissions"
          }
        },
        "required": ["permissions"]
      },
      "ReplacePermissionsForUserV1Input": {
        "description": "Updates the list of permissions for a user.",
        "title": "ReplacePermissionsForUserV1Input",
        "type": "object",
        "properties": {
          "userId": {
            "description": "The id of the user to add the permissions to.",
            "type": "string",
            "title": "userId"
          },
          "permissions": {
            "description": "The permissions to add.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/PermissionInputV1" },
            "title": "permissions"
          }
        },
        "required": ["permissions", "userId"]
      },
      "ReplacePermissionsForUserV1Output": {
        "description": "Returns the user's permissions, including the updated permissions.",
        "title": "ReplacePermissionsForUserV1Output",
        "type": "object",
        "properties": {
          "permissions": {
            "description": "The updated permissions.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AccessPermissionV1" },
            "title": "permissions"
          }
        },
        "required": ["permissions"]
      },
      "ListUsersV1Input": {
        "description": "Returns a list of users with access to the workspace.",
        "title": "ListUsersV1Input",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination for users.",
            "title": "pagination"
          }
        },
        "required": ["pagination"]
      },
      "ListUsersV1Output": {
        "description": "Returns the list of users.",
        "title": "ListUsersV1Output",
        "type": "object",
        "properties": {
          "users": {
            "description": "The list of users.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/UserV1" },
            "title": "users"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination for users.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "users"]
      },
      "GetUserV1Input": {
        "description": "Returns a user.",
        "title": "GetUserV1Input",
        "type": "object",
        "properties": {
          "userId": { "description": "The id of the user to return.", "type": "string", "title": "userId" }
        },
        "required": ["userId"]
      },
      "GetUserV1Output": {
        "description": "Returns the user.",
        "title": "GetUserV1Output",
        "type": "object",
        "properties": {
          "user": { "$ref": "#/components/schemas/UserV1", "description": "The user object.", "title": "user" }
        },
        "required": ["user"]
      },
      "UserV1": {
        "description": "A user belonging to a Segment workspace.",
        "title": "UserV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier of this user.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "id"
          },
          "name": { "description": "The human-readable name of this user.", "type": "string", "title": "name" },
          "email": {
            "description": "The email address associated with this user.",
            "type": "string",
            "title": "email"
          },
          "permissions": {
            "description": "The permissions associated with this user.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/PermissionV1" },
            "title": "permissions"
          }
        },
        "required": ["email", "id", "name"]
      },
      "ListUserGroupsFromUserV1Input": {
        "description": "Retrieves all user groups the user belongs to.",
        "title": "ListUserGroupsFromUserV1Input",
        "type": "object",
        "properties": {
          "userId": { "description": "The id of the user to get groups for.", "type": "string", "title": "userId" },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination for groups.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "userId"]
      },
      "ListUserGroupsFromUserV1Output": {
        "description": "Returns all user groups the user belongs to.",
        "title": "ListUserGroupsFromUserV1Output",
        "type": "object",
        "properties": {
          "groups": {
            "description": "The user groups that the user belongs to.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/MinimalUserGroupV1" },
            "title": "groups"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination for groups.",
            "title": "pagination"
          }
        },
        "required": ["groups", "pagination"]
      },
      "ListRolesV1Input": {
        "description": "Returns a list of roles available to apply to permissions for users in the workspace.",
        "title": "ListRolesV1Input",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination for roles.",
            "title": "pagination"
          }
        },
        "required": ["pagination"]
      },
      "RoleV1": {
        "description": "Represents a role.",
        "title": "RoleV1",
        "type": "object",
        "properties": {
          "id": { "description": "The unique identifier of the role.", "type": "string", "title": "id" },
          "name": { "description": "The human-readable name of the role.", "type": "string", "title": "name" },
          "description": {
            "description": "The human-readable description of the role.",
            "type": "string",
            "title": "description"
          }
        },
        "required": ["description", "id", "name"]
      },
      "ListRolesV1Output": {
        "description": "Returns the list of roles.",
        "title": "ListRolesV1Output",
        "type": "object",
        "properties": {
          "roles": {
            "description": "The list of roles.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/RoleV1" },
            "title": "roles"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination for roles.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "roles"]
      },
      "MinimalUserV1": {
        "description": "A user belonging to a Segment workspace.",
        "title": "MinimalUserV1",
        "type": "object",
        "properties": {
          "id": { "description": "The unique identifier of this user.", "type": "string", "title": "id" },
          "name": { "description": "The human-readable name of this user.", "type": "string", "title": "name" },
          "email": { "description": "The email address associated with this user.", "type": "string", "title": "email" }
        },
        "required": ["email", "id", "name"]
      },
      "CreateUserGroupV1Input": {
        "description": "Creates a user group, used to bundle permissions for its members, within a workspace.",
        "title": "CreateUserGroupV1Input",
        "type": "object",
        "properties": {
          "name": { "description": "The name of the user group to create.", "type": "string", "title": "name" }
        },
        "required": ["name"]
      },
      "UserGroupV1": {
        "description": "A set of users with a set of shared permissions.",
        "title": "UserGroupV1",
        "type": "object",
        "properties": {
          "memberCount": {
            "description": "The number of members in the user group.",
            "type": "number",
            "title": "memberCount"
          },
          "permissions": {
            "description": "The permissions associated with the user group.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/PermissionV1" },
            "title": "permissions"
          },
          "id": { "description": "The id of the user group.", "type": "string", "title": "id" },
          "name": { "description": "The name of the user group.", "type": "string", "title": "name" }
        },
        "required": ["id", "memberCount", "name"]
      },
      "CreateUserGroupV1Output": {
        "description": "Returns the newly created user group.",
        "title": "CreateUserGroupV1Output",
        "type": "object",
        "properties": {
          "userGroup": {
            "$ref": "#/components/schemas/UserGroupV1",
            "description": "The newly created user group.",
            "title": "userGroup"
          }
        },
        "required": ["userGroup"]
      },
      "AddPermissionsToUserGroupV1Input": {
        "description": "Adds a list of permissions to a user group.",
        "title": "AddPermissionsToUserGroupV1Input",
        "type": "object",
        "properties": {
          "userGroupId": {
            "description": "The id of the user group to add the permissions to.",
            "type": "string",
            "title": "userGroupId"
          },
          "permissions": {
            "description": "The permissions to add.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/PermissionInputV1" },
            "title": "permissions"
          }
        },
        "required": ["permissions", "userGroupId"]
      },
      "AddPermissionsToUserGroupV1Output": {
        "description": "Returns the group's permissions, including the added permissions.",
        "title": "AddPermissionsToUserGroupV1Output",
        "type": "object",
        "properties": {
          "permissions": {
            "description": "The updated set of permissions assigned to the user group.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AccessPermissionV1" },
            "title": "permissions"
          }
        },
        "required": ["permissions"]
      },
      "AddUsersToUserGroupV1Input": {
        "description": "Adds a list of users and invites to a user group.",
        "title": "AddUsersToUserGroupV1Input",
        "type": "object",
        "properties": {
          "userGroupId": {
            "description": "The id of the user group to add users to.",
            "type": "string",
            "title": "userGroupId"
          },
          "emails": {
            "description": "The email addresses of the users and invites to add.",
            "type": "array",
            "items": { "type": "string" },
            "title": "emails"
          }
        },
        "required": ["emails", "userGroupId"]
      },
      "AddUsersToUserGroupV1Output": {
        "description": "Returns the updated user group.",
        "title": "AddUsersToUserGroupV1Output",
        "type": "object",
        "properties": {
          "userGroup": {
            "$ref": "#/components/schemas/UserGroupV1",
            "description": "The updated the user group.",
            "title": "userGroup"
          }
        },
        "required": ["userGroup"]
      },
      "DeleteUserGroupV1Input": {
        "description": "Deletes a user group with a given group id from a workspace.",
        "title": "DeleteUserGroupV1Input",
        "type": "object",
        "properties": {
          "userGroupId": {
            "description": "The id of the user group to delete.",
            "type": "string",
            "title": "userGroupId"
          }
        },
        "required": ["userGroupId"]
      },
      "DeleteUserGroupV1Output": {
        "description": "Returns the status of the completed deletion operation.",
        "title": "DeleteUserGroupV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "A flag indicating the status of a successful deletion operation.",
            "type": "string",
            "enum": ["SUCCESS"],
            "title": "status"
          }
        },
        "required": ["status"]
      },
      "GetUserGroupV1Input": {
        "description": "Looks up a user group within a workspace.",
        "title": "GetUserGroupV1Input",
        "type": "object",
        "properties": {
          "userGroupId": { "description": "The id of the user group.", "type": "string", "title": "userGroupId" }
        },
        "required": ["userGroupId"]
      },
      "GetUserGroupV1Output": {
        "description": "Returns a user group with the given id.",
        "title": "GetUserGroupV1Output",
        "type": "object",
        "properties": {
          "userGroup": {
            "$ref": "#/components/schemas/UserGroupV1",
            "description": "The user group returned from the query.",
            "title": "userGroup"
          }
        },
        "required": ["userGroup"]
      },
      "UpdateUserGroupV1Input": {
        "description": "Updates a user group with a given id.",
        "title": "UpdateUserGroupV1Input",
        "type": "object",
        "properties": {
          "userGroupId": {
            "description": "The id of the user group to update.",
            "type": "string",
            "title": "userGroupId"
          },
          "name": {
            "description": "The intended value to rename the user group to.",
            "type": "string",
            "title": "name"
          }
        },
        "required": ["name", "userGroupId"]
      },
      "UpdateUserGroupV1Output": {
        "description": "Returns the updated user group.",
        "title": "UpdateUserGroupV1Output",
        "type": "object",
        "properties": {
          "userGroup": {
            "$ref": "#/components/schemas/UserGroupV1",
            "description": "The updated user group.",
            "title": "userGroup"
          }
        },
        "required": ["userGroup"]
      },
      "ListInvitesFromUserGroupV1Input": {
        "description": "Looks up the invitees to a user group within a workspace.",
        "title": "ListInvitesFromUserGroupV1Input",
        "type": "object",
        "properties": {
          "userGroupId": { "description": "The id of the user group.", "type": "string", "title": "userGroupId" },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination for invites to the group.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "userGroupId"]
      },
      "ListInvitesFromUserGroupV1Output": {
        "description": "Returns the emails of invitees to a user group with the given group id.",
        "title": "ListInvitesFromUserGroupV1Output",
        "type": "object",
        "properties": {
          "emails": {
            "description": "The emails of the invitees to the user group.",
            "type": "array",
            "items": { "type": "string" },
            "title": "emails"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination for invite emails.",
            "title": "pagination"
          }
        },
        "required": ["emails", "pagination"]
      },
      "ReplaceUsersInUserGroupV1Input": {
        "description": "Replace a user group's list of users and invites with a new one.",
        "title": "ReplaceUsersInUserGroupV1Input",
        "type": "object",
        "properties": {
          "userGroupId": {
            "description": "The id of the user group to replace users.",
            "type": "string",
            "title": "userGroupId"
          },
          "emails": {
            "description": "The email addresses of the users and invites to replace.",
            "type": "array",
            "items": { "type": "string" },
            "title": "emails"
          }
        },
        "required": ["emails", "userGroupId"]
      },
      "ReplaceUsersInUserGroupV1Output": {
        "description": "Returns the updated user group.",
        "title": "ReplaceUsersInUserGroupV1Output",
        "type": "object",
        "properties": {
          "userGroup": {
            "$ref": "#/components/schemas/UserGroupV1",
            "description": "The updated the user group.",
            "title": "userGroup"
          }
        },
        "required": ["userGroup"]
      },
      "ListUserGroupsV1Input": {
        "description": "Loads all user groups for a workspace.",
        "title": "ListUserGroupsV1Input",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination for user groups.",
            "title": "pagination"
          }
        },
        "required": ["pagination"]
      },
      "ListUserGroupsV1Output": {
        "description": "Returns a list of user groups with the given workspace id.",
        "title": "ListUserGroupsV1Output",
        "type": "object",
        "properties": {
          "userGroups": {
            "description": "The user group returned from the query.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/UserGroupV1" },
            "title": "userGroups"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination for user groups.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "userGroups"]
      },
      "RemoveUsersFromUserGroupV1Input": {
        "description": "Removes users or invites from a user group.",
        "title": "RemoveUsersFromUserGroupV1Input",
        "type": "object",
        "properties": {
          "userGroupId": { "description": "The id of the user group.", "type": "string", "title": "userGroupId" },
          "emails": {
            "description": "The list of emails to remove from the user group.",
            "type": "array",
            "items": { "type": "string" },
            "title": "emails"
          }
        },
        "required": ["emails", "userGroupId"]
      },
      "RemoveUsersFromUserGroupV1Output": {
        "description": "Returns the status of the removal operation.",
        "title": "RemoveUsersFromUserGroupV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the user removal from user group operation.",
            "type": "string",
            "enum": ["SUCCESS"],
            "title": "status"
          }
        },
        "required": ["status"]
      },
      "ReplacePermissionsForUserGroupV1Input": {
        "description": "Updates the list of permissions for a user group.",
        "title": "ReplacePermissionsForUserGroupV1Input",
        "type": "object",
        "properties": {
          "userGroupId": {
            "description": "The id of the user group to add the permissions to.",
            "type": "string",
            "title": "userGroupId"
          },
          "permissions": {
            "description": "The permissions to replace with.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/PermissionInputV1" },
            "title": "permissions"
          }
        },
        "required": ["permissions", "userGroupId"]
      },
      "ReplacePermissionsForUserGroupV1Output": {
        "description": "Returns the user group's permissions, including the updated permissions.",
        "title": "ReplacePermissionsForUserGroupV1Output",
        "type": "object",
        "properties": {
          "permissions": {
            "description": "The updated permissions.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AccessPermissionV1" },
            "title": "permissions"
          }
        },
        "required": ["permissions"]
      },
      "ListUsersFromUserGroupV1Input": {
        "description": "Looks up the members of a user group within a workspace.",
        "title": "ListUsersFromUserGroupV1Input",
        "type": "object",
        "properties": {
          "userGroupId": { "description": "The id of the user group.", "type": "string", "title": "userGroupId" },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination for members of a group.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "userGroupId"]
      },
      "ListUsersFromUserGroupV1Output": {
        "description": "Returns the members of a user group with the given group id.",
        "title": "ListUsersFromUserGroupV1Output",
        "type": "object",
        "properties": {
          "users": {
            "description": "The users of the user group.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/MinimalUserV1" },
            "title": "users"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination for users.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "users"]
      },
      "IntegrationOptionAlpha": {
        "description": "Describes an integration option field required to set up a Segment integration such as sources, destinations, or\nwarehouses.",
        "title": "IntegrationOptionAlpha",
        "type": "object",
        "properties": {
          "name": {
            "description": "The name identifying this option in the context of a Segment integration.",
            "type": "string",
            "title": "name"
          },
          "type": {
            "description": "Defines the type for this option in the schema. Types are most commonly strings, but may also represent other\nprimitive types, such as booleans, and numbers, as well as complex types, such as objects and arrays.",
            "type": "string",
            "title": "type"
          },
          "required": {
            "description": "Whether this is a required option when setting up the integration.",
            "type": "boolean",
            "title": "required"
          },
          "description": {
            "description": "An optional short text description of the field.",
            "type": "string",
            "title": "description"
          },
          "defaultValue": { "description": "An optional default value for the field.", "title": "defaultValue" },
          "label": { "description": "An optional label for this field.", "type": "string", "title": "label" }
        },
        "required": ["name", "required", "type"]
      },
      "IntegrationOptionBeta": {
        "description": "Describes an integration option field required to set up a Segment integration such as sources, destinations, or\nwarehouses.",
        "title": "IntegrationOptionBeta",
        "type": "object",
        "properties": {
          "name": {
            "description": "The name identifying this option in the context of a Segment integration.",
            "type": "string",
            "title": "name"
          },
          "type": {
            "description": "Defines the type for this option in the schema. Types are most commonly strings, but may also represent other\nprimitive types, such as booleans, and numbers, as well as complex types, such as objects and arrays.",
            "type": "string",
            "title": "type"
          },
          "required": {
            "description": "Whether this is a required option when setting up the integration.",
            "type": "boolean",
            "title": "required"
          },
          "description": {
            "description": "An optional short text description of the field.",
            "type": "string",
            "title": "description"
          },
          "defaultValue": { "description": "An optional default value for the field.", "title": "defaultValue" },
          "label": { "description": "An optional label for this field.", "type": "string", "title": "label" }
        },
        "required": ["name", "required", "type"]
      },
      "LogosAlpha": {
        "description": "Represents a logo.",
        "title": "LogosAlpha",
        "type": "object",
        "properties": {
          "default": { "description": "The default URL for this logo.", "type": "string", "title": "default" },
          "mark": { "description": "The logo mark.", "type": "string", "title": "mark", "nullable": true },
          "alt": {
            "description": "The alternative text for this logo.",
            "type": "string",
            "title": "alt",
            "nullable": true
          }
        },
        "required": ["default"]
      },
      "LogosBeta": {
        "description": "Represents a logo.",
        "title": "LogosBeta",
        "type": "object",
        "properties": {
          "default": { "description": "The default URL for this logo.", "type": "string", "title": "default" },
          "mark": { "description": "The logo mark.", "type": "string", "title": "mark", "nullable": true },
          "alt": {
            "description": "The alternative text for this logo.",
            "type": "string",
            "title": "alt",
            "nullable": true
          }
        },
        "required": ["default"]
      },
      "LabelAlpha": {
        "description": "A label lets workspace owners assign permissions to users, and grant these users access to groups.\n\nA workspace owner may use labels to grant users access to groups of resources.\n\nWhen you add a label to a source or Personas Spaces, any users granted access to that label gain access to those\nresources.\n\nAll workspaces include labels for Dev (development) and Prod (production) environments. On top of those, Free and\nTeam plan customers may create up to five labels.\n\nCustomers with the Enterprise pricing package may create an unlimited number of labels.",
        "title": "LabelAlpha",
        "type": "object",
        "properties": {
          "key": { "description": "The key that represents the name of this label.", "type": "string", "title": "key" },
          "value": {
            "description": "The value associated with the key of this label.",
            "type": "string",
            "title": "value"
          },
          "description": {
            "description": "An optional description of the purpose of this label.",
            "type": "string",
            "title": "description"
          }
        },
        "required": ["key", "value"]
      },
      "ListLabelsAlphaInput": {
        "description": "Retrieves all available labels for the current workspace.",
        "title": "ListLabelsAlphaInput",
        "type": "object"
      },
      "ListLabelsAlphaOutput": {
        "description": "Returns all available labels for the current workspace.",
        "title": "ListLabelsAlphaOutput",
        "type": "object",
        "properties": {
          "labels": {
            "description": "All labels associated with the current workspace.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/LabelAlpha" },
            "title": "labels"
          }
        },
        "required": ["labels"]
      },
      "CreateLabelAlphaInput": {
        "description": "Creates a new label in the current workspace.",
        "title": "CreateLabelAlphaInput",
        "type": "object",
        "properties": {
          "label": {
            "$ref": "#/components/schemas/LabelAlpha",
            "description": "The new label to create in the workspace.",
            "title": "label"
          }
        },
        "required": ["label"]
      },
      "CreateLabelAlphaOutput": {
        "description": "Result of creating a new label in the current workspace.",
        "title": "CreateLabelAlphaOutput",
        "type": "object",
        "properties": {
          "labels": {
            "description": "All labels associated with the current workspace.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/LabelAlpha" },
            "title": "labels"
          }
        },
        "required": ["labels"]
      },
      "DeleteLabelAlphaInput": {
        "description": "Deletes an existing label in the current workspace.",
        "title": "DeleteLabelAlphaInput",
        "type": "object",
        "properties": {
          "key": {
            "description": "The key of the label to delete in the workspace.",
            "type": "string",
            "title": "key"
          },
          "value": {
            "description": "The value of the label to delete in the workspace.",
            "type": "string",
            "title": "value"
          }
        },
        "required": ["key", "value"]
      },
      "DeleteLabelAlphaOutput": {
        "description": "Returns the status of a label deletion.",
        "title": "DeleteLabelAlphaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the label deletion operation.",
            "type": "string",
            "enum": ["SUCCESS"],
            "title": "status"
          }
        },
        "required": ["status"]
      },
      "AddLabelsToSourceAlphaInput": {
        "description": "Applies an existing label to an existing source.",
        "title": "AddLabelsToSourceAlphaInput",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the source to apply the labels to.",
            "type": "string",
            "title": "sourceId"
          },
          "labels": {
            "description": "The labels to associate with a source.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/LabelAlpha" },
            "title": "labels"
          }
        },
        "required": ["labels", "sourceId"]
      },
      "AddLabelsToSourceAlphaOutput": {
        "description": "Applies an existing label to an existing source.",
        "title": "AddLabelsToSourceAlphaOutput",
        "type": "object",
        "properties": {
          "labels": {
            "description": "All labels applied to the source.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/LabelAlpha" },
            "title": "labels"
          }
        },
        "required": ["labels"]
      },
      "ReplaceLabelsInSourceAlphaInput": {
        "description": "Replaces all labels in a source with a list of new labels.",
        "title": "ReplaceLabelsInSourceAlphaInput",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the source to replace the labels in.",
            "type": "string",
            "title": "sourceId"
          },
          "labels": {
            "description": "The list of labels to replace in the source.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/LabelAlpha" },
            "title": "labels"
          }
        },
        "required": ["labels", "sourceId"]
      },
      "ReplaceLabelsInSourceAlphaOutput": {
        "description": "Response from replacing a list of labels in a source.",
        "title": "ReplaceLabelsInSourceAlphaOutput",
        "type": "object",
        "properties": {
          "labels": {
            "description": "All labels replaced in the source.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/LabelAlpha" },
            "title": "labels"
          }
        },
        "required": ["labels"]
      },
      "LabelBeta": {
        "description": "A label lets workspace owners assign permissions to users, and grant these users access to groups.\n\nA workspace owner may use labels to grant users access to groups of resources.\n\nWhen you add a label to a source or Personas Spaces, any users granted access to that label gain access to those\nresources.\n\nAll workspaces include labels for Dev (development) and Prod (production) environments. On top of those, Free and\nTeam plan customers may create up to five labels.\n\nCustomers with the Enterprise pricing package may create an unlimited number of labels.",
        "title": "LabelBeta",
        "type": "object",
        "properties": {
          "key": { "description": "The key that represents the name of this label.", "type": "string", "title": "key" },
          "value": {
            "description": "The value associated with the key of this label.",
            "type": "string",
            "title": "value"
          },
          "description": {
            "description": "An optional description of the purpose of this label.",
            "type": "string",
            "title": "description"
          }
        },
        "required": ["key", "value"]
      },
      "ListLabelsBetaInput": {
        "description": "Retrieves all available labels for the current workspace.",
        "title": "ListLabelsBetaInput",
        "type": "object"
      },
      "ListLabelsBetaOutput": {
        "description": "Returns all available labels for the current workspace.",
        "title": "ListLabelsBetaOutput",
        "type": "object",
        "properties": {
          "labels": {
            "description": "All labels associated with the current workspace.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/LabelBeta" },
            "title": "labels"
          }
        },
        "required": ["labels"]
      },
      "CreateLabelBetaInput": {
        "description": "Creates a new label in the current workspace.",
        "title": "CreateLabelBetaInput",
        "type": "object",
        "properties": {
          "label": {
            "$ref": "#/components/schemas/LabelBeta",
            "description": "The new label to create in the workspace.",
            "title": "label"
          }
        },
        "required": ["label"]
      },
      "CreateLabelBetaOutput": {
        "description": "Result of creating a new label in the current workspace.",
        "title": "CreateLabelBetaOutput",
        "type": "object",
        "properties": {
          "label": {
            "$ref": "#/components/schemas/LabelBeta",
            "description": "All labels associated with the current workspace.",
            "title": "label"
          }
        },
        "required": ["label"]
      },
      "DeleteLabelBetaInput": {
        "description": "Deletes an existing label in the current workspace.",
        "title": "DeleteLabelBetaInput",
        "type": "object",
        "properties": {
          "key": {
            "description": "The key of the label to delete in the workspace.",
            "type": "string",
            "title": "key"
          },
          "value": {
            "description": "The value of the label to delete in the workspace.",
            "type": "string",
            "title": "value"
          }
        },
        "required": ["key", "value"]
      },
      "DeleteLabelBetaOutput": {
        "description": "Returns the status of a label deletion.",
        "title": "DeleteLabelBetaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the label deletion operation.",
            "type": "string",
            "enum": ["SUCCESS"],
            "title": "status"
          }
        },
        "required": ["status"]
      },
      "AddLabelsToSourceBetaInput": {
        "description": "Applies an existing label to an existing source.",
        "title": "AddLabelsToSourceBetaInput",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the source to apply the labels to.",
            "type": "string",
            "title": "sourceId"
          },
          "labels": {
            "description": "The labels to associate with a source.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/LabelBeta" },
            "title": "labels"
          }
        },
        "required": ["labels", "sourceId"]
      },
      "AddLabelsToSourceBetaOutput": {
        "description": "Applies an existing label to an existing source.",
        "title": "AddLabelsToSourceBetaOutput",
        "type": "object",
        "properties": {
          "labels": {
            "description": "All labels applied to the source.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/LabelBeta" },
            "title": "labels"
          }
        },
        "required": ["labels"]
      },
      "ReplaceLabelsInSourceBetaInput": {
        "description": "Replaces all labels in a source with a list of new labels.",
        "title": "ReplaceLabelsInSourceBetaInput",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the source to replace the labels in.",
            "type": "string",
            "title": "sourceId"
          },
          "labels": {
            "description": "The list of labels to replace in the source.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/LabelBeta" },
            "title": "labels"
          }
        },
        "required": ["labels", "sourceId"]
      },
      "ReplaceLabelsInSourceBetaOutput": {
        "description": "Response from replacing a list of labels in a source.",
        "title": "ReplaceLabelsInSourceBetaOutput",
        "type": "object",
        "properties": {
          "labels": {
            "description": "All labels replaced in the source.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/LabelBeta" },
            "title": "labels"
          }
        },
        "required": ["labels"]
      },
      "LabelV1": {
        "description": "A label lets workspace owners assign permissions to users, and grant these users access to groups.\n\nA workspace owner may use labels to grant users access to groups of resources.\n\nWhen you add a label to a source or Personas Spaces, any users granted access to that label gain access to those\nresources.\n\nAll workspaces include labels for Dev (development) and Prod (production) environments. On top of those, Free and\nTeam plan customers may create up to five labels.\n\nCustomers with the Enterprise pricing package may create an unlimited number of labels.",
        "title": "LabelV1",
        "type": "object",
        "properties": {
          "key": { "description": "The key that represents the name of this label.", "type": "string", "title": "key" },
          "value": {
            "description": "The value associated with the key of this label.",
            "type": "string",
            "title": "value"
          },
          "description": {
            "description": "An optional description of the purpose of this label.",
            "type": "string",
            "title": "description"
          }
        },
        "required": ["key", "value"]
      },
      "ListLabelsV1Input": {
        "description": "Retrieves all available labels for the current workspace.",
        "title": "ListLabelsV1Input",
        "type": "object"
      },
      "ListLabelsV1Output": {
        "description": "Returns all available labels for the current workspace.",
        "title": "ListLabelsV1Output",
        "type": "object",
        "properties": {
          "labels": {
            "description": "All labels associated with the current workspace.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/LabelV1" },
            "title": "labels"
          }
        },
        "required": ["labels"]
      },
      "CreateLabelV1Input": {
        "description": "Creates a new label in the current workspace.",
        "title": "CreateLabelV1Input",
        "type": "object",
        "properties": {
          "label": {
            "$ref": "#/components/schemas/LabelV1",
            "description": "The new label to create in the workspace.",
            "title": "label"
          }
        },
        "required": ["label"]
      },
      "CreateLabelV1Output": {
        "description": "Result of creating a new label in the current workspace.",
        "title": "CreateLabelV1Output",
        "type": "object",
        "properties": {
          "label": {
            "$ref": "#/components/schemas/LabelV1",
            "description": "All labels associated with the current workspace.",
            "title": "label"
          }
        },
        "required": ["label"]
      },
      "DeleteLabelV1Input": {
        "description": "Deletes an existing label in the current workspace.",
        "title": "DeleteLabelV1Input",
        "type": "object",
        "properties": {
          "key": {
            "description": "The key of the label to delete in the workspace.",
            "type": "string",
            "title": "key"
          },
          "value": {
            "description": "The value of the label to delete in the workspace.",
            "type": "string",
            "title": "value"
          }
        },
        "required": ["key", "value"]
      },
      "DeleteLabelV1Output": {
        "description": "Returns the status of a label deletion.",
        "title": "DeleteLabelV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the label deletion operation.",
            "type": "string",
            "enum": ["SUCCESS"],
            "title": "status"
          }
        },
        "required": ["status"]
      },
      "AddLabelsToSourceV1Input": {
        "description": "Applies an existing label to an existing source.",
        "title": "AddLabelsToSourceV1Input",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the source to apply the labels to.",
            "type": "string",
            "title": "sourceId"
          },
          "labels": {
            "description": "The labels to associate with a source.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/LabelV1" },
            "title": "labels"
          }
        },
        "required": ["labels", "sourceId"]
      },
      "AddLabelsToSourceV1Output": {
        "description": "Applies an existing label to an existing source.",
        "title": "AddLabelsToSourceV1Output",
        "type": "object",
        "properties": {
          "labels": {
            "description": "All labels applied to the source.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/LabelV1" },
            "title": "labels"
          }
        },
        "required": ["labels"]
      },
      "ReplaceLabelsInSourceV1Input": {
        "description": "Replaces all labels in a source with a list of new labels.",
        "title": "ReplaceLabelsInSourceV1Input",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the source to replace the labels in.",
            "type": "string",
            "title": "sourceId"
          },
          "labels": {
            "description": "The list of labels to replace in the source.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/LabelV1" },
            "title": "labels"
          }
        },
        "required": ["labels", "sourceId"]
      },
      "ReplaceLabelsInSourceV1Output": {
        "description": "Response from replacing a list of labels in a source.",
        "title": "ReplaceLabelsInSourceV1Output",
        "type": "object",
        "properties": {
          "labels": {
            "description": "All labels replaced in the source.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/LabelV1" },
            "title": "labels"
          }
        },
        "required": ["labels"]
      },
      "EventSourceAlpha": {
        "description": "Source represents a Segment source.",
        "title": "EventSourceAlpha",
        "type": "object",
        "properties": {
          "id": { "description": "The id of the source where the events came from.", "type": "string", "title": "id" },
          "name": { "description": "The name of the source, if applicable.", "type": "string", "title": "name" },
          "slug": { "description": "The slug of the source, if applicable.", "type": "string", "title": "slug" }
        },
        "required": ["id"]
      },
      "SourceEventVolumeAlpha": {
        "description": "SourceEventVolume represents a timeseries of event volume for a workspace\nbroken down by the dimensions which the customer specifies (optional\nparameters).",
        "title": "SourceEventVolumeAlpha",
        "type": "object",
        "properties": {
          "source": {
            "$ref": "#/components/schemas/EventSourceAlpha",
            "description": "The source where the events originated.",
            "title": "source"
          },
          "eventName": {
            "description": "The name of the event, if applicable.",
            "type": "string",
            "title": "eventName"
          },
          "eventType": { "description": "The event type, if applicable.", "type": "string", "title": "eventType" },
          "total": {
            "description": "The total count for all events in the requested timeframe.",
            "type": "number",
            "title": "total"
          },
          "series": {
            "description": "A list of the event counts broken down by the requested\ngranularity.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/SourceEventVolumeDatapointAlpha" },
            "title": "series"
          }
        },
        "required": ["series", "source", "total"]
      },
      "SourceEventVolumeDatapointAlpha": {
        "description": "SourceEventVolumeDatapoint represents an individual timestamp/event count\npair corresponding to a window of time designated by the granularity.",
        "title": "SourceEventVolumeDatapointAlpha",
        "type": "object",
        "properties": {
          "time": {
            "description": "The timestamp that corresponds to the beginning of the window given\nby the requested granularity.",
            "type": "string",
            "title": "time"
          },
          "count": {
            "description": "The number of valid events Segment received in the given window,\nafter the events completed the validation process.",
            "type": "number",
            "title": "count"
          }
        },
        "required": ["count", "time"]
      },
      "GetEventsVolumeFromWorkspaceAlphaInput": {
        "description": "GetEventsVolumeFromWorkspaceAlphaInput represents the arguments given to the API.",
        "title": "GetEventsVolumeFromWorkspaceAlphaInput",
        "type": "object",
        "properties": {
          "granularity": {
            "description": "The size of each bucket in the requested window.",
            "enum": ["DAY", "HOUR", "MINUTE"],
            "type": "string",
            "title": "granularity"
          },
          "startTime": {
            "description": "The ISO8601 formatted timestamp that corresponds to the\nbeginning of the requested timeframe, inclusive.",
            "type": "string",
            "title": "startTime"
          },
          "endTime": {
            "description": "The ISO8601 formatted timestamp that corresponds to the\nend of the requested timeframe, noninclusive.\nSegment recommends that you lag queries 1 minute behind clock time to reduce\nthe risk for latency to impact the counts.",
            "type": "string",
            "title": "endTime"
          },
          "groupBy": {
            "description": "A comma-delimited list of strings that represents the dimensions\nto group the result by. The options are:\n`eventName`, `eventType` and `source`.",
            "type": "array",
            "items": { "type": "string" },
            "title": "groupBy"
          },
          "sourceId": {
            "description": "A list of strings which filters the results to the given\nSourceIds.",
            "type": "array",
            "items": { "type": "string" },
            "title": "sourceId"
          },
          "eventName": {
            "description": "A list of strings which filters the results to the given\nEventNames.",
            "type": "array",
            "items": { "type": "string" },
            "title": "eventName"
          },
          "eventType": {
            "description": "A list of strings which filters the results to the given\nEventTypes.",
            "type": "array",
            "items": { "type": "string" },
            "title": "eventType"
          },
          "appVersion": {
            "description": "A list of strings which filters the results to the given\nAppVersions.",
            "type": "array",
            "items": { "type": "string" },
            "title": "appVersion"
          },
          "pagination": {
            "description": "Pagination input for event volume by workspace.",
            "$ref": "#/components/schemas/PaginationInput",
            "title": "pagination"
          }
        },
        "required": ["endTime", "granularity", "startTime"]
      },
      "GetEventsVolumeFromWorkspaceAlphaOutput": {
        "description": "GetEventsVolumeFromWorkspaceAlphaOutput represents the results given the input query.",
        "title": "GetEventsVolumeFromWorkspaceAlphaOutput",
        "type": "object",
        "properties": {
          "result": {
            "description": "The resultant list of series broken down by the\ndimensions requested over the timeframe requested and ordered by the total count of events in all series.\nNote: The limit of entries returned is 5000.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/SourceEventVolumeAlpha" },
            "title": "result"
          },
          "pagination": {
            "description": "Pagination output for event volume by workspace.",
            "$ref": "#/components/schemas/PaginationOutput",
            "title": "pagination"
          }
        },
        "required": ["result"]
      },
      "EventSourceBeta": {
        "description": "Source represents a Segment source.",
        "title": "EventSourceBeta",
        "type": "object",
        "properties": {
          "id": { "description": "The id of the source where the events came from.", "type": "string", "title": "id" },
          "name": { "description": "The name of the source, if applicable.", "type": "string", "title": "name" },
          "slug": { "description": "The slug of the source, if applicable.", "type": "string", "title": "slug" }
        },
        "required": ["id"]
      },
      "SourceEventVolumeBeta": {
        "description": "SourceEventVolume represents a timeseries of event volume for a workspace\nbroken down by the dimensions which the customer specifies (optional\nparameters).",
        "title": "SourceEventVolumeBeta",
        "type": "object",
        "properties": {
          "source": {
            "$ref": "#/components/schemas/EventSourceBeta",
            "description": "The source where the events originated.",
            "title": "source"
          },
          "eventName": {
            "description": "The name of the event, if applicable.",
            "type": "string",
            "title": "eventName"
          },
          "eventType": { "description": "The event type, if applicable.", "type": "string", "title": "eventType" },
          "total": {
            "description": "The total count for all events in the requested timeframe.",
            "type": "number",
            "title": "total"
          },
          "series": {
            "description": "A list of the event counts broken down by the requested\ngranularity.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/SourceEventVolumeDatapointBeta" },
            "title": "series"
          }
        },
        "required": ["series", "source", "total"]
      },
      "SourceEventVolumeDatapointBeta": {
        "description": "SourceEventVolumeDatapoint represents an individual timestamp/event count\npair corresponding to a window of time designated by the granularity.",
        "title": "SourceEventVolumeDatapointBeta",
        "type": "object",
        "properties": {
          "time": {
            "description": "The timestamp that corresponds to the beginning of the window given\nby the requested granularity.",
            "type": "string",
            "title": "time"
          },
          "count": {
            "description": "The number of valid events Segment received in the given window,\nafter the events completed the validation process.",
            "type": "number",
            "title": "count"
          }
        },
        "required": ["count", "time"]
      },
      "GetEventsVolumeFromWorkspaceBetaInput": {
        "description": "GetEventsVolumeFromWorkspaceBetaInput represents the arguments given to the API.",
        "title": "GetEventsVolumeFromWorkspaceBetaInput",
        "type": "object",
        "properties": {
          "granularity": {
            "description": "The size of each bucket in the requested window.",
            "enum": ["DAY", "HOUR", "MINUTE"],
            "type": "string",
            "title": "granularity"
          },
          "startTime": {
            "description": "The ISO8601 formatted timestamp that corresponds to the\nbeginning of the requested timeframe, inclusive.",
            "type": "string",
            "title": "startTime"
          },
          "endTime": {
            "description": "The ISO8601 formatted timestamp that corresponds to the\nend of the requested timeframe, noninclusive.\nSegment recommends that you lag queries 1 minute behind clock time to reduce\nthe risk for latency to impact the counts.",
            "type": "string",
            "title": "endTime"
          },
          "groupBy": {
            "description": "A comma-delimited list of strings that represents the dimensions\nto group the result by. The options are:\n`eventName`, `eventType` and `source`.",
            "type": "array",
            "items": { "type": "string" },
            "title": "groupBy"
          },
          "sourceId": {
            "description": "A list of strings which filters the results to the given\nSourceIds.",
            "type": "array",
            "items": { "type": "string" },
            "title": "sourceId"
          },
          "eventName": {
            "description": "A list of strings which filters the results to the given\nEventNames.",
            "type": "array",
            "items": { "type": "string" },
            "title": "eventName"
          },
          "eventType": {
            "description": "A list of strings which filters the results to the given\nEventTypes.",
            "type": "array",
            "items": { "type": "string" },
            "title": "eventType"
          },
          "appVersion": {
            "description": "A list of strings which filters the results to the given\nAppVersions.",
            "type": "array",
            "items": { "type": "string" },
            "title": "appVersion"
          },
          "pagination": {
            "description": "Pagination input for event volume by workspace.",
            "$ref": "#/components/schemas/PaginationInput",
            "title": "pagination"
          }
        },
        "required": ["endTime", "granularity", "startTime"]
      },
      "GetEventsVolumeFromWorkspaceBetaOutput": {
        "description": "GetEventsVolumeFromWorkspaceBetaOutput represents the results given the input query.",
        "title": "GetEventsVolumeFromWorkspaceBetaOutput",
        "type": "object",
        "properties": {
          "result": {
            "description": "The resultant list of series broken down by the\ndimensions requested over the timeframe requested and ordered by the total count of events in all series.\nNote: The limit of entries returned is 5000.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/SourceEventVolumeBeta" },
            "title": "result"
          },
          "pagination": {
            "description": "Pagination output for event volume by workspace.",
            "$ref": "#/components/schemas/PaginationOutput",
            "title": "pagination"
          }
        },
        "required": ["result"]
      },
      "EventSourceV1": {
        "description": "Source represents a Segment source.",
        "title": "EventSourceV1",
        "type": "object",
        "properties": {
          "id": { "description": "The id of the source where the events came from.", "type": "string", "title": "id" },
          "name": { "description": "The name of the source, if applicable.", "type": "string", "title": "name" },
          "slug": { "description": "The slug of the source, if applicable.", "type": "string", "title": "slug" }
        },
        "required": ["id"]
      },
      "SourceEventVolumeV1": {
        "description": "SourceEventVolume represents a timeseries of event volume for a workspace\nbroken down by the dimensions which the customer specifies (optional\nparameters).",
        "title": "SourceEventVolumeV1",
        "type": "object",
        "properties": {
          "source": {
            "$ref": "#/components/schemas/EventSourceV1",
            "description": "The source where the events originated.",
            "title": "source"
          },
          "eventName": {
            "description": "The name of the event, if applicable.",
            "type": "string",
            "title": "eventName"
          },
          "eventType": { "description": "The event type, if applicable.", "type": "string", "title": "eventType" },
          "total": {
            "description": "The total count for all events in the requested timeframe.",
            "type": "number",
            "title": "total"
          },
          "series": {
            "description": "A list of the event counts broken down by the requested\ngranularity.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/SourceEventVolumeDatapointV1" },
            "title": "series"
          }
        },
        "required": ["series", "source", "total"]
      },
      "SourceEventVolumeDatapointV1": {
        "description": "SourceEventVolumeDatapoint represents an individual timestamp/event count\npair corresponding to a window of time designated by the granularity.",
        "title": "SourceEventVolumeDatapointV1",
        "type": "object",
        "properties": {
          "time": {
            "description": "The timestamp that corresponds to the beginning of the window given\nby the requested granularity.",
            "type": "string",
            "title": "time"
          },
          "count": {
            "description": "The number of valid events Segment received in the given window,\nafter the events completed the validation process.",
            "type": "number",
            "title": "count"
          }
        },
        "required": ["count", "time"]
      },
      "GetEventsVolumeFromWorkspaceV1Input": {
        "description": "GetEventsVolumeFromWorkspaceV1Input represents the arguments given to the API.",
        "title": "GetEventsVolumeFromWorkspaceV1Input",
        "type": "object",
        "properties": {
          "granularity": {
            "description": "The size of each bucket in the requested window.",
            "enum": ["DAY", "HOUR", "MINUTE"],
            "type": "string",
            "title": "granularity"
          },
          "startTime": {
            "description": "The ISO8601 formatted timestamp that corresponds to the\nbeginning of the requested timeframe, inclusive.",
            "type": "string",
            "title": "startTime"
          },
          "endTime": {
            "description": "The ISO8601 formatted timestamp that corresponds to the\nend of the requested timeframe, noninclusive.\nSegment recommends that you lag queries 1 minute behind clock time to reduce\nthe risk for latency to impact the counts.",
            "type": "string",
            "title": "endTime"
          },
          "groupBy": {
            "description": "A comma-delimited list of strings that represents the dimensions\nto group the result by. The options are:\n`eventName`, `eventType` and `source`.",
            "type": "array",
            "items": { "type": "string" },
            "title": "groupBy"
          },
          "sourceId": {
            "description": "A list of strings which filters the results to the given\nSourceIds.",
            "type": "array",
            "items": { "type": "string" },
            "title": "sourceId"
          },
          "eventName": {
            "description": "A list of strings which filters the results to the given\nEventNames.",
            "type": "array",
            "items": { "type": "string" },
            "title": "eventName"
          },
          "eventType": {
            "description": "A list of strings which filters the results to the given\nEventTypes.",
            "type": "array",
            "items": { "type": "string" },
            "title": "eventType"
          },
          "appVersion": {
            "description": "A list of strings which filters the results to the given\nAppVersions.",
            "type": "array",
            "items": { "type": "string" },
            "title": "appVersion"
          },
          "pagination": {
            "description": "Pagination input for event volume by workspace.",
            "$ref": "#/components/schemas/PaginationInput",
            "title": "pagination"
          }
        },
        "required": ["endTime", "granularity", "startTime"]
      },
      "GetEventsVolumeFromWorkspaceV1Output": {
        "description": "GetEventsVolumeFromWorkspaceV1Output represents the results given the input query.",
        "title": "GetEventsVolumeFromWorkspaceV1Output",
        "type": "object",
        "properties": {
          "result": {
            "description": "The resultant list of series broken down by the\ndimensions requested over the timeframe requested and ordered by the total count of events in all series.\nNote: The limit of entries returned is 5000.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/SourceEventVolumeV1" },
            "title": "result"
          },
          "pagination": {
            "description": "Pagination output for event volume by workspace.",
            "$ref": "#/components/schemas/PaginationOutput",
            "title": "pagination"
          }
        },
        "required": ["result"]
      },
      "DestinationStatusAlpha": {
        "description": "DestinationStatus represents status of each destination in a stream.",
        "title": "DestinationStatusAlpha",
        "type": "object",
        "properties": {
          "name": { "type": "string", "title": "name" },
          "id": { "type": "string", "title": "id" },
          "status": {
            "enum": ["FAILED", "FINISHED", "INITIALIZED", "INVALID", "NOT_SUPPORTED", "PARTIAL_SUCCESS", "RUNNING"],
            "type": "string",
            "title": "status"
          },
          "errString": { "type": "string", "title": "errString" },
          "finishedAt": { "type": "string", "title": "finishedAt" }
        },
        "required": ["errString", "finishedAt", "id", "name", "status"]
      },
      "StreamStatusAlpha": {
        "description": "StreamStatus represents status of each stream including all the destinations corresponding to the stream.",
        "title": "StreamStatusAlpha",
        "type": "object",
        "properties": {
          "id": { "type": "string", "title": "id" },
          "destinationStatus": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/DestinationStatusAlpha" },
            "title": "destinationStatus"
          }
        },
        "required": ["destinationStatus", "id"]
      },
      "RegulationListEntryAlpha": {
        "title": "RegulationListEntryAlpha",
        "type": "object",
        "properties": {
          "id": { "type": "string", "title": "id" },
          "subjectType": { "type": "string", "title": "subjectType" },
          "subjects": { "type": "array", "items": { "type": "string" }, "title": "subjects" },
          "status": {
            "enum": ["FAILED", "FINISHED", "INITIALIZED", "INVALID", "NOT_SUPPORTED", "PARTIAL_SUCCESS", "RUNNING"],
            "type": "string",
            "title": "status"
          },
          "createdAt": { "type": "string", "title": "createdAt" },
          "finishedAt": { "type": "string", "title": "finishedAt" }
        },
        "required": ["createdAt", "id", "status", "subjectType", "subjects"]
      },
      "DeleteRegulationAlphaInput": {
        "description": "The input to delete a regulate request.",
        "title": "DeleteRegulationAlphaInput",
        "type": "object",
        "properties": {
          "regulateId": {
            "description": "The id of the regulate request to delete.",
            "type": "string",
            "title": "regulateId"
          }
        },
        "required": ["regulateId"]
      },
      "DeleteRegulationAlphaOutput": {
        "description": "The output of the delete regulation call.",
        "title": "DeleteRegulationAlphaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the deletion call.",
            "type": "string",
            "enum": ["SUCCESS"],
            "title": "status"
          }
        },
        "required": ["status"]
      },
      "CreateWorkspaceRegulationAlphaInput": {
        "description": "The input to create a workspace regulation.",
        "title": "CreateWorkspaceRegulationAlphaInput",
        "type": "object",
        "properties": {
          "regulationType": {
            "description": "The regulation type to create.",
            "enum": [
              "BULK_DELETE_ONLY",
              "DELETE_INTERNAL",
              "DELETE_ONLY",
              "SUPPRESS_ONLY",
              "SUPPRESS_WITH_DELETE",
              "UNSUPPRESS"
            ],
            "type": "string",
            "title": "regulationType"
          },
          "subjectType": {
            "description": "The subject type. Use `objectId` for cloud source regulations.",
            "enum": ["OBJECT_ID", "USER_ID"],
            "type": "string",
            "title": "subjectType"
          },
          "subjectIds": {
            "description": "The ids of the subjects.\n\nConfig API note: equal to `parent` but allows an array.",
            "type": "array",
            "items": { "type": "string" },
            "title": "subjectIds"
          }
        },
        "required": ["regulationType", "subjectIds", "subjectType"]
      },
      "CreateWorkspaceRegulationAlphaOutput": {
        "description": "The output of a create workspace regulation call.",
        "title": "CreateWorkspaceRegulationAlphaOutput",
        "type": "object",
        "properties": {
          "regulateId": { "description": "The id of the created regulation.", "type": "string", "title": "regulateId" }
        },
        "required": ["regulateId"]
      },
      "GetRegulationAlphaInput": {
        "description": "The input to get a regulate request.",
        "title": "GetRegulationAlphaInput",
        "type": "object",
        "properties": {
          "regulateId": {
            "description": "The id of the regulate request to retrieve.",
            "type": "string",
            "title": "regulateId"
          }
        },
        "required": ["regulateId"]
      },
      "GetRegulationAlphaOutput": {
        "description": "The regulate request returned.",
        "title": "GetRegulationAlphaOutput",
        "type": "object",
        "properties": {
          "regulation": {
            "description": "The regulate request.",
            "type": "object",
            "properties": {
              "id": { "description": "The id of the regulate request.", "type": "string", "title": "id" },
              "workspaceId": {
                "description": "The id of the workspace that the regulate request belongs to.",
                "type": "string",
                "title": "workspaceId"
              },
              "overallStatus": {
                "description": "The current status of the regulate request.",
                "enum": ["FAILED", "FINISHED", "INITIALIZED", "INVALID", "NOT_SUPPORTED", "PARTIAL_SUCCESS", "RUNNING"],
                "type": "string",
                "title": "overallStatus"
              },
              "finishedAt": {
                "description": "The timestamp of when the request finished.",
                "type": "string",
                "title": "finishedAt"
              },
              "createdAt": {
                "description": "The timestamp of the creation of the request.",
                "type": "string",
                "title": "createdAt"
              },
              "streamStatus": {
                "description": "The status of each stream including all the destinations that correspond to the stream.",
                "type": "array",
                "items": { "$ref": "#/components/schemas/StreamStatusAlpha" },
                "title": "streamStatus"
              }
            },
            "required": ["createdAt", "finishedAt", "id", "overallStatus", "streamStatus", "workspaceId"],
            "title": "regulation"
          }
        },
        "required": ["regulation"]
      },
      "ListWorkspaceRegulationsAlphaInput": {
        "description": "Input to list all workspace-scoped regulations in a given workspace.",
        "title": "ListWorkspaceRegulationsAlphaInput",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status on which to filter regulations returned.",
            "enum": ["FAILED", "FINISHED", "INITIALIZED", "INVALID", "NOT_SUPPORTED", "PARTIAL_SUCCESS", "RUNNING"],
            "type": "string",
            "title": "status"
          },
          "regulationTypes": {
            "description": "The regulation types on which to filter regulations returned.",
            "type": "array",
            "items": {
              "enum": [
                "BULK_DELETE_ONLY",
                "DELETE_INTERNAL",
                "DELETE_ONLY",
                "SUPPRESS_ONLY",
                "SUPPRESS_WITH_DELETE",
                "UNSUPPRESS"
              ],
              "type": "string"
            },
            "title": "regulationTypes"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["pagination"]
      },
      "ListWorkspaceRegulationsAlphaOutput": {
        "description": "Output of all workspace-scoped regulations in a given workspace.",
        "title": "ListWorkspaceRegulationsAlphaOutput",
        "type": "object",
        "properties": {
          "regulations": {
            "description": "List of workspace-scoped regulations with statuses.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/RegulationListEntryAlpha" },
            "title": "regulations"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "regulations"]
      },
      "CreateSourceRegulationAlphaInput": {
        "description": "The input to create a source-scoped regulation.",
        "title": "CreateSourceRegulationAlphaInput",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the source to scope the regulation to.",
            "type": "string",
            "title": "sourceId"
          },
          "regulationType": {
            "description": "The regulation type to create.",
            "enum": [
              "BULK_DELETE_ONLY",
              "DELETE_INTERNAL",
              "DELETE_ONLY",
              "SUPPRESS_ONLY",
              "SUPPRESS_WITH_DELETE",
              "UNSUPPRESS"
            ],
            "type": "string",
            "title": "regulationType"
          },
          "subjectType": {
            "description": "The subject type.",
            "type": "string",
            "enum": ["USER_ID"],
            "title": "subjectType"
          },
          "subjectIds": {
            "description": "The user or object ids of the subjects to regulate.\n\nConfig API note: equal to `parent` but allows an array.",
            "type": "array",
            "items": { "type": "string" },
            "title": "subjectIds"
          }
        },
        "required": ["regulationType", "sourceId", "subjectIds", "subjectType"]
      },
      "CreateSourceRegulationAlphaOutput": {
        "description": "The output of a create source regulation call.",
        "title": "CreateSourceRegulationAlphaOutput",
        "type": "object",
        "properties": {
          "regulateId": { "description": "The id of the created regulation.", "type": "string", "title": "regulateId" }
        },
        "required": ["regulateId"]
      },
      "CreateCloudSourceRegulationAlphaInput": {
        "description": "The input to create a cloud source-scoped regulation.",
        "title": "CreateCloudSourceRegulationAlphaInput",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the cloud source to scope the regulation to.",
            "type": "string",
            "title": "sourceId"
          },
          "regulationType": {
            "description": "The regulation type to create.",
            "enum": [
              "BULK_DELETE_ONLY",
              "DELETE_INTERNAL",
              "DELETE_ONLY",
              "SUPPRESS_ONLY",
              "SUPPRESS_WITH_DELETE",
              "UNSUPPRESS"
            ],
            "type": "string",
            "title": "regulationType"
          },
          "subjectType": {
            "description": "The subject type. Must be `objectId` for cloud sources.",
            "type": "string",
            "enum": ["OBJECT_ID"],
            "title": "subjectType"
          },
          "subjectIds": {
            "description": "The user or object ids of the subjects to regulate.\n\nConfig API note: equal to `parent` but allows an array.",
            "type": "array",
            "items": { "type": "string" },
            "title": "subjectIds"
          },
          "collection": {
            "description": "The cloud source collection to regulate.",
            "type": "string",
            "title": "collection"
          }
        },
        "required": ["collection", "regulationType", "sourceId", "subjectIds", "subjectType"]
      },
      "CreateCloudSourceRegulationAlphaOutput": {
        "description": "The output of a create cloud source regulation call.",
        "title": "CreateCloudSourceRegulationAlphaOutput",
        "type": "object",
        "properties": {
          "regulateId": { "description": "The id of the created regulation.", "type": "string", "title": "regulateId" }
        },
        "required": ["regulateId"]
      },
      "ListRegulationsFromSourceAlphaInput": {
        "description": "Input to list all source-scoped regulations.",
        "title": "ListRegulationsFromSourceAlphaInput",
        "type": "object",
        "properties": {
          "sourceId": { "description": "The id of the source the regulation.", "type": "string", "title": "sourceId" },
          "status": {
            "description": "The status on which to filter regulations returned.",
            "enum": ["FAILED", "FINISHED", "INITIALIZED", "INVALID", "NOT_SUPPORTED", "PARTIAL_SUCCESS", "RUNNING"],
            "type": "string",
            "title": "status"
          },
          "regulationTypes": {
            "description": "The regulation types on which to filter regulations returned.",
            "type": "array",
            "items": {
              "enum": [
                "BULK_DELETE_ONLY",
                "DELETE_INTERNAL",
                "DELETE_ONLY",
                "SUPPRESS_ONLY",
                "SUPPRESS_WITH_DELETE",
                "UNSUPPRESS"
              ],
              "type": "string"
            },
            "title": "regulationTypes"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "sourceId"]
      },
      "ListSuppressionsAlphaInput": {
        "description": "The input to list suppressions for the workspace.",
        "title": "ListSuppressionsAlphaInput",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["pagination"]
      },
      "ListRegulationsFromSourceAlphaOutput": {
        "description": "Output of all source-scoped regulations.",
        "title": "ListRegulationsFromSourceAlphaOutput",
        "type": "object",
        "properties": {
          "regulations": {
            "description": "List of workspace-scoped regulations with statuses.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/RegulationListEntryAlpha" },
            "title": "regulations"
          }
        },
        "required": ["regulations"]
      },
      "ListSuppressionsAlphaOutput": {
        "description": "The output of a list suppressed call for a workspace.",
        "title": "ListSuppressionsAlphaOutput",
        "type": "object",
        "properties": {
          "suppressed": {
            "description": "Suppressed attributes array.\n\nConfig API note: equal to `attributes`.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "subjectType": { "type": "string", "title": "subjectType" },
                "subjectIds": { "type": "array", "items": { "type": "string" }, "title": "subjectIds" }
              },
              "required": ["subjectIds", "subjectType"]
            },
            "title": "suppressed"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "suppressed"]
      },
      "DestinationStatusBeta": {
        "description": "DestinationStatus represents status of each destination in a stream.",
        "title": "DestinationStatusBeta",
        "type": "object",
        "properties": {
          "name": { "type": "string", "title": "name" },
          "id": { "type": "string", "title": "id" },
          "status": {
            "enum": ["FAILED", "FINISHED", "INITIALIZED", "INVALID", "NOT_SUPPORTED", "PARTIAL_SUCCESS", "RUNNING"],
            "type": "string",
            "title": "status"
          },
          "errString": { "type": "string", "title": "errString" },
          "finishedAt": { "type": "string", "title": "finishedAt" }
        },
        "required": ["errString", "finishedAt", "id", "name", "status"]
      },
      "StreamStatusBeta": {
        "description": "StreamStatus represents status of each stream including all the destinations corresponding to the stream.",
        "title": "StreamStatusBeta",
        "type": "object",
        "properties": {
          "id": { "type": "string", "title": "id" },
          "destinationStatus": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/DestinationStatusBeta" },
            "title": "destinationStatus"
          }
        },
        "required": ["destinationStatus", "id"]
      },
      "RegulationListEntryBeta": {
        "title": "RegulationListEntryBeta",
        "type": "object",
        "properties": {
          "id": { "type": "string", "title": "id" },
          "subjectType": { "type": "string", "title": "subjectType" },
          "subjects": { "type": "array", "items": { "type": "string" }, "title": "subjects" },
          "status": {
            "enum": ["FAILED", "FINISHED", "INITIALIZED", "INVALID", "NOT_SUPPORTED", "PARTIAL_SUCCESS", "RUNNING"],
            "type": "string",
            "title": "status"
          },
          "createdAt": { "type": "string", "title": "createdAt" },
          "finishedAt": { "type": "string", "title": "finishedAt" }
        },
        "required": ["createdAt", "id", "status", "subjectType", "subjects"]
      },
      "DeleteRegulationBetaInput": {
        "description": "The input to delete a regulate request.",
        "title": "DeleteRegulationBetaInput",
        "type": "object",
        "properties": {
          "regulateId": {
            "description": "The id of the regulate request to delete.",
            "type": "string",
            "title": "regulateId"
          }
        },
        "required": ["regulateId"]
      },
      "DeleteRegulationBetaOutput": {
        "description": "The output of the delete regulation call.",
        "title": "DeleteRegulationBetaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the deletion call.",
            "type": "string",
            "enum": ["SUCCESS"],
            "title": "status"
          }
        },
        "required": ["status"]
      },
      "CreateWorkspaceRegulationBetaInput": {
        "description": "The input to create a workspace regulation.",
        "title": "CreateWorkspaceRegulationBetaInput",
        "type": "object",
        "properties": {
          "regulationType": {
            "description": "The regulation type to create.",
            "enum": [
              "BULK_DELETE_ONLY",
              "DELETE_INTERNAL",
              "DELETE_ONLY",
              "SUPPRESS_ONLY",
              "SUPPRESS_WITH_DELETE",
              "UNSUPPRESS"
            ],
            "type": "string",
            "title": "regulationType"
          },
          "subjectType": {
            "description": "The subject type. Use `objectId` for cloud source regulations.",
            "enum": ["OBJECT_ID", "USER_ID"],
            "type": "string",
            "title": "subjectType"
          },
          "subjectIds": {
            "description": "The user or object ids of the subjects to regulate.\n\nConfig API note: equal to `parent` but allows an array.",
            "type": "array",
            "items": { "type": "string" },
            "title": "subjectIds"
          }
        },
        "required": ["regulationType", "subjectIds", "subjectType"]
      },
      "CreateWorkspaceRegulationBetaOutput": {
        "description": "The output of a create workspace regulation call.",
        "title": "CreateWorkspaceRegulationBetaOutput",
        "type": "object",
        "properties": {
          "regulateId": { "description": "The id of the created regulation.", "type": "string", "title": "regulateId" }
        },
        "required": ["regulateId"]
      },
      "GetRegulationBetaInput": {
        "description": "The input to get a regulate request.",
        "title": "GetRegulationBetaInput",
        "type": "object",
        "properties": {
          "regulateId": {
            "description": "The id of the regulate request to retrieve.",
            "type": "string",
            "title": "regulateId"
          }
        },
        "required": ["regulateId"]
      },
      "GetRegulationBetaOutput": {
        "description": "The regulate request returned.",
        "title": "GetRegulationBetaOutput",
        "type": "object",
        "properties": {
          "regulation": {
            "description": "The regulate request.",
            "type": "object",
            "properties": {
              "id": { "description": "The id of the regulate request.", "type": "string", "title": "id" },
              "workspaceId": {
                "description": "The id of the workspace that the regulate request belongs to.",
                "type": "string",
                "title": "workspaceId"
              },
              "overallStatus": {
                "description": "The current status of the regulate request.",
                "enum": ["FAILED", "FINISHED", "INITIALIZED", "INVALID", "NOT_SUPPORTED", "PARTIAL_SUCCESS", "RUNNING"],
                "type": "string",
                "title": "overallStatus"
              },
              "finishedAt": {
                "description": "The timestamp of when the request finished.",
                "type": "string",
                "title": "finishedAt"
              },
              "createdAt": {
                "description": "The timestamp of the creation of the request.",
                "type": "string",
                "title": "createdAt"
              },
              "streamStatus": {
                "description": "The status of each stream including all the destinations that correspond to the stream.",
                "type": "array",
                "items": { "$ref": "#/components/schemas/StreamStatusBeta" },
                "title": "streamStatus"
              }
            },
            "required": ["createdAt", "finishedAt", "id", "overallStatus", "streamStatus", "workspaceId"],
            "title": "regulation"
          }
        },
        "required": ["regulation"]
      },
      "ListWorkspaceRegulationsBetaInput": {
        "description": "Input to list all workspace-scoped regulations in a given workspace.",
        "title": "ListWorkspaceRegulationsBetaInput",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status on which to filter the returned regulations.",
            "enum": ["FAILED", "FINISHED", "INITIALIZED", "INVALID", "NOT_SUPPORTED", "PARTIAL_SUCCESS", "RUNNING"],
            "type": "string",
            "title": "status"
          },
          "regulationTypes": {
            "description": "The regulation types on which to filter returned regulations.",
            "type": "array",
            "items": {
              "enum": [
                "BULK_DELETE_ONLY",
                "DELETE_INTERNAL",
                "DELETE_ONLY",
                "SUPPRESS_ONLY",
                "SUPPRESS_WITH_DELETE",
                "UNSUPPRESS"
              ],
              "type": "string"
            },
            "title": "regulationTypes"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["pagination"]
      },
      "ListWorkspaceRegulationsBetaOutput": {
        "description": "Output of all workspace-scoped regulations in a given workspace.",
        "title": "ListWorkspaceRegulationsBetaOutput",
        "type": "object",
        "properties": {
          "regulations": {
            "description": "List of workspace-scoped regulations with statuses.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/RegulationListEntryBeta" },
            "title": "regulations"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "regulations"]
      },
      "CreateSourceRegulationBetaInput": {
        "description": "The input to create a source-scoped regulation.",
        "title": "CreateSourceRegulationBetaInput",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the source to scope the regulation to.",
            "type": "string",
            "title": "sourceId"
          },
          "regulationType": {
            "description": "The regulation type to create.",
            "enum": [
              "BULK_DELETE_ONLY",
              "DELETE_INTERNAL",
              "DELETE_ONLY",
              "SUPPRESS_ONLY",
              "SUPPRESS_WITH_DELETE",
              "UNSUPPRESS"
            ],
            "type": "string",
            "title": "regulationType"
          },
          "subjectType": {
            "description": "The subject type.",
            "type": "string",
            "enum": ["USER_ID"],
            "title": "subjectType"
          },
          "subjectIds": {
            "description": "The user or object ids of the subjects to regulate.\n\nConfig API note: equal to `parent` but allows an array.",
            "type": "array",
            "items": { "type": "string" },
            "title": "subjectIds"
          }
        },
        "required": ["regulationType", "sourceId", "subjectIds", "subjectType"]
      },
      "CreateSourceRegulationBetaOutput": {
        "description": "The output of a create source regulation call.",
        "title": "CreateSourceRegulationBetaOutput",
        "type": "object",
        "properties": {
          "regulateId": { "description": "The id of the created regulation.", "type": "string", "title": "regulateId" }
        },
        "required": ["regulateId"]
      },
      "CreateCloudSourceRegulationBetaInput": {
        "description": "The input to create a cloud source-scoped regulation.",
        "title": "CreateCloudSourceRegulationBetaInput",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the cloud source to scope the regulation to.",
            "type": "string",
            "title": "sourceId"
          },
          "regulationType": {
            "description": "The regulation type to create.",
            "enum": [
              "BULK_DELETE_ONLY",
              "DELETE_INTERNAL",
              "DELETE_ONLY",
              "SUPPRESS_ONLY",
              "SUPPRESS_WITH_DELETE",
              "UNSUPPRESS"
            ],
            "type": "string",
            "title": "regulationType"
          },
          "subjectType": {
            "description": "The subject type. Must be `objectId` for cloud sources.",
            "type": "string",
            "enum": ["OBJECT_ID"],
            "title": "subjectType"
          },
          "subjectIds": {
            "description": "The user or object ids of the subjects to regulate.\n\nConfig API note: equal to `parent` but allows an array.",
            "type": "array",
            "items": { "type": "string" },
            "title": "subjectIds"
          },
          "collection": {
            "description": "The cloud source collection to regulate.",
            "type": "string",
            "title": "collection"
          }
        },
        "required": ["collection", "regulationType", "sourceId", "subjectIds", "subjectType"]
      },
      "CreateCloudSourceRegulationBetaOutput": {
        "description": "The output of a create cloud source regulation call.",
        "title": "CreateCloudSourceRegulationBetaOutput",
        "type": "object",
        "properties": {
          "regulateId": { "description": "The id of the created regulation.", "type": "string", "title": "regulateId" }
        },
        "required": ["regulateId"]
      },
      "ListRegulationsFromSourceBetaInput": {
        "description": "Input to list all source-scoped regulations.",
        "title": "ListRegulationsFromSourceBetaInput",
        "type": "object",
        "properties": {
          "sourceId": { "description": "The id of the source the regulation.", "type": "string", "title": "sourceId" },
          "status": {
            "description": "The status on which to filter returned regulations.",
            "enum": ["FAILED", "FINISHED", "INITIALIZED", "INVALID", "NOT_SUPPORTED", "PARTIAL_SUCCESS", "RUNNING"],
            "type": "string",
            "title": "status"
          },
          "regulationTypes": {
            "description": "The regulation types on which to filter returned regulations.",
            "type": "array",
            "items": {
              "enum": [
                "BULK_DELETE_ONLY",
                "DELETE_INTERNAL",
                "DELETE_ONLY",
                "SUPPRESS_ONLY",
                "SUPPRESS_WITH_DELETE",
                "UNSUPPRESS"
              ],
              "type": "string"
            },
            "title": "regulationTypes"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "sourceId"]
      },
      "ListRegulationsFromSourceBetaOutput": {
        "description": "Output of all source-scoped regulations.",
        "title": "ListRegulationsFromSourceBetaOutput",
        "type": "object",
        "properties": {
          "regulations": {
            "description": "List of workspace-scoped regulations with statuses.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/RegulationListEntryBeta" },
            "title": "regulations"
          }
        },
        "required": ["regulations"]
      },
      "ListSuppressionsBetaInput": {
        "description": "The input to list suppressions for the workspace.",
        "title": "ListSuppressionsBetaInput",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["pagination"]
      },
      "ListSuppressionsBetaOutput": {
        "description": "The output of a list suppressed call for a workspace.",
        "title": "ListSuppressionsBetaOutput",
        "type": "object",
        "properties": {
          "suppressed": {
            "description": "An array that lists the suppressions from the workspace.\n\nConfig API note: equal to `attributes`.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "subjectType": { "type": "string", "title": "subjectType" },
                "subjectIds": { "type": "array", "items": { "type": "string" }, "title": "subjectIds" }
              },
              "required": ["subjectIds", "subjectType"]
            },
            "title": "suppressed"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "suppressed"]
      },
      "DestinationStatusV1": {
        "description": "DestinationStatus represents status of each destination in a stream.",
        "title": "DestinationStatusV1",
        "type": "object",
        "properties": {
          "name": { "type": "string", "title": "name" },
          "id": { "type": "string", "title": "id" },
          "status": {
            "enum": ["FAILED", "FINISHED", "INITIALIZED", "INVALID", "NOT_SUPPORTED", "PARTIAL_SUCCESS", "RUNNING"],
            "type": "string",
            "title": "status"
          },
          "errString": { "type": "string", "title": "errString" },
          "finishedAt": { "type": "string", "title": "finishedAt" }
        },
        "required": ["errString", "finishedAt", "id", "name", "status"]
      },
      "StreamStatusV1": {
        "description": "StreamStatus represents status of each stream including all the destinations corresponding to the stream.",
        "title": "StreamStatusV1",
        "type": "object",
        "properties": {
          "id": { "type": "string", "title": "id" },
          "destinationStatus": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/DestinationStatusV1" },
            "title": "destinationStatus"
          }
        },
        "required": ["destinationStatus", "id"]
      },
      "RegulationListEntryV1": {
        "title": "RegulationListEntryV1",
        "type": "object",
        "properties": {
          "id": { "type": "string", "title": "id" },
          "subjectType": { "type": "string", "title": "subjectType" },
          "subjects": { "type": "array", "items": { "type": "string" }, "title": "subjects" },
          "status": {
            "enum": ["FAILED", "FINISHED", "INITIALIZED", "INVALID", "NOT_SUPPORTED", "PARTIAL_SUCCESS", "RUNNING"],
            "type": "string",
            "title": "status"
          },
          "createdAt": { "type": "string", "title": "createdAt" },
          "finishedAt": { "type": "string", "title": "finishedAt" }
        },
        "required": ["createdAt", "id", "status", "subjectType", "subjects"]
      },
      "DeleteRegulationV1Input": {
        "description": "The input to delete a regulate request.",
        "title": "DeleteRegulationV1Input",
        "type": "object",
        "properties": {
          "regulateId": {
            "description": "The id of the regulate request to delete.",
            "type": "string",
            "title": "regulateId"
          }
        },
        "required": ["regulateId"]
      },
      "DeleteRegulationV1Output": {
        "description": "The output of the delete regulation call.",
        "title": "DeleteRegulationV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the deletion call.",
            "type": "string",
            "enum": ["SUCCESS"],
            "title": "status"
          }
        },
        "required": ["status"]
      },
      "CreateWorkspaceRegulationV1Input": {
        "description": "The input to create a workspace regulation.",
        "title": "CreateWorkspaceRegulationV1Input",
        "type": "object",
        "properties": {
          "regulationType": {
            "description": "The regulation type to create.",
            "enum": [
              "BULK_DELETE_ONLY",
              "DELETE_INTERNAL",
              "DELETE_ONLY",
              "SUPPRESS_ONLY",
              "SUPPRESS_WITH_DELETE",
              "UNSUPPRESS"
            ],
            "type": "string",
            "title": "regulationType"
          },
          "subjectType": {
            "description": "The subject type. Use `objectId` for cloud source regulations.",
            "enum": ["OBJECT_ID", "USER_ID"],
            "type": "string",
            "title": "subjectType"
          },
          "subjectIds": {
            "description": "The user or object ids of the subjects to regulate.\n\nConfig API note: equal to `parent` but allows an array.",
            "type": "array",
            "items": { "type": "string" },
            "title": "subjectIds"
          }
        },
        "required": ["regulationType", "subjectIds", "subjectType"]
      },
      "CreateWorkspaceRegulationV1Output": {
        "description": "The output of a create workspace regulation call.",
        "title": "CreateWorkspaceRegulationV1Output",
        "type": "object",
        "properties": {
          "regulateId": { "description": "The id of the created regulation.", "type": "string", "title": "regulateId" }
        },
        "required": ["regulateId"]
      },
      "GetRegulationV1Input": {
        "description": "The input to get a regulate request.",
        "title": "GetRegulationV1Input",
        "type": "object",
        "properties": {
          "regulateId": {
            "description": "The id of the regulate request to retrieve.",
            "type": "string",
            "title": "regulateId"
          }
        },
        "required": ["regulateId"]
      },
      "GetRegulationV1Output": {
        "description": "The regulate request returned.",
        "title": "GetRegulationV1Output",
        "type": "object",
        "properties": {
          "regulation": {
            "description": "The regulate request.",
            "type": "object",
            "properties": {
              "id": { "description": "The id of the regulate request.", "type": "string", "title": "id" },
              "workspaceId": {
                "description": "The id of the workspace that the regulate request belongs to.",
                "type": "string",
                "title": "workspaceId"
              },
              "overallStatus": {
                "description": "The current status of the regulate request.",
                "enum": ["FAILED", "FINISHED", "INITIALIZED", "INVALID", "NOT_SUPPORTED", "PARTIAL_SUCCESS", "RUNNING"],
                "type": "string",
                "title": "overallStatus"
              },
              "finishedAt": {
                "description": "The timestamp of when the request finished.",
                "type": "string",
                "title": "finishedAt"
              },
              "createdAt": {
                "description": "The timestamp of the creation of the request.",
                "type": "string",
                "title": "createdAt"
              },
              "streamStatus": {
                "description": "The status of each stream including all the destinations that correspond to the stream.",
                "type": "array",
                "items": { "$ref": "#/components/schemas/StreamStatusV1" },
                "title": "streamStatus"
              }
            },
            "required": ["createdAt", "finishedAt", "id", "overallStatus", "streamStatus", "workspaceId"],
            "title": "regulation"
          }
        },
        "required": ["regulation"]
      },
      "ListWorkspaceRegulationsV1Input": {
        "description": "Input to list all workspace-scoped regulations in a given workspace.",
        "title": "ListWorkspaceRegulationsV1Input",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status on which to filter the returned regulations.",
            "enum": ["FAILED", "FINISHED", "INITIALIZED", "INVALID", "NOT_SUPPORTED", "PARTIAL_SUCCESS", "RUNNING"],
            "type": "string",
            "title": "status"
          },
          "regulationTypes": {
            "description": "The regulation types on which to filter returned regulations.",
            "type": "array",
            "items": {
              "enum": [
                "BULK_DELETE_ONLY",
                "DELETE_INTERNAL",
                "DELETE_ONLY",
                "SUPPRESS_ONLY",
                "SUPPRESS_WITH_DELETE",
                "UNSUPPRESS"
              ],
              "type": "string"
            },
            "title": "regulationTypes"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["pagination"]
      },
      "ListWorkspaceRegulationsV1Output": {
        "description": "Output of all workspace-scoped regulations in a given workspace.",
        "title": "ListWorkspaceRegulationsV1Output",
        "type": "object",
        "properties": {
          "regulations": {
            "description": "List of workspace-scoped regulations with statuses.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/RegulationListEntryV1" },
            "title": "regulations"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "regulations"]
      },
      "CreateSourceRegulationV1Input": {
        "description": "The input to create a source-scoped regulation.",
        "title": "CreateSourceRegulationV1Input",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the source to scope the regulation to.",
            "type": "string",
            "title": "sourceId"
          },
          "regulationType": {
            "description": "The regulation type to create.",
            "enum": [
              "BULK_DELETE_ONLY",
              "DELETE_INTERNAL",
              "DELETE_ONLY",
              "SUPPRESS_ONLY",
              "SUPPRESS_WITH_DELETE",
              "UNSUPPRESS"
            ],
            "type": "string",
            "title": "regulationType"
          },
          "subjectType": {
            "description": "The subject type.",
            "type": "string",
            "enum": ["USER_ID"],
            "title": "subjectType"
          },
          "subjectIds": {
            "description": "The user or object ids of the subjects to regulate.\n\nConfig API note: equal to `parent` but allows an array.",
            "type": "array",
            "items": { "type": "string" },
            "title": "subjectIds"
          }
        },
        "required": ["regulationType", "sourceId", "subjectIds", "subjectType"]
      },
      "CreateSourceRegulationV1Output": {
        "description": "The output of a create source regulation call.",
        "title": "CreateSourceRegulationV1Output",
        "type": "object",
        "properties": {
          "regulateId": { "description": "The id of the created regulation.", "type": "string", "title": "regulateId" }
        },
        "required": ["regulateId"]
      },
      "CreateCloudSourceRegulationV1Input": {
        "description": "The input to create a cloud source-scoped regulation.",
        "title": "CreateCloudSourceRegulationV1Input",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the cloud source to scope the regulation to.",
            "type": "string",
            "title": "sourceId"
          },
          "regulationType": {
            "description": "The regulation type to create.",
            "enum": [
              "BULK_DELETE_ONLY",
              "DELETE_INTERNAL",
              "DELETE_ONLY",
              "SUPPRESS_ONLY",
              "SUPPRESS_WITH_DELETE",
              "UNSUPPRESS"
            ],
            "type": "string",
            "title": "regulationType"
          },
          "subjectType": {
            "description": "The subject type. Must be `objectId` for cloud sources.",
            "type": "string",
            "enum": ["OBJECT_ID"],
            "title": "subjectType"
          },
          "subjectIds": {
            "description": "The user or object ids of the subjects to regulate.\n\nConfig API note: equal to `parent` but allows an array.",
            "type": "array",
            "items": { "type": "string" },
            "title": "subjectIds"
          },
          "collection": {
            "description": "The cloud source collection to regulate.",
            "type": "string",
            "title": "collection"
          }
        },
        "required": ["collection", "regulationType", "sourceId", "subjectIds", "subjectType"]
      },
      "CreateCloudSourceRegulationV1Output": {
        "description": "The output of a create cloud source regulation call.",
        "title": "CreateCloudSourceRegulationV1Output",
        "type": "object",
        "properties": {
          "regulateId": { "description": "The id of the created regulation.", "type": "string", "title": "regulateId" }
        },
        "required": ["regulateId"]
      },
      "ListRegulationsFromSourceV1Input": {
        "description": "Input to list all source-scoped regulations.",
        "title": "ListRegulationsFromSourceV1Input",
        "type": "object",
        "properties": {
          "sourceId": { "description": "The id of the source the regulation.", "type": "string", "title": "sourceId" },
          "status": {
            "description": "The status on which to filter returned regulations.",
            "enum": ["FAILED", "FINISHED", "INITIALIZED", "INVALID", "NOT_SUPPORTED", "PARTIAL_SUCCESS", "RUNNING"],
            "type": "string",
            "title": "status"
          },
          "regulationTypes": {
            "description": "The regulation types on which to filter returned regulations.",
            "type": "array",
            "items": {
              "enum": [
                "BULK_DELETE_ONLY",
                "DELETE_INTERNAL",
                "DELETE_ONLY",
                "SUPPRESS_ONLY",
                "SUPPRESS_WITH_DELETE",
                "UNSUPPRESS"
              ],
              "type": "string"
            },
            "title": "regulationTypes"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "sourceId"]
      },
      "ListRegulationsFromSourceV1Output": {
        "description": "Output of all source-scoped regulations.",
        "title": "ListRegulationsFromSourceV1Output",
        "type": "object",
        "properties": {
          "regulations": {
            "description": "List of workspace-scoped regulations with statuses.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/RegulationListEntryV1" },
            "title": "regulations"
          }
        },
        "required": ["regulations"]
      },
      "ListSuppressionsV1Input": {
        "description": "The input to list suppressions for the workspace.",
        "title": "ListSuppressionsV1Input",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["pagination"]
      },
      "ListSuppressionsV1Output": {
        "description": "The output of a list suppressed call for a workspace.",
        "title": "ListSuppressionsV1Output",
        "type": "object",
        "properties": {
          "suppressed": {
            "description": "An array that lists the suppressions from the workspace.\n\nConfig API note: equal to `attributes`.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "subjectType": { "type": "string", "title": "subjectType" },
                "subjectIds": { "type": "array", "items": { "type": "string" }, "title": "subjectIds" }
              },
              "required": ["subjectIds", "subjectType"]
            },
            "title": "suppressed"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "suppressed"]
      },
      "GetSourcesCatalogAlphaInput": {
        "description": "Filter parameters used for loading the sources public catalog.",
        "title": "GetSourcesCatalogAlphaInput",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Defines the pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["pagination"]
      },
      "GetSourcesCatalogAlphaOutput": {
        "description": "Returns a list of all source catalog items contained within a given page.",
        "title": "GetSourcesCatalogAlphaOutput",
        "type": "object",
        "properties": {
          "sourcesCatalog": {
            "description": "All source catalog items contained within the requested page.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/SourceMetadataAlpha" },
            "title": "sourcesCatalog"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Information about the pagination of this response.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "sourcesCatalog"]
      },
      "GetSourceMetadataAlphaInput": {
        "description": "Request source catalog item by id.",
        "title": "GetSourceMetadataAlphaInput",
        "type": "object",
        "properties": {
          "sourceMetadataId": {
            "description": "The id of the source catalog item to request.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "sourceMetadataId"
          }
        },
        "required": ["sourceMetadataId"]
      },
      "GetSourceMetadataAlphaOutput": {
        "description": "Returns the source catalog item looked up by id.",
        "title": "GetSourceMetadataAlphaOutput",
        "type": "object",
        "properties": {
          "sourceMetadata": {
            "$ref": "#/components/schemas/SourceMetadataAlpha",
            "description": "The catalog item matched by id.",
            "title": "sourceMetadata"
          }
        },
        "required": ["sourceMetadata"]
      },
      "GetSourcesCatalogBetaInput": {
        "description": "Filter parameters used for loading the sources public catalog.",
        "title": "GetSourcesCatalogBetaInput",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Defines the pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["pagination"]
      },
      "GetSourcesCatalogBetaOutput": {
        "description": "Returns a list of all source catalog items contained within a given page.",
        "title": "GetSourcesCatalogBetaOutput",
        "type": "object",
        "properties": {
          "sourcesCatalog": {
            "description": "All source catalog items contained within the requested page.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/SourceMetadataBeta" },
            "title": "sourcesCatalog"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Information about the pagination of this response.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "sourcesCatalog"]
      },
      "GetSourceMetadataBetaInput": {
        "description": "Requests a source catalog item by id.",
        "title": "GetSourceMetadataBetaInput",
        "type": "object",
        "properties": {
          "sourceMetadataId": {
            "description": "The id of the returned source catalog item.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "sourceMetadataId"
          }
        },
        "required": ["sourceMetadataId"]
      },
      "GetSourceMetadataBetaOutput": {
        "description": "Returns the source catalog item looked up by id.",
        "title": "GetSourceMetadataBetaOutput",
        "type": "object",
        "properties": {
          "sourceMetadata": {
            "$ref": "#/components/schemas/SourceMetadataBeta",
            "description": "The catalog item matched by id.",
            "title": "sourceMetadata"
          }
        },
        "required": ["sourceMetadata"]
      },
      "GetSourcesCatalogV1Input": {
        "description": "Filter parameters used for loading the sources public catalog.",
        "title": "GetSourcesCatalogV1Input",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Defines the pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["pagination"]
      },
      "GetSourcesCatalogV1Output": {
        "description": "Returns a list of all source catalog items contained within a given page.",
        "title": "GetSourcesCatalogV1Output",
        "type": "object",
        "properties": {
          "sourcesCatalog": {
            "description": "All source catalog items contained within the requested page.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/SourceMetadataV1" },
            "title": "sourcesCatalog"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Information about the pagination of this response.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "sourcesCatalog"]
      },
      "GetSourceMetadataV1Input": {
        "description": "Requests a source catalog item by id.",
        "title": "GetSourceMetadataV1Input",
        "type": "object",
        "properties": {
          "sourceMetadataId": {
            "description": "The id of the returned source catalog item.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "sourceMetadataId"
          }
        },
        "required": ["sourceMetadataId"]
      },
      "GetSourceMetadataV1Output": {
        "description": "Returns the source catalog item looked up by id.",
        "title": "GetSourceMetadataV1Output",
        "type": "object",
        "properties": {
          "sourceMetadata": {
            "$ref": "#/components/schemas/SourceMetadataV1",
            "description": "The catalog item matched by id.",
            "title": "sourceMetadata"
          }
        },
        "required": ["sourceMetadata"]
      },
      "SourceMetadataAlpha": {
        "description": "A website, server library, mobile SDK, or cloud application which can send data into Segment.",
        "title": "SourceMetadataAlpha",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id for this source metadata in the Segment catalog.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "id"
          },
          "name": {
            "description": "The user-friendly name of this source.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "slug": {
            "description": "The slug that identifies this source in the Segment app.\n\nConfig API note: equal to `name`.",
            "type": "string",
            "title": "slug"
          },
          "description": { "description": "The description of this source.", "type": "string", "title": "description" },
          "logos": {
            "$ref": "#/components/schemas/LogosAlpha",
            "description": "The logos for this source.",
            "title": "logos"
          },
          "options": {
            "description": "Options for this source.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/IntegrationOptionAlpha" },
            "title": "options"
          },
          "categories": {
            "description": "A list of categories this source belongs to.",
            "type": "array",
            "items": { "type": "string" },
            "title": "categories"
          },
          "isCloudEventSource": {
            "description": "True if this is a Cloud Event Source.",
            "type": "boolean",
            "title": "isCloudEventSource"
          }
        },
        "required": ["categories", "description", "id", "isCloudEventSource", "logos", "name", "options", "slug"]
      },
      "SourceMetadataBeta": {
        "description": "A website, server library, mobile SDK, or cloud application which can send data into Segment.",
        "title": "SourceMetadataBeta",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id for this source metadata in the Segment catalog.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "id"
          },
          "name": {
            "description": "The user-friendly name of this source.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "slug": {
            "description": "The slug that identifies this source in the Segment app.\n\nConfig API note: equal to `name`.",
            "type": "string",
            "title": "slug"
          },
          "description": { "description": "The description of this source.", "type": "string", "title": "description" },
          "logos": {
            "$ref": "#/components/schemas/LogosBeta",
            "description": "The logos for this source.",
            "title": "logos"
          },
          "options": {
            "description": "Options for this source.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/IntegrationOptionBeta" },
            "title": "options"
          },
          "categories": {
            "description": "A list of categories this source belongs to.",
            "type": "array",
            "items": { "type": "string" },
            "title": "categories"
          },
          "isCloudEventSource": {
            "description": "True if this is a Cloud Event Source.",
            "type": "boolean",
            "title": "isCloudEventSource"
          }
        },
        "required": ["categories", "description", "id", "isCloudEventSource", "logos", "name", "options", "slug"]
      },
      "SourceMetadataV1": {
        "description": "A website, server library, mobile SDK, or cloud application which can send data into Segment.",
        "title": "SourceMetadataV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id for this source metadata in the Segment catalog.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "id"
          },
          "name": {
            "description": "The user-friendly name of this source.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "slug": {
            "description": "The slug that identifies this source in the Segment app.\n\nConfig API note: equal to `name`.",
            "type": "string",
            "title": "slug"
          },
          "description": { "description": "The description of this source.", "type": "string", "title": "description" },
          "logos": {
            "$ref": "#/components/schemas/LogosBeta",
            "description": "The logos for this source.",
            "title": "logos"
          },
          "options": {
            "description": "Options for this source.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/IntegrationOptionBeta" },
            "title": "options"
          },
          "categories": {
            "description": "A list of categories this source belongs to.",
            "type": "array",
            "items": { "type": "string" },
            "title": "categories"
          },
          "isCloudEventSource": {
            "description": "True if this is a Cloud Event Source.",
            "type": "boolean",
            "title": "isCloudEventSource"
          }
        },
        "required": ["categories", "description", "id", "isCloudEventSource", "logos", "name", "options", "slug"]
      },
      "CommonSourceSettingsAlpha": {
        "title": "CommonSourceSettingsAlpha",
        "type": "object",
        "properties": {
          "track": {
            "description": "Track settings.",
            "$ref": "#/components/schemas/TrackSourceSettingsAlpha",
            "title": "track"
          },
          "identify": {
            "description": "Identify settings.",
            "$ref": "#/components/schemas/IdentifySourceSettingsAlpha",
            "title": "identify"
          },
          "group": {
            "description": "Group settings.",
            "$ref": "#/components/schemas/GroupSourceSettingsAlpha",
            "title": "group"
          },
          "forwardingViolationsTo": {
            "description": "SourceId to forward violations to.",
            "type": "string",
            "title": "forwardingViolationsTo"
          },
          "forwardingBlockedEventsTo": {
            "description": "SourceId to forward blocked events to.",
            "type": "string",
            "title": "forwardingBlockedEventsTo"
          }
        }
      },
      "TrackSourceSettingsAlpha": {
        "title": "TrackSourceSettingsAlpha",
        "type": "object",
        "properties": {
          "allowUnplannedEvents": {
            "description": "Enable to allow unplanned track events.\n\nConfig API note: equal to `allowUnplannedTrackEvents`.",
            "type": "boolean",
            "title": "allowUnplannedEvents"
          },
          "allowUnplannedEventProperties": {
            "description": "Enable to allow unplanned track event properties.\n\nConfig API note: equal to `allowUnplannedTrackEventProperties`.",
            "type": "boolean",
            "title": "allowUnplannedEventProperties"
          },
          "allowEventOnViolations": {
            "description": "Allow track event on violations.\n\nConfig API note: equal to `allowTrackEventOnViolations`.",
            "type": "boolean",
            "title": "allowEventOnViolations"
          },
          "allowPropertiesOnViolations": {
            "description": "Enable to allow track properties on violations.\n\nConfig API note: equal to `allowTrackEventPropertiesOnViolations`.",
            "type": "boolean",
            "title": "allowPropertiesOnViolations"
          },
          "commonEventOnViolations": {
            "description": "The common track event on violations.\n\nConfig API note: equal to `commonTrackEventOnViolations`.",
            "enum": ["ALLOW", "BLOCK", "OMIT_PROPERTIES"],
            "type": "string",
            "title": "commonEventOnViolations"
          }
        }
      },
      "IdentifySourceSettingsAlpha": {
        "title": "IdentifySourceSettingsAlpha",
        "type": "object",
        "properties": {
          "allowUnplannedTraits": {
            "description": "Enable to allow unplanned identify traits.\n\nConfig API note: equal to `allowUnplannedIdentifyTraits`.",
            "type": "boolean",
            "title": "allowUnplannedTraits"
          },
          "allowTraitsOnViolations": {
            "description": "Enable to allow identify traits on violations.\n\nConfig API note: equal to `allowIdentifyTraitsOnViolations`.",
            "type": "boolean",
            "title": "allowTraitsOnViolations"
          },
          "commonEventOnViolations": {
            "description": "The common identify event on violations.\n\nConfig API note: equal to `commonIdentifyEventOnViolations`.",
            "enum": ["ALLOW", "BLOCK", "OMIT_TRAITS"],
            "type": "string",
            "title": "commonEventOnViolations"
          }
        }
      },
      "GroupSourceSettingsAlpha": {
        "title": "GroupSourceSettingsAlpha",
        "type": "object",
        "properties": {
          "allowUnplannedTraits": {
            "description": "Enable to allow unplanned group traits.\n\nConfig API note: equal to `allowUnplannedGroupTraits`.",
            "type": "boolean",
            "title": "allowUnplannedTraits"
          },
          "allowTraitsOnViolations": {
            "description": "Enable to allow group traits on violations.\n\nConfig API note: equal to `allowGroupTraitsOnViolations`.",
            "type": "boolean",
            "title": "allowTraitsOnViolations"
          },
          "commonEventOnViolations": {
            "description": "The common group event on violations.\n\nConfig API note: equal to `commonGroupEventOnViolations`.",
            "enum": ["ALLOW", "BLOCK", "OMIT_TRAITS"],
            "type": "string",
            "title": "commonEventOnViolations"
          }
        }
      },
      "SourceSettingsOutputAlpha": {
        "description": "The output of source settings.",
        "title": "SourceSettingsOutputAlpha",
        "type": "object",
        "properties": {
          "track": {
            "description": "Track settings.",
            "$ref": "#/components/schemas/TrackSourceSettingsAlpha",
            "title": "track"
          },
          "identify": {
            "description": "Identify settings.",
            "$ref": "#/components/schemas/IdentifySourceSettingsAlpha",
            "title": "identify"
          },
          "group": {
            "description": "Group settings.",
            "$ref": "#/components/schemas/GroupSourceSettingsAlpha",
            "title": "group"
          },
          "forwardingViolationsTo": {
            "description": "SourceId to forward violations to.",
            "type": "string",
            "title": "forwardingViolationsTo"
          },
          "forwardingBlockedEventsTo": {
            "description": "SourceId to forward blocked events to.",
            "type": "string",
            "title": "forwardingBlockedEventsTo"
          }
        }
      },
      "ListSchemaSettingsInSourceAlphaInput": {
        "description": "Request the settings of a source.",
        "title": "ListSchemaSettingsInSourceAlphaInput",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the source to query settings for.\n\nConfig API note: analogous to `parent` and `name`.",
            "type": "string",
            "title": "sourceId"
          }
        },
        "required": ["sourceId"]
      },
      "ListSchemaSettingsInSourceAlphaOutput": {
        "description": "Returns a list of settings for the source.",
        "title": "ListSchemaSettingsInSourceAlphaOutput",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "Source id.\n\nConfig API note: analogous to `parent` and `name`.",
            "type": "string",
            "title": "sourceId"
          },
          "settings": {
            "$ref": "#/components/schemas/SourceSettingsOutputAlpha",
            "description": "The source settings.",
            "title": "settings"
          }
        },
        "required": ["settings", "sourceId"]
      },
      "UpdateSchemaSettingsInSourceAlphaInput": {
        "description": "Input to update a source's settings.",
        "title": "UpdateSchemaSettingsInSourceAlphaInput",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the source to have settings updated.\n\nConfig API note: analogous to `parent` and `name`.",
            "type": "string",
            "title": "sourceId"
          },
          "track": {
            "description": "Track settings.",
            "$ref": "#/components/schemas/TrackSourceSettingsAlpha",
            "title": "track"
          },
          "identify": {
            "description": "Identify settings.",
            "$ref": "#/components/schemas/IdentifySourceSettingsAlpha",
            "title": "identify"
          },
          "group": {
            "description": "Group settings.",
            "$ref": "#/components/schemas/GroupSourceSettingsAlpha",
            "title": "group"
          },
          "forwardingViolationsTo": {
            "description": "Source id to forward violations to.",
            "type": "string",
            "title": "forwardingViolationsTo"
          },
          "forwardingBlockedEventsTo": {
            "description": "Source id to forward blocked events to.",
            "type": "string",
            "title": "forwardingBlockedEventsTo"
          }
        },
        "required": ["sourceId"]
      },
      "UpdateSchemaSettingsInSourceAlphaOutput": {
        "description": "Output of the source with updated settings.",
        "title": "UpdateSchemaSettingsInSourceAlphaOutput",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the updated source.\n\nConfig API note: analogous to `parent` and `name`.",
            "type": "string",
            "title": "sourceId"
          },
          "settings": {
            "$ref": "#/components/schemas/SourceSettingsOutputAlpha",
            "description": "The output of source settings.",
            "title": "settings"
          }
        },
        "required": ["settings", "sourceId"]
      },
      "CommonSourceSettingsBeta": {
        "title": "CommonSourceSettingsBeta",
        "type": "object",
        "properties": {
          "track": {
            "description": "Track settings.",
            "$ref": "#/components/schemas/TrackSourceSettingsBeta",
            "title": "track"
          },
          "identify": {
            "description": "Identify settings.",
            "$ref": "#/components/schemas/IdentifySourceSettingsBeta",
            "title": "identify"
          },
          "group": {
            "description": "Group settings.",
            "$ref": "#/components/schemas/GroupSourceSettingsBeta",
            "title": "group"
          },
          "forwardingViolationsTo": {
            "description": "SourceId to forward violations to.",
            "type": "string",
            "title": "forwardingViolationsTo"
          },
          "forwardingBlockedEventsTo": {
            "description": "SourceId to forward blocked events to.",
            "type": "string",
            "title": "forwardingBlockedEventsTo"
          }
        }
      },
      "TrackSourceSettingsBeta": {
        "title": "TrackSourceSettingsBeta",
        "type": "object",
        "properties": {
          "allowUnplannedEvents": {
            "description": "Enable to allow unplanned track events.\n\nConfig API note: equal to `allowUnplannedTrackEvents`.",
            "type": "boolean",
            "title": "allowUnplannedEvents"
          },
          "allowUnplannedEventProperties": {
            "description": "Enable to allow unplanned track event properties.\n\nConfig API note: equal to `allowUnplannedTrackEventProperties`.",
            "type": "boolean",
            "title": "allowUnplannedEventProperties"
          },
          "allowEventOnViolations": {
            "description": "Allow track event on violations.\n\nConfig API note: equal to `allowTrackEventOnViolations`.",
            "type": "boolean",
            "title": "allowEventOnViolations"
          },
          "allowPropertiesOnViolations": {
            "description": "Enable to allow track properties on violations.\n\nConfig API note: equal to `allowTrackEventPropertiesOnViolations`.",
            "type": "boolean",
            "title": "allowPropertiesOnViolations"
          },
          "commonEventOnViolations": {
            "description": "The common track event on violations.\n\nConfig API note: equal to `commonTrackEventOnViolations`.",
            "enum": ["ALLOW", "BLOCK", "OMIT_PROPERTIES"],
            "type": "string",
            "title": "commonEventOnViolations"
          }
        }
      },
      "IdentifySourceSettingsBeta": {
        "title": "IdentifySourceSettingsBeta",
        "type": "object",
        "properties": {
          "allowUnplannedTraits": {
            "description": "Enable to allow unplanned identify traits.\n\nConfig API note: equal to `allowUnplannedIdentifyTraits`.",
            "type": "boolean",
            "title": "allowUnplannedTraits"
          },
          "allowTraitsOnViolations": {
            "description": "Enable to allow identify traits on violations.\n\nConfig API note: equal to `allowIdentifyTraitsOnViolations`.",
            "type": "boolean",
            "title": "allowTraitsOnViolations"
          },
          "commonEventOnViolations": {
            "description": "The common identify event on violations.\n\nConfig API note: equal to `commonIdentifyEventOnViolations`.",
            "enum": ["ALLOW", "BLOCK", "OMIT_TRAITS"],
            "type": "string",
            "title": "commonEventOnViolations"
          }
        }
      },
      "GroupSourceSettingsBeta": {
        "title": "GroupSourceSettingsBeta",
        "type": "object",
        "properties": {
          "allowUnplannedTraits": {
            "description": "Enable to allow unplanned group traits.\n\nConfig API note: equal to `allowUnplannedGroupTraits`.",
            "type": "boolean",
            "title": "allowUnplannedTraits"
          },
          "allowTraitsOnViolations": {
            "description": "Enable to allow group traits on violations.\n\nConfig API note: equal to `allowGroupTraitsOnViolations`.",
            "type": "boolean",
            "title": "allowTraitsOnViolations"
          },
          "commonEventOnViolations": {
            "description": "The common group event on violations.\n\nConfig API note: equal to `commonGroupEventOnViolations`.",
            "enum": ["ALLOW", "BLOCK", "OMIT_TRAITS"],
            "type": "string",
            "title": "commonEventOnViolations"
          }
        }
      },
      "SourceSettingsOutputBeta": {
        "description": "The output of source settings.",
        "title": "SourceSettingsOutputBeta",
        "type": "object",
        "properties": {
          "track": {
            "description": "Track settings.",
            "$ref": "#/components/schemas/TrackSourceSettingsBeta",
            "title": "track"
          },
          "identify": {
            "description": "Identify settings.",
            "$ref": "#/components/schemas/IdentifySourceSettingsBeta",
            "title": "identify"
          },
          "group": {
            "description": "Group settings.",
            "$ref": "#/components/schemas/GroupSourceSettingsBeta",
            "title": "group"
          },
          "forwardingViolationsTo": {
            "description": "SourceId to forward violations to.",
            "type": "string",
            "title": "forwardingViolationsTo"
          },
          "forwardingBlockedEventsTo": {
            "description": "SourceId to forward blocked events to.",
            "type": "string",
            "title": "forwardingBlockedEventsTo"
          }
        }
      },
      "ListSchemaSettingsInSourceBetaInput": {
        "description": "Request the settings of a source.",
        "title": "ListSchemaSettingsInSourceBetaInput",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the source to query settings for.\n\nConfig API note: analogous to `parent` and `name`.",
            "type": "string",
            "title": "sourceId"
          }
        },
        "required": ["sourceId"]
      },
      "ListSchemaSettingsInSourceBetaOutput": {
        "description": "Returns a list of settings for the source.",
        "title": "ListSchemaSettingsInSourceBetaOutput",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "Source id.\n\nConfig API note: analogous to `parent` and `name`.",
            "type": "string",
            "title": "sourceId"
          },
          "settings": {
            "$ref": "#/components/schemas/SourceSettingsOutputBeta",
            "description": "The source settings.",
            "title": "settings"
          }
        },
        "required": ["settings", "sourceId"]
      },
      "UpdateSchemaSettingsInSourceBetaInput": {
        "description": "Input to update a source's settings.",
        "title": "UpdateSchemaSettingsInSourceBetaInput",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the source to have settings updated.\n\nConfig API note: analogous to `parent` and `name`.",
            "type": "string",
            "title": "sourceId"
          },
          "track": {
            "description": "Track settings.",
            "$ref": "#/components/schemas/TrackSourceSettingsBeta",
            "title": "track"
          },
          "identify": {
            "description": "Identify settings.",
            "$ref": "#/components/schemas/IdentifySourceSettingsBeta",
            "title": "identify"
          },
          "group": {
            "description": "Group settings.",
            "$ref": "#/components/schemas/GroupSourceSettingsBeta",
            "title": "group"
          },
          "forwardingViolationsTo": {
            "description": "Source id to forward violations to.",
            "type": "string",
            "title": "forwardingViolationsTo"
          },
          "forwardingBlockedEventsTo": {
            "description": "Source id to forward blocked events to.",
            "type": "string",
            "title": "forwardingBlockedEventsTo"
          }
        },
        "required": ["sourceId"]
      },
      "UpdateSchemaSettingsInSourceBetaOutput": {
        "description": "Output of the source with updated settings.",
        "title": "UpdateSchemaSettingsInSourceBetaOutput",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the updated source.\n\nConfig API note: analogous to `parent` and `name`.",
            "type": "string",
            "title": "sourceId"
          },
          "settings": {
            "$ref": "#/components/schemas/SourceSettingsOutputBeta",
            "description": "The output of source settings.",
            "title": "settings"
          }
        },
        "required": ["settings", "sourceId"]
      },
      "CommonSourceSettingsV1": {
        "title": "CommonSourceSettingsV1",
        "type": "object",
        "properties": {
          "track": {
            "description": "Track settings.",
            "$ref": "#/components/schemas/TrackSourceSettingsV1",
            "title": "track"
          },
          "identify": {
            "description": "Identify settings.",
            "$ref": "#/components/schemas/IdentifySourceSettingsV1",
            "title": "identify"
          },
          "group": {
            "description": "Group settings.",
            "$ref": "#/components/schemas/GroupSourceSettingsV1",
            "title": "group"
          },
          "forwardingViolationsTo": {
            "description": "SourceId to forward violations to.",
            "type": "string",
            "title": "forwardingViolationsTo"
          },
          "forwardingBlockedEventsTo": {
            "description": "SourceId to forward blocked events to.",
            "type": "string",
            "title": "forwardingBlockedEventsTo"
          }
        }
      },
      "TrackSourceSettingsV1": {
        "title": "TrackSourceSettingsV1",
        "type": "object",
        "properties": {
          "allowUnplannedEvents": {
            "description": "Enable to allow unplanned track events.\n\nConfig API note: equal to `allowUnplannedTrackEvents`.",
            "type": "boolean",
            "title": "allowUnplannedEvents"
          },
          "allowUnplannedEventProperties": {
            "description": "Enable to allow unplanned track event properties.\n\nConfig API note: equal to `allowUnplannedTrackEventProperties`.",
            "type": "boolean",
            "title": "allowUnplannedEventProperties"
          },
          "allowEventOnViolations": {
            "description": "Allow track event on violations.\n\nConfig API note: equal to `allowTrackEventOnViolations`.",
            "type": "boolean",
            "title": "allowEventOnViolations"
          },
          "allowPropertiesOnViolations": {
            "description": "Enable to allow track properties on violations.\n\nConfig API note: equal to `allowTrackEventPropertiesOnViolations`.",
            "type": "boolean",
            "title": "allowPropertiesOnViolations"
          },
          "commonEventOnViolations": {
            "description": "The common track event on violations.\n\nConfig API note: equal to `commonTrackEventOnViolations`.",
            "enum": ["ALLOW", "BLOCK", "OMIT_PROPERTIES"],
            "type": "string",
            "title": "commonEventOnViolations"
          }
        }
      },
      "IdentifySourceSettingsV1": {
        "title": "IdentifySourceSettingsV1",
        "type": "object",
        "properties": {
          "allowUnplannedTraits": {
            "description": "Enable to allow unplanned identify traits.\n\nConfig API note: equal to `allowUnplannedIdentifyTraits`.",
            "type": "boolean",
            "title": "allowUnplannedTraits"
          },
          "allowTraitsOnViolations": {
            "description": "Enable to allow identify traits on violations.\n\nConfig API note: equal to `allowIdentifyTraitsOnViolations`.",
            "type": "boolean",
            "title": "allowTraitsOnViolations"
          },
          "commonEventOnViolations": {
            "description": "The common identify event on violations.\n\nConfig API note: equal to `commonIdentifyEventOnViolations`.",
            "enum": ["ALLOW", "BLOCK", "OMIT_TRAITS"],
            "type": "string",
            "title": "commonEventOnViolations"
          }
        }
      },
      "GroupSourceSettingsV1": {
        "title": "GroupSourceSettingsV1",
        "type": "object",
        "properties": {
          "allowUnplannedTraits": {
            "description": "Enable to allow unplanned group traits.\n\nConfig API note: equal to `allowUnplannedGroupTraits`.",
            "type": "boolean",
            "title": "allowUnplannedTraits"
          },
          "allowTraitsOnViolations": {
            "description": "Enable to allow group traits on violations.\n\nConfig API note: equal to `allowGroupTraitsOnViolations`.",
            "type": "boolean",
            "title": "allowTraitsOnViolations"
          },
          "commonEventOnViolations": {
            "description": "The common group event on violations.\n\nConfig API note: equal to `commonGroupEventOnViolations`.",
            "enum": ["ALLOW", "BLOCK", "OMIT_TRAITS"],
            "type": "string",
            "title": "commonEventOnViolations"
          }
        }
      },
      "SourceSettingsOutputV1": {
        "description": "The output of source settings.",
        "title": "SourceSettingsOutputV1",
        "type": "object",
        "properties": {
          "track": {
            "description": "Track settings.",
            "$ref": "#/components/schemas/TrackSourceSettingsV1",
            "title": "track"
          },
          "identify": {
            "description": "Identify settings.",
            "$ref": "#/components/schemas/IdentifySourceSettingsV1",
            "title": "identify"
          },
          "group": {
            "description": "Group settings.",
            "$ref": "#/components/schemas/GroupSourceSettingsV1",
            "title": "group"
          },
          "forwardingViolationsTo": {
            "description": "SourceId to forward violations to.",
            "type": "string",
            "title": "forwardingViolationsTo"
          },
          "forwardingBlockedEventsTo": {
            "description": "SourceId to forward blocked events to.",
            "type": "string",
            "title": "forwardingBlockedEventsTo"
          }
        }
      },
      "ListSchemaSettingsInSourceV1Input": {
        "description": "Request the settings of a source.",
        "title": "ListSchemaSettingsInSourceV1Input",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the source to query settings for.\n\nConfig API note: analogous to `parent` and `name`.",
            "type": "string",
            "title": "sourceId"
          }
        },
        "required": ["sourceId"]
      },
      "ListSchemaSettingsInSourceV1Output": {
        "description": "Returns a list of settings for the source.",
        "title": "ListSchemaSettingsInSourceV1Output",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "Source id.\n\nConfig API note: analogous to `parent` and `name`.",
            "type": "string",
            "title": "sourceId"
          },
          "settings": {
            "$ref": "#/components/schemas/SourceSettingsOutputV1",
            "description": "The source settings.",
            "title": "settings"
          }
        },
        "required": ["settings", "sourceId"]
      },
      "UpdateSchemaSettingsInSourceV1Input": {
        "description": "Input to update a source's settings.",
        "title": "UpdateSchemaSettingsInSourceV1Input",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the source to have settings updated.\n\nConfig API note: analogous to `parent` and `name`.",
            "type": "string",
            "title": "sourceId"
          },
          "track": {
            "description": "Track settings.",
            "$ref": "#/components/schemas/TrackSourceSettingsV1",
            "title": "track"
          },
          "identify": {
            "description": "Identify settings.",
            "$ref": "#/components/schemas/IdentifySourceSettingsV1",
            "title": "identify"
          },
          "group": {
            "description": "Group settings.",
            "$ref": "#/components/schemas/GroupSourceSettingsV1",
            "title": "group"
          },
          "forwardingViolationsTo": {
            "description": "Source id to forward violations to.",
            "type": "string",
            "title": "forwardingViolationsTo"
          },
          "forwardingBlockedEventsTo": {
            "description": "Source id to forward blocked events to.",
            "type": "string",
            "title": "forwardingBlockedEventsTo"
          }
        },
        "required": ["sourceId"]
      },
      "UpdateSchemaSettingsInSourceV1Output": {
        "description": "Output of the source with updated settings.",
        "title": "UpdateSchemaSettingsInSourceV1Output",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the updated source.\n\nConfig API note: analogous to `parent` and `name`.",
            "type": "string",
            "title": "sourceId"
          },
          "settings": {
            "$ref": "#/components/schemas/SourceSettingsOutputV1",
            "description": "The output of source settings.",
            "title": "settings"
          }
        },
        "required": ["settings", "sourceId"]
      },
      "SourceAlpha": {
        "description": "Defines a data source for Segment data.",
        "title": "SourceAlpha",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of the source.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "id"
          },
          "slug": {
            "description": "The slug used to identify the source in the Segment app.\n\nConfig API note: equal to `name`.",
            "type": "string",
            "title": "slug"
          },
          "name": {
            "description": "The name of the source.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "metadata": {
            "$ref": "#/components/schemas/SourceMetadataAlpha",
            "description": "The metadata for the source.\n\nConfig API note: includes `catalogName` and `catalogId`.",
            "title": "metadata"
          },
          "workspaceId": {
            "description": "The id of the workspace that owns the source.\n\nConfig API note: equal to `parent`.",
            "type": "string",
            "title": "workspaceId"
          },
          "enabled": {
            "description": "Enable to receive data from the source.",
            "type": "boolean",
            "title": "enabled"
          },
          "writeKeys": {
            "description": "The write keys used to send data from the source. This field is left empty when the current token does not have the\n'source admin' permission.",
            "type": "array",
            "items": { "type": "string" },
            "title": "writeKeys"
          },
          "settings": {
            "description": "The settings associated with the source.",
            "$ref": "#/components/schemas/SourceSettingsAlpha",
            "title": "settings"
          },
          "labels": {
            "description": "A list of labels applied to the source.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/LabelAlpha" },
            "title": "labels"
          }
        },
        "required": ["enabled", "id", "labels", "metadata", "slug", "workspaceId", "writeKeys"]
      },
      "SourceSettingsAlpha": {
        "description": "A key-value object that contains instance-specific settings for a source.\n\nThe `options` field in the source metadata defines the schema of this object.",
        "title": "SourceSettingsAlpha",
        "type": "object",
        "additionalProperties": {}
      },
      "ListSourcesAlphaInput": {
        "description": "Requests a list of sources that belong to the current workspace.",
        "title": "ListSourcesAlphaInput",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Defines the pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["pagination"]
      },
      "ListSourcesAlphaOutput": {
        "description": "Returns a list of sources that belong to the current workspace.",
        "title": "ListSourcesAlphaOutput",
        "type": "object",
        "properties": {
          "sources": {
            "description": "A list of sources that belong to the workspace.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/SourceAlpha" },
            "title": "sources"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Information about the pagination of this response.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "sources"]
      },
      "GetSourceAlphaInput": {
        "description": "Looks up a source by id.",
        "title": "GetSourceAlphaInput",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the source to look up.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "sourceId"
          }
        },
        "required": ["sourceId"]
      },
      "GetSourceAlphaOutput": {
        "description": "Returns a source.",
        "title": "GetSourceAlphaOutput",
        "type": "object",
        "properties": {
          "source": {
            "$ref": "#/components/schemas/SourceAlpha",
            "description": "The returned source object.",
            "title": "source"
          }
        },
        "required": ["source"]
      },
      "ListConnectedWarehousesFromSourceAlphaInput": {
        "description": "Requests a list of warehouses connected to a source.",
        "title": "ListConnectedWarehousesFromSourceAlphaInput",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the source to look up.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "sourceId"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Required pagination params for the request.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "sourceId"]
      },
      "ListConnectedWarehousesFromSourceAlphaOutput": {
        "description": "Returns a list of warehouses connected to a source.",
        "title": "ListConnectedWarehousesFromSourceAlphaOutput",
        "type": "object",
        "properties": {
          "warehouses": {
            "description": "A list that contains the warehouses connected to the source.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/WarehouseAlpha" },
            "title": "warehouses"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "The pagination object that constraints the returned list.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "warehouses"]
      },
      "ListConnectedDestinationsFromSourceAlphaInput": {
        "description": "Requests a list of destinations connected to a source.",
        "title": "ListConnectedDestinationsFromSourceAlphaInput",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the source to look up.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "sourceId"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Required pagination params for the request.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "sourceId"]
      },
      "ListConnectedDestinationsFromSourceAlphaOutput": {
        "description": "Returns a list of destinations connected to a source.",
        "title": "ListConnectedDestinationsFromSourceAlphaOutput",
        "type": "object",
        "properties": {
          "destinations": {
            "description": "A list that contains the destinations connected to the source.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/DestinationAlpha" },
            "title": "destinations"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "The pagination object that constraints the returned list.",
            "title": "pagination"
          }
        },
        "required": ["destinations", "pagination"]
      },
      "CreateSourceAlphaInput": {
        "description": "Create a new source based on a set of parameters.",
        "title": "CreateSourceAlphaInput",
        "type": "object",
        "properties": {
          "slug": {
            "description": "The slug by which to identify the source in the Segment app.",
            "type": "string",
            "title": "slug"
          },
          "enabled": {
            "description": "Enable to allow this source to send data. Defaults to true.",
            "type": "boolean",
            "title": "enabled"
          },
          "name": {
            "description": "An optional human-readable name for this source.",
            "type": "string",
            "title": "name"
          },
          "metadataId": {
            "description": "The id of the source metadata from which this instance of the source derives.\n\nAll source metadata is available under `/catalog/sources`.",
            "type": "string",
            "title": "metadataId"
          },
          "settings": {
            "description": "A key-value object that contains instance-specific settings for the source.",
            "$ref": "#/components/schemas/SourceSettingsAlpha",
            "title": "settings"
          }
        },
        "required": ["enabled", "metadataId", "slug"]
      },
      "CreateSourceAlphaOutput": {
        "description": "Returns the newly source.",
        "title": "CreateSourceAlphaOutput",
        "type": "object",
        "properties": {
          "source": {
            "$ref": "#/components/schemas/SourceAlpha",
            "description": "The newly created source.",
            "title": "source"
          }
        },
        "required": ["source"]
      },
      "DeleteSourceAlphaInput": {
        "description": "Deletes an existing source by id.",
        "title": "DeleteSourceAlphaInput",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the source to delete.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "sourceId"
          }
        },
        "required": ["sourceId"]
      },
      "DeleteSourceAlphaOutput": {
        "description": "Returns the status of a source deletion.",
        "title": "DeleteSourceAlphaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the source deletion operation.",
            "type": "string",
            "enum": ["SUCCESS"],
            "title": "status"
          }
        },
        "required": ["status"]
      },
      "UpdateSourceAlphaInput": {
        "description": "Updates an existing source based on a set of parameters.",
        "title": "UpdateSourceAlphaInput",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the source to update.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "sourceId"
          },
          "name": {
            "description": "An optional human-readable name to associate with the source.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "enabled": {
            "description": "Enable to allow the source to send data.",
            "type": "boolean",
            "title": "enabled"
          },
          "slug": {
            "description": "The slug that identifies the source.\n\nConfig API note: equal to `name`.",
            "type": "string",
            "title": "slug"
          },
          "settings": {
            "description": "A key-value object that contains instance-specific settings for the source.\n\nDifferent kinds of sources require different kinds of input. The settings input for a source comes from the\n`options` object associated with this instance of a source.\n\nYou can find the full list of required settings by accessing the sources catalog endpoint under `/catalog/sources`.",
            "$ref": "#/components/schemas/SourceSettingsAlpha",
            "title": "settings"
          }
        },
        "required": ["sourceId"]
      },
      "UpdateSourceAlphaOutput": {
        "description": "Returns the updated source.",
        "title": "UpdateSourceAlphaOutput",
        "type": "object",
        "properties": {
          "source": {
            "$ref": "#/components/schemas/SourceAlpha",
            "description": "The updated source.",
            "title": "source"
          }
        },
        "required": ["source"]
      },
      "SourceBeta": {
        "description": "Defines a data source for Segment data.",
        "title": "SourceBeta",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of the source.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "id"
          },
          "slug": {
            "description": "The slug used to identify the source in the Segment app.\n\nConfig API note: equal to `name`.",
            "type": "string",
            "title": "slug"
          },
          "name": {
            "description": "The name of the source.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "metadata": {
            "$ref": "#/components/schemas/SourceMetadataBeta",
            "description": "The metadata for the source.\n\nConfig API note: includes `catalogName` and `catalogId`.",
            "title": "metadata"
          },
          "workspaceId": {
            "description": "The id of the workspace that owns the source.\n\nConfig API note: equal to `parent`.",
            "type": "string",
            "title": "workspaceId"
          },
          "enabled": {
            "description": "Enable to receive data from the source.",
            "type": "boolean",
            "title": "enabled"
          },
          "writeKeys": {
            "description": "The write keys used to send data from the source. This field is left empty when the current token does not have the\n'source admin' permission.",
            "type": "array",
            "items": { "type": "string" },
            "title": "writeKeys"
          },
          "settings": {
            "description": "The settings associated with the source.",
            "$ref": "#/components/schemas/SourceSettingsBeta",
            "title": "settings"
          },
          "labels": {
            "description": "A list of labels applied to the source.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/LabelBeta" },
            "title": "labels"
          }
        },
        "required": ["enabled", "id", "labels", "metadata", "slug", "workspaceId", "writeKeys"]
      },
      "SourceSettingsBeta": {
        "description": "A key-value object that contains instance-specific settings for a source.\n\nThe `options` field in the source metadata defines the schema of this object.",
        "title": "SourceSettingsBeta",
        "type": "object",
        "additionalProperties": {}
      },
      "ListSourcesBetaInput": {
        "description": "Requests a list of sources that belong to the current workspace.",
        "title": "ListSourcesBetaInput",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Defines the pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["pagination"]
      },
      "ListSourcesBetaOutput": {
        "description": "Returns a list of sources that belong to the current workspace.",
        "title": "ListSourcesBetaOutput",
        "type": "object",
        "properties": {
          "sources": {
            "description": "A list of sources that belong to the workspace.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/SourceBeta" },
            "title": "sources"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Information about the pagination of this response.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "sources"]
      },
      "GetSourceBetaInput": {
        "description": "Looks up a source by id.",
        "title": "GetSourceBetaInput",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the source to look up.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "sourceId"
          }
        },
        "required": ["sourceId"]
      },
      "GetSourceBetaOutput": {
        "description": "Returns a source.",
        "title": "GetSourceBetaOutput",
        "type": "object",
        "properties": {
          "source": {
            "$ref": "#/components/schemas/SourceBeta",
            "description": "The returned source object.",
            "title": "source"
          }
        },
        "required": ["source"]
      },
      "ListConnectedWarehousesFromSourceBetaInput": {
        "description": "Requests a list of warehouses connected to a source.",
        "title": "ListConnectedWarehousesFromSourceBetaInput",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the source to look up.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "sourceId"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Required pagination params for the request.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "sourceId"]
      },
      "ListConnectedWarehousesFromSourceBetaOutput": {
        "description": "Returns a list of warehouses connected to a source.",
        "title": "ListConnectedWarehousesFromSourceBetaOutput",
        "type": "object",
        "properties": {
          "warehouses": {
            "description": "A list that contains the warehouses connected to the source.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/WarehouseBeta" },
            "title": "warehouses"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "The pagination object that constraints the returned list.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "warehouses"]
      },
      "ListConnectedDestinationsFromSourceBetaInput": {
        "description": "Requests a list of destinations connected to a source.",
        "title": "ListConnectedDestinationsFromSourceBetaInput",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the source to look up.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "sourceId"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Required pagination params for the request.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "sourceId"]
      },
      "ListConnectedDestinationsFromSourceBetaOutput": {
        "description": "Returns a list of destinations connected to a source.",
        "title": "ListConnectedDestinationsFromSourceBetaOutput",
        "type": "object",
        "properties": {
          "destinations": {
            "description": "A list that contains the destinations connected to the source.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/DestinationBeta" },
            "title": "destinations"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "The pagination object that constraints the returned list.",
            "title": "pagination"
          }
        },
        "required": ["destinations", "pagination"]
      },
      "CreateSourceBetaInput": {
        "description": "Create a new source based on a set of parameters.",
        "title": "CreateSourceBetaInput",
        "type": "object",
        "properties": {
          "slug": {
            "description": "The slug by which to identify the source in the Segment app.",
            "type": "string",
            "title": "slug"
          },
          "enabled": {
            "description": "Enable to allow this source to send data. Defaults to true.",
            "type": "boolean",
            "title": "enabled"
          },
          "metadataId": {
            "description": "The id of the source metadata from which this instance of the source derives.\n\nAll source metadata is available under `/catalog/sources`.",
            "type": "string",
            "title": "metadataId"
          },
          "settings": {
            "description": "A key-value object that contains instance-specific settings for the source.",
            "$ref": "#/components/schemas/SourceSettingsBeta",
            "title": "settings"
          }
        },
        "required": ["enabled", "metadataId", "slug"]
      },
      "CreateSourceBetaOutput": {
        "description": "Returns a newly created source.",
        "title": "CreateSourceBetaOutput",
        "type": "object",
        "properties": {
          "source": {
            "$ref": "#/components/schemas/SourceBeta",
            "description": "The newly created source.",
            "title": "source"
          }
        },
        "required": ["source"]
      },
      "DeleteSourceBetaInput": {
        "description": "Deletes an existing source by id.",
        "title": "DeleteSourceBetaInput",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the source to delete.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "sourceId"
          }
        },
        "required": ["sourceId"]
      },
      "DeleteSourceBetaOutput": {
        "description": "Returns the status of a source deletion.",
        "title": "DeleteSourceBetaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the source deletion operation.",
            "type": "string",
            "enum": ["SUCCESS"],
            "title": "status"
          }
        },
        "required": ["status"]
      },
      "UpdateSourceBetaInput": {
        "description": "Updates an existing source based on a set of parameters.",
        "title": "UpdateSourceBetaInput",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the source to update.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "sourceId"
          },
          "name": {
            "description": "An optional human-readable name to associate with the source.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "enabled": {
            "description": "Enable to allow the source to send data.",
            "type": "boolean",
            "title": "enabled"
          },
          "slug": {
            "description": "The slug that identifies the source.\n\nConfig API note: equal to `name`.",
            "type": "string",
            "title": "slug"
          },
          "settings": {
            "description": "A key-value object that contains instance-specific settings for the source.\n\nDifferent kinds of sources require different kinds of input. The settings input for a source comes from the\n`options` object associated with this instance of a source.\n\nYou can find the full list of required settings by accessing the sources catalog endpoint under `/catalog/sources`.",
            "$ref": "#/components/schemas/SourceSettingsBeta",
            "title": "settings"
          }
        },
        "required": ["sourceId"]
      },
      "UpdateSourceBetaOutput": {
        "description": "Returns the updated source.",
        "title": "UpdateSourceBetaOutput",
        "type": "object",
        "properties": {
          "source": {
            "$ref": "#/components/schemas/SourceBeta",
            "description": "The updated source.",
            "title": "source"
          }
        },
        "required": ["source"]
      },
      "SourceV1": {
        "description": "Defines a data source for Segment data.",
        "title": "SourceV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of the source.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "id"
          },
          "slug": {
            "description": "The slug used to identify the source in the Segment app.\n\nConfig API note: equal to `name`.",
            "type": "string",
            "title": "slug"
          },
          "name": {
            "description": "The name of the source.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "metadata": {
            "$ref": "#/components/schemas/SourceMetadataBeta",
            "description": "The metadata for the source.\n\nConfig API note: includes `catalogName` and `catalogId`.",
            "title": "metadata"
          },
          "workspaceId": {
            "description": "The id of the workspace that owns the source.\n\nConfig API note: equal to `parent`.",
            "type": "string",
            "title": "workspaceId"
          },
          "enabled": {
            "description": "Enable to receive data from the source.",
            "type": "boolean",
            "title": "enabled"
          },
          "writeKeys": {
            "description": "The write keys used to send data from the source. This field is left empty when the current token does not have the\n'source admin' permission.",
            "type": "array",
            "items": { "type": "string" },
            "title": "writeKeys"
          },
          "settings": {
            "description": "The settings associated with the source.",
            "$ref": "#/components/schemas/SourceSettingsV1",
            "title": "settings"
          },
          "labels": {
            "description": "A list of labels applied to the source.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/LabelBeta" },
            "title": "labels"
          }
        },
        "required": ["enabled", "id", "labels", "metadata", "slug", "workspaceId", "writeKeys"]
      },
      "SourceSettingsV1": {
        "description": "A key-value object that contains instance-specific settings for a source.\n\nThe `options` field in the source metadata defines the schema of this object.",
        "title": "SourceSettingsV1",
        "type": "object",
        "additionalProperties": {}
      },
      "ListSourcesV1Input": {
        "description": "Requests a list of sources that belong to the current workspace.",
        "title": "ListSourcesV1Input",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Defines the pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["pagination"]
      },
      "ListSourcesV1Output": {
        "description": "Returns a list of sources that belong to the current workspace.",
        "title": "ListSourcesV1Output",
        "type": "object",
        "properties": {
          "sources": {
            "description": "A list of sources that belong to the workspace.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/SourceV1" },
            "title": "sources"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Information about the pagination of this response.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "sources"]
      },
      "GetSourceV1Input": {
        "description": "Looks up a source by id.",
        "title": "GetSourceV1Input",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the source to look up.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "sourceId"
          }
        },
        "required": ["sourceId"]
      },
      "GetSourceV1Output": {
        "description": "Returns a source.",
        "title": "GetSourceV1Output",
        "type": "object",
        "properties": {
          "source": {
            "$ref": "#/components/schemas/SourceV1",
            "description": "The returned source object.",
            "title": "source"
          }
        },
        "required": ["source"]
      },
      "ListConnectedWarehousesFromSourceV1Input": {
        "description": "Requests a list of warehouses connected to a source.",
        "title": "ListConnectedWarehousesFromSourceV1Input",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the source to look up.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "sourceId"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Required pagination params for the request.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "sourceId"]
      },
      "ListConnectedWarehousesFromSourceV1Output": {
        "description": "Returns a list of warehouses connected to a source.",
        "title": "ListConnectedWarehousesFromSourceV1Output",
        "type": "object",
        "properties": {
          "warehouses": {
            "description": "A list that contains the warehouses connected to the source.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/WarehouseBeta" },
            "title": "warehouses"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "The pagination object that constraints the returned list.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "warehouses"]
      },
      "ListConnectedDestinationsFromSourceV1Input": {
        "description": "Requests a list of destinations connected to a source.",
        "title": "ListConnectedDestinationsFromSourceV1Input",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the source to look up.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "sourceId"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Required pagination params for the request.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "sourceId"]
      },
      "ListConnectedDestinationsFromSourceV1Output": {
        "description": "Returns a list of destinations connected to a source.",
        "title": "ListConnectedDestinationsFromSourceV1Output",
        "type": "object",
        "properties": {
          "destinations": {
            "description": "A list that contains the destinations connected to the source.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/DestinationBeta" },
            "title": "destinations"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "The pagination object that constraints the returned list.",
            "title": "pagination"
          }
        },
        "required": ["destinations", "pagination"]
      },
      "CreateSourceV1Input": {
        "description": "Create a new source based on a set of parameters.",
        "title": "CreateSourceV1Input",
        "type": "object",
        "properties": {
          "slug": {
            "description": "The slug by which to identify the source in the Segment app.",
            "type": "string",
            "title": "slug"
          },
          "enabled": {
            "description": "Enable to allow this source to send data. Defaults to true.",
            "type": "boolean",
            "title": "enabled"
          },
          "metadataId": {
            "description": "The id of the source metadata from which this instance of the source derives.\n\nAll source metadata is available under `/catalog/sources`.",
            "type": "string",
            "title": "metadataId"
          },
          "settings": {
            "description": "A key-value object that contains instance-specific settings for the source.",
            "$ref": "#/components/schemas/SourceSettingsV1",
            "title": "settings"
          }
        },
        "required": ["enabled", "metadataId", "slug"]
      },
      "CreateSourceV1Output": {
        "description": "Returns a newly created source.",
        "title": "CreateSourceV1Output",
        "type": "object",
        "properties": {
          "source": {
            "$ref": "#/components/schemas/SourceV1",
            "description": "The newly created source.",
            "title": "source"
          }
        },
        "required": ["source"]
      },
      "DeleteSourceV1Input": {
        "description": "Deletes an existing source by id.",
        "title": "DeleteSourceV1Input",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the source to delete.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "sourceId"
          }
        },
        "required": ["sourceId"]
      },
      "DeleteSourceV1Output": {
        "description": "Returns the status of a source deletion.",
        "title": "DeleteSourceV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the source deletion operation.",
            "type": "string",
            "enum": ["SUCCESS"],
            "title": "status"
          }
        },
        "required": ["status"]
      },
      "UpdateSourceV1Input": {
        "description": "Updates an existing source based on a set of parameters.",
        "title": "UpdateSourceV1Input",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the source to update.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "sourceId"
          },
          "name": {
            "description": "An optional human-readable name to associate with the source.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "enabled": {
            "description": "Enable to allow the source to send data.",
            "type": "boolean",
            "title": "enabled"
          },
          "slug": {
            "description": "The slug that identifies the source.\n\nConfig API note: equal to `name`.",
            "type": "string",
            "title": "slug"
          },
          "settings": {
            "description": "A key-value object that contains instance-specific settings for the source.\n\nDifferent kinds of sources require different kinds of input. The settings input for a source comes from the\n`options` object associated with this instance of a source.\n\nYou can find the full list of required settings by accessing the sources catalog endpoint under `/catalog/sources`.",
            "$ref": "#/components/schemas/SourceSettingsV1",
            "title": "settings"
          }
        },
        "required": ["sourceId"]
      },
      "UpdateSourceV1Output": {
        "description": "Returns the updated source.",
        "title": "UpdateSourceV1Output",
        "type": "object",
        "properties": {
          "source": { "$ref": "#/components/schemas/SourceV1", "description": "The updated source.", "title": "source" }
        },
        "required": ["source"]
      },
      "GetSpaceAlphaInput": {
        "description": "Input for the getSpaceById endpoint.",
        "title": "GetSpaceAlphaInput",
        "type": "object",
        "properties": { "spaceId": { "description": "The space id.", "type": "string", "title": "spaceId" } },
        "required": ["spaceId"]
      },
      "Space": {
        "title": "Space",
        "type": "object",
        "properties": {
          "id": { "type": "string", "title": "id" },
          "slug": { "type": "string", "title": "slug" },
          "name": { "type": "string", "title": "name" }
        },
        "required": ["id", "name", "slug"]
      },
      "GetSpaceAlphaOutput": {
        "description": "Response for the getSpaceById endpoint.",
        "title": "GetSpaceAlphaOutput",
        "type": "object",
        "properties": {
          "space": {
            "$ref": "#/components/schemas/Space",
            "description": "Space matching the given id.",
            "title": "space",
            "nullable": true
          }
        },
        "required": ["space"]
      },
      "MessagesSubscriptionRequest": {
        "title": "MessagesSubscriptionRequest",
        "type": "object",
        "properties": {
          "key": { "description": "Key is the phone number or email.", "type": "string", "title": "key" },
          "type": {
            "description": "Type is communication medium used. Either EMAIL or SMS.",
            "enum": ["EMAIL", "SMS"],
            "type": "string",
            "title": "type"
          },
          "status": {
            "description": "The user subscribed, unsubscribed, or on initial status.",
            "enum": ["DID_NOT_SUBSCRIBE", "SUBSCRIBED", "UNSUBSCRIBED"],
            "type": "string",
            "title": "status"
          }
        },
        "required": ["key", "status", "type"]
      },
      "ReplaceMessagingSubscriptionsInSpacesAlphaInput": {
        "description": "Input for the endpoint.",
        "title": "ReplaceMessagingSubscriptionsInSpacesAlphaInput",
        "type": "object",
        "properties": {
          "spaceId": { "description": "Space id.", "type": "string", "title": "spaceId" },
          "subscriptions": {
            "description": "An array of subscriptions.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/MessagesSubscriptionRequest" },
            "title": "subscriptions"
          }
        },
        "required": ["spaceId", "subscriptions"]
      },
      "MessageSubscriptionResponseError": {
        "title": "MessageSubscriptionResponseError",
        "type": "object",
        "properties": {
          "code": { "description": "Error code.", "type": "string", "title": "code" },
          "message": { "description": "Error message.", "type": "string", "title": "message" }
        },
        "required": ["code", "message"]
      },
      "MessageSubscriptionResponse": {
        "title": "MessageSubscriptionResponse",
        "type": "object",
        "properties": {
          "key": { "description": "Key is the phone number or email.", "type": "string", "title": "key" },
          "type": {
            "description": "Type is communication medium used. Either EMAIL or SMS.",
            "enum": ["EMAIL", "SMS"],
            "type": "string",
            "title": "type"
          },
          "status": {
            "description": "The user subscribed, unsubscribed, or on initial status.",
            "enum": ["DID_NOT_SUBSCRIBE", "SUBSCRIBED", "UNSUBSCRIBED"],
            "type": "string",
            "title": "status"
          },
          "errors": {
            "description": "Error messages.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/MessageSubscriptionResponseError" },
            "title": "errors"
          }
        },
        "required": ["key", "status", "type"]
      },
      "ReplaceMessagingSubscriptionsInSpacesAlphaOutput": {
        "description": "Output for the endpoint.",
        "title": "ReplaceMessagingSubscriptionsInSpacesAlphaOutput",
        "type": "object",
        "properties": {
          "successes": {
            "description": "Array of successful subscription status.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/MessageSubscriptionResponse" },
            "title": "successes"
          },
          "failures": {
            "description": "Array of failure subscription status.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/MessageSubscriptionResponse" },
            "title": "failures"
          },
          "pagination": {
            "description": "Pagination settings.",
            "$ref": "#/components/schemas/PaginationOutput",
            "title": "pagination"
          }
        },
        "required": ["failures", "successes"]
      },
      "GetMessagingSubscriptionSuccessResponse": {
        "title": "GetMessagingSubscriptionSuccessResponse",
        "type": "object",
        "properties": {
          "key": { "description": "Key is the phone number or email.", "type": "string", "title": "key" },
          "type": {
            "description": "Type is communication medium used. Either EMAIL or SMS.",
            "enum": ["EMAIL", "SMS"],
            "type": "string",
            "title": "type"
          },
          "status": {
            "description": "The user subscribed, unsubscribed, or on initial status. This is absent if the phone number or email is not found.",
            "enum": ["DID_NOT_SUBSCRIBE", "SUBSCRIBED", "UNSUBSCRIBED"],
            "type": "string",
            "title": "status"
          }
        },
        "required": ["key", "type"]
      },
      "GetMessagingSubscriptionFailureResponse": {
        "title": "GetMessagingSubscriptionFailureResponse",
        "type": "object",
        "properties": {
          "key": { "description": "Key is the phone number or email.", "type": "string", "title": "key" },
          "type": {
            "description": "This will be the exact type as given in the request.",
            "type": "string",
            "title": "type"
          },
          "errors": {
            "description": "Per key errors, such as validation errors.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/MessageSubscriptionResponseError" },
            "title": "errors"
          }
        },
        "required": ["errors", "key", "type"]
      },
      "BatchQueryMessagingSubscriptionsForSpaceAlphaOutput": {
        "description": "Batch get response.",
        "title": "BatchQueryMessagingSubscriptionsForSpaceAlphaOutput",
        "type": "object",
        "properties": {
          "successes": {
            "description": "Array of successful subscription status.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/GetMessagingSubscriptionSuccessResponse" },
            "title": "successes"
          },
          "failures": {
            "description": "Validation errors due to invalid types or email/phone numbers.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/GetMessagingSubscriptionFailureResponse" },
            "title": "failures"
          },
          "errors": {
            "description": "General errors when making the request such as invalid payload or wrong http method errors.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/MessageSubscriptionResponseError" },
            "title": "errors"
          },
          "pagination": {
            "description": "Pagination settings.",
            "$ref": "#/components/schemas/PaginationOutput",
            "title": "pagination"
          }
        },
        "required": ["errors", "failures", "successes"]
      },
      "GetSubscriptionRequest": {
        "title": "GetSubscriptionRequest",
        "type": "object",
        "properties": {
          "key": { "description": "Key is the phone number or email.", "type": "string", "title": "key" },
          "type": {
            "description": "Type is communication medium used. Either EMAIL or SMS.",
            "enum": ["EMAIL", "SMS"],
            "type": "string",
            "title": "type"
          }
        },
        "required": ["key", "type"]
      },
      "BatchQueryMessagingSubscriptionsForSpaceAlphaInput": {
        "description": "Batch get request.",
        "title": "BatchQueryMessagingSubscriptionsForSpaceAlphaInput",
        "type": "object",
        "properties": {
          "spaceId": { "description": "Space id.", "type": "string", "title": "spaceId" },
          "subscriptions": {
            "description": "A list of subscriptions to retrieve subscription status.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/GetSubscriptionRequest" },
            "title": "subscriptions"
          }
        },
        "required": ["spaceId", "subscriptions"]
      },
      "TransformationAlpha": {
        "description": "Represents a Transformation.",
        "title": "TransformationAlpha",
        "type": "object",
        "properties": {
          "id": { "description": "The id of the transformation.", "type": "string", "title": "id" },
          "name": { "description": "The name of the transformation.", "type": "string", "title": "name" },
          "sourceId": {
            "description": "The source associated with the transformation.",
            "type": "string",
            "title": "sourceId"
          },
          "destinationMetadataId": {
            "description": "The optional destination metadata associated with the transformation.",
            "type": "string",
            "title": "destinationMetadataId"
          },
          "enabled": { "description": "If the transformation is enabled.", "type": "boolean", "title": "enabled" },
          "if": {
            "description": "If statement ([FQL](https://segment.com/docs/config-api/fql/)) to match events.\n\nFor standard event matchers, use the following:\\\n  Track -\\> \"event='\\<eventName\\>'\"\\\n  Identify -\\> \"type='identify'\"\\\n  Group -\\> \"type='group'\"",
            "type": "string",
            "title": "if"
          },
          "newEventName": {
            "description": "Optional new event name for renaming events. Works only for 'track' event type.",
            "type": "string",
            "title": "newEventName"
          },
          "propertyRenames": {
            "description": "Optional array for renaming properties collected by your events.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/PropertyRenameAlpha" },
            "title": "propertyRenames"
          }
        },
        "required": ["enabled", "id", "if", "name", "sourceId"]
      },
      "PropertyRenameAlpha": {
        "title": "PropertyRenameAlpha",
        "type": "object",
        "properties": {
          "oldName": { "description": "The old name of the property.", "type": "string", "title": "oldName" },
          "newName": { "description": "The new name to rename the property.", "type": "string", "title": "newName" }
        },
        "required": ["newName", "oldName"]
      },
      "GetTransformationAlphaOutput": {
        "description": "The output of transformation retrieval.",
        "title": "GetTransformationAlphaOutput",
        "type": "object",
        "properties": {
          "transformation": {
            "$ref": "#/components/schemas/TransformationAlpha",
            "description": "The retrieved transformation.",
            "title": "transformation"
          }
        },
        "required": ["transformation"]
      },
      "GetTransformationAlphaInput": {
        "description": "The input of transformation retrieval.",
        "title": "GetTransformationAlphaInput",
        "type": "object",
        "properties": {
          "transformationId": { "description": "The transformation id.", "type": "string", "title": "transformationId" }
        },
        "required": ["transformationId"]
      },
      "ListTransformationsAlphaInput": {
        "description": "Lists the transformations associated with the current workspace.",
        "title": "ListTransformationsAlphaInput",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination options.",
            "title": "pagination"
          }
        },
        "required": ["pagination"]
      },
      "ListTransformationsAlphaOutput": {
        "description": "Lists the transformations associated with the current workspace.",
        "title": "ListTransformationsAlphaOutput",
        "type": "object",
        "properties": {
          "transformations": {
            "description": "A paginated list of transformations.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/TransformationAlpha" },
            "title": "transformations"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination results.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "transformations"]
      },
      "DeleteTransformationAlphaInput": {
        "description": "The input of delete transformation.",
        "title": "DeleteTransformationAlphaInput",
        "type": "object",
        "properties": {
          "transformationId": { "description": "The transformation id.", "type": "string", "title": "transformationId" }
        },
        "required": ["transformationId"]
      },
      "DeleteTransformationAlphaOutput": {
        "description": "The output of delete transformation.",
        "title": "DeleteTransformationAlphaOutput",
        "type": "object",
        "properties": {
          "status": { "description": "The operation status.", "type": "string", "enum": ["SUCCESS"], "title": "status" }
        },
        "required": ["status"]
      },
      "UpdateTransformationAlphaInput": {
        "description": "The input to update a Transformation.",
        "title": "UpdateTransformationAlphaInput",
        "type": "object",
        "properties": {
          "transformationId": {
            "description": "ID of the transformation to update.",
            "type": "string",
            "title": "transformationId"
          },
          "name": { "description": "The name of the transformation.", "type": "string", "title": "name" },
          "sourceId": {
            "description": "The optional source to be associated with the transformation.",
            "type": "string",
            "title": "sourceId"
          },
          "destinationMetadataId": {
            "description": "The optional destination metadata to be associated with the transformation.",
            "type": "string",
            "title": "destinationMetadataId"
          },
          "enabled": {
            "description": "If the transformation should be enabled.",
            "type": "boolean",
            "title": "enabled"
          },
          "if": {
            "description": "If statement ([FQL](https://segment.com/docs/config-api/fql/)) to match events.\n\nFor standard event matchers, use the following:\\\n  Track -\\> \"event='\\<eventName\\>'\"\\\n  Identify -\\> \"type='identify'\"\\\n  Group -\\> \"type='group'\"",
            "type": "string",
            "title": "if"
          },
          "newEventName": {
            "description": "Optional new event name for renaming events. Works only for 'track' event type.",
            "type": "string",
            "title": "newEventName"
          },
          "propertyRenames": {
            "description": "Optional array for renaming properties collected by your events.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/PropertyRenameAlpha" },
            "title": "propertyRenames"
          }
        },
        "required": ["transformationId"]
      },
      "UpdateTransformationAlphaOutput": {
        "description": "The output of an updated transformation.",
        "title": "UpdateTransformationAlphaOutput",
        "type": "object",
        "properties": {
          "transformation": {
            "$ref": "#/components/schemas/TransformationAlpha",
            "description": "The updated transformation.",
            "title": "transformation"
          }
        },
        "required": ["transformation"]
      },
      "CreateTransformationAlphaInput": {
        "description": "The input to create a transformation.",
        "title": "CreateTransformationAlphaInput",
        "type": "object",
        "properties": {
          "name": { "description": "The name of the transformation.", "type": "string", "title": "name" },
          "sourceId": {
            "description": "The source to be associated with the transformation.",
            "type": "string",
            "title": "sourceId"
          },
          "destinationMetadataId": {
            "description": "The optional destination metadata id to be associated with the transformation.",
            "type": "string",
            "title": "destinationMetadataId"
          },
          "enabled": {
            "description": "If the transformation should be enabled.",
            "type": "boolean",
            "title": "enabled"
          },
          "if": {
            "description": "If statement ([FQL](https://segment.com/docs/config-api/fql/)) to match events.\n\nFor standard event matchers, use the following:\\\n  Track -\\> \"event='\\<eventName\\>'\"\\\n  Identify -\\> \"type='identify'\"\\\n  Group -\\> \"type='group'\"",
            "type": "string",
            "title": "if"
          },
          "newEventName": {
            "description": "Optional new event name for renaming events. Works only for 'track' event type.",
            "type": "string",
            "title": "newEventName"
          },
          "propertyRenames": {
            "description": "Optional array for renaming properties collected by your events.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/PropertyRenameAlpha" },
            "title": "propertyRenames"
          }
        },
        "required": ["enabled", "if", "name", "sourceId"]
      },
      "CreateTransformationAlphaOutput": {
        "description": "The output of a created transformation.",
        "title": "CreateTransformationAlphaOutput",
        "type": "object",
        "properties": {
          "transformation": {
            "$ref": "#/components/schemas/TransformationAlpha",
            "description": "The created transformation.",
            "title": "transformation"
          }
        },
        "required": ["transformation"]
      },
      "TransformationBeta": {
        "description": "Represents a Transformation.",
        "title": "TransformationBeta",
        "type": "object",
        "properties": {
          "id": { "description": "The id of the transformation.", "type": "string", "title": "id" },
          "name": { "description": "The name of the transformation.", "type": "string", "title": "name" },
          "sourceId": {
            "description": "The source associated with the transformation.",
            "type": "string",
            "title": "sourceId"
          },
          "destinationMetadataId": {
            "description": "The optional destination metadata associated with the transformation.",
            "type": "string",
            "title": "destinationMetadataId"
          },
          "enabled": { "description": "If the transformation is enabled.", "type": "boolean", "title": "enabled" },
          "if": {
            "description": "If statement ([FQL](https://segment.com/docs/config-api/fql/)) to match events.\n\nFor standard event matchers, use the following:\n  Track -\\> \"event='\\<eventName\\>'\"\n  Identify -\\> \"type='identify'\"\n  Group -\\> \"type='group'\"",
            "type": "string",
            "title": "if"
          },
          "newEventName": {
            "description": "Optional new event name for renaming events. Works only for 'track' event type.",
            "type": "string",
            "title": "newEventName"
          },
          "propertyRenames": {
            "description": "Optional array for renaming properties collected by your events.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/PropertyRenameBeta" },
            "title": "propertyRenames"
          }
        },
        "required": ["enabled", "id", "if", "name", "sourceId"]
      },
      "PropertyRenameBeta": {
        "title": "PropertyRenameBeta",
        "type": "object",
        "properties": {
          "oldName": { "description": "The old name of the property.", "type": "string", "title": "oldName" },
          "newName": { "description": "The new name to rename the property.", "type": "string", "title": "newName" }
        },
        "required": ["newName", "oldName"]
      },
      "GetTransformationBetaOutput": {
        "description": "The output of transformation retrieval.",
        "title": "GetTransformationBetaOutput",
        "type": "object",
        "properties": {
          "transformation": {
            "$ref": "#/components/schemas/TransformationBeta",
            "description": "The retrieved transformation.",
            "title": "transformation"
          }
        },
        "required": ["transformation"]
      },
      "GetTransformationBetaInput": {
        "description": "The input of transformation retrieval.",
        "title": "GetTransformationBetaInput",
        "type": "object",
        "properties": {
          "transformationId": { "description": "The transformation id.", "type": "string", "title": "transformationId" }
        },
        "required": ["transformationId"]
      },
      "ListTransformationsBetaInput": {
        "description": "Lists the transformations associated with the current workspace.",
        "title": "ListTransformationsBetaInput",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination options.",
            "title": "pagination"
          }
        },
        "required": ["pagination"]
      },
      "ListTransformationsBetaOutput": {
        "description": "Lists the transformations associated with the current workspace.",
        "title": "ListTransformationsBetaOutput",
        "type": "object",
        "properties": {
          "transformations": {
            "description": "A paginated list of transformations.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/TransformationBeta" },
            "title": "transformations"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination results.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "transformations"]
      },
      "DeleteTransformationBetaInput": {
        "description": "The input of delete transformation.",
        "title": "DeleteTransformationBetaInput",
        "type": "object",
        "properties": {
          "transformationId": { "description": "The transformation id.", "type": "string", "title": "transformationId" }
        },
        "required": ["transformationId"]
      },
      "DeleteTransformationBetaOutput": {
        "description": "The output of delete transformation.",
        "title": "DeleteTransformationBetaOutput",
        "type": "object",
        "properties": {
          "status": { "description": "The operation status.", "type": "string", "enum": ["SUCCESS"], "title": "status" }
        },
        "required": ["status"]
      },
      "UpdateTransformationBetaInput": {
        "description": "The input to update a Transformation.",
        "title": "UpdateTransformationBetaInput",
        "type": "object",
        "properties": {
          "transformationId": {
            "description": "ID of the transformation to update.",
            "type": "string",
            "title": "transformationId"
          },
          "name": { "description": "The name of the transformation.", "type": "string", "title": "name" },
          "sourceId": {
            "description": "The optional source to be associated with the transformation.",
            "type": "string",
            "title": "sourceId"
          },
          "destinationMetadataId": {
            "description": "The optional destination metadata to be associated with the transformation.",
            "type": "string",
            "title": "destinationMetadataId"
          },
          "enabled": {
            "description": "If the transformation should be enabled.",
            "type": "boolean",
            "title": "enabled"
          },
          "if": {
            "description": "If statement ([FQL](https://segment.com/docs/config-api/fql/)) to match events.\n\nFor standard event matchers, use the following:\n  Track -\\> \"event='\\<eventName\\>'\"\n  Identify -\\> \"type='identify'\"\n  Group -\\> \"type='group'\"",
            "type": "string",
            "title": "if"
          },
          "newEventName": {
            "description": "Optional new event name for renaming events. Works only for 'track' event type.",
            "type": "string",
            "title": "newEventName"
          },
          "propertyRenames": {
            "description": "Optional array for renaming properties collected by your events.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/PropertyRenameBeta" },
            "title": "propertyRenames"
          }
        },
        "required": ["transformationId"]
      },
      "UpdateTransformationBetaOutput": {
        "description": "The output of an updated transformation.",
        "title": "UpdateTransformationBetaOutput",
        "type": "object",
        "properties": {
          "transformation": {
            "$ref": "#/components/schemas/TransformationBeta",
            "description": "The updated transformation.",
            "title": "transformation"
          }
        },
        "required": ["transformation"]
      },
      "CreateTransformationBetaInput": {
        "description": "The input to create a transformation.",
        "title": "CreateTransformationBetaInput",
        "type": "object",
        "properties": {
          "name": { "description": "The name of the transformation.", "type": "string", "title": "name" },
          "sourceId": {
            "description": "The source to be associated with the transformation.",
            "type": "string",
            "title": "sourceId"
          },
          "destinationMetadataId": {
            "description": "The optional destination metadata id to be associated with the transformation.",
            "type": "string",
            "title": "destinationMetadataId"
          },
          "enabled": {
            "description": "If the transformation should be enabled.",
            "type": "boolean",
            "title": "enabled"
          },
          "if": { "description": "If statement to match events.", "type": "string", "title": "if" },
          "newEventName": {
            "description": "Optional new event name for renaming events. Works only for 'track' event type.",
            "type": "string",
            "title": "newEventName"
          },
          "propertyRenames": {
            "description": "Optional array for renaming properties collected by your events.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/PropertyRenameBeta" },
            "title": "propertyRenames"
          }
        },
        "required": ["enabled", "if", "name", "sourceId"]
      },
      "CreateTransformationBetaOutput": {
        "description": "The output of a created transformation.",
        "title": "CreateTransformationBetaOutput",
        "type": "object",
        "properties": {
          "transformation": {
            "$ref": "#/components/schemas/TransformationBeta",
            "description": "The created transformation.",
            "title": "transformation"
          }
        },
        "required": ["transformation"]
      },
      "TrackingPlanAlpha": {
        "description": "Represents a tracking plan.",
        "title": "TrackingPlanAlpha",
        "type": "object",
        "properties": {
          "id": {
            "description": "The tracking plan's identifier.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "id"
          },
          "name": {
            "description": "The tracking plan's name.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "slug": {
            "description": "URL-friendly slug of this tracking plan.\n\nConfig API note: equal to `name`.",
            "type": "string",
            "title": "slug"
          },
          "description": {
            "description": "The tracking plan's description.",
            "type": "string",
            "title": "description"
          },
          "type": {
            "description": "The tracking plan's type.",
            "enum": ["LIVE", "PROPERTY_LIBRARY", "RULE_LIBRARY", "TEMPLATE"],
            "type": "string",
            "title": "type"
          },
          "updatedAt": {
            "description": "The timestamp of the last change to the tracking plan.\n\nConfig API note: equal to `updateTime`.",
            "type": "string",
            "title": "updatedAt"
          },
          "createdAt": {
            "description": "The timestamp of this tracking plan's creation.\n\nConfig API note: equal to `createTime`.",
            "type": "string",
            "title": "createdAt"
          }
        },
        "required": ["id", "type"]
      },
      "RuleAlpha": {
        "description": "Represents a rule from a tracking plan.",
        "title": "RuleAlpha",
        "type": "object",
        "properties": {
          "type": {
            "description": "The type for this tracking plan rule.",
            "enum": ["COMMON", "GROUP", "IDENTIFY", "PAGE", "SCREEN", "TRACK"],
            "type": "string",
            "title": "type"
          },
          "key": {
            "description": "Key to this rule (free-form string like 'Button clicked').",
            "type": "string",
            "title": "key"
          },
          "jsonSchema": { "description": "JSON Schema of this rule.", "title": "jsonSchema" },
          "version": { "description": "Version of this rule.", "type": "number", "title": "version" },
          "createdAt": {
            "description": "The timestamp of this rule's creation.",
            "type": "string",
            "title": "createdAt"
          },
          "updatedAt": {
            "description": "The timestamp of this rule's last change.",
            "type": "string",
            "title": "updatedAt"
          },
          "deprecatedAt": {
            "description": "The timestamp of this rule's deprecation.",
            "type": "string",
            "title": "deprecatedAt"
          }
        },
        "required": ["jsonSchema", "type", "version"]
      },
      "UpsertRuleAlpha": {
        "title": "UpsertRuleAlpha",
        "type": "object",
        "properties": {
          "newKey": { "description": "This rule's new intended key.", "type": "string", "title": "newKey" },
          "type": {
            "description": "The type for this tracking plan rule.",
            "enum": ["COMMON", "GROUP", "IDENTIFY", "PAGE", "SCREEN", "TRACK"],
            "type": "string",
            "title": "type"
          },
          "key": {
            "description": "Key to this rule (free-form string like 'Button clicked').",
            "type": "string",
            "title": "key"
          },
          "jsonSchema": { "description": "JSON Schema of this rule.", "title": "jsonSchema" },
          "version": { "description": "Version of this rule.", "type": "number", "title": "version" },
          "createdAt": {
            "description": "The timestamp of this rule's creation.",
            "type": "string",
            "title": "createdAt"
          },
          "updatedAt": {
            "description": "The timestamp of this rule's last change.",
            "type": "string",
            "title": "updatedAt"
          },
          "deprecatedAt": {
            "description": "The timestamp of this rule's deprecation.",
            "type": "string",
            "title": "deprecatedAt"
          }
        },
        "required": ["jsonSchema", "type", "version"]
      },
      "RemoveRuleAlpha": {
        "description": "Represents the parameters needed to identify a rule on the backend-side.",
        "title": "RemoveRuleAlpha",
        "type": "object",
        "properties": {
          "type": {
            "enum": ["COMMON", "GROUP", "IDENTIFY", "PAGE", "SCREEN", "TRACK"],
            "type": "string",
            "title": "type"
          },
          "key": { "type": "string", "title": "key" },
          "version": { "type": "number", "title": "version" }
        },
        "required": ["type", "version"]
      },
      "RemoveSourceFromTrackingPlanAlphaInput": {
        "description": "Disconnects a source from a tracking plan.",
        "title": "RemoveSourceFromTrackingPlanAlphaInput",
        "type": "object",
        "properties": {
          "trackingPlanId": {
            "description": "The tracking plan identifier.",
            "type": "string",
            "title": "trackingPlanId"
          },
          "sourceId": {
            "description": "The id of the source associated with the tracking plan.",
            "type": "string",
            "title": "sourceId"
          }
        },
        "required": ["sourceId", "trackingPlanId"]
      },
      "RemoveSourceFromTrackingPlanAlphaOutput": {
        "description": "Disconnects a source from a tracking plan.",
        "title": "RemoveSourceFromTrackingPlanAlphaOutput",
        "type": "object",
        "properties": {
          "status": { "description": "The operation status.", "type": "string", "enum": ["SUCCESS"], "title": "status" }
        },
        "required": ["status"]
      },
      "ListTrackingPlansAlphaInput": {
        "description": "Lists the tracking plans associated with the current workspace.",
        "title": "ListTrackingPlansAlphaInput",
        "type": "object",
        "properties": {
          "type": {
            "description": "Requests tracking plans of a certain type. If omitted, lists all types.",
            "enum": ["LIVE", "PROPERTY_LIBRARY", "RULE_LIBRARY", "TEMPLATE"],
            "type": "string",
            "title": "type"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination options.",
            "title": "pagination"
          }
        },
        "required": ["pagination"]
      },
      "GetTrackingPlanAlphaInput": {
        "description": "Gets a single tracking plan.",
        "title": "GetTrackingPlanAlphaInput",
        "type": "object",
        "properties": {
          "trackingPlanId": {
            "description": "The id of the tracking plan to request.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "trackingPlanId"
          }
        },
        "required": ["trackingPlanId"]
      },
      "ListTrackingPlansAlphaOutput": {
        "description": "Lists the tracking plans associated with the current workspace.",
        "title": "ListTrackingPlansAlphaOutput",
        "type": "object",
        "properties": {
          "trackingPlans": {
            "description": "A paginated list of tracking plans.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/TrackingPlanAlpha" },
            "title": "trackingPlans"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination results.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "trackingPlans"]
      },
      "GetTrackingPlanAlphaOutput": {
        "description": "Gets a single tracking plan.",
        "title": "GetTrackingPlanAlphaOutput",
        "type": "object",
        "properties": {
          "trackingPlan": {
            "$ref": "#/components/schemas/TrackingPlanAlpha",
            "description": "The requested tracking plan.",
            "title": "trackingPlan"
          }
        },
        "required": ["trackingPlan"]
      },
      "DeleteTrackingPlanAlphaInput": {
        "description": "Deletes a tracking plan.",
        "title": "DeleteTrackingPlanAlphaInput",
        "type": "object",
        "properties": {
          "trackingPlanId": {
            "description": "The id of the tracking plan to delete.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "trackingPlanId"
          }
        },
        "required": ["trackingPlanId"]
      },
      "DeleteTrackingPlanAlphaOutput": {
        "description": "Result of a DeleteTrackingPlan call.",
        "title": "DeleteTrackingPlanAlphaOutput",
        "type": "object",
        "properties": {
          "status": { "description": "The operation status.", "type": "string", "enum": ["SUCCESS"], "title": "status" }
        },
        "required": ["status"]
      },
      "CreateTrackingPlanAlphaInput": {
        "description": "Creates a tracking plan in the workspace.",
        "title": "CreateTrackingPlanAlphaInput",
        "type": "object",
        "properties": {
          "name": {
            "description": "The tracking plan's name.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "description": {
            "description": "The tracking plan's description.",
            "type": "string",
            "title": "description"
          },
          "type": {
            "description": "The tracking plan's type.",
            "enum": ["LIVE", "PROPERTY_LIBRARY", "RULE_LIBRARY", "TEMPLATE"],
            "type": "string",
            "title": "type"
          }
        },
        "required": ["name", "type"]
      },
      "CreateTrackingPlanAlphaOutput": {
        "description": "Result of a CreateTrackingPlan call.",
        "title": "CreateTrackingPlanAlphaOutput",
        "type": "object",
        "properties": {
          "trackingPlan": {
            "$ref": "#/components/schemas/TrackingPlanAlpha",
            "description": "The created tracking plan.",
            "title": "trackingPlan"
          }
        },
        "required": ["trackingPlan"]
      },
      "UpdateTrackingPlanAlphaInput": {
        "description": "Updates the workspace's tracking plan.",
        "title": "UpdateTrackingPlanAlphaInput",
        "type": "object",
        "properties": {
          "trackingPlanId": {
            "description": "The tracking plan identifier.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "trackingPlanId"
          },
          "name": {
            "description": "The tracking plan's name.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "description": { "description": "The tracking plan's description.", "type": "string", "title": "description" }
        },
        "required": ["trackingPlanId"]
      },
      "UpdateTrackingPlanAlphaOutput": {
        "description": "Result of an UpdateTrackingPlan call.",
        "title": "UpdateTrackingPlanAlphaOutput",
        "type": "object",
        "properties": {
          "status": { "description": "The operation status.", "type": "string", "enum": ["SUCCESS"], "title": "status" }
        },
        "required": ["status"]
      },
      "ListRulesFromTrackingPlanAlphaInput": {
        "description": "Lists a tracking plan's rules.",
        "title": "ListRulesFromTrackingPlanAlphaInput",
        "type": "object",
        "properties": {
          "trackingPlanId": {
            "description": "The tracking plan identifier.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "trackingPlanId"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination options.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "trackingPlanId"]
      },
      "ListRulesFromTrackingPlanAlphaOutput": {
        "description": "Lists a tracking plan's rules.",
        "title": "ListRulesFromTrackingPlanAlphaOutput",
        "type": "object",
        "properties": {
          "rules": {
            "description": "Rules associated with the given tracking plan.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/RuleAlpha" },
            "title": "rules"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination options.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "rules"]
      },
      "UpdateRulesInTrackingPlanAlphaInput": {
        "description": "Updates tracking plan rules. Non-existent rules are added.",
        "title": "UpdateRulesInTrackingPlanAlphaInput",
        "type": "object",
        "properties": {
          "trackingPlanId": {
            "description": "The tracking plan identifier.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "trackingPlanId"
          },
          "rules": {
            "description": "Rules to update or insert.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/UpsertRuleAlpha" },
            "title": "rules"
          }
        },
        "required": ["rules", "trackingPlanId"]
      },
      "UpdateRulesInTrackingPlanAlphaOutput": {
        "description": "Updates tracking plan rules. Non-existent rules are added.",
        "title": "UpdateRulesInTrackingPlanAlphaOutput",
        "type": "object",
        "properties": {
          "status": { "description": "The operation status.", "type": "string", "enum": ["SUCCESS"], "title": "status" }
        },
        "required": ["status"]
      },
      "ReplaceRulesInTrackingPlanAlphaInput": {
        "description": "Replaces tracking plan rules.",
        "title": "ReplaceRulesInTrackingPlanAlphaInput",
        "type": "object",
        "properties": {
          "trackingPlanId": {
            "description": "The tracking plan identifier.",
            "type": "string",
            "title": "trackingPlanId"
          },
          "rules": {
            "description": "Rules to replace.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/RuleAlpha" },
            "title": "rules"
          }
        },
        "required": ["rules", "trackingPlanId"]
      },
      "ReplaceRulesInTrackingPlanAlphaOutput": {
        "description": "Replaces tracking plan rules.",
        "title": "ReplaceRulesInTrackingPlanAlphaOutput",
        "type": "object",
        "properties": {
          "status": { "description": "The operation status.", "type": "string", "enum": ["SUCCESS"], "title": "status" }
        },
        "required": ["status"]
      },
      "RemoveRulesFromTrackingPlanAlphaInput": {
        "description": "Removes specified rules from a tracking plan.",
        "title": "RemoveRulesFromTrackingPlanAlphaInput",
        "type": "object",
        "properties": {
          "trackingPlanId": {
            "description": "The tracking plan identifier.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "trackingPlanId"
          },
          "rules": {
            "description": "Rules to delete.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/RemoveRuleAlpha" },
            "title": "rules"
          }
        },
        "required": ["rules", "trackingPlanId"]
      },
      "RemoveRulesFromTrackingPlanAlphaOutput": {
        "description": "Removes specified rules from a tracking plan.",
        "title": "RemoveRulesFromTrackingPlanAlphaOutput",
        "type": "object",
        "properties": {
          "status": { "description": "The operation status.", "type": "string", "enum": ["SUCCESS"], "title": "status" }
        },
        "required": ["status"]
      },
      "ListSourcesFromTrackingPlanAlphaInput": {
        "description": "Lists all sources associated with a tracking plan.",
        "title": "ListSourcesFromTrackingPlanAlphaInput",
        "type": "object",
        "properties": {
          "trackingPlanId": {
            "description": "The tracking plan identifier.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "trackingPlanId"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination options.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "trackingPlanId"]
      },
      "ListSourcesFromTrackingPlanAlphaOutput": {
        "description": "Lists all sources associated with a tracking plan.",
        "title": "ListSourcesFromTrackingPlanAlphaOutput",
        "type": "object",
        "properties": {
          "sources": {
            "description": "A paginated list of sources associated with the tracking plan.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/SourceAlpha" },
            "title": "sources"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination results.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "sources"]
      },
      "AddSourceToTrackingPlanAlphaInput": {
        "description": "Connects a source to a tracking plan.",
        "title": "AddSourceToTrackingPlanAlphaInput",
        "type": "object",
        "properties": {
          "trackingPlanId": {
            "description": "The tracking plan identifier.",
            "type": "string",
            "title": "trackingPlanId"
          },
          "sourceId": {
            "description": "The id of the source associated with the tracking plan.\n\nConfig API note: analogous to `sourceName`.",
            "type": "string",
            "title": "sourceId"
          }
        },
        "required": ["sourceId", "trackingPlanId"]
      },
      "AddSourceToTrackingPlanAlphaOutput": {
        "description": "Connects a source to a tracking plan.",
        "title": "AddSourceToTrackingPlanAlphaOutput",
        "type": "object",
        "properties": {
          "status": { "description": "The operation status.", "type": "string", "enum": ["SUCCESS"], "title": "status" }
        },
        "required": ["status"]
      },
      "TrackingPlanBeta": {
        "description": "Represents a tracking plan.",
        "title": "TrackingPlanBeta",
        "type": "object",
        "properties": {
          "id": {
            "description": "The tracking plan's identifier.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "id"
          },
          "name": {
            "description": "The tracking plan's name.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "slug": {
            "description": "URL-friendly slug of this tracking plan.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "slug"
          },
          "description": {
            "description": "The tracking plan's description.",
            "type": "string",
            "title": "description"
          },
          "type": {
            "description": "The tracking plan's type.",
            "enum": ["LIVE", "PROPERTY_LIBRARY", "RULE_LIBRARY", "TEMPLATE"],
            "type": "string",
            "title": "type"
          },
          "updatedAt": {
            "description": "The timestamp of the last change to the tracking plan.\n\nConfig API note: equal to `updateTime`.",
            "type": "string",
            "title": "updatedAt"
          },
          "createdAt": {
            "description": "The timestamp of this tracking plan's creation.\n\nConfig API note: equal to `createTime`.",
            "type": "string",
            "title": "createdAt"
          }
        },
        "required": ["id", "type"]
      },
      "RuleBeta": {
        "description": "Represents a rule from a tracking plan.",
        "title": "RuleBeta",
        "type": "object",
        "properties": {
          "type": {
            "description": "The type for this tracking plan rule.",
            "enum": ["COMMON", "GROUP", "IDENTIFY", "PAGE", "SCREEN", "TRACK"],
            "type": "string",
            "title": "type"
          },
          "key": {
            "description": "Key to this rule (free-form string like 'Button clicked').",
            "type": "string",
            "title": "key"
          },
          "jsonSchema": { "description": "JSON Schema of this rule.", "title": "jsonSchema" },
          "version": { "description": "Version of this rule.", "type": "number", "title": "version" },
          "createdAt": {
            "description": "The timestamp of this rule's creation.",
            "type": "string",
            "title": "createdAt"
          },
          "updatedAt": {
            "description": "The timestamp of this rule's last change.",
            "type": "string",
            "title": "updatedAt"
          },
          "deprecatedAt": {
            "description": "The timestamp of this rule's deprecation.",
            "type": "string",
            "title": "deprecatedAt"
          }
        },
        "required": ["jsonSchema", "type", "version"]
      },
      "UpsertRuleBeta": {
        "title": "UpsertRuleBeta",
        "type": "object",
        "properties": {
          "newKey": { "description": "This rule's new intended key.", "type": "string", "title": "newKey" },
          "type": {
            "description": "The type for this tracking plan rule.",
            "enum": ["COMMON", "GROUP", "IDENTIFY", "PAGE", "SCREEN", "TRACK"],
            "type": "string",
            "title": "type"
          },
          "key": {
            "description": "Key to this rule (free-form string like 'Button clicked').",
            "type": "string",
            "title": "key"
          },
          "jsonSchema": { "description": "JSON Schema of this rule.", "title": "jsonSchema" },
          "version": { "description": "Version of this rule.", "type": "number", "title": "version" },
          "createdAt": {
            "description": "The timestamp of this rule's creation.",
            "type": "string",
            "title": "createdAt"
          },
          "updatedAt": {
            "description": "The timestamp of this rule's last change.",
            "type": "string",
            "title": "updatedAt"
          },
          "deprecatedAt": {
            "description": "The timestamp of this rule's deprecation.",
            "type": "string",
            "title": "deprecatedAt"
          }
        },
        "required": ["jsonSchema", "type", "version"]
      },
      "RemoveRuleBeta": {
        "description": "Represents the parameters needed to identify a rule on the backend-side.",
        "title": "RemoveRuleBeta",
        "type": "object",
        "properties": {
          "type": {
            "enum": ["COMMON", "GROUP", "IDENTIFY", "PAGE", "SCREEN", "TRACK"],
            "type": "string",
            "title": "type"
          },
          "key": { "type": "string", "title": "key" },
          "version": { "type": "number", "title": "version" }
        },
        "required": ["type", "version"]
      },
      "ListTrackingPlansBetaInput": {
        "description": "Lists the tracking plans associated with the current workspace.",
        "title": "ListTrackingPlansBetaInput",
        "type": "object",
        "properties": {
          "type": {
            "description": "Requests tracking plans of a certain type. If omitted, lists all types.",
            "enum": ["LIVE", "PROPERTY_LIBRARY", "RULE_LIBRARY", "TEMPLATE"],
            "type": "string",
            "title": "type"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination options.",
            "title": "pagination"
          }
        },
        "required": ["pagination"]
      },
      "GetTrackingPlanBetaInput": {
        "description": "Gets a single tracking plan.",
        "title": "GetTrackingPlanBetaInput",
        "type": "object",
        "properties": {
          "trackingPlanId": {
            "description": "The id of the tracking plan to request.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "trackingPlanId"
          }
        },
        "required": ["trackingPlanId"]
      },
      "ListTrackingPlansBetaOutput": {
        "description": "Lists the tracking plans associated with the current workspace.",
        "title": "ListTrackingPlansBetaOutput",
        "type": "object",
        "properties": {
          "trackingPlans": {
            "description": "A paginated list of tracking plans.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/TrackingPlanBeta" },
            "title": "trackingPlans"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination results.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "trackingPlans"]
      },
      "GetTrackingPlanBetaOutput": {
        "description": "Gets a single tracking plan.",
        "title": "GetTrackingPlanBetaOutput",
        "type": "object",
        "properties": {
          "trackingPlan": {
            "$ref": "#/components/schemas/TrackingPlanBeta",
            "description": "The requested tracking plan.",
            "title": "trackingPlan"
          }
        },
        "required": ["trackingPlan"]
      },
      "DeleteTrackingPlanBetaInput": {
        "description": "Deletes a tracking plan.",
        "title": "DeleteTrackingPlanBetaInput",
        "type": "object",
        "properties": {
          "trackingPlanId": {
            "description": "The id of the tracking plan to delete.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "trackingPlanId"
          }
        },
        "required": ["trackingPlanId"]
      },
      "DeleteTrackingPlanBetaOutput": {
        "description": "Result of a DeleteTrackingPlan call.",
        "title": "DeleteTrackingPlanBetaOutput",
        "type": "object",
        "properties": {
          "status": { "description": "The operation status.", "type": "string", "enum": ["SUCCESS"], "title": "status" }
        },
        "required": ["status"]
      },
      "CreateTrackingPlanBetaInput": {
        "description": "Creates a tracking plan in the workspace.",
        "title": "CreateTrackingPlanBetaInput",
        "type": "object",
        "properties": {
          "name": {
            "description": "The tracking plan's name.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "description": {
            "description": "The tracking plan's description.",
            "type": "string",
            "title": "description"
          },
          "type": {
            "description": "The tracking plan's type.",
            "enum": ["LIVE", "PROPERTY_LIBRARY", "RULE_LIBRARY", "TEMPLATE"],
            "type": "string",
            "title": "type"
          }
        },
        "required": ["name", "type"]
      },
      "CreateTrackingPlanBetaOutput": {
        "description": "Result of a CreateTrackingPlan call.",
        "title": "CreateTrackingPlanBetaOutput",
        "type": "object",
        "properties": {
          "trackingPlan": {
            "$ref": "#/components/schemas/TrackingPlanBeta",
            "description": "The created tracking plan.",
            "title": "trackingPlan"
          }
        },
        "required": ["trackingPlan"]
      },
      "UpdateTrackingPlanBetaInput": {
        "description": "Updates the workspace's tracking plan.",
        "title": "UpdateTrackingPlanBetaInput",
        "type": "object",
        "properties": {
          "trackingPlanId": {
            "description": "The tracking plan identifier.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "trackingPlanId"
          },
          "name": {
            "description": "The tracking plan's name.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "description": { "description": "The tracking plan's description.", "type": "string", "title": "description" }
        },
        "required": ["trackingPlanId"]
      },
      "UpdateTrackingPlanBetaOutput": {
        "description": "Result of an UpdateTrackingPlan call.",
        "title": "UpdateTrackingPlanBetaOutput",
        "type": "object",
        "properties": {
          "status": { "description": "The operation status.", "type": "string", "enum": ["SUCCESS"], "title": "status" }
        },
        "required": ["status"]
      },
      "ListRulesFromTrackingPlanBetaInput": {
        "description": "Lists a tracking plan's rules.",
        "title": "ListRulesFromTrackingPlanBetaInput",
        "type": "object",
        "properties": {
          "trackingPlanId": {
            "description": "The tracking plan identifier.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "trackingPlanId"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination options.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "trackingPlanId"]
      },
      "ListRulesFromTrackingPlanBetaOutput": {
        "description": "Lists a tracking plan's rules.",
        "title": "ListRulesFromTrackingPlanBetaOutput",
        "type": "object",
        "properties": {
          "rules": {
            "description": "Rules associated with the given tracking plan.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/RuleBeta" },
            "title": "rules"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination options.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "rules"]
      },
      "UpdateRulesInTrackingPlanBetaInput": {
        "description": "Updates tracking plan rules. Non-existent rules are added.",
        "title": "UpdateRulesInTrackingPlanBetaInput",
        "type": "object",
        "properties": {
          "trackingPlanId": {
            "description": "The tracking plan identifier.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "trackingPlanId"
          },
          "rules": {
            "description": "Rules to update or insert.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/UpsertRuleBeta" },
            "title": "rules"
          }
        },
        "required": ["rules", "trackingPlanId"]
      },
      "RemoveRulesFromTrackingPlanBetaInput": {
        "description": "Remove specified rules from a tracking plan.",
        "title": "RemoveRulesFromTrackingPlanBetaInput",
        "type": "object",
        "properties": {
          "trackingPlanId": {
            "description": "An identifier for this tracking plan.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "trackingPlanId"
          },
          "rules": {
            "description": "Rules to delete.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/RemoveRuleBeta" },
            "title": "rules"
          }
        },
        "required": ["rules", "trackingPlanId"]
      },
      "ReplaceRulesInTrackingPlanBetaInput": {
        "description": "Replaces tracking plan rules.",
        "title": "ReplaceRulesInTrackingPlanBetaInput",
        "type": "object",
        "properties": {
          "trackingPlanId": {
            "description": "The tracking plan identifier.",
            "type": "string",
            "title": "trackingPlanId"
          },
          "rules": {
            "description": "Rules to replace.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/RuleBeta" },
            "title": "rules"
          }
        },
        "required": ["rules", "trackingPlanId"]
      },
      "ReplaceRulesInTrackingPlanBetaOutput": {
        "description": "Replaces tracking plan rules.",
        "title": "ReplaceRulesInTrackingPlanBetaOutput",
        "type": "object",
        "properties": {
          "status": { "description": "The operation status.", "type": "string", "enum": ["SUCCESS"], "title": "status" }
        },
        "required": ["status"]
      },
      "RemoveRulesFromTrackingPlanBetaOutput": {
        "description": "Remove specified rules from a tracking plan.",
        "title": "RemoveRulesFromTrackingPlanBetaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the operation.",
            "type": "string",
            "enum": ["SUCCESS"],
            "title": "status"
          }
        },
        "required": ["status"]
      },
      "UpdateRulesInTrackingPlanBetaOutput": {
        "description": "Updates tracking plan rules. Non-existent rules are added.",
        "title": "UpdateRulesInTrackingPlanBetaOutput",
        "type": "object",
        "properties": {
          "status": { "description": "The operation status.", "type": "string", "enum": ["SUCCESS"], "title": "status" }
        },
        "required": ["status"]
      },
      "ListSourcesFromTrackingPlanBetaInput": {
        "description": "Lists all sources associated with a tracking plan.",
        "title": "ListSourcesFromTrackingPlanBetaInput",
        "type": "object",
        "properties": {
          "trackingPlanId": {
            "description": "The tracking plan identifier.",
            "type": "string",
            "title": "trackingPlanId"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination options.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "trackingPlanId"]
      },
      "ListSourcesFromTrackingPlanBetaOutput": {
        "description": "Lists all sources associated with a tracking plan.",
        "title": "ListSourcesFromTrackingPlanBetaOutput",
        "type": "object",
        "properties": {
          "sources": {
            "description": "A paginated list of sources associated with the tracking plan.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/SourceBeta" },
            "title": "sources"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination results.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "sources"]
      },
      "AddSourceToTrackingPlanBetaInput": {
        "description": "Connects a source to a tracking plan.",
        "title": "AddSourceToTrackingPlanBetaInput",
        "type": "object",
        "properties": {
          "trackingPlanId": {
            "description": "The tracking plan identifier.",
            "type": "string",
            "title": "trackingPlanId"
          },
          "sourceId": {
            "description": "The id of the source associated with the tracking plan.\n\nConfig API note: analogous to `sourceName`.",
            "type": "string",
            "title": "sourceId"
          }
        },
        "required": ["sourceId", "trackingPlanId"]
      },
      "AddSourceToTrackingPlanBetaOutput": {
        "description": "Connects a source to a tracking plan.",
        "title": "AddSourceToTrackingPlanBetaOutput",
        "type": "object",
        "properties": {
          "status": { "description": "The operation status.", "type": "string", "enum": ["SUCCESS"], "title": "status" }
        },
        "required": ["status"]
      },
      "RemoveSourceFromTrackingPlanBetaInput": {
        "description": "Disconnects a source from a tracking plan.",
        "title": "RemoveSourceFromTrackingPlanBetaInput",
        "type": "object",
        "properties": {
          "trackingPlanId": {
            "description": "The tracking plan identifier.",
            "type": "string",
            "title": "trackingPlanId"
          },
          "sourceId": {
            "description": "The id of the source associated with the tracking plan.\n\nConfig API note: analogous to `sourceName`.",
            "type": "string",
            "title": "sourceId"
          }
        },
        "required": ["sourceId", "trackingPlanId"]
      },
      "RemoveSourceFromTrackingPlanBetaOutput": {
        "description": "Disconnects a source from a tracking plan.",
        "title": "RemoveSourceFromTrackingPlanBetaOutput",
        "type": "object",
        "properties": {
          "status": { "description": "The operation status.", "type": "string", "enum": ["SUCCESS"], "title": "status" }
        },
        "required": ["status"]
      },
      "TrackingPlanV1": {
        "description": "Represents a tracking plan.",
        "title": "TrackingPlanV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "The tracking plan's identifier.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "id"
          },
          "name": {
            "description": "The tracking plan's name.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "slug": {
            "description": "URL-friendly slug of this tracking plan.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "slug"
          },
          "description": {
            "description": "The tracking plan's description.",
            "type": "string",
            "title": "description"
          },
          "type": {
            "description": "The tracking plan's type.",
            "enum": ["LIVE", "PROPERTY_LIBRARY", "RULE_LIBRARY", "TEMPLATE"],
            "type": "string",
            "title": "type"
          },
          "updatedAt": {
            "description": "The timestamp of the last change to the tracking plan.\n\nConfig API note: equal to `updateTime`.",
            "type": "string",
            "title": "updatedAt"
          },
          "createdAt": {
            "description": "The timestamp of this tracking plan's creation.\n\nConfig API note: equal to `createTime`.",
            "type": "string",
            "title": "createdAt"
          }
        },
        "required": ["id", "type"]
      },
      "RuleV1": {
        "description": "Represents a rule from a tracking plan.",
        "title": "RuleV1",
        "type": "object",
        "properties": {
          "type": {
            "description": "The type for this tracking plan rule.",
            "enum": ["COMMON", "GROUP", "IDENTIFY", "PAGE", "SCREEN", "TRACK"],
            "type": "string",
            "title": "type"
          },
          "key": {
            "description": "Key to this rule (free-form string like 'Button clicked').",
            "type": "string",
            "title": "key"
          },
          "jsonSchema": { "description": "JSON Schema of this rule.", "title": "jsonSchema" },
          "version": { "description": "Version of this rule.", "type": "number", "title": "version" },
          "createdAt": {
            "description": "The timestamp of this rule's creation.",
            "type": "string",
            "title": "createdAt"
          },
          "updatedAt": {
            "description": "The timestamp of this rule's last change.",
            "type": "string",
            "title": "updatedAt"
          },
          "deprecatedAt": {
            "description": "The timestamp of this rule's deprecation.",
            "type": "string",
            "title": "deprecatedAt"
          }
        },
        "required": ["jsonSchema", "type", "version"]
      },
      "UpsertRuleV1": {
        "title": "UpsertRuleV1",
        "type": "object",
        "properties": {
          "newKey": { "description": "This rule's new intended key.", "type": "string", "title": "newKey" },
          "type": {
            "description": "The type for this tracking plan rule.",
            "enum": ["COMMON", "GROUP", "IDENTIFY", "PAGE", "SCREEN", "TRACK"],
            "type": "string",
            "title": "type"
          },
          "key": {
            "description": "Key to this rule (free-form string like 'Button clicked').",
            "type": "string",
            "title": "key"
          },
          "jsonSchema": { "description": "JSON Schema of this rule.", "title": "jsonSchema" },
          "version": { "description": "Version of this rule.", "type": "number", "title": "version" },
          "createdAt": {
            "description": "The timestamp of this rule's creation.",
            "type": "string",
            "title": "createdAt"
          },
          "updatedAt": {
            "description": "The timestamp of this rule's last change.",
            "type": "string",
            "title": "updatedAt"
          },
          "deprecatedAt": {
            "description": "The timestamp of this rule's deprecation.",
            "type": "string",
            "title": "deprecatedAt"
          }
        },
        "required": ["jsonSchema", "type", "version"]
      },
      "RemoveRuleV1": {
        "description": "Represents the parameters needed to identify a rule on the backend-side.",
        "title": "RemoveRuleV1",
        "type": "object",
        "properties": {
          "type": {
            "enum": ["COMMON", "GROUP", "IDENTIFY", "PAGE", "SCREEN", "TRACK"],
            "type": "string",
            "title": "type"
          },
          "key": { "type": "string", "title": "key" },
          "version": { "type": "number", "title": "version" }
        },
        "required": ["type", "version"]
      },
      "ListTrackingPlansV1Input": {
        "description": "Lists the tracking plans associated with the current workspace.",
        "title": "ListTrackingPlansV1Input",
        "type": "object",
        "properties": {
          "type": {
            "description": "Requests tracking plans of a certain type. If omitted, lists all types.",
            "enum": ["LIVE", "PROPERTY_LIBRARY", "RULE_LIBRARY", "TEMPLATE"],
            "type": "string",
            "title": "type"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination options.",
            "title": "pagination"
          }
        },
        "required": ["pagination"]
      },
      "GetTrackingPlanV1Input": {
        "description": "Gets a single tracking plan.",
        "title": "GetTrackingPlanV1Input",
        "type": "object",
        "properties": {
          "trackingPlanId": {
            "description": "The id of the tracking plan to request.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "trackingPlanId"
          }
        },
        "required": ["trackingPlanId"]
      },
      "ListTrackingPlansV1Output": {
        "description": "Lists the tracking plans associated with the current workspace.",
        "title": "ListTrackingPlansV1Output",
        "type": "object",
        "properties": {
          "trackingPlans": {
            "description": "A paginated list of tracking plans.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/TrackingPlanV1" },
            "title": "trackingPlans"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination results.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "trackingPlans"]
      },
      "GetTrackingPlanV1Output": {
        "description": "Gets a single tracking plan.",
        "title": "GetTrackingPlanV1Output",
        "type": "object",
        "properties": {
          "trackingPlan": {
            "$ref": "#/components/schemas/TrackingPlanV1",
            "description": "The requested tracking plan.",
            "title": "trackingPlan"
          }
        },
        "required": ["trackingPlan"]
      },
      "DeleteTrackingPlanV1Input": {
        "description": "Deletes a tracking plan.",
        "title": "DeleteTrackingPlanV1Input",
        "type": "object",
        "properties": {
          "trackingPlanId": {
            "description": "The id of the tracking plan to delete.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "trackingPlanId"
          }
        },
        "required": ["trackingPlanId"]
      },
      "DeleteTrackingPlanV1Output": {
        "description": "Result of a DeleteTrackingPlan call.",
        "title": "DeleteTrackingPlanV1Output",
        "type": "object",
        "properties": {
          "status": { "description": "The operation status.", "type": "string", "enum": ["SUCCESS"], "title": "status" }
        },
        "required": ["status"]
      },
      "CreateTrackingPlanV1Input": {
        "description": "Creates a tracking plan in the workspace.",
        "title": "CreateTrackingPlanV1Input",
        "type": "object",
        "properties": {
          "name": {
            "description": "The tracking plan's name.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "description": {
            "description": "The tracking plan's description.",
            "type": "string",
            "title": "description"
          },
          "type": {
            "description": "The tracking plan's type.",
            "enum": ["LIVE", "PROPERTY_LIBRARY", "RULE_LIBRARY", "TEMPLATE"],
            "type": "string",
            "title": "type"
          }
        },
        "required": ["name", "type"]
      },
      "CreateTrackingPlanV1Output": {
        "description": "Result of a CreateTrackingPlan call.",
        "title": "CreateTrackingPlanV1Output",
        "type": "object",
        "properties": {
          "trackingPlan": {
            "$ref": "#/components/schemas/TrackingPlanV1",
            "description": "The created tracking plan.",
            "title": "trackingPlan"
          }
        },
        "required": ["trackingPlan"]
      },
      "UpdateTrackingPlanV1Input": {
        "description": "Updates the workspace's tracking plan.",
        "title": "UpdateTrackingPlanV1Input",
        "type": "object",
        "properties": {
          "trackingPlanId": {
            "description": "The tracking plan identifier.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "trackingPlanId"
          },
          "name": {
            "description": "The tracking plan's name.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "description": { "description": "The tracking plan's description.", "type": "string", "title": "description" }
        },
        "required": ["trackingPlanId"]
      },
      "UpdateTrackingPlanV1Output": {
        "description": "Result of an UpdateTrackingPlan call.",
        "title": "UpdateTrackingPlanV1Output",
        "type": "object",
        "properties": {
          "status": { "description": "The operation status.", "type": "string", "enum": ["SUCCESS"], "title": "status" }
        },
        "required": ["status"]
      },
      "ListRulesFromTrackingPlanV1Input": {
        "description": "Lists a tracking plan's rules.",
        "title": "ListRulesFromTrackingPlanV1Input",
        "type": "object",
        "properties": {
          "trackingPlanId": {
            "description": "The tracking plan identifier.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "trackingPlanId"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination options.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "trackingPlanId"]
      },
      "ListRulesFromTrackingPlanV1Output": {
        "description": "Lists a tracking plan's rules.",
        "title": "ListRulesFromTrackingPlanV1Output",
        "type": "object",
        "properties": {
          "rules": {
            "description": "Rules associated with the given tracking plan.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/RuleV1" },
            "title": "rules"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination options.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "rules"]
      },
      "UpdateRulesInTrackingPlanV1Input": {
        "description": "Updates tracking plan rules. Non-existent rules are added.",
        "title": "UpdateRulesInTrackingPlanV1Input",
        "type": "object",
        "properties": {
          "trackingPlanId": {
            "description": "The tracking plan identifier.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "trackingPlanId"
          },
          "rules": {
            "description": "Rules to update or insert.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/UpsertRuleV1" },
            "title": "rules"
          }
        },
        "required": ["rules", "trackingPlanId"]
      },
      "RemoveRulesFromTrackingPlanV1Input": {
        "description": "Remove specified rules from a tracking plan.",
        "title": "RemoveRulesFromTrackingPlanV1Input",
        "type": "object",
        "properties": {
          "trackingPlanId": {
            "description": "An identifier for this tracking plan.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "trackingPlanId"
          },
          "rules": {
            "description": "Rules to delete.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/RemoveRuleV1" },
            "title": "rules"
          }
        },
        "required": ["rules", "trackingPlanId"]
      },
      "ReplaceRulesInTrackingPlanV1Input": {
        "description": "Replaces tracking plan rules.",
        "title": "ReplaceRulesInTrackingPlanV1Input",
        "type": "object",
        "properties": {
          "trackingPlanId": {
            "description": "The tracking plan identifier.",
            "type": "string",
            "title": "trackingPlanId"
          },
          "rules": {
            "description": "Rules to replace.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/RuleV1" },
            "title": "rules"
          }
        },
        "required": ["rules", "trackingPlanId"]
      },
      "ReplaceRulesInTrackingPlanV1Output": {
        "description": "Replaces tracking plan rules.",
        "title": "ReplaceRulesInTrackingPlanV1Output",
        "type": "object",
        "properties": {
          "status": { "description": "The operation status.", "type": "string", "enum": ["SUCCESS"], "title": "status" }
        },
        "required": ["status"]
      },
      "RemoveRulesFromTrackingPlanV1Output": {
        "description": "Remove specified rules from a tracking plan.",
        "title": "RemoveRulesFromTrackingPlanV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the operation.",
            "type": "string",
            "enum": ["SUCCESS"],
            "title": "status"
          }
        },
        "required": ["status"]
      },
      "UpdateRulesInTrackingPlanV1Output": {
        "description": "Updates tracking plan rules. Non-existent rules are added.",
        "title": "UpdateRulesInTrackingPlanV1Output",
        "type": "object",
        "properties": {
          "status": { "description": "The operation status.", "type": "string", "enum": ["SUCCESS"], "title": "status" }
        },
        "required": ["status"]
      },
      "ListSourcesFromTrackingPlanV1Input": {
        "description": "Lists all sources associated with a tracking plan.",
        "title": "ListSourcesFromTrackingPlanV1Input",
        "type": "object",
        "properties": {
          "trackingPlanId": {
            "description": "The tracking plan identifier.",
            "type": "string",
            "title": "trackingPlanId"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination options.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "trackingPlanId"]
      },
      "ListSourcesFromTrackingPlanV1Output": {
        "description": "Lists all sources associated with a tracking plan.",
        "title": "ListSourcesFromTrackingPlanV1Output",
        "type": "object",
        "properties": {
          "sources": {
            "description": "A paginated list of sources associated with the tracking plan.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/SourceV1" },
            "title": "sources"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination results.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "sources"]
      },
      "AddSourceToTrackingPlanV1Input": {
        "description": "Connects a source to a tracking plan.",
        "title": "AddSourceToTrackingPlanV1Input",
        "type": "object",
        "properties": {
          "trackingPlanId": {
            "description": "The tracking plan identifier.",
            "type": "string",
            "title": "trackingPlanId"
          },
          "sourceId": {
            "description": "The id of the source associated with the tracking plan.\n\nConfig API note: analogous to `sourceName`.",
            "type": "string",
            "title": "sourceId"
          }
        },
        "required": ["sourceId", "trackingPlanId"]
      },
      "AddSourceToTrackingPlanV1Output": {
        "description": "Connects a source to a tracking plan.",
        "title": "AddSourceToTrackingPlanV1Output",
        "type": "object",
        "properties": {
          "status": { "description": "The operation status.", "type": "string", "enum": ["SUCCESS"], "title": "status" }
        },
        "required": ["status"]
      },
      "RemoveSourceFromTrackingPlanV1Input": {
        "description": "Disconnects a source from a tracking plan.",
        "title": "RemoveSourceFromTrackingPlanV1Input",
        "type": "object",
        "properties": {
          "trackingPlanId": {
            "description": "The tracking plan identifier.",
            "type": "string",
            "title": "trackingPlanId"
          },
          "sourceId": {
            "description": "The id of the source associated with the tracking plan.\n\nConfig API note: analogous to `sourceName`.",
            "type": "string",
            "title": "sourceId"
          }
        },
        "required": ["sourceId", "trackingPlanId"]
      },
      "RemoveSourceFromTrackingPlanV1Output": {
        "description": "Disconnects a source from a tracking plan.",
        "title": "RemoveSourceFromTrackingPlanV1Output",
        "type": "object",
        "properties": {
          "status": { "description": "The operation status.", "type": "string", "enum": ["SUCCESS"], "title": "status" }
        },
        "required": ["status"]
      },
      "MtuSnapshotAlpha": {
        "description": "A snapshot of MTU metrics within the given usage period.",
        "title": "MtuSnapshotAlpha",
        "type": "object",
        "properties": {
          "periodStart": {
            "description": "The start of the usage period, in unix time (seconds since epoch).",
            "type": "number",
            "title": "periodStart"
          },
          "periodEnd": {
            "description": "The end of the usage period, in unix time (seconds since epoch).",
            "type": "number",
            "title": "periodEnd"
          },
          "anonymous": {
            "description": "A bigint of the number of anonymous users in this snapshot.",
            "type": "string",
            "title": "anonymous"
          },
          "anonymousIdentified": {
            "description": "A bigint of the number of anonymous identified users in this snapshot.",
            "type": "string",
            "title": "anonymousIdentified"
          },
          "identified": {
            "description": "A bigint of the number of identified users in this snapshot.",
            "type": "string",
            "title": "identified"
          },
          "neverIdentified": {
            "description": "A bigint of the number of never identified users in this snapshot.",
            "type": "string",
            "title": "neverIdentified"
          },
          "timestamp": {
            "description": "The timestamp of this snapshot within the billing cycle, in the ISO-8601 format.",
            "type": "string",
            "title": "timestamp"
          }
        },
        "required": [
          "anonymous",
          "anonymousIdentified",
          "identified",
          "neverIdentified",
          "periodEnd",
          "periodStart",
          "timestamp"
        ]
      },
      "UsersPerSourceSnapshotAlpha": {
        "description": "A snapshot of MTU metrics for a given source within the given usage period.",
        "title": "UsersPerSourceSnapshotAlpha",
        "type": "object",
        "properties": {
          "sourceId": { "description": "The source id.", "type": "string", "title": "sourceId" },
          "periodStart": {
            "description": "The start of the usage period, in unix time (seconds since epoch).",
            "type": "number",
            "title": "periodStart"
          },
          "periodEnd": {
            "description": "The end of the usage period, in unix time (seconds since epoch).",
            "type": "number",
            "title": "periodEnd"
          },
          "anonymous": {
            "description": "A bigint of the number of anonymous users in this snapshot.",
            "type": "string",
            "title": "anonymous"
          },
          "anonymousIdentified": {
            "description": "A bigint of the number of anonymous identified users in this snapshot.",
            "type": "string",
            "title": "anonymousIdentified"
          },
          "identified": {
            "description": "A bigint of the number of identified users in this snapshot.",
            "type": "string",
            "title": "identified"
          },
          "neverIdentified": {
            "description": "A bigint of the number of never identified users in this snapshot.",
            "type": "string",
            "title": "neverIdentified"
          },
          "timestamp": {
            "description": "The timestamp of this snapshot within the billing cycle, in the ISO-8601 format.",
            "type": "string",
            "title": "timestamp"
          }
        },
        "required": [
          "anonymous",
          "anonymousIdentified",
          "identified",
          "neverIdentified",
          "periodEnd",
          "periodStart",
          "sourceId",
          "timestamp"
        ]
      },
      "APICallSnapshotAlpha": {
        "description": "A snapshot of the number of API calls for a given workspace.",
        "title": "APICallSnapshotAlpha",
        "type": "object",
        "properties": {
          "apiCalls": {
            "description": "A bigint of the number of API calls in this snapshot.",
            "type": "string",
            "title": "apiCalls"
          },
          "timestamp": {
            "description": "Timestamp of this snapshot within the billing cycle in the ISO-8601 format.",
            "type": "string",
            "title": "timestamp"
          }
        },
        "required": ["apiCalls", "timestamp"]
      },
      "SourceAPICallSnapshotAlpha": {
        "description": "A snapshot of the number of API calls for a given source in a workspace.",
        "title": "SourceAPICallSnapshotAlpha",
        "type": "object",
        "properties": {
          "sourceId": { "description": "The source id.", "type": "string", "title": "sourceId" },
          "apiCalls": {
            "description": "A bigint of the number of API calls in this snapshot.",
            "type": "string",
            "title": "apiCalls"
          },
          "timestamp": {
            "description": "Timestamp of this snapshot within the billing cycle in the ISO-8601 format.",
            "type": "string",
            "title": "timestamp"
          }
        },
        "required": ["apiCalls", "sourceId", "timestamp"]
      },
      "GetDailyWorkspaceMTUUsageAlphaInput": {
        "description": "Input to retrieve aggregated daily workspace MTU in a billing period.",
        "title": "GetDailyWorkspaceMTUUsageAlphaInput",
        "type": "object",
        "properties": {
          "period": {
            "description": "The start of the usage month, in the ISO-8601 format.",
            "type": "string",
            "title": "period"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination input for workspace MTU counts.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "period"]
      },
      "GetDailyWorkspaceMTUUsageAlphaOutput": {
        "description": "Returns a list of daily aggregations of workspace MTU counts.",
        "title": "GetDailyWorkspaceMTUUsageAlphaOutput",
        "type": "object",
        "properties": {
          "dailyWorkspaceMTUUsage": {
            "description": "The list of daily workspace MTU count aggregates.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/MtuSnapshotAlpha" },
            "title": "dailyWorkspaceMTUUsage"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination output for workspace MTU counts.",
            "title": "pagination"
          }
        },
        "required": ["dailyWorkspaceMTUUsage", "pagination"]
      },
      "GetDailyPerSourceMTUUsageAlphaInput": {
        "description": "Input to retrieve aggregated daily source level MTU in a billing period.",
        "title": "GetDailyPerSourceMTUUsageAlphaInput",
        "type": "object",
        "properties": {
          "period": {
            "description": "The start of the usage month, in the ISO-8601 format.",
            "type": "string",
            "title": "period"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination input for per source MTU counts.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "period"]
      },
      "GetDailyPerSourceMTUUsageAlphaOutput": {
        "description": "Returns a list of daily aggregations of source level MTU counts.",
        "title": "GetDailyPerSourceMTUUsageAlphaOutput",
        "type": "object",
        "properties": {
          "dailyPerSourceMTUUsage": {
            "description": "The list of daily per source MTU count aggregates.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/UsersPerSourceSnapshotAlpha" },
            "title": "dailyPerSourceMTUUsage"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination output for per source MTU counts.",
            "title": "pagination"
          }
        },
        "required": ["dailyPerSourceMTUUsage", "pagination"]
      },
      "GetDailyWorkspaceAPICallsUsageAlphaInput": {
        "description": "Input to retrieve aggregated daily workspace API calls in a billing period.",
        "title": "GetDailyWorkspaceAPICallsUsageAlphaInput",
        "type": "object",
        "properties": {
          "period": {
            "description": "The start of the usage month in the ISO-8601 format.",
            "type": "string",
            "title": "period"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination input for workspace API call counts.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "period"]
      },
      "GetDailyWorkspaceAPICallsUsageAlphaOutput": {
        "description": "Returns a list of daily aggregations of workspace MTU counts.",
        "title": "GetDailyWorkspaceAPICallsUsageAlphaOutput",
        "type": "object",
        "properties": {
          "dailyWorkspaceAPICallsUsage": {
            "description": "The list of daily workspace API calls count aggregates.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/APICallSnapshotAlpha" },
            "title": "dailyWorkspaceAPICallsUsage"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination output for workspace API calls counts.",
            "title": "pagination"
          }
        },
        "required": ["dailyWorkspaceAPICallsUsage", "pagination"]
      },
      "GetDailyPerSourceAPICallsUsageAlphaInput": {
        "description": "Input to retrieve aggregated daily source level API calls in a billing period.",
        "title": "GetDailyPerSourceAPICallsUsageAlphaInput",
        "type": "object",
        "properties": {
          "period": {
            "description": "The start of the usage month in the ISO-8601 format.",
            "type": "string",
            "title": "period"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination input for per source API calls counts.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "period"]
      },
      "GetDailyPerSourceAPICallsUsageAlphaOutput": {
        "description": "Returns a list of daily aggregations of source level API calls counts.",
        "title": "GetDailyPerSourceAPICallsUsageAlphaOutput",
        "type": "object",
        "properties": {
          "dailyPerSourceAPICallsUsage": {
            "description": "The list of daily per source API calls count aggregates.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/SourceAPICallSnapshotAlpha" },
            "title": "dailyPerSourceAPICallsUsage"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination output for per source API calls counts.",
            "title": "pagination"
          }
        },
        "required": ["dailyPerSourceAPICallsUsage", "pagination"]
      },
      "MtuSnapshotBeta": {
        "description": "A snapshot of MTU metrics within the given usage period.",
        "title": "MtuSnapshotBeta",
        "type": "object",
        "properties": {
          "periodStart": {
            "description": "The start of the usage period, in unix time (seconds since epoch).",
            "type": "number",
            "title": "periodStart"
          },
          "periodEnd": {
            "description": "The end of the usage period, in unix time (seconds since epoch).",
            "type": "number",
            "title": "periodEnd"
          },
          "anonymous": {
            "description": "A bigint of the number of anonymous users in this snapshot.",
            "type": "string",
            "title": "anonymous"
          },
          "anonymousIdentified": {
            "description": "A bigint of the number of anonymous identified users in this snapshot.",
            "type": "string",
            "title": "anonymousIdentified"
          },
          "identified": {
            "description": "A bigint of the number of identified users in this snapshot.",
            "type": "string",
            "title": "identified"
          },
          "neverIdentified": {
            "description": "A bigint of the number of never identified users in this snapshot.",
            "type": "string",
            "title": "neverIdentified"
          },
          "timestamp": {
            "description": "The timestamp of this snapshot within the billing cycle, in the ISO-8601 format.",
            "type": "string",
            "title": "timestamp"
          }
        },
        "required": [
          "anonymous",
          "anonymousIdentified",
          "identified",
          "neverIdentified",
          "periodEnd",
          "periodStart",
          "timestamp"
        ]
      },
      "UsersPerSourceSnapshotBeta": {
        "description": "A snapshot of MTU metrics for a given source within the given usage period.",
        "title": "UsersPerSourceSnapshotBeta",
        "type": "object",
        "properties": {
          "sourceId": { "description": "The source id.", "type": "string", "title": "sourceId" },
          "periodStart": {
            "description": "The start of the usage period, in unix time (seconds since epoch).",
            "type": "number",
            "title": "periodStart"
          },
          "periodEnd": {
            "description": "The end of the usage period, in unix time (seconds since epoch).",
            "type": "number",
            "title": "periodEnd"
          },
          "anonymous": {
            "description": "A bigint of the number of anonymous users in this snapshot.",
            "type": "string",
            "title": "anonymous"
          },
          "anonymousIdentified": {
            "description": "A bigint of the number of anonymous identified users in this snapshot.",
            "type": "string",
            "title": "anonymousIdentified"
          },
          "identified": {
            "description": "A bigint of the number of identified users in this snapshot.",
            "type": "string",
            "title": "identified"
          },
          "neverIdentified": {
            "description": "A bigint of the number of never identified users in this snapshot.",
            "type": "string",
            "title": "neverIdentified"
          },
          "timestamp": {
            "description": "The timestamp of this snapshot within the billing cycle, in the ISO-8601 format.",
            "type": "string",
            "title": "timestamp"
          }
        },
        "required": [
          "anonymous",
          "anonymousIdentified",
          "identified",
          "neverIdentified",
          "periodEnd",
          "periodStart",
          "sourceId",
          "timestamp"
        ]
      },
      "APICallSnapshotBeta": {
        "description": "A snapshot of the number of API calls for a given workspace.",
        "title": "APICallSnapshotBeta",
        "type": "object",
        "properties": {
          "apiCalls": {
            "description": "A bigint of the number of API calls in this snapshot.",
            "type": "string",
            "title": "apiCalls"
          },
          "timestamp": {
            "description": "Timestamp of this snapshot within the billing cycle in the ISO-8601 format.",
            "type": "string",
            "title": "timestamp"
          }
        },
        "required": ["apiCalls", "timestamp"]
      },
      "SourceAPICallSnapshotBeta": {
        "description": "A snapshot of the number of API calls for a given source in a workspace.",
        "title": "SourceAPICallSnapshotBeta",
        "type": "object",
        "properties": {
          "sourceId": { "description": "The source id.", "type": "string", "title": "sourceId" },
          "apiCalls": {
            "description": "A bigint of the number of API calls in this snapshot.",
            "type": "string",
            "title": "apiCalls"
          },
          "timestamp": {
            "description": "Timestamp of this snapshot within the billing cycle in the ISO-8601 format.",
            "type": "string",
            "title": "timestamp"
          }
        },
        "required": ["apiCalls", "sourceId", "timestamp"]
      },
      "GetDailyWorkspaceMTUUsageBetaInput": {
        "description": "Input to retrieve aggregated daily workspace MTU in a billing period.",
        "title": "GetDailyWorkspaceMTUUsageBetaInput",
        "type": "object",
        "properties": {
          "period": {
            "description": "The start of the usage month, in the ISO-8601 format.",
            "type": "string",
            "title": "period"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination input for workspace MTU counts.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "period"]
      },
      "GetDailyWorkspaceMTUUsageBetaOutput": {
        "description": "Returns a list of daily aggregations of workspace MTU counts.",
        "title": "GetDailyWorkspaceMTUUsageBetaOutput",
        "type": "object",
        "properties": {
          "dailyWorkspaceMTUUsage": {
            "description": "The list of daily workspace MTU count aggregates.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/MtuSnapshotBeta" },
            "title": "dailyWorkspaceMTUUsage"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination output for workspace MTU counts.",
            "title": "pagination"
          }
        },
        "required": ["dailyWorkspaceMTUUsage", "pagination"]
      },
      "GetDailyPerSourceMTUUsageBetaInput": {
        "description": "Input to retrieve aggregated daily source level MTU in a billing period.",
        "title": "GetDailyPerSourceMTUUsageBetaInput",
        "type": "object",
        "properties": {
          "period": {
            "description": "The start of the usage month, in the ISO-8601 format.",
            "type": "string",
            "title": "period"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination input for per source MTU counts.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "period"]
      },
      "GetDailyPerSourceMTUUsageBetaOutput": {
        "description": "Returns a list of daily aggregations of source level MTU counts.",
        "title": "GetDailyPerSourceMTUUsageBetaOutput",
        "type": "object",
        "properties": {
          "dailyPerSourceMTUUsage": {
            "description": "The list of daily per source MTU count aggregates.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/UsersPerSourceSnapshotBeta" },
            "title": "dailyPerSourceMTUUsage"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination output for per source MTU counts.",
            "title": "pagination"
          }
        },
        "required": ["dailyPerSourceMTUUsage", "pagination"]
      },
      "GetDailyWorkspaceAPICallsUsageBetaInput": {
        "description": "Input to retrieve aggregated daily workspace API calls in a billing period.",
        "title": "GetDailyWorkspaceAPICallsUsageBetaInput",
        "type": "object",
        "properties": {
          "period": {
            "description": "The start of the usage month in the ISO-8601 format.",
            "type": "string",
            "title": "period"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination input for workspace API call counts.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "period"]
      },
      "GetDailyWorkspaceAPICallsUsageBetaOutput": {
        "description": "Returns a list of daily aggregations of workspace MTU counts.",
        "title": "GetDailyWorkspaceAPICallsUsageBetaOutput",
        "type": "object",
        "properties": {
          "dailyWorkspaceAPICallsUsage": {
            "description": "The list of daily workspace API calls count aggregates.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/APICallSnapshotBeta" },
            "title": "dailyWorkspaceAPICallsUsage"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination output for workspace API calls counts.",
            "title": "pagination"
          }
        },
        "required": ["dailyWorkspaceAPICallsUsage", "pagination"]
      },
      "GetDailyPerSourceAPICallsUsageBetaInput": {
        "description": "Input to retrieve aggregated daily source level API calls in a billing period.",
        "title": "GetDailyPerSourceAPICallsUsageBetaInput",
        "type": "object",
        "properties": {
          "period": {
            "description": "The start of the usage month in the ISO-8601 format.",
            "type": "string",
            "title": "period"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination input for per source API calls counts.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "period"]
      },
      "GetDailyPerSourceAPICallsUsageBetaOutput": {
        "description": "Returns a list of daily aggregations of source level API calls counts.",
        "title": "GetDailyPerSourceAPICallsUsageBetaOutput",
        "type": "object",
        "properties": {
          "dailyPerSourceAPICallsUsage": {
            "description": "The list of daily per source API calls count aggregates.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/SourceAPICallSnapshotBeta" },
            "title": "dailyPerSourceAPICallsUsage"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination output for per source API calls counts.",
            "title": "pagination"
          }
        },
        "required": ["dailyPerSourceAPICallsUsage", "pagination"]
      },
      "MtuSnapshotV1": {
        "description": "A snapshot of MTU metrics within the given usage period.",
        "title": "MtuSnapshotV1",
        "type": "object",
        "properties": {
          "periodStart": {
            "description": "The start of the usage period, in unix time (seconds since epoch).",
            "type": "number",
            "title": "periodStart"
          },
          "periodEnd": {
            "description": "The end of the usage period, in unix time (seconds since epoch).",
            "type": "number",
            "title": "periodEnd"
          },
          "anonymous": {
            "description": "A bigint of the number of anonymous users in this snapshot.",
            "type": "string",
            "title": "anonymous"
          },
          "anonymousIdentified": {
            "description": "A bigint of the number of anonymous identified users in this snapshot.",
            "type": "string",
            "title": "anonymousIdentified"
          },
          "identified": {
            "description": "A bigint of the number of identified users in this snapshot.",
            "type": "string",
            "title": "identified"
          },
          "neverIdentified": {
            "description": "A bigint of the number of never identified users in this snapshot.",
            "type": "string",
            "title": "neverIdentified"
          },
          "timestamp": {
            "description": "The timestamp of this snapshot within the billing cycle, in the ISO-8601 format.",
            "type": "string",
            "title": "timestamp"
          }
        },
        "required": [
          "anonymous",
          "anonymousIdentified",
          "identified",
          "neverIdentified",
          "periodEnd",
          "periodStart",
          "timestamp"
        ]
      },
      "UsersPerSourceSnapshotV1": {
        "description": "A snapshot of MTU metrics for a given source within the given usage period.",
        "title": "UsersPerSourceSnapshotV1",
        "type": "object",
        "properties": {
          "sourceId": { "description": "The source id.", "type": "string", "title": "sourceId" },
          "periodStart": {
            "description": "The start of the usage period, in unix time (seconds since epoch).",
            "type": "number",
            "title": "periodStart"
          },
          "periodEnd": {
            "description": "The end of the usage period, in unix time (seconds since epoch).",
            "type": "number",
            "title": "periodEnd"
          },
          "anonymous": {
            "description": "A bigint of the number of anonymous users in this snapshot.",
            "type": "string",
            "title": "anonymous"
          },
          "anonymousIdentified": {
            "description": "A bigint of the number of anonymous identified users in this snapshot.",
            "type": "string",
            "title": "anonymousIdentified"
          },
          "identified": {
            "description": "A bigint of the number of identified users in this snapshot.",
            "type": "string",
            "title": "identified"
          },
          "neverIdentified": {
            "description": "A bigint of the number of never identified users in this snapshot.",
            "type": "string",
            "title": "neverIdentified"
          },
          "timestamp": {
            "description": "The timestamp of this snapshot within the billing cycle, in the ISO-8601 format.",
            "type": "string",
            "title": "timestamp"
          }
        },
        "required": [
          "anonymous",
          "anonymousIdentified",
          "identified",
          "neverIdentified",
          "periodEnd",
          "periodStart",
          "sourceId",
          "timestamp"
        ]
      },
      "APICallSnapshotV1": {
        "description": "A snapshot of the number of API calls for a given workspace.",
        "title": "APICallSnapshotV1",
        "type": "object",
        "properties": {
          "apiCalls": {
            "description": "A bigint of the number of API calls in this snapshot.",
            "type": "string",
            "title": "apiCalls"
          },
          "timestamp": {
            "description": "Timestamp of this snapshot within the billing cycle in the ISO-8601 format.",
            "type": "string",
            "title": "timestamp"
          }
        },
        "required": ["apiCalls", "timestamp"]
      },
      "SourceAPICallSnapshotV1": {
        "description": "A snapshot of the number of API calls for a given source in a workspace.",
        "title": "SourceAPICallSnapshotV1",
        "type": "object",
        "properties": {
          "sourceId": { "description": "The source id.", "type": "string", "title": "sourceId" },
          "apiCalls": {
            "description": "A bigint of the number of API calls in this snapshot.",
            "type": "string",
            "title": "apiCalls"
          },
          "timestamp": {
            "description": "Timestamp of this snapshot within the billing cycle in the ISO-8601 format.",
            "type": "string",
            "title": "timestamp"
          }
        },
        "required": ["apiCalls", "sourceId", "timestamp"]
      },
      "GetDailyWorkspaceMTUUsageV1Input": {
        "description": "Input to retrieve aggregated daily workspace MTU in a billing period.",
        "title": "GetDailyWorkspaceMTUUsageV1Input",
        "type": "object",
        "properties": {
          "period": {
            "description": "The start of the usage month, in the ISO-8601 format.",
            "type": "string",
            "title": "period"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination input for workspace MTU counts.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "period"]
      },
      "GetDailyWorkspaceMTUUsageV1Output": {
        "description": "Returns a list of daily aggregations of workspace MTU counts.",
        "title": "GetDailyWorkspaceMTUUsageV1Output",
        "type": "object",
        "properties": {
          "dailyWorkspaceMTUUsage": {
            "description": "The list of daily workspace MTU count aggregates.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/MtuSnapshotV1" },
            "title": "dailyWorkspaceMTUUsage"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination output for workspace MTU counts.",
            "title": "pagination"
          }
        },
        "required": ["dailyWorkspaceMTUUsage", "pagination"]
      },
      "GetDailyPerSourceMTUUsageV1Input": {
        "description": "Input to retrieve aggregated daily source level MTU in a billing period.",
        "title": "GetDailyPerSourceMTUUsageV1Input",
        "type": "object",
        "properties": {
          "period": {
            "description": "The start of the usage month, in the ISO-8601 format.",
            "type": "string",
            "title": "period"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination input for per source MTU counts.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "period"]
      },
      "GetDailyPerSourceMTUUsageV1Output": {
        "description": "Returns a list of daily aggregations of source level MTU counts.",
        "title": "GetDailyPerSourceMTUUsageV1Output",
        "type": "object",
        "properties": {
          "dailyPerSourceMTUUsage": {
            "description": "The list of daily per source MTU count aggregates.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/UsersPerSourceSnapshotV1" },
            "title": "dailyPerSourceMTUUsage"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination output for per source MTU counts.",
            "title": "pagination"
          }
        },
        "required": ["dailyPerSourceMTUUsage", "pagination"]
      },
      "GetDailyWorkspaceAPICallsUsageV1Input": {
        "description": "Input to retrieve aggregated daily workspace API calls in a billing period.",
        "title": "GetDailyWorkspaceAPICallsUsageV1Input",
        "type": "object",
        "properties": {
          "period": {
            "description": "The start of the usage month in the ISO-8601 format.",
            "type": "string",
            "title": "period"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination input for workspace API call counts.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "period"]
      },
      "GetDailyWorkspaceAPICallsUsageV1Output": {
        "description": "Returns a list of daily aggregations of workspace MTU counts.",
        "title": "GetDailyWorkspaceAPICallsUsageV1Output",
        "type": "object",
        "properties": {
          "dailyWorkspaceAPICallsUsage": {
            "description": "The list of daily workspace API calls count aggregates.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/APICallSnapshotV1" },
            "title": "dailyWorkspaceAPICallsUsage"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination output for workspace API calls counts.",
            "title": "pagination"
          }
        },
        "required": ["dailyWorkspaceAPICallsUsage", "pagination"]
      },
      "GetDailyPerSourceAPICallsUsageV1Input": {
        "description": "Input to retrieve aggregated daily source level API calls in a billing period.",
        "title": "GetDailyPerSourceAPICallsUsageV1Input",
        "type": "object",
        "properties": {
          "period": {
            "description": "The start of the usage month in the ISO-8601 format.",
            "type": "string",
            "title": "period"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Pagination input for per source API calls counts.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "period"]
      },
      "GetDailyPerSourceAPICallsUsageV1Output": {
        "description": "Returns a list of daily aggregations of source level API calls counts.",
        "title": "GetDailyPerSourceAPICallsUsageV1Output",
        "type": "object",
        "properties": {
          "dailyPerSourceAPICallsUsage": {
            "description": "The list of daily per source API calls count aggregates.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/SourceAPICallSnapshotV1" },
            "title": "dailyPerSourceAPICallsUsage"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination output for per source API calls counts.",
            "title": "pagination"
          }
        },
        "required": ["dailyPerSourceAPICallsUsage", "pagination"]
      },
      "GetWarehousesCatalogAlphaInput": {
        "description": "Filter parameters used for loading the warehouses public catalog.",
        "title": "GetWarehousesCatalogAlphaInput",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Required pagination params used to filter the warehouses catalog.",
            "title": "pagination"
          }
        },
        "required": ["pagination"]
      },
      "GetWarehousesCatalogAlphaOutput": {
        "description": "Returns a list of all warehouse catalog items contained within a given page.",
        "title": "GetWarehousesCatalogAlphaOutput",
        "type": "object",
        "properties": {
          "warehousesCatalog": {
            "description": "All warehouse catalog items contained within the requested page.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/WarehouseMetadataAlpha" },
            "title": "warehousesCatalog"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination results.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "warehousesCatalog"]
      },
      "GetWarehouseMetadataAlphaInput": {
        "description": "Returns a warehouse catalog item by id.",
        "title": "GetWarehouseMetadataAlphaInput",
        "type": "object",
        "properties": {
          "warehouseMetadataId": {
            "description": "The id of the warehouse catalog item to look up.",
            "type": "string",
            "title": "warehouseMetadataId"
          }
        },
        "required": ["warehouseMetadataId"]
      },
      "GetWarehouseMetadataAlphaOutput": {
        "description": "Returns a warehouse catalog item looked up by id.",
        "title": "GetWarehouseMetadataAlphaOutput",
        "type": "object",
        "properties": {
          "warehouseMetadata": {
            "$ref": "#/components/schemas/WarehouseMetadataAlpha",
            "description": "The warehouse catalog item.",
            "title": "warehouseMetadata"
          }
        },
        "required": ["warehouseMetadata"]
      },
      "GetWarehousesCatalogBetaInput": {
        "description": "Filter parameters used for loading the warehouses public catalog.",
        "title": "GetWarehousesCatalogBetaInput",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Required pagination params used to filter the warehouses catalog.",
            "title": "pagination"
          }
        },
        "required": ["pagination"]
      },
      "GetWarehousesCatalogBetaOutput": {
        "description": "Returns a list of all warehouse catalog items contained within a given page.",
        "title": "GetWarehousesCatalogBetaOutput",
        "type": "object",
        "properties": {
          "warehousesCatalog": {
            "description": "All warehouse catalog items contained within the requested page.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/WarehouseMetadataBeta" },
            "title": "warehousesCatalog"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination results.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "warehousesCatalog"]
      },
      "GetWarehouseMetadataBetaInput": {
        "description": "Returns a warehouse catalog item by id.",
        "title": "GetWarehouseMetadataBetaInput",
        "type": "object",
        "properties": {
          "warehouseMetadataId": {
            "description": "The id of the warehouse catalog item to look up.",
            "type": "string",
            "title": "warehouseMetadataId"
          }
        },
        "required": ["warehouseMetadataId"]
      },
      "GetWarehouseMetadataBetaOutput": {
        "description": "Returns a warehouse catalog item looked up by id.",
        "title": "GetWarehouseMetadataBetaOutput",
        "type": "object",
        "properties": {
          "warehouseMetadata": {
            "$ref": "#/components/schemas/WarehouseMetadataBeta",
            "description": "The warehouse catalog item.",
            "title": "warehouseMetadata"
          }
        },
        "required": ["warehouseMetadata"]
      },
      "GetWarehousesCatalogV1Input": {
        "description": "Filter parameters used for loading the warehouses public catalog.",
        "title": "GetWarehousesCatalogV1Input",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Required pagination params used to filter the warehouses catalog.",
            "title": "pagination"
          }
        },
        "required": ["pagination"]
      },
      "GetWarehousesCatalogV1Output": {
        "description": "Returns a list of all warehouse catalog items contained within a given page.",
        "title": "GetWarehousesCatalogV1Output",
        "type": "object",
        "properties": {
          "warehousesCatalog": {
            "description": "All warehouse catalog items contained within the requested page.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/WarehouseMetadataV1" },
            "title": "warehousesCatalog"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Pagination results.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "warehousesCatalog"]
      },
      "GetWarehouseMetadataV1Input": {
        "description": "Returns a warehouse catalog item by id.",
        "title": "GetWarehouseMetadataV1Input",
        "type": "object",
        "properties": {
          "warehouseMetadataId": {
            "description": "The id of the warehouse catalog item to look up.",
            "type": "string",
            "title": "warehouseMetadataId"
          }
        },
        "required": ["warehouseMetadataId"]
      },
      "GetWarehouseMetadataV1Output": {
        "description": "Returns a warehouse catalog item looked up by id.",
        "title": "GetWarehouseMetadataV1Output",
        "type": "object",
        "properties": {
          "warehouseMetadata": {
            "$ref": "#/components/schemas/WarehouseMetadataV1",
            "description": "The warehouse catalog item.",
            "title": "warehouseMetadata"
          }
        },
        "required": ["warehouseMetadata"]
      },
      "WarehouseMetadataAlpha": {
        "description": "The metadata for an instance of Segment’s data warehouse product.",
        "title": "WarehouseMetadataAlpha",
        "type": "object",
        "properties": {
          "id": { "description": "The id of this object.", "type": "string", "title": "id" },
          "name": { "description": "The name of this object.", "type": "string", "title": "name" },
          "slug": {
            "description": "A human-readable, unique identifier for object.",
            "type": "string",
            "title": "slug"
          },
          "description": {
            "description": "A description, in English, of this object.",
            "type": "string",
            "title": "description"
          },
          "logos": {
            "$ref": "#/components/schemas/LogosAlpha",
            "description": "Logo information for this object.",
            "title": "logos"
          },
          "options": {
            "description": "The integration options for this object.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/IntegrationOptionAlpha" },
            "title": "options"
          }
        },
        "required": ["description", "id", "logos", "name", "options", "slug"]
      },
      "WarehouseMetadataBeta": {
        "description": "The metadata for an instance of Segment’s data warehouse product.",
        "title": "WarehouseMetadataBeta",
        "type": "object",
        "properties": {
          "id": { "description": "The id of this object.", "type": "string", "title": "id" },
          "name": { "description": "The name of this object.", "type": "string", "title": "name" },
          "slug": {
            "description": "A human-readable, unique identifier for object.",
            "type": "string",
            "title": "slug"
          },
          "description": {
            "description": "A description, in English, of this object.",
            "type": "string",
            "title": "description"
          },
          "logos": {
            "$ref": "#/components/schemas/LogosBeta",
            "description": "Logo information for this object.",
            "title": "logos"
          },
          "options": {
            "description": "The integration options for this object.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/IntegrationOptionBeta" },
            "title": "options"
          }
        },
        "required": ["description", "id", "logos", "name", "options", "slug"]
      },
      "WarehouseMetadataV1": {
        "description": "The metadata for an instance of Segment’s data warehouse product.",
        "title": "WarehouseMetadataV1",
        "type": "object",
        "properties": {
          "id": { "description": "The id of this object.", "type": "string", "title": "id" },
          "name": { "description": "The name of this object.", "type": "string", "title": "name" },
          "slug": {
            "description": "A human-readable, unique identifier for object.",
            "type": "string",
            "title": "slug"
          },
          "description": {
            "description": "A description, in English, of this object.",
            "type": "string",
            "title": "description"
          },
          "logos": {
            "$ref": "#/components/schemas/LogosBeta",
            "description": "Logo information for this object.",
            "title": "logos"
          },
          "options": {
            "description": "The integration options for this object.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/IntegrationOptionBeta" },
            "title": "options"
          }
        },
        "required": ["description", "id", "logos", "name", "options", "slug"]
      },
      "WarehouseSettingsAlpha": {
        "description": "A key-value object that contains instance-specific warehouse settings.",
        "title": "WarehouseSettingsAlpha",
        "type": "object",
        "additionalProperties": {}
      },
      "WarehouseAlpha": {
        "description": "Defines a data warehouse used as a destination for Segment data.",
        "title": "WarehouseAlpha",
        "type": "object",
        "properties": {
          "id": { "description": "The id of the warehouse.", "type": "string", "title": "id" },
          "metadata": {
            "$ref": "#/components/schemas/WarehouseMetadataAlpha",
            "description": "The metadata for the warehouse.",
            "title": "metadata"
          },
          "workspaceId": {
            "description": "The id of the workspace that owns this warehouse.",
            "type": "string",
            "title": "workspaceId"
          },
          "enabled": {
            "description": "When set to true, this warehouse receives data.",
            "type": "boolean",
            "title": "enabled"
          },
          "settings": {
            "$ref": "#/components/schemas/WarehouseSettingsAlpha",
            "description": "The settings associated with this warehouse.\n\nCommon settings are connection-related configuration used to connect to it, for example host, username, and port.",
            "title": "settings"
          }
        },
        "required": ["enabled", "id", "metadata", "settings", "workspaceId"]
      },
      "SyncNoticeAlpha": {
        "description": "Represents a notice within a sync for a source and warehouse pair.",
        "title": "SyncNoticeAlpha",
        "type": "object",
        "properties": {
          "level": { "description": "The severity of the notice.", "type": "string", "title": "level" },
          "message": {
            "description": "The human readable message that describes the notice.",
            "type": "string",
            "title": "message"
          },
          "createdAt": {
            "description": "The timestamp of this sync notice's creation.",
            "type": "string",
            "title": "createdAt"
          }
        },
        "required": ["createdAt", "level", "message"]
      },
      "SyncAlpha": {
        "description": "Represents a sync between a source and warehouse.\n\nA sync occurs when data from a source is loaded into a warehouse.",
        "title": "SyncAlpha",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the source loaded in the sync.",
            "type": "string",
            "title": "sourceId"
          },
          "start": { "description": "The start time of the sync.", "type": "string", "title": "start" },
          "end": {
            "description": "The time the sync completed. Returns null if unfinished.",
            "type": "string",
            "title": "end",
            "nullable": true
          },
          "status": { "description": "The status of the sync.", "type": "string", "title": "status" },
          "duration": {
            "description": "The duration of the sync in seconds. Returns the partial duration if the sync has not finished yet.",
            "type": "number",
            "title": "duration"
          },
          "humanDuration": {
            "description": "The human readable counterpart of `duration`.",
            "type": "string",
            "title": "humanDuration"
          },
          "count": {
            "description": "The number of rows synced into the warehouse.",
            "type": "number",
            "title": "count"
          },
          "notices": {
            "description": "Notices that contain the events that occurred during the sync.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/SyncNoticeAlpha" },
            "title": "notices"
          }
        },
        "required": ["count", "duration", "end", "humanDuration", "notices", "sourceId", "start", "status"]
      },
      "WarehouseSyncOverrideAlpha": {
        "description": "Represents the override for a source/collection/property? path to apply to a warehouse.",
        "title": "WarehouseSyncOverrideAlpha",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the source this schema item applies to.",
            "type": "string",
            "title": "sourceId"
          },
          "collection": {
            "description": "The collection the schema item override applies to.",
            "type": "string",
            "title": "collection"
          },
          "enabled": { "description": "Enable to apply the override.", "type": "boolean", "title": "enabled" },
          "property": {
            "description": "A property within the collection to which the override applies.",
            "type": "string",
            "title": "property"
          }
        },
        "required": ["enabled", "sourceId"]
      },
      "WarehouseSelectiveSyncItemAlpha": {
        "description": "Represents an entry in the warehouse selective sync schema for a warehouse and source pair.",
        "title": "WarehouseSelectiveSyncItemAlpha",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The source id attached to this warehouse.",
            "type": "string",
            "title": "sourceId"
          },
          "collection": { "description": "The collection within the source.", "type": "string", "title": "collection" },
          "warehouseId": {
            "description": "The id of the warehouse this sync belongs to.",
            "type": "string",
            "title": "warehouseId"
          },
          "properties": {
            "description": "A map that contains the properties within the collection to which the warehouse should sync.",
            "type": "object",
            "additionalProperties": true,
            "title": "properties"
          }
        },
        "required": ["collection", "properties", "sourceId", "warehouseId"]
      },
      "WarehouseAdvancedSyncAlpha": {
        "description": "Determines the time of day at which a warehouse should sync.",
        "title": "WarehouseAdvancedSyncAlpha",
        "type": "object",
        "properties": {
          "hourOfDay": {
            "description": "The hour of day for which to enable/disable a sync, between 0 and 23.",
            "type": "number",
            "title": "hourOfDay"
          },
          "enabled": {
            "description": "Enable to the sync at the specified hour.",
            "type": "boolean",
            "title": "enabled"
          }
        },
        "required": ["enabled", "hourOfDay"]
      },
      "AdvancedWarehouseSyncScheduleAlphaInput": {
        "description": "Defines the advanced sync schedule for a warehouse.",
        "title": "AdvancedWarehouseSyncScheduleAlphaInput",
        "type": "object",
        "properties": {
          "times": {
            "description": "A list that contains the times when syncs should occur.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/WarehouseAdvancedSyncAlpha" },
            "title": "times"
          },
          "timezone": {
            "description": "A TZ-database timezone for this sync schedule.",
            "type": "string",
            "title": "timezone"
          }
        },
        "required": ["times", "timezone"]
      },
      "AdvancedWarehouseSyncScheduleAlphaOutput": {
        "description": "Defines the advanced sync schedule for a warehouse.",
        "title": "AdvancedWarehouseSyncScheduleAlphaOutput",
        "type": "object",
        "properties": {
          "times": {
            "description": "A list that contains the times when syncs should occur.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/WarehouseAdvancedSyncAlpha" },
            "title": "times"
          },
          "timezone": {
            "description": "A TZ-database timezone for this sync schedule.",
            "type": "string",
            "title": "timezone"
          }
        }
      },
      "ListWarehousesAlphaInput": {
        "description": "Gets a list of warehouses belonging to a workspace.",
        "title": "ListWarehousesAlphaInput",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Defines the pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["pagination"]
      },
      "ListWarehousesAlphaOutput": {
        "description": "Returns a list of warehouses that belong to a workspace.",
        "title": "ListWarehousesAlphaOutput",
        "type": "object",
        "properties": {
          "warehouses": {
            "description": "A list of warehouses that belong to the workspace.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/WarehouseAlpha" },
            "title": "warehouses"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Information about the pagination of this response.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "warehouses"]
      },
      "GetWarehouseAlphaInput": {
        "description": "Looks up a warehouse by id.",
        "title": "GetWarehouseAlphaInput",
        "type": "object",
        "properties": {
          "warehouseId": {
            "description": "The id of the warehouse to look up.",
            "type": "string",
            "title": "warehouseId"
          }
        },
        "required": ["warehouseId"]
      },
      "GetWarehouseAlphaOutput": {
        "description": "Returns a warehouse.",
        "title": "GetWarehouseAlphaOutput",
        "type": "object",
        "properties": {
          "warehouse": {
            "$ref": "#/components/schemas/WarehouseAlpha",
            "description": "The returned warehouse object.",
            "title": "warehouse"
          }
        },
        "required": ["warehouse"]
      },
      "ListConnectedSourcesFromWarehouseAlphaInput": {
        "description": "Looks up the list of sources connected to a warehouse.",
        "title": "ListConnectedSourcesFromWarehouseAlphaInput",
        "type": "object",
        "properties": {
          "warehouseId": {
            "description": "The id of the warehouse to look up.",
            "type": "string",
            "title": "warehouseId"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Defines the pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "warehouseId"]
      },
      "ListConnectedSourcesFromWarehouseAlphaOutput": {
        "description": "Returns a list of sources connected to a warehouse.",
        "title": "ListConnectedSourcesFromWarehouseAlphaOutput",
        "type": "object",
        "properties": {
          "sources": {
            "description": "A list that contains the sources connected to the requested warehouse.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/SourceAlpha" },
            "title": "sources"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Information about the pagination of this response.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "sources"]
      },
      "ListSyncsFromWarehouseAlphaInput": {
        "description": "Requests the overview of syncs for every source connected to this warehouse.",
        "title": "ListSyncsFromWarehouseAlphaInput",
        "type": "object",
        "properties": {
          "warehouseId": {
            "description": "The id of the warehouse for which to return the sync overview.",
            "type": "string",
            "title": "warehouseId"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Defines the pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "warehouseId"]
      },
      "ListSyncsFromWarehouseAlphaOutput": {
        "description": "Returns an overview page that contains the last syncs for a warehouse.",
        "title": "ListSyncsFromWarehouseAlphaOutput",
        "type": "object",
        "properties": {
          "reports": {
            "description": "A list that contains the latest syncs for the specified warehouse.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/SyncAlpha" },
            "title": "reports"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Information about the pagination of this response.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "reports"]
      },
      "ListSyncsFromWarehouseAndSourceAlphaInput": {
        "description": "Loads the most recent sync information for a warehouse-source pair.",
        "title": "ListSyncsFromWarehouseAndSourceAlphaInput",
        "type": "object",
        "properties": {
          "warehouseId": { "description": "The id of the warehouse.", "type": "string", "title": "warehouseId" },
          "sourceId": {
            "description": "The id of a source connected to the warehouse.",
            "type": "string",
            "title": "sourceId"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Defines the pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "sourceId", "warehouseId"]
      },
      "ListSyncsFromWarehouseAndSourceAlphaOutput": {
        "description": "Returns a list that contains the most recent syncs for a warehouse-source pair, filtered and constrained by a given\nset of pagination parameters.",
        "title": "ListSyncsFromWarehouseAndSourceAlphaOutput",
        "type": "object",
        "properties": {
          "reports": {
            "description": "A list that contains the latest syncs for the specified warehouse-source pair.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/SyncAlpha" },
            "title": "reports"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Information about the pagination of this response.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "reports"]
      },
      "AddConnectionFromSourceToWarehouseAlphaInput": {
        "description": "Connects a source to a warehouse.\n\nPosting to this idempotent endpoint creates a connection between the source and warehouse, and begins syncing data\nfrom the source's collections into the chosen warehouse destination.",
        "title": "AddConnectionFromSourceToWarehouseAlphaInput",
        "type": "object",
        "properties": {
          "warehouseId": { "description": "The id of the warehouse.", "type": "string", "title": "warehouseId" },
          "sourceId": { "description": "The id of the source.", "type": "string", "title": "sourceId" }
        },
        "required": ["sourceId", "warehouseId"]
      },
      "AddConnectionFromSourceToWarehouseAlphaOutput": {
        "description": "Response indicating whether the connection was successful.",
        "title": "AddConnectionFromSourceToWarehouseAlphaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the connection between the source and warehouse.",
            "enum": ["CONNECTED", "NOT_CONNECTED"],
            "type": "string",
            "title": "status"
          }
        },
        "required": ["status"]
      },
      "RemoveSourceConnectionFromWarehouseAlphaInput": {
        "description": "Disconnects a source from a warehouse.\n\nPosting to this idempotent endpoint removes a connection between the source and warehouse, and blocks all syncing\nfrom the source's collections into the chosen warehouse destination.",
        "title": "RemoveSourceConnectionFromWarehouseAlphaInput",
        "type": "object",
        "properties": {
          "warehouseId": { "description": "The id of the warehouse.", "type": "string", "title": "warehouseId" },
          "sourceId": { "description": "The id of the source.", "type": "string", "title": "sourceId" }
        },
        "required": ["sourceId", "warehouseId"]
      },
      "RemoveSourceConnectionFromWarehouseAlphaOutput": {
        "description": "Response indicating whether the disconnection was successful.",
        "title": "RemoveSourceConnectionFromWarehouseAlphaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the request to disconnect the source and warehouse.",
            "type": "string",
            "enum": ["SUCCESS"],
            "title": "status"
          }
        },
        "required": ["status"]
      },
      "ListSelectiveSyncsFromWarehouseAndSourceAlphaInput": {
        "description": "Get the selective sync configuration associated with a warehouse.",
        "title": "ListSelectiveSyncsFromWarehouseAndSourceAlphaInput",
        "type": "object",
        "properties": {
          "warehouseId": { "description": "The id of the warehouse.", "type": "string", "title": "warehouseId" },
          "sourceId": { "description": "The id of the source.", "type": "string", "title": "sourceId" },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Defines the pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "sourceId", "warehouseId"]
      },
      "ListSelectiveSyncsFromWarehouseAndSourceAlphaOutput": {
        "description": "Results containing the selective sync configuration for a warehouse.",
        "title": "ListSelectiveSyncsFromWarehouseAndSourceAlphaOutput",
        "type": "object",
        "properties": {
          "items": {
            "description": "Represents a list of source, collection, and properties synced to the warehouse.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/WarehouseSelectiveSyncItemAlpha" },
            "title": "items"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Information about the pagination of this response.",
            "title": "pagination"
          }
        },
        "required": ["items", "pagination"]
      },
      "UpdateSelectiveSyncForWarehouseAlphaInput": {
        "description": "Updates the schema for a warehouse/sources pair.",
        "title": "UpdateSelectiveSyncForWarehouseAlphaInput",
        "type": "object",
        "properties": {
          "warehouseId": { "description": "The id of the warehouse.", "type": "string", "title": "warehouseId" },
          "syncOverrides": {
            "description": "A list of sync schema overrides to apply to this warehouse.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/WarehouseSyncOverrideAlpha" },
            "title": "syncOverrides"
          }
        },
        "required": ["syncOverrides", "warehouseId"]
      },
      "UpdateSelectiveSyncForWarehouseAlphaOutput": {
        "description": "Results from updating the schema for a warehouse/source pair.",
        "title": "UpdateSelectiveSyncForWarehouseAlphaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "Status of the update operation.",
            "enum": ["UNCHANGED", "UPDATED"],
            "type": "string",
            "title": "status"
          },
          "warnings": {
            "description": "Warnings returned by the operation.",
            "type": "array",
            "items": { "type": "string" },
            "title": "warnings"
          }
        },
        "required": ["status", "warnings"]
      },
      "GetAdvancedSyncScheduleFromWarehouseAlphaInput": {
        "description": "Gets the advanced sync schedule for a warehouse.",
        "title": "GetAdvancedSyncScheduleFromWarehouseAlphaInput",
        "type": "object",
        "properties": {
          "warehouseId": { "description": "The id of the warehouse.", "type": "string", "title": "warehouseId" }
        },
        "required": ["warehouseId"]
      },
      "GetAdvancedSyncScheduleFromWarehouseAlphaOutput": {
        "description": "Returns the advanced sync schedule for a warehouse.",
        "title": "GetAdvancedSyncScheduleFromWarehouseAlphaOutput",
        "type": "object",
        "properties": {
          "enabled": {
            "description": "Indicates if an advanced sync schedule is enabled for this warehouse.",
            "type": "boolean",
            "title": "enabled"
          },
          "schedule": {
            "description": "The schedule that contains the schedule overrides for the specified warehouse, if enabled.",
            "$ref": "#/components/schemas/AdvancedWarehouseSyncScheduleAlphaOutput",
            "title": "schedule"
          }
        },
        "required": ["enabled"]
      },
      "ReplaceAdvancedSyncScheduleForWarehouseAlphaInput": {
        "description": "Replaces the advanced sync schedule for a warehouse.",
        "title": "ReplaceAdvancedSyncScheduleForWarehouseAlphaInput",
        "type": "object",
        "properties": {
          "warehouseId": {
            "description": "The id of the warehouse to update.",
            "type": "string",
            "title": "warehouseId"
          },
          "enabled": {
            "description": "Enable to turn on an advanced sync schedule for the warehouse.",
            "type": "boolean",
            "title": "enabled"
          },
          "schedule": {
            "description": "The full sync schedule for the warehouse.",
            "$ref": "#/components/schemas/AdvancedWarehouseSyncScheduleAlphaInput",
            "title": "schedule"
          }
        },
        "required": ["enabled", "warehouseId"]
      },
      "ReplaceAdvancedSyncScheduleForWarehouseAlphaOutput": {
        "description": "Returns the advanced sync schedule for a warehouse.",
        "title": "ReplaceAdvancedSyncScheduleForWarehouseAlphaOutput",
        "type": "object",
        "properties": {
          "enabled": {
            "description": "Indicates if an advanced sync schedule is enabled for the warehouse.",
            "type": "boolean",
            "title": "enabled"
          },
          "schedule": {
            "description": "The schedule that contains the overrides for the warehouse, if enabled.",
            "$ref": "#/components/schemas/AdvancedWarehouseSyncScheduleAlphaOutput",
            "title": "schedule"
          }
        },
        "required": ["enabled"]
      },
      "CreateWarehouseAlphaInput": {
        "description": "Create a new warehouse based on a set of parameters.",
        "title": "CreateWarehouseAlphaInput",
        "type": "object",
        "properties": {
          "metadataId": { "description": "The warehouse metadata to use.", "type": "string", "title": "metadataId" },
          "name": {
            "description": "An optional human-readable name for this warehouse.",
            "type": "string",
            "title": "name"
          },
          "enabled": {
            "description": "Enable to allow this warehouse to receive data. Defaults to true.",
            "type": "boolean",
            "title": "enabled"
          },
          "settings": {
            "$ref": "#/components/schemas/WarehouseSettingsAlpha",
            "description": "A key-value object that contains instance-specific settings for a warehouse.\n\nDifferent kinds of warehouses require different settings. The required and optional settings\nfor a warehouse are described in the `options` object of the associated warehouse metadata.\n\nYou can find the full list of warehouse metadata and related settings information in the\n`/catalog/warehouses` endpoint.",
            "title": "settings"
          }
        },
        "required": ["metadataId", "settings"]
      },
      "CreateWarehouseAlphaOutput": {
        "description": "Returns the newly created warehouse.",
        "title": "CreateWarehouseAlphaOutput",
        "type": "object",
        "properties": {
          "warehouse": {
            "$ref": "#/components/schemas/WarehouseAlpha",
            "description": "The newly created warehouse.",
            "title": "warehouse"
          }
        },
        "required": ["warehouse"]
      },
      "UpdateWarehouseAlphaInput": {
        "description": "Updates an existing warehouse based on a set of parameters.",
        "title": "UpdateWarehouseAlphaInput",
        "type": "object",
        "properties": {
          "warehouseId": {
            "description": "The id of the warehouse to update.",
            "type": "string",
            "title": "warehouseId"
          },
          "name": {
            "description": "An optional human-readable name to associate with this warehouse.",
            "type": "string",
            "title": "name"
          },
          "enabled": {
            "description": "Enable to allow this warehouse to receive data.",
            "type": "boolean",
            "title": "enabled"
          },
          "settings": {
            "$ref": "#/components/schemas/WarehouseSettingsAlpha",
            "description": "A key-value object that contains instance-specific settings for a warehouse.\n\nDifferent kinds of warehouses require different settings. The required and optional settings\nfor a warehouse are described in the `options` object of the associated warehouse metadata.\n\nYou can find the full list of warehouse metadata and related settings information in the\n`/catalog/warehouses` endpoint.",
            "title": "settings"
          }
        },
        "required": ["settings", "warehouseId"]
      },
      "UpdateWarehouseAlphaOutput": {
        "description": "Returns the updated warehouse.",
        "title": "UpdateWarehouseAlphaOutput",
        "type": "object",
        "properties": {
          "warehouse": {
            "$ref": "#/components/schemas/WarehouseAlpha",
            "description": "The updated warehouse.",
            "title": "warehouse"
          }
        },
        "required": ["warehouse"]
      },
      "DeleteWarehouseAlphaInput": {
        "description": "Deletes an existing warehouse by id.",
        "title": "DeleteWarehouseAlphaInput",
        "type": "object",
        "properties": {
          "warehouseId": {
            "description": "The id of the warehouse to delete.",
            "type": "string",
            "title": "warehouseId"
          }
        },
        "required": ["warehouseId"]
      },
      "DeleteWarehouseAlphaOutput": {
        "description": "Returns the status of a warehouse deletion.",
        "title": "DeleteWarehouseAlphaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the warehouse deletion operation.",
            "type": "string",
            "enum": ["SUCCESS"],
            "title": "status"
          }
        },
        "required": ["status"]
      },
      "GetConnectionStateFromWarehouseAlphaInput": {
        "description": "Verifies the connection state of a warehouse.\n\nUse this to check if a warehouse is reachable, given its stored connection settings.",
        "title": "GetConnectionStateFromWarehouseAlphaInput",
        "type": "object",
        "properties": {
          "warehouseId": {
            "description": "The id of the warehouse to verify the connection for.",
            "type": "string",
            "title": "warehouseId"
          }
        },
        "required": ["warehouseId"]
      },
      "GetConnectionStateFromWarehouseAlphaOutput": {
        "description": "Returns the status of a warehouse connection settings after an attempt to connect to it.",
        "title": "GetConnectionStateFromWarehouseAlphaOutput",
        "type": "object",
        "properties": {
          "connectionState": {
            "description": "Represents the status for the current connection settings.",
            "enum": ["CONNECTED", "FAILED"],
            "type": "string",
            "title": "connectionState"
          }
        },
        "required": ["connectionState"]
      },
      "CreateValidationInWarehouseAlphaOutput": {
        "description": "Returns the status of a warehouse connection settings after an attempt to connect to it.",
        "title": "CreateValidationInWarehouseAlphaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "Represents the status for the current connection settings.",
            "enum": ["CONNECTED", "FAILED"],
            "type": "string",
            "title": "status"
          }
        },
        "required": ["status"]
      },
      "CreateValidationInWarehouseAlphaInput": {
        "description": "Verifies a set of warehouse credentials by attempting to connect to it.",
        "title": "CreateValidationInWarehouseAlphaInput",
        "type": "object",
        "properties": {
          "metadataId": {
            "description": "The id of the warehouse metadata type.",
            "type": "string",
            "title": "metadataId"
          },
          "settings": {
            "$ref": "#/components/schemas/WarehouseSettingsAlpha",
            "description": "The settings to check.",
            "title": "settings"
          }
        },
        "required": ["metadataId", "settings"]
      },
      "WarehouseSettingsBeta": {
        "description": "A key-value object that contains instance-specific warehouse settings.",
        "title": "WarehouseSettingsBeta",
        "type": "object",
        "additionalProperties": {}
      },
      "WarehouseBeta": {
        "description": "Defines a data warehouse used as a destination for Segment data.",
        "title": "WarehouseBeta",
        "type": "object",
        "properties": {
          "id": { "description": "The id of the warehouse.", "type": "string", "title": "id" },
          "metadata": {
            "$ref": "#/components/schemas/WarehouseMetadataBeta",
            "description": "The metadata for the warehouse.",
            "title": "metadata"
          },
          "workspaceId": {
            "description": "The id of the workspace that owns this warehouse.",
            "type": "string",
            "title": "workspaceId"
          },
          "enabled": {
            "description": "When set to true, this warehouse receives data.",
            "type": "boolean",
            "title": "enabled"
          },
          "settings": {
            "$ref": "#/components/schemas/WarehouseSettingsBeta",
            "description": "The settings associated with this warehouse.\n\nCommon settings are connection-related configuration used to connect to it, for example host, username, and port.",
            "title": "settings"
          }
        },
        "required": ["enabled", "id", "metadata", "settings", "workspaceId"]
      },
      "SyncNoticeBeta": {
        "description": "Represents a notice within a sync for a source and warehouse pair.",
        "title": "SyncNoticeBeta",
        "type": "object",
        "properties": {
          "level": { "description": "The severity of the notice.", "type": "string", "title": "level" },
          "message": {
            "description": "The human readable message that describes the notice.",
            "type": "string",
            "title": "message"
          },
          "createdAt": {
            "description": "The timestamp of this sync notice's creation.",
            "type": "string",
            "title": "createdAt"
          }
        },
        "required": ["createdAt", "level", "message"]
      },
      "SyncBeta": {
        "description": "Represents a sync between a source and warehouse.\n\nA sync occurs when data from a source is loaded into a warehouse.",
        "title": "SyncBeta",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the source loaded in the sync.",
            "type": "string",
            "title": "sourceId"
          },
          "start": { "description": "The start time of the sync.", "type": "string", "title": "start" },
          "end": {
            "description": "The time the sync completed. Returns null if unfinished.",
            "type": "string",
            "title": "end",
            "nullable": true
          },
          "status": { "description": "The status of the sync.", "type": "string", "title": "status" },
          "duration": {
            "description": "The duration of the sync in seconds. Returns the partial duration if the sync has not finished yet.",
            "type": "number",
            "title": "duration"
          },
          "humanDuration": {
            "description": "The human readable counterpart of `duration`.",
            "type": "string",
            "title": "humanDuration"
          },
          "count": {
            "description": "The number of rows synced into the warehouse.",
            "type": "number",
            "title": "count"
          },
          "notices": {
            "description": "Notices that contain the events that occurred during the sync.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/SyncNoticeBeta" },
            "title": "notices"
          }
        },
        "required": ["count", "duration", "end", "humanDuration", "notices", "sourceId", "start", "status"]
      },
      "WarehouseSyncOverrideBeta": {
        "description": "Represents the override for a source/collection/property? path to apply to a warehouse.",
        "title": "WarehouseSyncOverrideBeta",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the source this schema item applies to.",
            "type": "string",
            "title": "sourceId"
          },
          "collection": {
            "description": "The collection the schema item override applies to.",
            "type": "string",
            "title": "collection"
          },
          "enabled": { "description": "Enable to apply the override.", "type": "boolean", "title": "enabled" },
          "property": {
            "description": "A property within the collection to which the override applies.",
            "type": "string",
            "title": "property"
          }
        },
        "required": ["enabled", "sourceId"]
      },
      "WarehouseSelectiveSyncItemBeta": {
        "description": "Represents an entry in the warehouse selective sync schema for a warehouse and source pair.",
        "title": "WarehouseSelectiveSyncItemBeta",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The source id attached to this warehouse.",
            "type": "string",
            "title": "sourceId"
          },
          "collection": { "description": "The collection within the source.", "type": "string", "title": "collection" },
          "warehouseId": {
            "description": "The id of the warehouse this sync belongs to.",
            "type": "string",
            "title": "warehouseId"
          },
          "properties": {
            "description": "A map that contains the properties within the collection to which the warehouse should sync.",
            "type": "object",
            "additionalProperties": true,
            "title": "properties"
          }
        },
        "required": ["collection", "properties", "sourceId", "warehouseId"]
      },
      "WarehouseAdvancedSyncBeta": {
        "description": "Determines the time of day at which a warehouse should sync.",
        "title": "WarehouseAdvancedSyncBeta",
        "type": "object",
        "properties": {
          "hourOfDay": {
            "description": "The hour of day for which to enable/disable a sync, between 0 and 23.",
            "type": "number",
            "title": "hourOfDay"
          },
          "enabled": {
            "description": "Enable to the sync at the specified hour.",
            "type": "boolean",
            "title": "enabled"
          }
        },
        "required": ["enabled", "hourOfDay"]
      },
      "AdvancedWarehouseSyncScheduleBetaInput": {
        "description": "Defines the advanced sync schedule for a warehouse.",
        "title": "AdvancedWarehouseSyncScheduleBetaInput",
        "type": "object",
        "properties": {
          "times": {
            "description": "A list that contains the times when syncs should occur.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/WarehouseAdvancedSyncBeta" },
            "title": "times"
          },
          "timezone": {
            "description": "A TZ-database timezone for this sync schedule.",
            "type": "string",
            "title": "timezone"
          }
        },
        "required": ["times", "timezone"]
      },
      "AdvancedWarehouseSyncScheduleBetaOutput": {
        "description": "Defines the advanced sync schedule for a warehouse.",
        "title": "AdvancedWarehouseSyncScheduleBetaOutput",
        "type": "object",
        "properties": {
          "times": {
            "description": "A list that contains the times when syncs should occur.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/WarehouseAdvancedSyncBeta" },
            "title": "times"
          },
          "timezone": {
            "description": "A TZ-database timezone for this sync schedule.",
            "type": "string",
            "title": "timezone"
          }
        }
      },
      "ListWarehousesBetaInput": {
        "description": "Gets a list of warehouses belonging to a workspace.",
        "title": "ListWarehousesBetaInput",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Defines the pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["pagination"]
      },
      "ListWarehousesBetaOutput": {
        "description": "Returns a list of warehouses that belong to a workspace.",
        "title": "ListWarehousesBetaOutput",
        "type": "object",
        "properties": {
          "warehouses": {
            "description": "A list of warehouses that belong to the workspace.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/WarehouseBeta" },
            "title": "warehouses"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Information about the pagination of this response.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "warehouses"]
      },
      "GetWarehouseBetaInput": {
        "description": "Looks up a warehouse by id.",
        "title": "GetWarehouseBetaInput",
        "type": "object",
        "properties": {
          "warehouseId": {
            "description": "The id of the warehouse to look up.",
            "type": "string",
            "title": "warehouseId"
          }
        },
        "required": ["warehouseId"]
      },
      "GetWarehouseBetaOutput": {
        "description": "Returns a warehouse.",
        "title": "GetWarehouseBetaOutput",
        "type": "object",
        "properties": {
          "warehouse": {
            "$ref": "#/components/schemas/WarehouseBeta",
            "description": "The returned warehouse object.",
            "title": "warehouse"
          }
        },
        "required": ["warehouse"]
      },
      "ListConnectedSourcesFromWarehouseBetaInput": {
        "description": "Looks up the list of sources connected to a warehouse.",
        "title": "ListConnectedSourcesFromWarehouseBetaInput",
        "type": "object",
        "properties": {
          "warehouseId": {
            "description": "The id of the warehouse to look up.",
            "type": "string",
            "title": "warehouseId"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Defines the pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "warehouseId"]
      },
      "ListConnectedSourcesFromWarehouseBetaOutput": {
        "description": "Returns a list of sources connected to a warehouse.",
        "title": "ListConnectedSourcesFromWarehouseBetaOutput",
        "type": "object",
        "properties": {
          "sources": {
            "description": "A list that contains the sources connected to the requested warehouse.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/SourceBeta" },
            "title": "sources"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Information about the pagination of this response.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "sources"]
      },
      "ListSyncsFromWarehouseBetaInput": {
        "description": "Requests the overview of syncs for every source connected to this warehouse.",
        "title": "ListSyncsFromWarehouseBetaInput",
        "type": "object",
        "properties": {
          "warehouseId": {
            "description": "The id of the warehouse for which to return the sync overview.",
            "type": "string",
            "title": "warehouseId"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Defines the pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "warehouseId"]
      },
      "ListSyncsFromWarehouseBetaOutput": {
        "description": "Returns an overview page that contains the last syncs for a warehouse.",
        "title": "ListSyncsFromWarehouseBetaOutput",
        "type": "object",
        "properties": {
          "reports": {
            "description": "A list that contains the latest syncs for the specified warehouse.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/SyncBeta" },
            "title": "reports"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Information about the pagination of this response.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "reports"]
      },
      "ListSyncsFromWarehouseAndSourceBetaInput": {
        "description": "Loads the most recent sync information for a warehouse-source pair.",
        "title": "ListSyncsFromWarehouseAndSourceBetaInput",
        "type": "object",
        "properties": {
          "warehouseId": { "description": "The id of the warehouse.", "type": "string", "title": "warehouseId" },
          "sourceId": {
            "description": "The id of a source connected to the warehouse.",
            "type": "string",
            "title": "sourceId"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Defines the pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "sourceId", "warehouseId"]
      },
      "ListSyncsFromWarehouseAndSourceBetaOutput": {
        "description": "Returns a list that contains the most recent syncs for a warehouse-source pair, filtered and constrained by a given\nset of pagination parameters.",
        "title": "ListSyncsFromWarehouseAndSourceBetaOutput",
        "type": "object",
        "properties": {
          "reports": {
            "description": "A list that contains the latest syncs for the specified warehouse-source pair.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/SyncBeta" },
            "title": "reports"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Information about the pagination of this response.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "reports"]
      },
      "AddConnectionFromSourceToWarehouseBetaInput": {
        "description": "Connects a source to a warehouse.\n\nPosting to this idempotent endpoint creates a connection between the source and warehouse, and begins syncing data\nfrom the source's collections into the chosen warehouse destination.",
        "title": "AddConnectionFromSourceToWarehouseBetaInput",
        "type": "object",
        "properties": {
          "warehouseId": { "description": "The id of the warehouse.", "type": "string", "title": "warehouseId" },
          "sourceId": { "description": "The id of the source.", "type": "string", "title": "sourceId" }
        },
        "required": ["sourceId", "warehouseId"]
      },
      "AddConnectionFromSourceToWarehouseBetaOutput": {
        "description": "Response indicating whether the connection was successful.",
        "title": "AddConnectionFromSourceToWarehouseBetaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the connection between the source and warehouse.",
            "enum": ["CONNECTED", "NOT_CONNECTED"],
            "type": "string",
            "title": "status"
          }
        },
        "required": ["status"]
      },
      "RemoveSourceConnectionFromWarehouseBetaInput": {
        "description": "Disconnects a source from a warehouse.\n\nPosting to this idempotent endpoint removes a connection between the source and warehouse, and blocks all syncing\nfrom the source's collections into the chosen warehouse destination.",
        "title": "RemoveSourceConnectionFromWarehouseBetaInput",
        "type": "object",
        "properties": {
          "warehouseId": { "description": "The id of the warehouse.", "type": "string", "title": "warehouseId" },
          "sourceId": { "description": "The id of the source.", "type": "string", "title": "sourceId" }
        },
        "required": ["sourceId", "warehouseId"]
      },
      "RemoveSourceConnectionFromWarehouseBetaOutput": {
        "description": "Response indicating whether the disconnection was successful.",
        "title": "RemoveSourceConnectionFromWarehouseBetaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the request to disconnect the source and warehouse.",
            "type": "string",
            "enum": ["SUCCESS"],
            "title": "status"
          }
        },
        "required": ["status"]
      },
      "ListSelectiveSyncsFromWarehouseAndSourceBetaInput": {
        "description": "Get the selective sync configuration associated with a warehouse.",
        "title": "ListSelectiveSyncsFromWarehouseAndSourceBetaInput",
        "type": "object",
        "properties": {
          "warehouseId": { "description": "The id of the warehouse.", "type": "string", "title": "warehouseId" },
          "sourceId": { "description": "The id of the source.", "type": "string", "title": "sourceId" },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Defines the pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "sourceId", "warehouseId"]
      },
      "ListSelectiveSyncsFromWarehouseAndSourceBetaOutput": {
        "description": "Results containing the selective sync configuration for a warehouse.",
        "title": "ListSelectiveSyncsFromWarehouseAndSourceBetaOutput",
        "type": "object",
        "properties": {
          "items": {
            "description": "Represents a list of source, collection, and properties synced to the warehouse.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/WarehouseSelectiveSyncItemBeta" },
            "title": "items"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Information about the pagination of this response.",
            "title": "pagination"
          }
        },
        "required": ["items", "pagination"]
      },
      "UpdateSelectiveSyncForWarehouseBetaInput": {
        "description": "Updates the schema for a warehouse/sources pair.",
        "title": "UpdateSelectiveSyncForWarehouseBetaInput",
        "type": "object",
        "properties": {
          "warehouseId": { "description": "The id of the warehouse.", "type": "string", "title": "warehouseId" },
          "syncOverrides": {
            "description": "A list of sync schema overrides to apply to this warehouse.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/WarehouseSyncOverrideBeta" },
            "title": "syncOverrides"
          }
        },
        "required": ["syncOverrides", "warehouseId"]
      },
      "UpdateSelectiveSyncForWarehouseBetaOutput": {
        "description": "Results from updating the schema for a warehouse/source pair.",
        "title": "UpdateSelectiveSyncForWarehouseBetaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "Status of the update operation.",
            "enum": ["UNCHANGED", "UPDATED"],
            "type": "string",
            "title": "status"
          },
          "warnings": {
            "description": "Warnings returned by the operation.",
            "type": "array",
            "items": { "type": "string" },
            "title": "warnings"
          }
        },
        "required": ["status", "warnings"]
      },
      "GetAdvancedSyncScheduleFromWarehouseBetaInput": {
        "description": "Gets the advanced sync schedule for a warehouse.",
        "title": "GetAdvancedSyncScheduleFromWarehouseBetaInput",
        "type": "object",
        "properties": {
          "warehouseId": { "description": "The id of the warehouse.", "type": "string", "title": "warehouseId" }
        },
        "required": ["warehouseId"]
      },
      "GetAdvancedSyncScheduleFromWarehouseBetaOutput": {
        "description": "Returns the advanced sync schedule for a warehouse.",
        "title": "GetAdvancedSyncScheduleFromWarehouseBetaOutput",
        "type": "object",
        "properties": {
          "enabled": {
            "description": "Indicates if an advanced sync schedule is enabled for this warehouse.",
            "type": "boolean",
            "title": "enabled"
          },
          "schedule": {
            "description": "The schedule that contains the schedule overrides for the specified warehouse, if enabled.",
            "$ref": "#/components/schemas/AdvancedWarehouseSyncScheduleBetaOutput",
            "title": "schedule"
          }
        },
        "required": ["enabled"]
      },
      "ReplaceAdvancedSyncScheduleForWarehouseBetaInput": {
        "description": "Replaces the advanced sync schedule for a warehouse.",
        "title": "ReplaceAdvancedSyncScheduleForWarehouseBetaInput",
        "type": "object",
        "properties": {
          "warehouseId": {
            "description": "The id of the warehouse to update.",
            "type": "string",
            "title": "warehouseId"
          },
          "enabled": {
            "description": "Enable to turn on an advanced sync schedule for the warehouse.",
            "type": "boolean",
            "title": "enabled"
          },
          "schedule": {
            "description": "The full sync schedule for the warehouse.",
            "$ref": "#/components/schemas/AdvancedWarehouseSyncScheduleBetaInput",
            "title": "schedule"
          }
        },
        "required": ["enabled", "warehouseId"]
      },
      "ReplaceAdvancedSyncScheduleForWarehouseBetaOutput": {
        "description": "Returns the advanced sync schedule for a warehouse.",
        "title": "ReplaceAdvancedSyncScheduleForWarehouseBetaOutput",
        "type": "object",
        "properties": {
          "enabled": {
            "description": "Indicates if an advanced sync schedule is enabled for the warehouse.",
            "type": "boolean",
            "title": "enabled"
          },
          "schedule": {
            "description": "The schedule that contains the overrides for the warehouse, if enabled.",
            "$ref": "#/components/schemas/AdvancedWarehouseSyncScheduleBetaOutput",
            "title": "schedule"
          }
        },
        "required": ["enabled"]
      },
      "CreateWarehouseBetaInput": {
        "description": "Create a new warehouse based on a set of parameters.",
        "title": "CreateWarehouseBetaInput",
        "type": "object",
        "properties": {
          "metadataId": { "description": "The warehouse metadata to use.", "type": "string", "title": "metadataId" },
          "name": {
            "description": "An optional human-readable name for this warehouse.",
            "type": "string",
            "title": "name"
          },
          "enabled": {
            "description": "Enable to allow this warehouse to receive data. Defaults to true.",
            "type": "boolean",
            "title": "enabled"
          },
          "settings": {
            "$ref": "#/components/schemas/WarehouseSettingsBeta",
            "description": "A key-value object that contains instance-specific settings for a warehouse.\n\nDifferent kinds of warehouses require different settings. The required and optional settings\nfor a warehouse are described in the `options` object of the associated warehouse metadata.\n\nYou can find the full list of warehouse metadata and related settings information in the\n`/catalog/warehouses` endpoint.",
            "title": "settings"
          }
        },
        "required": ["metadataId", "settings"]
      },
      "CreateWarehouseBetaOutput": {
        "description": "Returns the newly created warehouse.",
        "title": "CreateWarehouseBetaOutput",
        "type": "object",
        "properties": {
          "warehouse": {
            "$ref": "#/components/schemas/WarehouseBeta",
            "description": "The newly created warehouse.",
            "title": "warehouse"
          }
        },
        "required": ["warehouse"]
      },
      "UpdateWarehouseBetaInput": {
        "description": "Updates an existing warehouse based on a set of parameters.",
        "title": "UpdateWarehouseBetaInput",
        "type": "object",
        "properties": {
          "warehouseId": {
            "description": "The id of the warehouse to update.",
            "type": "string",
            "title": "warehouseId"
          },
          "name": {
            "description": "An optional human-readable name to associate with this warehouse.",
            "type": "string",
            "title": "name"
          },
          "enabled": {
            "description": "Enable to allow this warehouse to receive data.",
            "type": "boolean",
            "title": "enabled"
          },
          "settings": {
            "$ref": "#/components/schemas/WarehouseSettingsBeta",
            "description": "A key-value object that contains instance-specific settings for a warehouse.\n\nDifferent kinds of warehouses require different settings. The required and optional settings\nfor a warehouse are described in the `options` object of the associated warehouse metadata.\n\nYou can find the full list of warehouse metadata and related settings information in the\n`/catalog/warehouses` endpoint.",
            "title": "settings"
          }
        },
        "required": ["settings", "warehouseId"]
      },
      "UpdateWarehouseBetaOutput": {
        "description": "Returns the updated warehouse.",
        "title": "UpdateWarehouseBetaOutput",
        "type": "object",
        "properties": {
          "warehouse": {
            "$ref": "#/components/schemas/WarehouseBeta",
            "description": "The updated warehouse.",
            "title": "warehouse"
          }
        },
        "required": ["warehouse"]
      },
      "DeleteWarehouseBetaInput": {
        "description": "Deletes an existing warehouse by id.",
        "title": "DeleteWarehouseBetaInput",
        "type": "object",
        "properties": {
          "warehouseId": {
            "description": "The id of the warehouse to delete.",
            "type": "string",
            "title": "warehouseId"
          }
        },
        "required": ["warehouseId"]
      },
      "DeleteWarehouseBetaOutput": {
        "description": "Returns the status of a warehouse deletion.",
        "title": "DeleteWarehouseBetaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the warehouse deletion operation.",
            "type": "string",
            "enum": ["SUCCESS"],
            "title": "status"
          }
        },
        "required": ["status"]
      },
      "GetConnectionStateFromWarehouseBetaInput": {
        "description": "Verifies the connection state of a warehouse.\n\nUse this to check if a warehouse is reachable, given its stored connection settings.",
        "title": "GetConnectionStateFromWarehouseBetaInput",
        "type": "object",
        "properties": {
          "warehouseId": {
            "description": "The id of the warehouse to verify the connection for.",
            "type": "string",
            "title": "warehouseId"
          }
        },
        "required": ["warehouseId"]
      },
      "GetConnectionStateFromWarehouseBetaOutput": {
        "description": "Returns the status of a warehouse connection settings after an attempt to connect to it.",
        "title": "GetConnectionStateFromWarehouseBetaOutput",
        "type": "object",
        "properties": {
          "connectionState": {
            "description": "Represents the status for the current connection settings.",
            "enum": ["CONNECTED", "FAILED"],
            "type": "string",
            "title": "connectionState"
          }
        },
        "required": ["connectionState"]
      },
      "CreateValidationInWarehouseBetaOutput": {
        "description": "Returns the status of a warehouse connection settings after an attempt to connect to it.",
        "title": "CreateValidationInWarehouseBetaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "Represents the status for the current connection settings.",
            "enum": ["CONNECTED", "FAILED"],
            "type": "string",
            "title": "status"
          }
        },
        "required": ["status"]
      },
      "CreateValidationInWarehouseBetaInput": {
        "description": "Verifies a set of warehouse credentials by attempting to connect to it.",
        "title": "CreateValidationInWarehouseBetaInput",
        "type": "object",
        "properties": {
          "metadataId": {
            "description": "The id of the warehouse metadata type.",
            "type": "string",
            "title": "metadataId"
          },
          "settings": {
            "$ref": "#/components/schemas/WarehouseSettingsBeta",
            "description": "The settings to check.",
            "title": "settings"
          }
        },
        "required": ["metadataId", "settings"]
      },
      "WarehouseSettingsV1": {
        "description": "A key-value object that contains instance-specific warehouse settings.",
        "title": "WarehouseSettingsV1",
        "type": "object",
        "additionalProperties": {}
      },
      "WarehouseV1": {
        "description": "Defines a data warehouse used as a destination for Segment data.",
        "title": "WarehouseV1",
        "type": "object",
        "properties": {
          "id": { "description": "The id of the warehouse.", "type": "string", "title": "id" },
          "metadata": {
            "$ref": "#/components/schemas/WarehouseMetadataBeta",
            "description": "The metadata for the warehouse.",
            "title": "metadata"
          },
          "workspaceId": {
            "description": "The id of the workspace that owns this warehouse.",
            "type": "string",
            "title": "workspaceId"
          },
          "enabled": {
            "description": "When set to true, this warehouse receives data.",
            "type": "boolean",
            "title": "enabled"
          },
          "settings": {
            "$ref": "#/components/schemas/WarehouseSettingsV1",
            "description": "The settings associated with this warehouse.\n\nCommon settings are connection-related configuration used to connect to it, for example host, username, and port.",
            "title": "settings"
          }
        },
        "required": ["enabled", "id", "metadata", "settings", "workspaceId"]
      },
      "SyncNoticeV1": {
        "description": "Represents a notice within a sync for a source and warehouse pair.",
        "title": "SyncNoticeV1",
        "type": "object",
        "properties": {
          "level": { "description": "The severity of the notice.", "type": "string", "title": "level" },
          "message": {
            "description": "The human readable message that describes the notice.",
            "type": "string",
            "title": "message"
          },
          "createdAt": {
            "description": "The timestamp of this sync notice's creation.",
            "type": "string",
            "title": "createdAt"
          }
        },
        "required": ["createdAt", "level", "message"]
      },
      "SyncV1": {
        "description": "Represents a sync between a source and warehouse.\n\nA sync occurs when data from a source is loaded into a warehouse.",
        "title": "SyncV1",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the source loaded in the sync.",
            "type": "string",
            "title": "sourceId"
          },
          "start": { "description": "The start time of the sync.", "type": "string", "title": "start" },
          "end": {
            "description": "The time the sync completed. Returns null if unfinished.",
            "type": "string",
            "title": "end",
            "nullable": true
          },
          "status": { "description": "The status of the sync.", "type": "string", "title": "status" },
          "duration": {
            "description": "The duration of the sync in seconds. Returns the partial duration if the sync has not finished yet.",
            "type": "number",
            "title": "duration"
          },
          "humanDuration": {
            "description": "The human readable counterpart of `duration`.",
            "type": "string",
            "title": "humanDuration"
          },
          "count": {
            "description": "The number of rows synced into the warehouse.",
            "type": "number",
            "title": "count"
          },
          "notices": {
            "description": "Notices that contain the events that occurred during the sync.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/SyncNoticeV1" },
            "title": "notices"
          }
        },
        "required": ["count", "duration", "end", "humanDuration", "notices", "sourceId", "start", "status"]
      },
      "WarehouseSyncOverrideV1": {
        "description": "Represents the override for a source/collection/property? path to apply to a warehouse.",
        "title": "WarehouseSyncOverrideV1",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the source this schema item applies to.",
            "type": "string",
            "title": "sourceId"
          },
          "collection": {
            "description": "The collection the schema item override applies to.",
            "type": "string",
            "title": "collection"
          },
          "enabled": { "description": "Enable to apply the override.", "type": "boolean", "title": "enabled" },
          "property": {
            "description": "A property within the collection to which the override applies.",
            "type": "string",
            "title": "property"
          }
        },
        "required": ["enabled", "sourceId"]
      },
      "WarehouseSelectiveSyncItemV1": {
        "description": "Represents an entry in the warehouse selective sync schema for a warehouse and source pair.",
        "title": "WarehouseSelectiveSyncItemV1",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The source id attached to this warehouse.",
            "type": "string",
            "title": "sourceId"
          },
          "collection": { "description": "The collection within the source.", "type": "string", "title": "collection" },
          "warehouseId": {
            "description": "The id of the warehouse this sync belongs to.",
            "type": "string",
            "title": "warehouseId"
          },
          "properties": {
            "description": "A map that contains the properties within the collection to which the warehouse should sync.",
            "type": "object",
            "additionalProperties": true,
            "title": "properties"
          }
        },
        "required": ["collection", "properties", "sourceId", "warehouseId"]
      },
      "WarehouseAdvancedSyncV1": {
        "description": "Determines the time of day at which a warehouse should sync.",
        "title": "WarehouseAdvancedSyncV1",
        "type": "object",
        "properties": {
          "hourOfDay": {
            "description": "The hour of day for which to enable/disable a sync, between 0 and 23.",
            "type": "number",
            "title": "hourOfDay"
          },
          "enabled": {
            "description": "Enable to the sync at the specified hour.",
            "type": "boolean",
            "title": "enabled"
          }
        },
        "required": ["enabled", "hourOfDay"]
      },
      "AdvancedWarehouseSyncScheduleV1Input": {
        "description": "Defines the advanced sync schedule for a warehouse.",
        "title": "AdvancedWarehouseSyncScheduleV1Input",
        "type": "object",
        "properties": {
          "times": {
            "description": "A list that contains the times when syncs should occur.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/WarehouseAdvancedSyncV1" },
            "title": "times"
          },
          "timezone": {
            "description": "A TZ-database timezone for this sync schedule.",
            "type": "string",
            "title": "timezone"
          }
        },
        "required": ["times", "timezone"]
      },
      "AdvancedWarehouseSyncScheduleV1Output": {
        "description": "Defines the advanced sync schedule for a warehouse.",
        "title": "AdvancedWarehouseSyncScheduleV1Output",
        "type": "object",
        "properties": {
          "times": {
            "description": "A list that contains the times when syncs should occur.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/WarehouseAdvancedSyncV1" },
            "title": "times"
          },
          "timezone": {
            "description": "A TZ-database timezone for this sync schedule.",
            "type": "string",
            "title": "timezone"
          }
        }
      },
      "ListWarehousesV1Input": {
        "description": "Gets a list of warehouses belonging to a workspace.",
        "title": "ListWarehousesV1Input",
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Defines the pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["pagination"]
      },
      "ListWarehousesV1Output": {
        "description": "Returns a list of warehouses that belong to a workspace.",
        "title": "ListWarehousesV1Output",
        "type": "object",
        "properties": {
          "warehouses": {
            "description": "A list of warehouses that belong to the workspace.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/WarehouseV1" },
            "title": "warehouses"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Information about the pagination of this response.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "warehouses"]
      },
      "GetWarehouseV1Input": {
        "description": "Looks up a warehouse by id.",
        "title": "GetWarehouseV1Input",
        "type": "object",
        "properties": {
          "warehouseId": {
            "description": "The id of the warehouse to look up.",
            "type": "string",
            "title": "warehouseId"
          }
        },
        "required": ["warehouseId"]
      },
      "GetWarehouseV1Output": {
        "description": "Returns a warehouse.",
        "title": "GetWarehouseV1Output",
        "type": "object",
        "properties": {
          "warehouse": {
            "$ref": "#/components/schemas/WarehouseV1",
            "description": "The returned warehouse object.",
            "title": "warehouse"
          }
        },
        "required": ["warehouse"]
      },
      "ListConnectedSourcesFromWarehouseV1Input": {
        "description": "Looks up the list of sources connected to a warehouse.",
        "title": "ListConnectedSourcesFromWarehouseV1Input",
        "type": "object",
        "properties": {
          "warehouseId": {
            "description": "The id of the warehouse to look up.",
            "type": "string",
            "title": "warehouseId"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Defines the pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "warehouseId"]
      },
      "ListConnectedSourcesFromWarehouseV1Output": {
        "description": "Returns a list of sources connected to a warehouse.",
        "title": "ListConnectedSourcesFromWarehouseV1Output",
        "type": "object",
        "properties": {
          "sources": {
            "description": "A list that contains the sources connected to the requested warehouse.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/SourceBeta" },
            "title": "sources"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Information about the pagination of this response.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "sources"]
      },
      "ListSyncsFromWarehouseV1Input": {
        "description": "Requests the overview of syncs for every source connected to this warehouse.",
        "title": "ListSyncsFromWarehouseV1Input",
        "type": "object",
        "properties": {
          "warehouseId": {
            "description": "The id of the warehouse for which to return the sync overview.",
            "type": "string",
            "title": "warehouseId"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Defines the pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "warehouseId"]
      },
      "ListSyncsFromWarehouseV1Output": {
        "description": "Returns an overview page that contains the last syncs for a warehouse.",
        "title": "ListSyncsFromWarehouseV1Output",
        "type": "object",
        "properties": {
          "reports": {
            "description": "A list that contains the latest syncs for the specified warehouse.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/SyncV1" },
            "title": "reports"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Information about the pagination of this response.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "reports"]
      },
      "ListSyncsFromWarehouseAndSourceV1Input": {
        "description": "Loads the most recent sync information for a warehouse-source pair.",
        "title": "ListSyncsFromWarehouseAndSourceV1Input",
        "type": "object",
        "properties": {
          "warehouseId": { "description": "The id of the warehouse.", "type": "string", "title": "warehouseId" },
          "sourceId": {
            "description": "The id of a source connected to the warehouse.",
            "type": "string",
            "title": "sourceId"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Defines the pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "sourceId", "warehouseId"]
      },
      "ListSyncsFromWarehouseAndSourceV1Output": {
        "description": "Returns a list that contains the most recent syncs for a warehouse-source pair, filtered and constrained by a given\nset of pagination parameters.",
        "title": "ListSyncsFromWarehouseAndSourceV1Output",
        "type": "object",
        "properties": {
          "reports": {
            "description": "A list that contains the latest syncs for the specified warehouse-source pair.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/SyncV1" },
            "title": "reports"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Information about the pagination of this response.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "reports"]
      },
      "AddConnectionFromSourceToWarehouseV1Input": {
        "description": "Connects a source to a warehouse.\n\nPosting to this idempotent endpoint creates a connection between the source and warehouse, and begins syncing data\nfrom the source's collections into the chosen warehouse destination.",
        "title": "AddConnectionFromSourceToWarehouseV1Input",
        "type": "object",
        "properties": {
          "warehouseId": { "description": "The id of the warehouse.", "type": "string", "title": "warehouseId" },
          "sourceId": { "description": "The id of the source.", "type": "string", "title": "sourceId" }
        },
        "required": ["sourceId", "warehouseId"]
      },
      "AddConnectionFromSourceToWarehouseV1Output": {
        "description": "Response indicating whether the connection was successful.",
        "title": "AddConnectionFromSourceToWarehouseV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the connection between the source and warehouse.",
            "enum": ["CONNECTED", "NOT_CONNECTED"],
            "type": "string",
            "title": "status"
          }
        },
        "required": ["status"]
      },
      "RemoveSourceConnectionFromWarehouseV1Input": {
        "description": "Disconnects a source from a warehouse.\n\nPosting to this idempotent endpoint removes a connection between the source and warehouse, and blocks all syncing\nfrom the source's collections into the chosen warehouse destination.",
        "title": "RemoveSourceConnectionFromWarehouseV1Input",
        "type": "object",
        "properties": {
          "warehouseId": { "description": "The id of the warehouse.", "type": "string", "title": "warehouseId" },
          "sourceId": { "description": "The id of the source.", "type": "string", "title": "sourceId" }
        },
        "required": ["sourceId", "warehouseId"]
      },
      "RemoveSourceConnectionFromWarehouseV1Output": {
        "description": "Response indicating whether the disconnection was successful.",
        "title": "RemoveSourceConnectionFromWarehouseV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the request to disconnect the source and warehouse.",
            "type": "string",
            "enum": ["SUCCESS"],
            "title": "status"
          }
        },
        "required": ["status"]
      },
      "ListSelectiveSyncsFromWarehouseAndSourceV1Input": {
        "description": "Get the selective sync configuration associated with a warehouse.",
        "title": "ListSelectiveSyncsFromWarehouseAndSourceV1Input",
        "type": "object",
        "properties": {
          "warehouseId": { "description": "The id of the warehouse.", "type": "string", "title": "warehouseId" },
          "sourceId": { "description": "The id of the source.", "type": "string", "title": "sourceId" },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInput",
            "description": "Defines the pagination parameters.",
            "title": "pagination"
          }
        },
        "required": ["pagination", "sourceId", "warehouseId"]
      },
      "ListSelectiveSyncsFromWarehouseAndSourceV1Output": {
        "description": "Results containing the selective sync configuration for a warehouse.",
        "title": "ListSelectiveSyncsFromWarehouseAndSourceV1Output",
        "type": "object",
        "properties": {
          "items": {
            "description": "Represents a list of source, collection, and properties synced to the warehouse.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/WarehouseSelectiveSyncItemV1" },
            "title": "items"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationOutput",
            "description": "Information about the pagination of this response.",
            "title": "pagination"
          }
        },
        "required": ["items", "pagination"]
      },
      "UpdateSelectiveSyncForWarehouseV1Input": {
        "description": "Updates the schema for a warehouse/sources pair.",
        "title": "UpdateSelectiveSyncForWarehouseV1Input",
        "type": "object",
        "properties": {
          "warehouseId": { "description": "The id of the warehouse.", "type": "string", "title": "warehouseId" },
          "syncOverrides": {
            "description": "A list of sync schema overrides to apply to this warehouse.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/WarehouseSyncOverrideV1" },
            "title": "syncOverrides"
          }
        },
        "required": ["syncOverrides", "warehouseId"]
      },
      "UpdateSelectiveSyncForWarehouseV1Output": {
        "description": "Results from updating the schema for a warehouse/source pair.",
        "title": "UpdateSelectiveSyncForWarehouseV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "Status of the update operation.",
            "enum": ["UNCHANGED", "UPDATED"],
            "type": "string",
            "title": "status"
          },
          "warnings": {
            "description": "Warnings returned by the operation.",
            "type": "array",
            "items": { "type": "string" },
            "title": "warnings"
          }
        },
        "required": ["status", "warnings"]
      },
      "GetAdvancedSyncScheduleFromWarehouseV1Input": {
        "description": "Gets the advanced sync schedule for a warehouse.",
        "title": "GetAdvancedSyncScheduleFromWarehouseV1Input",
        "type": "object",
        "properties": {
          "warehouseId": { "description": "The id of the warehouse.", "type": "string", "title": "warehouseId" }
        },
        "required": ["warehouseId"]
      },
      "GetAdvancedSyncScheduleFromWarehouseV1Output": {
        "description": "Returns the advanced sync schedule for a warehouse.",
        "title": "GetAdvancedSyncScheduleFromWarehouseV1Output",
        "type": "object",
        "properties": {
          "enabled": {
            "description": "Indicates if an advanced sync schedule is enabled for this warehouse.",
            "type": "boolean",
            "title": "enabled"
          },
          "schedule": {
            "description": "The schedule that contains the schedule overrides for the specified warehouse, if enabled.",
            "$ref": "#/components/schemas/AdvancedWarehouseSyncScheduleV1Output",
            "title": "schedule"
          }
        },
        "required": ["enabled"]
      },
      "ReplaceAdvancedSyncScheduleForWarehouseV1Input": {
        "description": "Replaces the advanced sync schedule for a warehouse.",
        "title": "ReplaceAdvancedSyncScheduleForWarehouseV1Input",
        "type": "object",
        "properties": {
          "warehouseId": {
            "description": "The id of the warehouse to update.",
            "type": "string",
            "title": "warehouseId"
          },
          "enabled": {
            "description": "Enable to turn on an advanced sync schedule for the warehouse.",
            "type": "boolean",
            "title": "enabled"
          },
          "schedule": {
            "description": "The full sync schedule for the warehouse.",
            "$ref": "#/components/schemas/AdvancedWarehouseSyncScheduleV1Input",
            "title": "schedule"
          }
        },
        "required": ["enabled", "warehouseId"]
      },
      "ReplaceAdvancedSyncScheduleForWarehouseV1Output": {
        "description": "Returns the advanced sync schedule for a warehouse.",
        "title": "ReplaceAdvancedSyncScheduleForWarehouseV1Output",
        "type": "object",
        "properties": {
          "enabled": {
            "description": "Indicates if an advanced sync schedule is enabled for the warehouse.",
            "type": "boolean",
            "title": "enabled"
          },
          "schedule": {
            "description": "The schedule that contains the overrides for the warehouse, if enabled.",
            "$ref": "#/components/schemas/AdvancedWarehouseSyncScheduleV1Output",
            "title": "schedule"
          }
        },
        "required": ["enabled"]
      },
      "CreateWarehouseV1Input": {
        "description": "Create a new warehouse based on a set of parameters.",
        "title": "CreateWarehouseV1Input",
        "type": "object",
        "properties": {
          "metadataId": { "description": "The warehouse metadata to use.", "type": "string", "title": "metadataId" },
          "name": {
            "description": "An optional human-readable name for this warehouse.",
            "type": "string",
            "title": "name"
          },
          "enabled": {
            "description": "Enable to allow this warehouse to receive data. Defaults to true.",
            "type": "boolean",
            "title": "enabled"
          },
          "settings": {
            "$ref": "#/components/schemas/WarehouseSettingsV1",
            "description": "A key-value object that contains instance-specific settings for a warehouse.\n\nDifferent kinds of warehouses require different settings. The required and optional settings\nfor a warehouse are described in the `options` object of the associated warehouse metadata.\n\nYou can find the full list of warehouse metadata and related settings information in the\n`/catalog/warehouses` endpoint.",
            "title": "settings"
          }
        },
        "required": ["metadataId", "settings"]
      },
      "CreateWarehouseV1Output": {
        "description": "Returns the newly created warehouse.",
        "title": "CreateWarehouseV1Output",
        "type": "object",
        "properties": {
          "warehouse": {
            "$ref": "#/components/schemas/WarehouseV1",
            "description": "The newly created warehouse.",
            "title": "warehouse"
          }
        },
        "required": ["warehouse"]
      },
      "UpdateWarehouseV1Input": {
        "description": "Updates an existing warehouse based on a set of parameters.",
        "title": "UpdateWarehouseV1Input",
        "type": "object",
        "properties": {
          "warehouseId": {
            "description": "The id of the warehouse to update.",
            "type": "string",
            "title": "warehouseId"
          },
          "name": {
            "description": "An optional human-readable name to associate with this warehouse.",
            "type": "string",
            "title": "name",
            "nullable": true
          },
          "enabled": {
            "description": "Enable to allow this warehouse to receive data.",
            "type": "boolean",
            "title": "enabled"
          },
          "settings": {
            "$ref": "#/components/schemas/WarehouseSettingsV1",
            "description": "A key-value object that contains instance-specific settings for a warehouse.\n\nDifferent kinds of warehouses require different settings. The required and optional settings\nfor a warehouse are described in the `options` object of the associated warehouse metadata.\n\nYou can find the full list of warehouse metadata and related settings information in the\n`/catalog/warehouses` endpoint.",
            "title": "settings"
          }
        },
        "required": ["settings", "warehouseId"]
      },
      "UpdateWarehouseV1Output": {
        "description": "Returns the updated warehouse.",
        "title": "UpdateWarehouseV1Output",
        "type": "object",
        "properties": {
          "warehouse": {
            "$ref": "#/components/schemas/WarehouseV1",
            "description": "The updated warehouse.",
            "title": "warehouse"
          }
        },
        "required": ["warehouse"]
      },
      "DeleteWarehouseV1Input": {
        "description": "Deletes an existing warehouse by id.",
        "title": "DeleteWarehouseV1Input",
        "type": "object",
        "properties": {
          "warehouseId": {
            "description": "The id of the warehouse to delete.",
            "type": "string",
            "title": "warehouseId"
          }
        },
        "required": ["warehouseId"]
      },
      "DeleteWarehouseV1Output": {
        "description": "Returns the status of a warehouse deletion.",
        "title": "DeleteWarehouseV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the warehouse deletion operation.",
            "type": "string",
            "enum": ["SUCCESS"],
            "title": "status"
          }
        },
        "required": ["status"]
      },
      "GetConnectionStateFromWarehouseV1Input": {
        "description": "Verifies the connection state of a warehouse.\n\nUse this to check if a warehouse is reachable, given its stored connection settings.",
        "title": "GetConnectionStateFromWarehouseV1Input",
        "type": "object",
        "properties": {
          "warehouseId": {
            "description": "The id of the warehouse to verify the connection for.",
            "type": "string",
            "title": "warehouseId"
          }
        },
        "required": ["warehouseId"]
      },
      "GetConnectionStateFromWarehouseV1Output": {
        "description": "Returns the status of a warehouse connection settings after an attempt to connect to it.",
        "title": "GetConnectionStateFromWarehouseV1Output",
        "type": "object",
        "properties": {
          "connectionState": {
            "description": "Represents the status for the current connection settings.",
            "enum": ["CONNECTED", "FAILED"],
            "type": "string",
            "title": "connectionState"
          }
        },
        "required": ["connectionState"]
      },
      "CreateValidationInWarehouseV1Output": {
        "description": "Returns the status of a warehouse connection settings after an attempt to connect to it.",
        "title": "CreateValidationInWarehouseV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "Represents the status for the current connection settings.",
            "enum": ["CONNECTED", "FAILED"],
            "type": "string",
            "title": "status"
          }
        },
        "required": ["status"]
      },
      "CreateValidationInWarehouseV1Input": {
        "description": "Verifies a set of warehouse credentials by attempting to connect to it.",
        "title": "CreateValidationInWarehouseV1Input",
        "type": "object",
        "properties": {
          "metadataId": {
            "description": "The id of the warehouse metadata type.",
            "type": "string",
            "title": "metadataId"
          },
          "settings": {
            "$ref": "#/components/schemas/WarehouseSettingsV1",
            "description": "The settings to check.",
            "title": "settings"
          }
        },
        "required": ["metadataId", "settings"]
      },
      "WorkspaceAlpha": {
        "description": "An organized group of sources and destinations managed by a team.",
        "title": "WorkspaceAlpha",
        "type": "object",
        "properties": {
          "id": { "description": "The unique identifier.", "type": "string", "title": "id" },
          "slug": { "description": "The URL-friendly slug.", "type": "string", "title": "slug" },
          "name": { "description": "The human-readable name.", "type": "string", "title": "name" }
        },
        "required": ["id", "name", "slug"]
      },
      "GetWorkspaceAlphaInput": {
        "description": "Loads the workspace associated with the token.",
        "title": "GetWorkspaceAlphaInput",
        "type": "object"
      },
      "GetWorkspaceAlphaOutput": {
        "description": "Represents the output of loading the workspace.",
        "title": "GetWorkspaceAlphaOutput",
        "type": "object",
        "properties": {
          "workspace": {
            "$ref": "#/components/schemas/WorkspaceAlpha",
            "description": "The workspace.",
            "title": "workspace",
            "nullable": true
          }
        },
        "required": ["workspace"]
      },
      "WorkspaceBeta": {
        "description": "An organized group of sources and destinations managed by a team.",
        "title": "WorkspaceBeta",
        "type": "object",
        "properties": {
          "id": { "description": "The unique identifier.", "type": "string", "title": "id" },
          "slug": { "description": "The URL-friendly slug.", "type": "string", "title": "slug" },
          "name": { "description": "The human-readable name.", "type": "string", "title": "name" }
        },
        "required": ["id", "name", "slug"]
      },
      "GetWorkspaceBetaInput": {
        "description": "Loads the workspace associated with the token.",
        "title": "GetWorkspaceBetaInput",
        "type": "object"
      },
      "GetWorkspaceBetaOutput": {
        "description": "Represents the output of loading the workspace.",
        "title": "GetWorkspaceBetaOutput",
        "type": "object",
        "properties": {
          "workspace": {
            "$ref": "#/components/schemas/WorkspaceBeta",
            "description": "The workspace.",
            "title": "workspace",
            "nullable": true
          }
        },
        "required": ["workspace"]
      },
      "WorkspaceV1": {
        "description": "An organized group of sources and destinations managed by a team.",
        "title": "WorkspaceV1",
        "type": "object",
        "properties": {
          "id": { "description": "The unique identifier.", "type": "string", "title": "id" },
          "slug": { "description": "The URL-friendly slug.", "type": "string", "title": "slug" },
          "name": { "description": "The human-readable name.", "type": "string", "title": "name" }
        },
        "required": ["id", "name", "slug"]
      },
      "GetWorkspaceV1Input": {
        "description": "Loads the workspace associated with the token.",
        "title": "GetWorkspaceV1Input",
        "type": "object"
      },
      "GetWorkspaceV1Output": {
        "description": "Represents the output of loading the workspace.",
        "title": "GetWorkspaceV1Output",
        "type": "object",
        "properties": {
          "workspace": {
            "$ref": "#/components/schemas/WorkspaceV1",
            "description": "The workspace.",
            "title": "workspace",
            "nullable": true
          }
        },
        "required": ["workspace"]
      },
      "RequestError": {
        "description": "Represents any error that could have occurred while performing a request.",
        "title": "RequestError",
        "type": "object",
        "properties": {
          "type": {
            "description": "The type for this error (validation, server, unknown, etc).",
            "type": "string",
            "title": "type"
          },
          "message": {
            "description": "An error message attached to this error.",
            "type": "string",
            "title": "message"
          },
          "field": {
            "description": "The name of an input field from the request that triggered this error.",
            "type": "string",
            "title": "field"
          },
          "data": { "description": "Any extra data associated with this error.", "title": "data" },
          "status": { "description": "Http status code.", "type": "number", "title": "status" }
        },
        "required": ["type"]
      },
      "PaginationInput": {
        "description": "Pagination parameters.\n\nEvery resource that returns a list of items in its `Output` object may contain a `PaginationInput` in its `Input`\nobject. Required, though some of its fields are optional.",
        "title": "PaginationInput",
        "type": "object",
        "properties": {
          "cursor": {
            "description": "The page to request.\n\nAcceptable values to use here are in PaginationOutput objects, in the `current`, `next`, and `previous` keys.\n\nConsumers of the API must treat this value as opaque.",
            "type": "string",
            "title": "cursor"
          },
          "count": {
            "description": "The number of items to retrieve in a page, between 1 and 200.",
            "type": "number",
            "title": "count"
          }
        },
        "required": ["count"]
      },
      "PaginationOutput": {
        "description": "Pagination metadata for a list response.\n\nResponses return this object alongside a list of resources, which provides the necessary metadata for manipulating a\npaginated collection. In operations that return lists, it's always present, though some of its fields might not be.",
        "title": "PaginationOutput",
        "type": "object",
        "properties": {
          "current": {
            "description": "The current cursor within a collection.\n\nConsumers of the API must treat this value as opaque.",
            "type": "string",
            "title": "current"
          },
          "next": {
            "description": "A pointer to the next page.\n\nThis does not return when you retrieve the last page.\n\nConsumers of the API must treat this value as opaque.",
            "type": "string",
            "title": "next",
            "nullable": true
          },
          "previous": {
            "description": "A pointer to the previous page.\n\nThis does not return when you retrieve the first page.\n\nConsumers of the API must treat this value as opaque.",
            "type": "string",
            "title": "previous",
            "nullable": true
          },
          "totalEntries": {
            "description": "The total number of entries available in the collection.\n\nIf calculating it impacts performance, the response may omit this field.",
            "type": "number",
            "title": "totalEntries"
          }
        },
        "required": ["current"]
      },
      "RequestErrorEnvelope": {
        "title": "RequestErrorEnvelope",
        "description": "Envelope type for RequestErrors.",
        "type": "object",
        "properties": { "errors": { "type": "array", "items": { "$ref": "#/components/schemas/RequestError" } } },
        "required": ["errors"]
      }
    }
  },
  "paths": {
    "/warehouses/{warehouseId}/connected-sources/{sourceId}": {
      "post": {
        "summary": "addConnectionFromSourceToWarehouseV1",
        "parameters": [
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          },
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Connects a Source to a Warehouse.\n\n\nThis endpoint generates the following audit events:\n* Storage Destination Modified\n\n      ",
        "operationId": "addConnectionFromSourceToWarehouse",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/AddConnectionFromSourceToWarehouseAlphaInput" },
              "example": { "warehouseId": "kjU72LCJexvrqL7G4TMHHN", "sourceId": "rh5BDZp6QDHvXFCkibm1pR" }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/AddConnectionFromSourceToWarehouseBetaInput" },
              "example": { "warehouseId": "kjU72LCJexvrqL7G4TMHHN", "sourceId": "rh5BDZp6QDHvXFCkibm1pR" }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/AddConnectionFromSourceToWarehouseV1Input" },
              "example": { "warehouseId": "kjU72LCJexvrqL7G4TMHHN", "sourceId": "rh5BDZp6QDHvXFCkibm1pR" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/AddConnectionFromSourceToWarehouseAlphaOutput" },
                "example": { "status": "CONNECTED" }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/AddConnectionFromSourceToWarehouseBetaOutput" },
                "example": { "status": "CONNECTED" }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/AddConnectionFromSourceToWarehouseV1Output" },
                "example": { "status": "CONNECTED" }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AddConnectionFromSourceToWarehouseV1Output" },
                "example": { "status": "CONNECTED" }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Warehouses"],
        "tags": ["Warehouses"]
      },
      "delete": {
        "summary": "removeSourceConnectionFromWarehouseV1",
        "parameters": [
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          },
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Disconnects a Source from a Warehouse",
        "operationId": "removeSourceConnectionFromWarehouse",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/RemoveSourceConnectionFromWarehouseAlphaInput" },
              "example": { "warehouseId": "kjU72LCJexvrqL7G4TMHHN", "sourceId": "rh5BDZp6QDHvXFCkibm1pR" }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/RemoveSourceConnectionFromWarehouseBetaInput" },
              "example": { "warehouseId": "kjU72LCJexvrqL7G4TMHHN", "sourceId": "rh5BDZp6QDHvXFCkibm1pR" }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/RemoveSourceConnectionFromWarehouseV1Input" },
              "example": { "warehouseId": "kjU72LCJexvrqL7G4TMHHN", "sourceId": "rh5BDZp6QDHvXFCkibm1pR" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/RemoveSourceConnectionFromWarehouseAlphaOutput" },
                "example": { "status": "SUCCESS" }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/RemoveSourceConnectionFromWarehouseBetaOutput" },
                "example": { "status": "SUCCESS" }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/RemoveSourceConnectionFromWarehouseV1Output" },
                "example": { "status": "SUCCESS" }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RemoveSourceConnectionFromWarehouseV1Output" },
                "example": { "status": "SUCCESS" }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Warehouses"],
        "tags": ["Warehouses"]
      }
    },
    "/sources/{sourceId}/labels": {
      "post": {
        "summary": "addLabelsToSourceV1",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Adds an existing Label to a Source.\n\n\nThis endpoint generates the following audit events:\n* Source Modified\n\n      ",
        "operationId": "addLabelsToSource",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/AddLabelsToSourceAlphaInput" },
              "example": { "sourceId": "rh5BDZp6QDHvXFCkibm1pR", "labels": [{ "key": "type", "value": "web" }] }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/AddLabelsToSourceBetaInput" },
              "example": { "sourceId": "rh5BDZp6QDHvXFCkibm1pR", "labels": [{ "key": "type", "value": "web" }] }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/AddLabelsToSourceV1Input" },
              "example": { "sourceId": "rh5BDZp6QDHvXFCkibm1pR", "labels": [{ "key": "type", "value": "web" }] }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/AddLabelsToSourceAlphaOutput" },
                "example": { "labels": [{ "key": "type", "value": "web" }] }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/AddLabelsToSourceBetaOutput" },
                "example": {
                  "labels": [
                    { "key": "type", "value": "web" },
                    { "key": "environment", "value": "prod" }
                  ]
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/AddLabelsToSourceV1Output" },
                "example": {
                  "labels": [
                    { "key": "type", "value": "web" },
                    { "key": "environment", "value": "prod" }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AddLabelsToSourceV1Output" },
                "example": {
                  "labels": [
                    { "key": "type", "value": "web" },
                    { "key": "environment", "value": "prod" }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Sources"],
        "tags": ["Sources"]
      },
      "put": {
        "summary": "replaceLabelsInSourceV1",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Replaces all Labels in a Source",
        "operationId": "replaceLabelsInSource",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/ReplaceLabelsInSourceAlphaInput" },
              "example": { "sourceId": "rh5BDZp6QDHvXFCkibm1pR", "labels": [{ "key": "environment", "value": "prod" }] }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/ReplaceLabelsInSourceBetaInput" },
              "example": { "sourceId": "rh5BDZp6QDHvXFCkibm1pR", "labels": [{ "key": "environment", "value": "prod" }] }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/ReplaceLabelsInSourceV1Input" },
              "example": { "sourceId": "rh5BDZp6QDHvXFCkibm1pR", "labels": [{ "key": "environment", "value": "prod" }] }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/ReplaceLabelsInSourceAlphaOutput" },
                "example": { "labels": [{ "key": "environment", "value": "prod" }] }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/ReplaceLabelsInSourceBetaOutput" },
                "example": { "labels": [{ "key": "environment", "value": "prod" }] }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/ReplaceLabelsInSourceV1Output" },
                "example": { "labels": [{ "key": "environment", "value": "prod" }] }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ReplaceLabelsInSourceV1Output" },
                "example": { "labels": [{ "key": "environment", "value": "prod" }] }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Sources"],
        "tags": ["Sources"]
      }
    },
    "/users/{userId}/permissions": {
      "post": {
        "summary": "addPermissionsToUserV1",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Adds a list of access permissions to a User.\n\n\nThis endpoint generates the following audit event:\n* Policy Created\n* User Policy Updated\n\n      ",
        "operationId": "addPermissionsToUser",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/AddPermissionsToUserAlphaInput" },
              "example": {
                "userId": "sgJDWk3K21k6LE3tLU9nRK",
                "permissions": [
                  {
                    "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                    "resources": [{ "id": "9aQ1Lj62S4bomZKLF4DPqW", "type": "WORKSPACE" }]
                  }
                ]
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/AddPermissionsToUserBetaInput" },
              "example": {
                "userId": "sgJDWk3K21k6LE3tLU9nRK",
                "permissions": [
                  {
                    "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                    "resources": [{ "id": "9aQ1Lj62S4bomZKLF4DPqW", "type": "WORKSPACE" }]
                  }
                ]
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/AddPermissionsToUserV1Input" },
              "example": {
                "userId": "sgJDWk3K21k6LE3tLU9nRK",
                "permissions": [
                  {
                    "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                    "resources": [{ "id": "9aQ1Lj62S4bomZKLF4DPqW", "type": "WORKSPACE" }]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/AddPermissionsToUserAlphaOutput" },
                "example": {
                  "permissions": [
                    {
                      "roleName": "Workspace Owner",
                      "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                      "subjectId": "sgJDWk3K21k6LE3tLU9nRK",
                      "subjectType": "user",
                      "resources": [{ "id": "9aQ1Lj62S4bomZKLF4DPqW", "type": "WORKSPACE", "labels": [] }]
                    }
                  ]
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/AddPermissionsToUserBetaOutput" },
                "example": {
                  "permissions": [
                    {
                      "roleName": "Workspace Owner",
                      "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                      "subjectId": "sgJDWk3K21k6LE3tLU9nRK",
                      "subjectType": "user",
                      "resources": [{ "id": "9aQ1Lj62S4bomZKLF4DPqW", "type": "WORKSPACE", "labels": [] }]
                    }
                  ]
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/AddPermissionsToUserV1Output" },
                "example": {
                  "permissions": [
                    {
                      "roleName": "Workspace Owner",
                      "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                      "subjectId": "sgJDWk3K21k6LE3tLU9nRK",
                      "subjectType": "user",
                      "resources": [{ "id": "9aQ1Lj62S4bomZKLF4DPqW", "type": "WORKSPACE", "labels": [] }]
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AddPermissionsToUserV1Output" },
                "example": {
                  "permissions": [
                    {
                      "roleName": "Workspace Owner",
                      "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                      "subjectId": "sgJDWk3K21k6LE3tLU9nRK",
                      "subjectType": "user",
                      "resources": [{ "id": "9aQ1Lj62S4bomZKLF4DPqW", "type": "WORKSPACE", "labels": [] }]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Admin", "IAM Users"],
        "tags": ["IAM Users"]
      },
      "put": {
        "summary": "replacePermissionsForUserV1",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Updates the list of access permissions for a User.\n\n\nThis endpoint generates the following audit events:\n* Policy Deleted\n\n      ",
        "operationId": "replacePermissionsForUser",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/ReplacePermissionsForUserAlphaInput" },
              "example": {
                "userId": "sgJDWk3K21k6LE3tLU9nRK",
                "permissions": [
                  {
                    "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                    "resources": [{ "id": "9aQ1Lj62S4bomZKLF4DPqW", "type": "WORKSPACE" }]
                  }
                ]
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/ReplacePermissionsForUserBetaInput" },
              "example": {
                "userId": "sgJDWk3K21k6LE3tLU9nRK",
                "permissions": [
                  {
                    "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                    "resources": [{ "id": "9aQ1Lj62S4bomZKLF4DPqW", "type": "WORKSPACE" }]
                  }
                ]
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/ReplacePermissionsForUserV1Input" },
              "example": {
                "userId": "sgJDWk3K21k6LE3tLU9nRK",
                "permissions": [
                  {
                    "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                    "resources": [{ "id": "9aQ1Lj62S4bomZKLF4DPqW", "type": "WORKSPACE" }]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/ReplacePermissionsForUserAlphaOutput" },
                "example": {
                  "permissions": [
                    {
                      "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                      "roleName": "Workspace Owner",
                      "resources": [{ "id": "9aQ1Lj62S4bomZKLF4DPqW", "type": "WORKSPACE", "labels": [] }]
                    }
                  ]
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/ReplacePermissionsForUserBetaOutput" },
                "example": {
                  "permissions": [
                    {
                      "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                      "roleName": "Workspace Owner",
                      "resources": [{ "id": "9aQ1Lj62S4bomZKLF4DPqW", "type": "WORKSPACE", "labels": [] }]
                    }
                  ]
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/ReplacePermissionsForUserV1Output" },
                "example": {
                  "permissions": [
                    {
                      "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                      "roleName": "Workspace Owner",
                      "resources": [{ "id": "9aQ1Lj62S4bomZKLF4DPqW", "type": "WORKSPACE", "labels": [] }]
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ReplacePermissionsForUserV1Output" },
                "example": {
                  "permissions": [
                    {
                      "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                      "roleName": "Workspace Owner",
                      "resources": [{ "id": "9aQ1Lj62S4bomZKLF4DPqW", "type": "WORKSPACE", "labels": [] }]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Admin", "IAM Users"],
        "tags": ["IAM Users"]
      }
    },
    "/groups/{userGroupId}/permissions": {
      "post": {
        "summary": "addPermissionsToUserGroupV1",
        "parameters": [
          {
            "in": "path",
            "name": "userGroupId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Adds a list of access permissions to a User Group.\n\n\nThis endpoint generates the following audit event:\n* Policy Created\n* User Group Policy Updated\n\n      ",
        "operationId": "addPermissionsToUserGroup",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/AddPermissionsToUserGroupAlphaInput" },
              "example": {
                "userGroupId": "bBABwqbaDf2QdwTbW8bNEm",
                "permissions": [
                  {
                    "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                    "resources": [{ "id": "9aQ1Lj62S4bomZKLF4DPqW", "type": "WORKSPACE" }]
                  }
                ]
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/AddPermissionsToUserGroupBetaInput" },
              "example": {
                "userGroupId": "bBABwqbaDf2QdwTbW8bNEm",
                "permissions": [
                  {
                    "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                    "resources": [{ "id": "9aQ1Lj62S4bomZKLF4DPqW", "type": "WORKSPACE" }]
                  }
                ]
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/AddPermissionsToUserGroupV1Input" },
              "example": {
                "userGroupId": "bBABwqbaDf2QdwTbW8bNEm",
                "permissions": [
                  {
                    "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                    "resources": [{ "id": "9aQ1Lj62S4bomZKLF4DPqW", "type": "WORKSPACE" }]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/AddPermissionsToUserGroupAlphaOutput" },
                "example": {
                  "permissions": [
                    {
                      "roleName": "Workspace Owner",
                      "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                      "subjectId": "bBABwqbaDf2QdwTbW8bNEm",
                      "subjectType": "group",
                      "resources": [{ "id": "9aQ1Lj62S4bomZKLF4DPqW", "type": "WORKSPACE", "labels": [] }]
                    }
                  ]
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/AddPermissionsToUserGroupBetaOutput" },
                "example": {
                  "permissions": [
                    {
                      "roleName": "Workspace Owner",
                      "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                      "subjectId": "bBABwqbaDf2QdwTbW8bNEm",
                      "subjectType": "group",
                      "resources": [{ "id": "9aQ1Lj62S4bomZKLF4DPqW", "type": "WORKSPACE", "labels": [] }]
                    }
                  ]
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/AddPermissionsToUserGroupV1Output" },
                "example": {
                  "permissions": [
                    {
                      "roleName": "Workspace Owner",
                      "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                      "subjectId": "bBABwqbaDf2QdwTbW8bNEm",
                      "subjectType": "group",
                      "resources": [{ "id": "9aQ1Lj62S4bomZKLF4DPqW", "type": "WORKSPACE", "labels": [] }]
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AddPermissionsToUserGroupV1Output" },
                "example": {
                  "permissions": [
                    {
                      "roleName": "Workspace Owner",
                      "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                      "subjectId": "bBABwqbaDf2QdwTbW8bNEm",
                      "subjectType": "group",
                      "resources": [{ "id": "9aQ1Lj62S4bomZKLF4DPqW", "type": "WORKSPACE", "labels": [] }]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Admin", "IAM Groups"],
        "tags": ["IAM Groups"]
      },
      "put": {
        "summary": "replacePermissionsForUserGroupV1",
        "parameters": [
          {
            "in": "path",
            "name": "userGroupId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Updates the list of access permissions for a User Group.\n\n\nThis endpoint generates the following audit events:\n* Policy Deleted\n\n      ",
        "operationId": "replacePermissionsForUserGroup",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/ReplacePermissionsForUserGroupAlphaInput" },
              "example": {
                "userGroupId": "bBABwqbaDf2QdwTbW8bNEm",
                "permissions": [
                  {
                    "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                    "resources": [{ "id": "9aQ1Lj62S4bomZKLF4DPqW", "type": "WORKSPACE" }]
                  }
                ]
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/ReplacePermissionsForUserGroupBetaInput" },
              "example": {
                "userGroupId": "bBABwqbaDf2QdwTbW8bNEm",
                "permissions": [
                  {
                    "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                    "resources": [{ "id": "9aQ1Lj62S4bomZKLF4DPqW", "type": "WORKSPACE" }]
                  }
                ]
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/ReplacePermissionsForUserGroupV1Input" },
              "example": {
                "userGroupId": "bBABwqbaDf2QdwTbW8bNEm",
                "permissions": [
                  {
                    "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                    "resources": [{ "id": "9aQ1Lj62S4bomZKLF4DPqW", "type": "WORKSPACE" }]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/ReplacePermissionsForUserGroupAlphaOutput" },
                "example": {
                  "permissions": [
                    {
                      "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                      "roleName": "Workspace Owner",
                      "resources": [{ "id": "9aQ1Lj62S4bomZKLF4DPqW", "type": "WORKSPACE", "labels": [] }]
                    }
                  ]
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/ReplacePermissionsForUserGroupBetaOutput" },
                "example": {
                  "permissions": [
                    {
                      "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                      "roleName": "Workspace Owner",
                      "resources": [{ "id": "9aQ1Lj62S4bomZKLF4DPqW", "type": "WORKSPACE", "labels": [] }]
                    }
                  ]
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/ReplacePermissionsForUserGroupV1Output" },
                "example": {
                  "permissions": [
                    {
                      "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                      "roleName": "Workspace Owner",
                      "resources": [{ "id": "9aQ1Lj62S4bomZKLF4DPqW", "type": "WORKSPACE", "labels": [] }]
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ReplacePermissionsForUserGroupV1Output" },
                "example": {
                  "permissions": [
                    {
                      "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                      "roleName": "Workspace Owner",
                      "resources": [{ "id": "9aQ1Lj62S4bomZKLF4DPqW", "type": "WORKSPACE", "labels": [] }]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Admin", "IAM Groups"],
        "tags": ["IAM Groups"]
      }
    },
    "/tracking-plans/{trackingPlanId}/sources": {
      "post": {
        "summary": "addSourceToTrackingPlanV1",
        "parameters": [
          {
            "in": "path",
            "name": "trackingPlanId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Connects a source to a tracking plan.\n\n\nThis endpoint generates the following audit events:\n* Source Modified\n\n**Note**: In order to successfully call this endpoint, the specified workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "addSourceToTrackingPlan",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/AddSourceToTrackingPlanAlphaInput" },
              "example": { "trackingPlanId": "tp_sprout_rVGCC6WdrNxjCf6JpCHP", "sourceId": "qQEHquLrjRDN9j1ByrChyn" }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/AddSourceToTrackingPlanBetaInput" },
              "example": { "trackingPlanId": "tp_sprout_rVGCC6WdrNxjCf6JpCHP", "sourceId": "qQEHquLrjRDN9j1ByrChyn" }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/AddSourceToTrackingPlanV1Input" },
              "example": { "trackingPlanId": "tp_sprout_rVGCC6WdrNxjCf6JpCHP", "sourceId": "qQEHquLrjRDN9j1ByrChyn" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/AddSourceToTrackingPlanAlphaOutput" },
                "example": { "status": "SUCCESS" }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/AddSourceToTrackingPlanBetaOutput" },
                "example": { "status": "SUCCESS" }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/AddSourceToTrackingPlanV1Output" },
                "example": { "status": "SUCCESS" }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AddSourceToTrackingPlanV1Output" },
                "example": { "status": "SUCCESS" }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Protocols", "Tracking Plans"],
        "tags": ["Tracking Plans"]
      },
      "get": {
        "summary": "listSourcesFromTrackingPlanV1",
        "parameters": [
          {
            "in": "path",
            "name": "trackingPlanId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          },
          {
            "in": "query",
            "required": false,
            "name": "trackingPlanId",
            "description": "The tracking plan identifier.\n\nThis parameter exists in v1.",
            "schema": { "description": "The tracking plan identifier.", "type": "string", "title": "trackingPlanId" }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Pagination options.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput",
              "description": "Pagination options.",
              "title": "pagination"
            }
          }
        ],
        "deprecated": false,
        "description": "Lists sources connected to a tracking plan\n\n**Note**: In order to successfully call this endpoint, the specified workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "listSourcesFromTrackingPlan",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/ListSourcesFromTrackingPlanAlphaOutput" },
                "example": {
                  "sources": [
                    {
                      "id": "qQEHquLrjRDN9j1ByrChyn",
                      "slug": "ios",
                      "name": "",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "writeKeys": ["3YdEudTwjouyC5WPjpbTik"],
                      "metadata": {
                        "id": "UBrsG9RVzw",
                        "slug": "ios",
                        "name": "iOS",
                        "categories": ["Mobile"],
                        "description": "",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                          "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u"
                        },
                        "options": [],
                        "isCloudEventSource": false
                      },
                      "settings": {},
                      "labels": []
                    }
                  ],
                  "pagination": { "current": "MA==", "totalEntries": 1 }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/ListSourcesFromTrackingPlanBetaOutput" },
                "example": {
                  "sources": [
                    {
                      "id": "qQEHquLrjRDN9j1ByrChyn",
                      "slug": "ios",
                      "name": "",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "writeKeys": ["3YdEudTwjouyC5WPjpbTik"],
                      "metadata": {
                        "id": "UBrsG9RVzw",
                        "slug": "ios",
                        "name": "iOS",
                        "categories": ["Mobile"],
                        "description": "",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                          "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u"
                        },
                        "options": [],
                        "isCloudEventSource": false
                      },
                      "settings": {},
                      "labels": []
                    }
                  ],
                  "pagination": { "current": "MA==", "totalEntries": 1 }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/ListSourcesFromTrackingPlanV1Output" },
                "example": {
                  "sources": [
                    {
                      "id": "qQEHquLrjRDN9j1ByrChyn",
                      "slug": "ios",
                      "name": "",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "writeKeys": ["3YdEudTwjouyC5WPjpbTik"],
                      "metadata": {
                        "id": "UBrsG9RVzw",
                        "slug": "ios",
                        "name": "iOS",
                        "categories": ["Mobile"],
                        "description": "",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                          "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u"
                        },
                        "options": [],
                        "isCloudEventSource": false
                      },
                      "settings": {},
                      "labels": []
                    }
                  ],
                  "pagination": { "current": "MA==", "totalEntries": 1 }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ListSourcesFromTrackingPlanV1Output" },
                "example": {
                  "sources": [
                    {
                      "id": "qQEHquLrjRDN9j1ByrChyn",
                      "slug": "ios",
                      "name": "",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "writeKeys": ["3YdEudTwjouyC5WPjpbTik"],
                      "metadata": {
                        "id": "UBrsG9RVzw",
                        "slug": "ios",
                        "name": "iOS",
                        "categories": ["Mobile"],
                        "description": "",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                          "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u"
                        },
                        "options": [],
                        "isCloudEventSource": false
                      },
                      "settings": {},
                      "labels": []
                    }
                  ],
                  "pagination": { "current": "MA==", "totalEntries": 1 }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Protocols", "Tracking Plans"],
        "tags": ["Tracking Plans"]
      },
      "delete": {
        "summary": "removeSourceFromTrackingPlanV1",
        "parameters": [
          {
            "in": "path",
            "name": "trackingPlanId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Disconnects a source from a tracking plan.\n\n\nThis endpoint generates the following audit events:\n* Source Modified\n\n**Note**: In order to successfully call this endpoint, the specified workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "removeSourceFromTrackingPlan",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/RemoveSourceFromTrackingPlanAlphaInput" },
              "example": { "trackingPlanId": "tp_sprout_rVGCC6WdrNxjCf6JpCHP", "sourceId": "qQEHquLrjRDN9j1ByrChyn" }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/RemoveSourceFromTrackingPlanBetaInput" },
              "example": { "trackingPlanId": "tp_sprout_rVGCC6WdrNxjCf6JpCHP", "sourceId": "qQEHquLrjRDN9j1ByrChyn" }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/RemoveSourceFromTrackingPlanV1Input" },
              "example": { "trackingPlanId": "tp_sprout_rVGCC6WdrNxjCf6JpCHP", "sourceId": "qQEHquLrjRDN9j1ByrChyn" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/RemoveSourceFromTrackingPlanAlphaOutput" },
                "example": { "status": "SUCCESS" }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/RemoveSourceFromTrackingPlanBetaOutput" },
                "example": { "status": "SUCCESS" }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/RemoveSourceFromTrackingPlanV1Output" },
                "example": { "status": "SUCCESS" }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RemoveSourceFromTrackingPlanV1Output" },
                "example": { "status": "SUCCESS" }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Protocols", "Tracking Plans"],
        "tags": ["Tracking Plans"]
      }
    },
    "/groups/{userGroupId}/users": {
      "post": {
        "summary": "addUsersToUserGroupV1",
        "parameters": [
          {
            "in": "path",
            "name": "userGroupId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Adds a list of users or invites to a user group.\n\n\nThis endpoint generates the following audit event:\n* Subjects Added to Group\n* User Added To User Group\n\n      ",
        "operationId": "addUsersToUserGroup",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/AddUsersToUserGroupAlphaInput" },
              "example": { "userGroupId": "bBABwqbaDf2QdwTbW8bNEm", "emails": ["foo@example.com"] }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/AddUsersToUserGroupBetaInput" },
              "example": { "userGroupId": "bBABwqbaDf2QdwTbW8bNEm", "emails": ["foo@example.com"] }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/AddUsersToUserGroupV1Input" },
              "example": { "userGroupId": "bBABwqbaDf2QdwTbW8bNEm", "emails": ["foo@example.com"] }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/AddUsersToUserGroupAlphaOutput" },
                "example": {
                  "userGroup": { "id": "bBABwqbaDf2QdwTbW8bNEm", "name": "PAPI Example Group", "memberCount": 2 }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/AddUsersToUserGroupBetaOutput" },
                "example": {
                  "userGroup": { "id": "bBABwqbaDf2QdwTbW8bNEm", "name": "PAPI Example Group", "memberCount": 2 }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/AddUsersToUserGroupV1Output" },
                "example": {
                  "userGroup": { "id": "bBABwqbaDf2QdwTbW8bNEm", "name": "PAPI Example Group", "memberCount": 1 }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AddUsersToUserGroupV1Output" },
                "example": {
                  "userGroup": { "id": "bBABwqbaDf2QdwTbW8bNEm", "name": "PAPI Example Group", "memberCount": 1 }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Admin", "IAM Groups"],
        "tags": ["IAM Groups"]
      },
      "get": {
        "summary": "listUsersFromUserGroupV1",
        "parameters": [
          {
            "in": "path",
            "name": "userGroupId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          },
          {
            "in": "query",
            "required": false,
            "name": "userGroupId",
            "description": "The id of the user group.\n\nThis parameter exists in v1.",
            "schema": { "description": "The id of the user group.", "type": "string", "title": "userGroupId" }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Pagination for members of a group.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput",
              "description": "Pagination for members of a group.",
              "title": "pagination"
            }
          }
        ],
        "deprecated": false,
        "description": "Returns users belonging to a User Group",
        "operationId": "listUsersFromUserGroup",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/ListUsersFromUserGroupAlphaOutput" },
                "example": {
                  "users": [{ "id": "sgJDWk3K21k6LE3tLU9nRK", "email": "papi@segment.com", "name": "" }],
                  "pagination": { "current": "MA==", "totalEntries": 1 }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/ListUsersFromUserGroupBetaOutput" },
                "example": { "users": [], "pagination": { "current": "MA==", "totalEntries": 0 } }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/ListUsersFromUserGroupV1Output" },
                "example": { "users": [], "pagination": { "current": "MA==", "totalEntries": 0 } }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ListUsersFromUserGroupV1Output" },
                "example": { "users": [], "pagination": { "current": "MA==", "totalEntries": 0 } }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Admin", "IAM Groups"],
        "tags": ["IAM Groups"]
      }
    },
    "/spaces/{spaceId}/messaging-subscriptions/batch": {
      "post": {
        "summary": "batchQueryMessagingSubscriptionsForSpaceAlpha",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Get Messaging Subscriptions for space",
        "operationId": "batchQueryMessagingSubscriptionsForSpace",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/BatchQueryMessagingSubscriptionsForSpaceAlphaInput" },
              "example": {
                "spaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                "subscriptions": [
                  { "key": "test@email.com", "type": "EMAIL" },
                  { "key": "pgibbonsexample.com", "type": "EMAIL" },
                  { "key": "+12162226233", "type": "SMS" },
                  { "key": "11", "type": "SMS" }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/BatchQueryMessagingSubscriptionsForSpaceAlphaOutput" },
                "example": {
                  "successes": [
                    { "key": "jacob@exmple.com", "type": "EMAIL", "status": "SUBSCRIBED" },
                    { "key": "2162226233", "type": "SMS", "status": "DID_NOT_SUBSCRIBE" }
                  ],
                  "failures": [
                    {
                      "key": "pgibbonsexample.com",
                      "type": "EMAIL",
                      "errors": [{ "code": "INVALID_EMAIL", "message": "Email is not valid" }]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Spaces"],
        "tags": ["Spaces"]
      }
    },
    "/regulations/cloudsources/{sourceId}": {
      "post": {
        "summary": "createCloudSourceRegulationV1",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Creates a source-scoped regulation.\n\n      Config API omitted fields:\n- `attributes`,\n- `userAgent`\n      ",
        "operationId": "createCloudSourceRegulation",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/CreateCloudSourceRegulationAlphaInput" },
              "example": {
                "regulationType": "SUPPRESS_ONLY",
                "subjectType": "OBJECT_ID",
                "subjectIds": ["test_object_id"],
                "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                "collection": "some-app-collection"
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/CreateCloudSourceRegulationBetaInput" },
              "example": {
                "regulationType": "SUPPRESS_ONLY",
                "subjectType": "OBJECT_ID",
                "subjectIds": ["test_object_id"],
                "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                "collection": "some-app-collection"
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/CreateCloudSourceRegulationV1Input" },
              "example": {
                "regulationType": "SUPPRESS_ONLY",
                "subjectType": "OBJECT_ID",
                "subjectIds": ["test_object_id"],
                "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                "collection": "some-app-collection"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/CreateCloudSourceRegulationAlphaOutput" },
                "example": { "regulateId": "1qJkfE1tpwvQcklImGksLN629wn" }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/CreateCloudSourceRegulationBetaOutput" },
                "example": { "regulateId": "1qJkfE1tpwvQcklImGksLN629wn" }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/CreateCloudSourceRegulationV1Output" },
                "example": { "regulateId": "1qJkfE1tpwvQcklImGksLN629wn" }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CreateCloudSourceRegulationV1Output" },
                "example": { "regulateId": "1qJkfE1tpwvQcklImGksLN629wn" }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Deletion and Suppression"],
        "tags": ["Deletion and Suppression"]
      }
    },
    "/destinations": {
      "post": {
        "summary": "createDestinationV1",
        "parameters": [],
        "deprecated": false,
        "description": "Creates a new Destination.\n\n\nThis endpoint generates the following audit events:\n* Integration Created\n\n      ",
        "operationId": "createDestination",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/CreateDestinationAlphaInput" },
              "example": {
                "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                "metadataId": "547610a5db31d978f14a5c4e",
                "name": "Example destination",
                "settings": { "apiKey": "XYZ", "retarget": true }
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/CreateDestinationBetaInput" },
              "example": {
                "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                "metadataId": "547610a5db31d978f14a5c4e",
                "name": "my destination beta",
                "settings": { "apiKey": "XYZ", "retarget": true }
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/CreateDestinationV1Input" },
              "example": {
                "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                "metadataId": "547610a5db31d978f14a5c4e",
                "name": "my destination v1",
                "settings": { "apiKey": "XYZ", "retarget": true }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/CreateDestinationAlphaOutput" },
                "example": {
                  "destination": {
                    "id": "6217eec2d091a7b28addd1dd",
                    "enabled": true,
                    "name": "Example destination",
                    "settings": { "apiKey": "••••••••••", "retarget": true },
                    "metadata": {
                      "id": "547610a5db31d978f14a5c4e",
                      "name": "Blueshift",
                      "slug": "blueshift",
                      "logos": {
                        "default": "https://d3hotuclm6if1r.cloudfront.net/logos/Blueshift-default.svg",
                        "mark": "https://cdn.filepicker.io/api/file/Fqsz0q3QPujUyMACLPLr"
                      },
                      "options": [
                        {
                          "name": "apiKey",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Your API key can be found in Account Profile > API Keys",
                          "required": true,
                          "label": "API Key"
                        },
                        {
                          "name": "retarget",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "This will retarget page calls on the client-side",
                          "required": true,
                          "label": "Retarget"
                        }
                      ],
                      "status": "PUBLIC",
                      "categories": ["SMS & Push Notifications", "Advertising", "Email Marketing"],
                      "website": "http://getblueshift.com/",
                      "components": [
                        {
                          "code": "https://github.com/segment-integrations/analytics.js-integration-blueshift",
                          "type": "BROWSER"
                        },
                        {
                          "code": "https://github.com/segmentio/integrations/tree/master/integrations/blueshift",
                          "type": "SERVER"
                        }
                      ],
                      "previousNames": ["Blueshift"],
                      "supportedMethods": {
                        "track": true,
                        "pageview": true,
                        "identify": true,
                        "group": false,
                        "alias": true
                      },
                      "supportedPlatforms": { "browser": true, "mobile": true, "server": true },
                      "supportedFeatures": {
                        "cloudModeInstances": "0",
                        "deviceModeInstances": "0",
                        "replay": false,
                        "browserUnbundling": false,
                        "browserUnbundlingPublic": true
                      },
                      "actions": [],
                      "presets": []
                    },
                    "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/CreateDestinationBetaOutput" },
                "example": {
                  "destination": {
                    "id": "6217eee9d091a73f27ddd1e1",
                    "enabled": true,
                    "name": "my destination beta",
                    "settings": { "apiKey": "••••••••••", "retarget": true },
                    "metadata": {
                      "id": "547610a5db31d978f14a5c4e",
                      "name": "Blueshift",
                      "slug": "blueshift",
                      "logos": {
                        "default": "https://d3hotuclm6if1r.cloudfront.net/logos/Blueshift-default.svg",
                        "mark": "https://cdn.filepicker.io/api/file/Fqsz0q3QPujUyMACLPLr"
                      },
                      "options": [
                        {
                          "name": "apiKey",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Your API key can be found in Account Profile > API Keys",
                          "required": true,
                          "label": "API Key"
                        },
                        {
                          "name": "retarget",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "This will retarget page calls on the client-side",
                          "required": true,
                          "label": "Retarget"
                        }
                      ],
                      "status": "PUBLIC",
                      "categories": ["SMS & Push Notifications", "Advertising", "Email Marketing"],
                      "website": "http://getblueshift.com/",
                      "components": [
                        {
                          "code": "https://github.com/segment-integrations/analytics.js-integration-blueshift",
                          "type": "BROWSER"
                        },
                        {
                          "code": "https://github.com/segmentio/integrations/tree/master/integrations/blueshift",
                          "type": "SERVER"
                        }
                      ],
                      "previousNames": ["Blueshift"],
                      "supportedMethods": {
                        "track": true,
                        "pageview": true,
                        "identify": true,
                        "group": false,
                        "alias": true
                      },
                      "supportedPlatforms": { "browser": true, "mobile": true, "server": true },
                      "supportedFeatures": {
                        "cloudModeInstances": "0",
                        "deviceModeInstances": "0",
                        "replay": false,
                        "browserUnbundling": false,
                        "browserUnbundlingPublic": true
                      },
                      "actions": [],
                      "presets": []
                    },
                    "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                  }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/CreateDestinationV1Output" },
                "example": {
                  "destination": {
                    "id": "62c4adc2286006887bc80342",
                    "enabled": true,
                    "name": "my destination v1",
                    "settings": { "apiKey": "••••••••••", "retarget": true },
                    "metadata": {
                      "id": "547610a5db31d978f14a5c4e",
                      "name": "Blueshift",
                      "description": "Blueshift's predictive marketing automates behavioral messaging on email, push notifications, display, Facebook and more",
                      "slug": "blueshift",
                      "logos": {
                        "default": "https://d3hotuclm6if1r.cloudfront.net/logos/Blueshift-default.svg",
                        "mark": "https://cdn.filepicker.io/api/file/Fqsz0q3QPujUyMACLPLr"
                      },
                      "options": [
                        {
                          "name": "apiKey",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Your API key can be found in Account Profile > API Keys",
                          "required": true,
                          "label": "API Key"
                        },
                        {
                          "name": "retarget",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "This will retarget page calls on the client-side",
                          "required": true,
                          "label": "Retarget"
                        }
                      ],
                      "status": "PUBLIC",
                      "categories": ["SMS & Push Notifications", "Advertising", "Email Marketing"],
                      "website": "http://getblueshift.com/",
                      "components": [
                        {
                          "code": "https://github.com/segment-integrations/analytics.js-integration-blueshift",
                          "type": "BROWSER"
                        },
                        {
                          "code": "https://github.com/segmentio/integrations/tree/master/integrations/blueshift",
                          "type": "SERVER"
                        }
                      ],
                      "previousNames": ["Blueshift"],
                      "supportedMethods": {
                        "track": true,
                        "pageview": true,
                        "identify": true,
                        "group": false,
                        "alias": true
                      },
                      "supportedPlatforms": { "browser": true, "mobile": true, "server": true },
                      "supportedFeatures": {
                        "cloudModeInstances": "0",
                        "deviceModeInstances": "0",
                        "replay": false,
                        "browserUnbundling": false,
                        "browserUnbundlingPublic": true
                      },
                      "actions": [],
                      "presets": []
                    },
                    "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                  }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CreateDestinationV1Output" },
                "example": {
                  "destination": {
                    "id": "62c4adc2286006887bc80342",
                    "enabled": true,
                    "name": "my destination v1",
                    "settings": { "apiKey": "••••••••••", "retarget": true },
                    "metadata": {
                      "id": "547610a5db31d978f14a5c4e",
                      "name": "Blueshift",
                      "description": "Blueshift's predictive marketing automates behavioral messaging on email, push notifications, display, Facebook and more",
                      "slug": "blueshift",
                      "logos": {
                        "default": "https://d3hotuclm6if1r.cloudfront.net/logos/Blueshift-default.svg",
                        "mark": "https://cdn.filepicker.io/api/file/Fqsz0q3QPujUyMACLPLr"
                      },
                      "options": [
                        {
                          "name": "apiKey",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Your API key can be found in Account Profile > API Keys",
                          "required": true,
                          "label": "API Key"
                        },
                        {
                          "name": "retarget",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "This will retarget page calls on the client-side",
                          "required": true,
                          "label": "Retarget"
                        }
                      ],
                      "status": "PUBLIC",
                      "categories": ["SMS & Push Notifications", "Advertising", "Email Marketing"],
                      "website": "http://getblueshift.com/",
                      "components": [
                        {
                          "code": "https://github.com/segment-integrations/analytics.js-integration-blueshift",
                          "type": "BROWSER"
                        },
                        {
                          "code": "https://github.com/segmentio/integrations/tree/master/integrations/blueshift",
                          "type": "SERVER"
                        }
                      ],
                      "previousNames": ["Blueshift"],
                      "supportedMethods": {
                        "track": true,
                        "pageview": true,
                        "identify": true,
                        "group": false,
                        "alias": true
                      },
                      "supportedPlatforms": { "browser": true, "mobile": true, "server": true },
                      "supportedFeatures": {
                        "cloudModeInstances": "0",
                        "deviceModeInstances": "0",
                        "replay": false,
                        "browserUnbundling": false,
                        "browserUnbundlingPublic": true
                      },
                      "actions": [],
                      "presets": []
                    },
                    "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Destinations"],
        "tags": ["Destinations"]
      },
      "get": {
        "summary": "listDestinationsV1",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Required pagination params for the request.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput",
              "description": "Required pagination params for the request.",
              "title": "pagination"
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a list of Destinations.",
        "operationId": "listDestinations",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/ListDestinationsAlphaOutput" },
                "example": {
                  "destinations": [
                    {
                      "id": "5GFhvtz8fha42Cm4B9E6L8",
                      "enabled": true,
                      "name": "",
                      "settings": {
                        "region": "us-west",
                        "roleAddress": "arn::...",
                        "secretId": "secrettt",
                        "stream": "bla"
                      },
                      "metadata": {
                        "id": "57da359580412f644ff33fb9",
                        "name": "Amazon Kinesis",
                        "slug": "amazon-kinesis",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/qr7D6jkLQvd1KAJlY8Zp",
                          "mark": "https://cdn.filepicker.io/api/file/zLZbfcBeSZTfX4CsgBvA"
                        },
                        "options": [
                          {
                            "name": "region",
                            "type": "string",
                            "defaultValue": "us-west-2",
                            "description": "The Kinesis Stream's AWS region key",
                            "required": true,
                            "label": "AWS Kinesis Stream Region"
                          },
                          {
                            "name": "roleAddress",
                            "type": "string",
                            "defaultValue": "",
                            "description": "The address of the AWS role that will be writing to Kinesis (ex: arn:aws:iam::874699288871:role/example-role)",
                            "required": true,
                            "label": "Role Address"
                          },
                          {
                            "name": "secretId",
                            "type": "string",
                            "defaultValue": "#SEGMENT_WORKSPACE_ID",
                            "description": "The External ID to your IAM role. This value is read-only. Reach out to support if you wish to change it. This value is also a secret and should be treated as a password.",
                            "required": true,
                            "label": "Secret ID (Read-Only)"
                          },
                          {
                            "name": "stream",
                            "type": "string",
                            "defaultValue": "",
                            "description": "The Kinesis Stream Name",
                            "required": true,
                            "label": "AWS Kinesis Stream Name"
                          },
                          {
                            "name": "useMessageId",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "You can enable this option if you want to use the Segment generated `messageId` for the **Partition Key**. If you have issues with too many `provisionedthroughputexceededexceptions` errors, this means that your Segment events are not being evenly distributed across your buckets as you do not have even user event distribution (*default partition key is `userId` or `anonymousId`*). This option should provide much more stable and even distribution.",
                            "required": false,
                            "label": "Use Segment Message ID"
                          }
                        ],
                        "status": "PUBLIC",
                        "categories": ["Analytics", "Raw Data"],
                        "website": "https://aws.amazon.com/kinesis/streams/",
                        "components": [
                          {
                            "code": "https://github.com/segmentio/integrations/tree/master/integrations/amazon-kinesis",
                            "type": "SERVER"
                          }
                        ],
                        "previousNames": ["Amazon Kinesis"],
                        "supportedMethods": {
                          "track": true,
                          "pageview": true,
                          "identify": true,
                          "group": true,
                          "alias": true
                        },
                        "supportedPlatforms": { "browser": true, "mobile": true, "server": true },
                        "supportedFeatures": {
                          "cloudModeInstances": "0",
                          "deviceModeInstances": "0",
                          "replay": true,
                          "browserUnbundling": false,
                          "browserUnbundlingPublic": true
                        },
                        "actions": [],
                        "presets": []
                      },
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                    }
                  ],
                  "pagination": { "current": "MA==", "next": "MQ==", "totalEntries": 2 }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/ListDestinationsBetaOutput" },
                "example": {
                  "destinations": [
                    {
                      "id": "5GFhvtz8fha42Cm4B9E6L8",
                      "enabled": true,
                      "name": "",
                      "settings": {
                        "region": "us-west",
                        "roleAddress": "arn::...",
                        "secretId": "secrettt",
                        "stream": "bla"
                      },
                      "metadata": {
                        "id": "57da359580412f644ff33fb9",
                        "name": "Amazon Kinesis",
                        "slug": "amazon-kinesis",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/qr7D6jkLQvd1KAJlY8Zp",
                          "mark": "https://cdn.filepicker.io/api/file/zLZbfcBeSZTfX4CsgBvA"
                        },
                        "options": [
                          {
                            "name": "region",
                            "type": "string",
                            "defaultValue": "us-west-2",
                            "description": "The Kinesis Stream's AWS region key",
                            "required": true,
                            "label": "AWS Kinesis Stream Region"
                          },
                          {
                            "name": "roleAddress",
                            "type": "string",
                            "defaultValue": "",
                            "description": "The address of the AWS role that will be writing to Kinesis (ex: arn:aws:iam::874699288871:role/example-role)",
                            "required": true,
                            "label": "Role Address"
                          },
                          {
                            "name": "secretId",
                            "type": "string",
                            "defaultValue": "#SEGMENT_WORKSPACE_ID",
                            "description": "The External ID to your IAM role. This value is read-only. Reach out to support if you wish to change it. This value is also a secret and should be treated as a password.",
                            "required": true,
                            "label": "Secret ID (Read-Only)"
                          },
                          {
                            "name": "stream",
                            "type": "string",
                            "defaultValue": "",
                            "description": "The Kinesis Stream Name",
                            "required": true,
                            "label": "AWS Kinesis Stream Name"
                          },
                          {
                            "name": "useMessageId",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "You can enable this option if you want to use the Segment generated `messageId` for the **Partition Key**. If you have issues with too many `provisionedthroughputexceededexceptions` errors, this means that your Segment events are not being evenly distributed across your buckets as you do not have even user event distribution (*default partition key is `userId` or `anonymousId`*). This option should provide much more stable and even distribution.",
                            "required": false,
                            "label": "Use Segment Message ID"
                          }
                        ],
                        "status": "PUBLIC",
                        "categories": ["Analytics", "Raw Data"],
                        "website": "https://aws.amazon.com/kinesis/streams/",
                        "components": [
                          {
                            "code": "https://github.com/segmentio/integrations/tree/master/integrations/amazon-kinesis",
                            "type": "SERVER"
                          }
                        ],
                        "previousNames": ["Amazon Kinesis"],
                        "supportedMethods": {
                          "track": true,
                          "pageview": true,
                          "identify": true,
                          "group": true,
                          "alias": true
                        },
                        "supportedPlatforms": { "browser": true, "mobile": true, "server": true },
                        "supportedFeatures": {
                          "cloudModeInstances": "0",
                          "deviceModeInstances": "0",
                          "replay": true,
                          "browserUnbundling": false,
                          "browserUnbundlingPublic": true
                        },
                        "actions": [],
                        "presets": []
                      },
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                    }
                  ],
                  "pagination": { "current": "MA==", "next": "MQ==", "totalEntries": 2 }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/ListDestinationsV1Output" },
                "example": {
                  "destinations": [
                    {
                      "id": "5GFhvtz8fha42Cm4B9E6L8",
                      "enabled": true,
                      "name": "",
                      "settings": {
                        "region": "us-west",
                        "roleAddress": "arn::...",
                        "secretId": "secrettt",
                        "stream": "bla"
                      },
                      "metadata": {
                        "id": "57da359580412f644ff33fb9",
                        "name": "Amazon Kinesis",
                        "description": "Amazon Kinesis Streams enables you to build custom applications that process or analyze streaming data for specialized needs. Amazon Kinesis Streams can continuously capture and store terabytes of data per hour from hundreds of thousands of sources such as website clickstreams, financial transactions, social media feeds, IT logs, and location-tracking events.",
                        "slug": "amazon-kinesis",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/qr7D6jkLQvd1KAJlY8Zp",
                          "mark": "https://cdn.filepicker.io/api/file/zLZbfcBeSZTfX4CsgBvA"
                        },
                        "options": [
                          {
                            "name": "region",
                            "type": "string",
                            "defaultValue": "us-west-2",
                            "description": "The Kinesis Stream's AWS region key",
                            "required": true,
                            "label": "AWS Kinesis Stream Region"
                          },
                          {
                            "name": "roleAddress",
                            "type": "string",
                            "defaultValue": "",
                            "description": "The address of the AWS role that will be writing to Kinesis (ex: arn:aws:iam::874699288871:role/example-role)",
                            "required": true,
                            "label": "Role Address"
                          },
                          {
                            "name": "secretId",
                            "type": "string",
                            "defaultValue": "#SEGMENT_WORKSPACE_ID",
                            "description": "The External ID to your IAM role. This value is read-only. Reach out to support if you wish to change it. This value is also a secret and should be treated as a password.",
                            "required": true,
                            "label": "Secret ID (Read-Only)"
                          },
                          {
                            "name": "stream",
                            "type": "string",
                            "defaultValue": "",
                            "description": "The Kinesis Stream Name",
                            "required": true,
                            "label": "AWS Kinesis Stream Name"
                          },
                          {
                            "name": "useMessageId",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "You can enable this option if you want to use the Segment generated `messageId` for the **Partition Key**. If you have issues with too many `provisionedthroughputexceededexceptions` errors, this means that your Segment events are not being evenly distributed across your buckets as you do not have even user event distribution (*default partition key is `userId` or `anonymousId`*). This option should provide much more stable and even distribution.",
                            "required": false,
                            "label": "Use Segment Message ID"
                          }
                        ],
                        "status": "PUBLIC",
                        "categories": ["Analytics", "Raw Data"],
                        "website": "https://aws.amazon.com/kinesis/streams/",
                        "components": [
                          {
                            "code": "https://github.com/segmentio/integrations/tree/master/integrations/amazon-kinesis",
                            "type": "SERVER"
                          }
                        ],
                        "previousNames": ["Amazon Kinesis"],
                        "supportedMethods": {
                          "track": true,
                          "pageview": true,
                          "identify": true,
                          "group": true,
                          "alias": true
                        },
                        "supportedPlatforms": { "browser": true, "mobile": true, "server": true },
                        "supportedFeatures": {
                          "cloudModeInstances": "0",
                          "deviceModeInstances": "0",
                          "replay": true,
                          "browserUnbundling": false,
                          "browserUnbundlingPublic": true
                        },
                        "actions": [],
                        "presets": []
                      },
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                    }
                  ],
                  "pagination": { "current": "MA==", "next": "MQ==", "totalEntries": 2 }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ListDestinationsV1Output" },
                "example": {
                  "destinations": [
                    {
                      "id": "5GFhvtz8fha42Cm4B9E6L8",
                      "enabled": true,
                      "name": "",
                      "settings": {
                        "region": "us-west",
                        "roleAddress": "arn::...",
                        "secretId": "secrettt",
                        "stream": "bla"
                      },
                      "metadata": {
                        "id": "57da359580412f644ff33fb9",
                        "name": "Amazon Kinesis",
                        "description": "Amazon Kinesis Streams enables you to build custom applications that process or analyze streaming data for specialized needs. Amazon Kinesis Streams can continuously capture and store terabytes of data per hour from hundreds of thousands of sources such as website clickstreams, financial transactions, social media feeds, IT logs, and location-tracking events.",
                        "slug": "amazon-kinesis",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/qr7D6jkLQvd1KAJlY8Zp",
                          "mark": "https://cdn.filepicker.io/api/file/zLZbfcBeSZTfX4CsgBvA"
                        },
                        "options": [
                          {
                            "name": "region",
                            "type": "string",
                            "defaultValue": "us-west-2",
                            "description": "The Kinesis Stream's AWS region key",
                            "required": true,
                            "label": "AWS Kinesis Stream Region"
                          },
                          {
                            "name": "roleAddress",
                            "type": "string",
                            "defaultValue": "",
                            "description": "The address of the AWS role that will be writing to Kinesis (ex: arn:aws:iam::874699288871:role/example-role)",
                            "required": true,
                            "label": "Role Address"
                          },
                          {
                            "name": "secretId",
                            "type": "string",
                            "defaultValue": "#SEGMENT_WORKSPACE_ID",
                            "description": "The External ID to your IAM role. This value is read-only. Reach out to support if you wish to change it. This value is also a secret and should be treated as a password.",
                            "required": true,
                            "label": "Secret ID (Read-Only)"
                          },
                          {
                            "name": "stream",
                            "type": "string",
                            "defaultValue": "",
                            "description": "The Kinesis Stream Name",
                            "required": true,
                            "label": "AWS Kinesis Stream Name"
                          },
                          {
                            "name": "useMessageId",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "You can enable this option if you want to use the Segment generated `messageId` for the **Partition Key**. If you have issues with too many `provisionedthroughputexceededexceptions` errors, this means that your Segment events are not being evenly distributed across your buckets as you do not have even user event distribution (*default partition key is `userId` or `anonymousId`*). This option should provide much more stable and even distribution.",
                            "required": false,
                            "label": "Use Segment Message ID"
                          }
                        ],
                        "status": "PUBLIC",
                        "categories": ["Analytics", "Raw Data"],
                        "website": "https://aws.amazon.com/kinesis/streams/",
                        "components": [
                          {
                            "code": "https://github.com/segmentio/integrations/tree/master/integrations/amazon-kinesis",
                            "type": "SERVER"
                          }
                        ],
                        "previousNames": ["Amazon Kinesis"],
                        "supportedMethods": {
                          "track": true,
                          "pageview": true,
                          "identify": true,
                          "group": true,
                          "alias": true
                        },
                        "supportedPlatforms": { "browser": true, "mobile": true, "server": true },
                        "supportedFeatures": {
                          "cloudModeInstances": "0",
                          "deviceModeInstances": "0",
                          "replay": true,
                          "browserUnbundling": false,
                          "browserUnbundlingPublic": true
                        },
                        "actions": [],
                        "presets": []
                      },
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                    }
                  ],
                  "pagination": { "current": "MA==", "next": "MQ==", "totalEntries": 2 }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Destinations"],
        "tags": ["Destinations"]
      }
    },
    "/destinations/{destinationId}/subscriptions": {
      "post": {
        "summary": "createDestinationSubscriptionAlpha",
        "parameters": [
          {
            "in": "path",
            "name": "destinationId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Creates a new destination subscription",
        "operationId": "createDestinationSubscription",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/CreateDestinationSubscriptionAlphaInput" },
              "example": {
                "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                "name": "Example Subscription",
                "actionId": "jiMz7MfHNeHmUckzRnUGkU",
                "trigger": "type = \"track\"",
                "enabled": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/CreateDestinationSubscriptionAlphaOutput" },
                "example": {
                  "destinationSubscription": {
                    "id": "rwzxHPsV1aVLt6C4TsaJG3",
                    "name": "Example Subscription",
                    "actionId": "jiMz7MfHNeHmUckzRnUGkU",
                    "actionSlug": "someActionSlug",
                    "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                    "trigger": "type = \"track\"",
                    "enabled": false,
                    "settings": {}
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Destinations"],
        "tags": ["Destinations"]
      },
      "get": {
        "summary": "listSubscriptionsFromDestinationAlpha",
        "parameters": [
          {
            "in": "path",
            "name": "destinationId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          },
          {
            "in": "query",
            "required": false,
            "name": "destinationId",
            "description": "The destination id for these subscriptions.\n\nThis parameter exists in alpha.",
            "schema": {
              "description": "The destination id for these subscriptions.",
              "type": "string",
              "title": "destinationId"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Pagination options.\n\nThis parameter exists in alpha.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput",
              "description": "Pagination options.",
              "title": "pagination"
            }
          }
        ],
        "deprecated": false,
        "description": "Lists subscriptions for a destination",
        "operationId": "listSubscriptionsFromDestination",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/ListSubscriptionsFromDestinationAlphaOutput" },
                "example": {
                  "subscriptions": [
                    {
                      "id": "eoeXaMeAYcB2XvEApJDrQs",
                      "name": "Test Subscription",
                      "actionId": "uD9jEQ4DxJZzhzVqppM7UD",
                      "actionSlug": "Public API Slug",
                      "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                      "trigger": "type = \"track\"",
                      "enabled": true,
                      "settings": {}
                    }
                  ],
                  "pagination": { "current": "MA==", "totalEntries": 1 }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Destinations"],
        "tags": ["Destinations"]
      }
    },
    "/sources/{sourceId}/edge-functions": {
      "post": {
        "summary": "createEdgeFunctionsAlpha",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Create EdgeFunctions for your source, given a valid upload URL for an Edge Functions bundle.\n\n**Note**: In order to successfully call this endpoint, the specified workspace needs to have the Edge Functions feature enabled. Please reach out to your customer success manager for more information.\n      ",
        "operationId": "createEdgeFunctions",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/CreateEdgeFunctionsAlphaInput" },
              "example": {
                "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                "uploadURL": "https://segment-edge-functions-bundles-stage.s3.us-west-2.amazonaws.com/qQEHquLrjRDN9j1ByrChyn/a582aa47-9c65-4b67-ac88-f322a900e57b.js?Content-Type=text%2Fjavascript%3B%20charset%3Dutf-8&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIA4XLQZ2ITROAO34VB%2F20220517%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20220517T190802Z&X-Amz-Expires=900&X-Amz-Security-Token=FwoGZXIvYXdzEPz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaDHEHH2JJv73l%2F64GYSKDAvMVVWeUO7z%2FIgk2OnAfnexU0nrp%2B3WI6vkqXdUq50QGv8MElGvXFWLMvBbWW7LEmdkdKnoVZAFlVVydQRkVwDDxVBuFnSIW8yHELhOqRluLXxLhhStg72Q9BcNDO9x2XXqLBSHi1vhMAKPw1ZvSqDxs%2FEWXyk2mGRXHLCrExZifr4dsHUyxKcZULv%2B4eYrio%2FqBbE43FPwXBayH6ZDmw1w48s76W7xbzy8otDE9I4nP2CqRwapKi6NNTYgUZ6hqUTgOc%2Fmn0RUIY5pOsBVICffw42iVA01qJhA0hzAoIEHtTUF%2FWng1OH9Q3mrnkGF4tlS4xQf9lwoMJBxk1YsVDbiS7MAotOGPlAYyK%2Fq%2FIYWfNCR8UYn8s3gqli8Wrnjs61pd%2FPjx3RoilVOTQZ%2FmH6kSflIZrwc%3D&X-Amz-Signature=5690121a90fb5828315f8b12f651c1313107894eca360d3e325387c5b3cf6afe&X-Amz-SignedHeaders=host%3Bx-amz-grant-full-control%3Bx-amz-grant-read&x-amz-grant-full-control=id%3D&x-amz-grant-read=id%3D"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/CreateEdgeFunctionsAlphaOutput" },
                "example": {
                  "edgeFunctions": {
                    "id": "a582aa47-9c65-4b67-ac88-f322a900e57b",
                    "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                    "downloadURL": "https://cdn.edgefn.segment.build/qQEHquLrjRDN9j1ByrChyn/a582aa47-9c65-4b67-ac88-f322a900e57b.js",
                    "createdBy": "public-api-token/1ba60cca",
                    "createdAt": "2006-01-02T15:04:05.000Z",
                    "version": 1
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Edge Functions"],
        "tags": ["Edge Functions"]
      }
    },
    "/destination/{destinationId}/filters": {
      "post": {
        "summary": "createFilterForDestinationV1",
        "parameters": [
          {
            "in": "path",
            "name": "destinationId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Creates a filter in a destination.\n\n\nThis endpoint generates the following audit events:\n* Destination Filter Created\n\n      ",
        "operationId": "createFilterForDestination",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/CreateFilterForDestinationAlphaInput" },
              "example": {
                "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                "title": "Filter \"Identify\" events",
                "description": "Drop Identify tracking from this destination",
                "if": "type = \"identify\"",
                "actions": [{ "type": "DROP" }],
                "enabled": true
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/CreateFilterForDestinationBetaInput" },
              "example": {
                "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                "title": "Filter \"Identify\" events",
                "description": "Drop Identify tracking from this destination",
                "if": "type = \"identify\"",
                "actions": [{ "type": "DROP" }],
                "enabled": true
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/CreateFilterForDestinationV1Input" },
              "example": {
                "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                "title": "Filter \"Identify\" events",
                "description": "Drop Identify tracking from this destination",
                "if": "type = \"identify\"",
                "actions": [{ "type": "DROP" }],
                "enabled": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/CreateFilterForDestinationAlphaOutput" },
                "example": {
                  "filter": {
                    "id": "25bqhC7HPYvLkGs1M3QLmeAyRiB",
                    "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                    "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                    "if": "type = \"identify\"",
                    "actions": [{ "type": "DROP" }],
                    "title": "Filter \"Identify\" events",
                    "description": "Drop Identify tracking from this destination",
                    "enabled": true,
                    "createdAt": "2006-01-02T15:04:05.000Z",
                    "updatedAt": "2006-01-02T15:04:05.000Z"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/CreateFilterForDestinationBetaOutput" },
                "example": {
                  "filter": {
                    "id": "25kzdQnduACTsVGQmoUqaOBG3bU",
                    "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                    "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                    "if": "type = \"identify\"",
                    "actions": [{ "type": "DROP" }],
                    "title": "Filter \"Identify\" events",
                    "description": "Drop Identify tracking from this destination",
                    "enabled": true,
                    "createdAt": "2006-01-02T15:04:05.000Z",
                    "updatedAt": "2006-01-02T15:04:05.000Z"
                  }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/CreateFilterForDestinationV1Output" },
                "example": {
                  "filter": {
                    "id": "2BaMC3Hhjthj9yZtzAGc8O3zEHA",
                    "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                    "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                    "if": "type = \"identify\"",
                    "actions": [{ "type": "DROP" }],
                    "title": "Filter \"Identify\" events",
                    "description": "Drop Identify tracking from this destination",
                    "enabled": true,
                    "createdAt": "2006-01-02T15:04:05.000Z",
                    "updatedAt": "2006-01-02T15:04:05.000Z"
                  }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CreateFilterForDestinationV1Output" },
                "example": {
                  "filter": {
                    "id": "2BaMC3Hhjthj9yZtzAGc8O3zEHA",
                    "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                    "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                    "if": "type = \"identify\"",
                    "actions": [{ "type": "DROP" }],
                    "title": "Filter \"Identify\" events",
                    "description": "Drop Identify tracking from this destination",
                    "enabled": true,
                    "createdAt": "2006-01-02T15:04:05.000Z",
                    "updatedAt": "2006-01-02T15:04:05.000Z"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Destination Filters"],
        "tags": ["Destination Filters"]
      },
      "get": {
        "summary": "listFiltersFromDestinationV1",
        "parameters": [
          {
            "in": "path",
            "name": "destinationId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          },
          {
            "in": "query",
            "required": false,
            "name": "destinationId",
            "description": "The id of the destination instance to which the filter belongs.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The id of the destination instance to which the filter belongs.",
              "type": "string",
              "title": "destinationId"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Pagination options.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput",
              "description": "Pagination options.",
              "title": "pagination"
            }
          }
        ],
        "deprecated": false,
        "description": "Lists filters for a destination",
        "operationId": "listFiltersFromDestination",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/ListFiltersFromDestinationAlphaOutput" },
                "example": {
                  "filters": [
                    {
                      "id": "xx6AySGeFExzdv2Gw2EuhV",
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                      "if": "event = \"Order Completed\"",
                      "actions": [{ "type": "DROP_PROPERTIES", "fields": { "properties": ["userId", "secretValue"] } }],
                      "title": "Order Completed",
                      "description": "This filter probably does nothing",
                      "enabled": true,
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z"
                    }
                  ],
                  "pagination": { "current": "MA==", "totalEntries": 1 }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/ListFiltersFromDestinationBetaOutput" },
                "example": {
                  "filters": [
                    {
                      "id": "xx6AySGeFExzdv2Gw2EuhV",
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                      "if": "!(type = \"track\")",
                      "actions": [{ "type": "DROP" }],
                      "title": "Allow Track",
                      "description": "Allows track calls through to the destination.",
                      "enabled": true,
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z"
                    }
                  ],
                  "pagination": { "current": "MA==", "totalEntries": 1 }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/ListFiltersFromDestinationV1Output" },
                "example": {
                  "filters": [
                    {
                      "id": "xx6AySGeFExzdv2Gw2EuhV",
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                      "if": "!(type = \"track\")",
                      "actions": [{ "type": "DROP" }],
                      "title": "Allow Track",
                      "description": "Allows track calls through to the destination.",
                      "enabled": true,
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z"
                    }
                  ],
                  "pagination": { "current": "MA==", "totalEntries": 1 }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ListFiltersFromDestinationV1Output" },
                "example": {
                  "filters": [
                    {
                      "id": "xx6AySGeFExzdv2Gw2EuhV",
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                      "if": "!(type = \"track\")",
                      "actions": [{ "type": "DROP" }],
                      "title": "Allow Track",
                      "description": "Allows track calls through to the destination.",
                      "enabled": true,
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z"
                    }
                  ],
                  "pagination": { "current": "MA==", "totalEntries": 1 }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Destination Filters"],
        "tags": ["Destination Filters"]
      }
    },
    "/functions": {
      "post": {
        "summary": "createFunctionV1",
        "parameters": [],
        "deprecated": false,
        "description": "Creates a function\n\n**Note**: In order to successfully call this endpoint, the specified workspace needs to have the Functions feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "createFunction",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/CreateFunctionAlphaInput" },
              "example": {
                "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                "settings": [
                  {
                    "name": "apiKey",
                    "label": "api key",
                    "type": "STRING",
                    "description": "api key",
                    "required": false,
                    "sensitive": false
                  },
                  {
                    "name": "mySecret",
                    "label": "my secret key",
                    "type": "STRING",
                    "description": "secret key",
                    "required": false,
                    "sensitive": true
                  }
                ],
                "displayName": "PAPI Source Function",
                "resourceType": "SOURCE",
                "logoUrl": "https://placekitten.com/200/139",
                "description": "My source function"
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/CreateFunctionBetaInput" },
              "example": {
                "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                "settings": [
                  {
                    "name": "apiKey",
                    "label": "api key",
                    "type": "STRING",
                    "description": "api key",
                    "required": false,
                    "sensitive": false
                  },
                  {
                    "name": "mySecret",
                    "label": "my secret key",
                    "type": "STRING",
                    "description": "secret key",
                    "required": false,
                    "sensitive": true
                  }
                ],
                "displayName": "PAPI Source Function",
                "resourceType": "SOURCE",
                "logoUrl": "https://placekitten.com/200/139",
                "description": "My source function"
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/CreateFunctionV1Input" },
              "example": {
                "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                "settings": [
                  {
                    "name": "apiKey",
                    "label": "api key",
                    "type": "STRING",
                    "description": "api key",
                    "required": false,
                    "sensitive": false
                  },
                  {
                    "name": "mySecret",
                    "label": "my secret key",
                    "type": "STRING",
                    "description": "secret key",
                    "required": false,
                    "sensitive": true
                  }
                ],
                "displayName": "PAPI Source Function",
                "resourceType": "SOURCE",
                "logoUrl": "https://placekitten.com/200/139",
                "description": "My source function"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/CreateFunctionAlphaOutput" },
                "example": {
                  "function": {
                    "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                    "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                    "displayName": "PAPI Source Function",
                    "description": "My source function",
                    "logoUrl": "https://placekitten.com/200/139",
                    "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                    "createdAt": "2006-01-02T15:04:05.000Z",
                    "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                    "previewWebhookUrl": "",
                    "settings": [
                      {
                        "name": "apiKey",
                        "label": "api key",
                        "description": "api key",
                        "type": "STRING",
                        "required": false,
                        "sensitive": false
                      },
                      {
                        "name": "mySecret",
                        "label": "my secret key",
                        "description": "secret key",
                        "type": "STRING",
                        "required": false,
                        "sensitive": true
                      }
                    ],
                    "buildpack": "",
                    "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                    "batchMaxCount": 0,
                    "resourceType": "SOURCE"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/CreateFunctionBetaOutput" },
                "example": {
                  "function": {
                    "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                    "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                    "displayName": "PAPI Source Function",
                    "description": "My source function",
                    "logoUrl": "https://placekitten.com/200/139",
                    "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                    "createdAt": "2006-01-02T15:04:05.000Z",
                    "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                    "previewWebhookUrl": "",
                    "settings": [
                      {
                        "name": "apiKey",
                        "label": "api key",
                        "description": "api key",
                        "type": "STRING",
                        "required": false,
                        "sensitive": false
                      },
                      {
                        "name": "mySecret",
                        "label": "my secret key",
                        "description": "secret key",
                        "type": "STRING",
                        "required": false,
                        "sensitive": true
                      }
                    ],
                    "buildpack": "",
                    "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                    "batchMaxCount": 0,
                    "resourceType": "SOURCE"
                  }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/CreateFunctionV1Output" },
                "example": {
                  "function": {
                    "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                    "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                    "displayName": "PAPI Source Function",
                    "description": "My source function",
                    "logoUrl": "https://placekitten.com/200/139",
                    "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                    "createdAt": "2006-01-02T15:04:05.000Z",
                    "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                    "previewWebhookUrl": "",
                    "settings": [
                      {
                        "name": "apiKey",
                        "label": "api key",
                        "description": "api key",
                        "type": "STRING",
                        "required": false,
                        "sensitive": false
                      },
                      {
                        "name": "mySecret",
                        "label": "my secret key",
                        "description": "secret key",
                        "type": "STRING",
                        "required": false,
                        "sensitive": true
                      }
                    ],
                    "buildpack": "",
                    "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                    "batchMaxCount": 0,
                    "resourceType": "SOURCE"
                  }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CreateFunctionV1Output" },
                "example": {
                  "function": {
                    "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                    "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                    "displayName": "PAPI Source Function",
                    "description": "My source function",
                    "logoUrl": "https://placekitten.com/200/139",
                    "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                    "createdAt": "2006-01-02T15:04:05.000Z",
                    "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                    "previewWebhookUrl": "",
                    "settings": [
                      {
                        "name": "apiKey",
                        "label": "api key",
                        "description": "api key",
                        "type": "STRING",
                        "required": false,
                        "sensitive": false
                      },
                      {
                        "name": "mySecret",
                        "label": "my secret key",
                        "description": "secret key",
                        "type": "STRING",
                        "required": false,
                        "sensitive": true
                      }
                    ],
                    "buildpack": "",
                    "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                    "batchMaxCount": 0,
                    "resourceType": "SOURCE"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Functions"],
        "tags": ["Functions"]
      },
      "get": {
        "summary": "listFunctionsV1",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Pagination parameters.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput",
              "description": "Pagination parameters.",
              "title": "pagination"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "resourceType",
            "description": "The function type.\n\nConfig API note: equal to `type`.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The function type.\n\nConfig API note: equal to `type`.",
              "enum": ["DESTINATION", "SOURCE"],
              "type": "string",
              "title": "resourceType"
            }
          }
        ],
        "deprecated": false,
        "description": "Lists all functions in a workspace\n\n**Note**: In order to successfully call this endpoint, the specified workspace needs to have the Functions feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "listFunctions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/ListFunctionsAlphaOutput" },
                "example": {
                  "functions": [
                    {
                      "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                      "displayName": "PAPI Source Function",
                      "description": "My source function",
                      "logoUrl": "https://placekitten.com/200/139",
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                      "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                      "resourceType": "SOURCE"
                    }
                  ],
                  "pagination": { "current": "MQ==" }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/ListFunctionsBetaOutput" },
                "example": {
                  "functions": [
                    {
                      "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                      "displayName": "PAPI Source Function",
                      "description": "My source function",
                      "logoUrl": "https://placekitten.com/200/139",
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                      "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                      "resourceType": "SOURCE"
                    }
                  ],
                  "pagination": { "current": "MQ==" }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/ListFunctionsV1Output" },
                "example": {
                  "functions": [
                    {
                      "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                      "displayName": "PAPI Source Function",
                      "description": "My source function",
                      "logoUrl": "https://placekitten.com/200/139",
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                      "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                      "resourceType": "SOURCE"
                    }
                  ],
                  "pagination": { "current": "MQ==" }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ListFunctionsV1Output" },
                "example": {
                  "functions": [
                    {
                      "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                      "displayName": "PAPI Source Function",
                      "description": "My source function",
                      "logoUrl": "https://placekitten.com/200/139",
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                      "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                      "resourceType": "SOURCE"
                    }
                  ],
                  "pagination": { "current": "MQ==" }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Functions"],
        "tags": ["Functions"]
      }
    },
    "/functions/{functionId}/deploy": {
      "post": {
        "summary": "createFunctionDeploymentV1",
        "parameters": [
          {
            "in": "path",
            "name": "functionId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Deploys a function. Only applicable to source function instances.\n\n**Note**: In order to successfully call this endpoint, the specified workspace needs to have the Functions feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "createFunctionDeployment",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/CreateFunctionDeploymentAlphaInput" },
              "example": { "functionId": "sfn_rh5BDZp6QDHvXFCkibm1pR" }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/CreateFunctionDeploymentBetaInput" },
              "example": { "functionId": "sfn_rh5BDZp6QDHvXFCkibm1pR" }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/CreateFunctionDeploymentV1Input" },
              "example": { "functionId": "sfn_rh5BDZp6QDHvXFCkibm1pR" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/CreateFunctionDeploymentAlphaOutput" },
                "example": { "functionDeployment": { "status": "SUCCESS" } }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/CreateFunctionDeploymentBetaOutput" },
                "example": { "functionDeployment": { "status": "SUCCESS" } }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/CreateFunctionDeploymentV1Output" },
                "example": { "functionDeployment": { "status": "SUCCESS" } }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CreateFunctionDeploymentV1Output" },
                "example": { "functionDeployment": { "status": "SUCCESS" } }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Functions"],
        "tags": ["Functions"]
      }
    },
    "/invites": {
      "post": {
        "summary": "createInvitesV1",
        "parameters": [],
        "deprecated": false,
        "description": "Invites a list of Users to join a Workspace.\n\n\nThis endpoint generates the following audit events:\n* Non-Segment User Invited to Workspace\n* Policy Created\n* New Segment User Invited to Workspace\n\n\nConfig API omitted fields:\n- `parent`\n      ",
        "operationId": "createInvites",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/CreateInvitesAlphaInput" },
              "example": {
                "invites": [
                  {
                    "email": "foo@example.com",
                    "permissions": [
                      {
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "resources": [{ "id": "9aQ1Lj62S4bomZKLF4DPqW", "type": "WORKSPACE" }]
                      }
                    ]
                  }
                ]
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/CreateInvitesBetaInput" },
              "example": {
                "invites": [
                  {
                    "email": "foo@example.com",
                    "permissions": [
                      {
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "resources": [{ "id": "9aQ1Lj62S4bomZKLF4DPqW", "type": "WORKSPACE" }]
                      }
                    ]
                  }
                ]
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/CreateInvitesV1Input" },
              "example": {
                "invites": [
                  {
                    "email": "foo@example.com",
                    "permissions": [
                      {
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "resources": [{ "id": "9aQ1Lj62S4bomZKLF4DPqW", "type": "WORKSPACE" }]
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/CreateInvitesAlphaOutput" },
                "example": { "emails": ["foo@example.com"] }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/CreateInvitesBetaOutput" },
                "example": { "emails": ["foo@example.com"] }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/CreateInvitesV1Output" },
                "example": { "emails": ["foo@example.com"] }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CreateInvitesV1Output" },
                "example": { "emails": ["foo@example.com"] }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Admin", "IAM Users"],
        "tags": ["IAM Users"]
      },
      "delete": {
        "summary": "deleteInvitesV1",
        "parameters": [],
        "deprecated": false,
        "description": "Removes a list of invitations to join a Workspace.\n\n\nThis endpoint generates the following audit event:\n* Invite Deleted\n* Group Memberships Deleted\n\n      ",
        "operationId": "deleteInvites",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/DeleteInvitesAlphaInput" },
              "example": { "emails": ["foo@example.com"] }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/DeleteInvitesBetaInput" },
              "example": { "emails": ["foo@example.com"] }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/DeleteInvitesV1Input" },
              "example": { "emails": ["foo@example.com"] }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/DeleteInvitesAlphaOutput" },
                "example": { "status": "SUCCESS" }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/DeleteInvitesBetaOutput" },
                "example": { "status": "SUCCESS" }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/DeleteInvitesV1Output" },
                "example": { "status": "SUCCESS" }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DeleteInvitesV1Output" },
                "example": { "status": "SUCCESS" }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Admin", "IAM Users"],
        "tags": ["IAM Users"]
      },
      "get": {
        "summary": "listInvitesV1",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Defines the pagination parameters.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput",
              "description": "Defines the pagination parameters.",
              "title": "pagination"
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a list of invitations to join a Workspace.\n\nConfig API omitted fields:\n- `parent`\n",
        "operationId": "listInvites",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/ListInvitesAlphaOutput" },
                "example": { "pagination": { "current": "MA==", "totalEntries": 0 }, "invites": [] }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/ListInvitesBetaOutput" },
                "example": { "pagination": { "current": "MA==", "totalEntries": 0 }, "invites": [] }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/ListInvitesV1Output" },
                "example": { "pagination": { "current": "MA==", "totalEntries": 1 }, "invites": ["foo@example.com"] }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ListInvitesV1Output" },
                "example": { "pagination": { "current": "MA==", "totalEntries": 1 }, "invites": ["foo@example.com"] }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Admin", "IAM Users"],
        "tags": ["IAM Users"]
      }
    },
    "/labels": {
      "post": {
        "summary": "createLabelV1",
        "parameters": [],
        "deprecated": false,
        "description": "Creates a new Label.\n\n\nThis endpoint generates the following audit events:\n* Label Created\n\n      ",
        "operationId": "createLabel",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/CreateLabelAlphaInput" },
              "example": {
                "label": { "key": "environment", "value": "yolo", "description": "an environment for courageous devs" }
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/CreateLabelBetaInput" },
              "example": {
                "label": { "key": "environment", "value": "yolo", "description": "an environment for courageous devs" }
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/CreateLabelV1Input" },
              "example": {
                "label": { "key": "environment", "value": "yolo", "description": "an environment for courageous devs" }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/CreateLabelAlphaOutput" },
                "example": {
                  "labels": [
                    { "key": "environment", "value": "dev", "description": "" },
                    { "key": "environment", "value": "prod", "description": "" },
                    { "key": "environment", "value": "yolo", "description": "an environment for courageous devs" }
                  ]
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/CreateLabelBetaOutput" },
                "example": {
                  "label": {
                    "key": "environment",
                    "value": "yolo",
                    "description": "an environment for courageous devs"
                  }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/CreateLabelV1Output" },
                "example": {
                  "label": {
                    "key": "environment",
                    "value": "yolo",
                    "description": "an environment for courageous devs"
                  }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CreateLabelV1Output" },
                "example": {
                  "label": {
                    "key": "environment",
                    "value": "yolo",
                    "description": "an environment for courageous devs"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Admin", "Labels"],
        "tags": ["Labels"]
      },
      "get": {
        "summary": "listLabelsV1",
        "parameters": [],
        "deprecated": false,
        "description": "Returns a list of all available Labels",
        "operationId": "listLabels",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/ListLabelsAlphaOutput" },
                "example": {
                  "labels": [
                    { "key": "environment", "value": "dev", "description": "" },
                    { "key": "environment", "value": "prod", "description": "" }
                  ]
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/ListLabelsBetaOutput" },
                "example": {
                  "labels": [
                    { "key": "environment", "value": "dev", "description": "" },
                    { "key": "environment", "value": "prod", "description": "" },
                    { "key": "type", "value": "web", "description": "labels source as web" }
                  ]
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/ListLabelsV1Output" },
                "example": {
                  "labels": [
                    { "key": "environment", "value": "dev", "description": "" },
                    { "key": "environment", "value": "prod", "description": "" },
                    { "key": "type", "value": "web", "description": "labels source as web" }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ListLabelsV1Output" },
                "example": {
                  "labels": [
                    { "key": "environment", "value": "dev", "description": "" },
                    { "key": "environment", "value": "prod", "description": "" },
                    { "key": "type", "value": "web", "description": "labels source as web" }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Admin", "Labels"],
        "tags": ["Labels"]
      }
    },
    "/sources": {
      "post": {
        "summary": "createSourceV1",
        "parameters": [],
        "deprecated": false,
        "description": "Creates a new Source.\n\n\nThis endpoint generates the following audit events:\n* Source Created\n\n      ",
        "operationId": "createSource",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/CreateSourceAlphaInput" },
              "example": {
                "slug": "my-test-source-9nzxyj",
                "name": "My Source",
                "enabled": true,
                "metadataId": "IqDTy1TpoU",
                "settings": {}
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/CreateSourceBetaInput" },
              "example": {
                "slug": "my-test-source-jisppr",
                "enabled": true,
                "metadataId": "IqDTy1TpoU",
                "settings": {}
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/CreateSourceV1Input" },
              "example": {
                "slug": "my-test-source-o3p-mx",
                "enabled": true,
                "metadataId": "IqDTy1TpoU",
                "settings": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/CreateSourceAlphaOutput" },
                "example": {
                  "source": {
                    "id": "jT2dwPwAiJo2pHKH3yj3Ly",
                    "slug": "my-test-source-9nzxyj",
                    "name": "My Source",
                    "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                    "enabled": true,
                    "writeKeys": ["6wrdkTsa64aqK3rf8xeBZ54wEs4uZZzC"],
                    "metadata": {
                      "id": "IqDTy1TpoU",
                      "slug": "javascript",
                      "name": "Javascript",
                      "categories": ["Website"],
                      "description": "This is our most flexible and powerful tracking system, using analytics.js.  Track and analyze information about your visitors and customers, and every action that they take, in any of our 140 integrations, business intelligence tools, or directly with SQL tools.",
                      "logos": {
                        "default": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                        "alt": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                        "mark": "https://cdn.filepicker.io/api/file/kBpmEoSSaakidAvoFmzd"
                      },
                      "options": []
                    },
                    "settings": {},
                    "labels": []
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/CreateSourceBetaOutput" },
                "example": {
                  "source": {
                    "id": "6XM25wGms2LMcoMmPSQ5Zp",
                    "slug": "my-test-source-jisppr",
                    "name": "my-test-source-jisppr",
                    "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                    "enabled": true,
                    "writeKeys": ["OqbaMilNMaUE46NEilMAo6AD0jyRrrUp"],
                    "metadata": {
                      "id": "IqDTy1TpoU",
                      "slug": "javascript",
                      "name": "Javascript",
                      "categories": ["Website"],
                      "description": "This is our most flexible and powerful tracking system, using analytics.js.  Track and analyze information about your visitors and customers, and every action that they take, in any of our 140 integrations, business intelligence tools, or directly with SQL tools.",
                      "logos": {
                        "default": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                        "alt": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                        "mark": "https://cdn.filepicker.io/api/file/kBpmEoSSaakidAvoFmzd"
                      },
                      "options": []
                    },
                    "settings": {},
                    "labels": []
                  }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/CreateSourceV1Output" },
                "example": {
                  "source": {
                    "id": "rpes395vekLH1rbgCTN5Fe",
                    "slug": "my-test-source-o3p-mx",
                    "name": "my-test-source-o3p-mx",
                    "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                    "enabled": true,
                    "writeKeys": ["OsGhaeg2v0icJ0UJFHcPs8reXNGOQMbC"],
                    "metadata": {
                      "id": "IqDTy1TpoU",
                      "slug": "javascript",
                      "name": "Javascript",
                      "categories": ["Website"],
                      "description": "This is our most flexible and powerful tracking system, using analytics.js.  Track and analyze information about your visitors and customers, and every action that they take, in any of our 140 integrations, business intelligence tools, or directly with SQL tools.",
                      "logos": {
                        "default": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                        "alt": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                        "mark": "https://cdn.filepicker.io/api/file/kBpmEoSSaakidAvoFmzd"
                      },
                      "options": [],
                      "isCloudEventSource": false
                    },
                    "settings": {},
                    "labels": []
                  }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CreateSourceV1Output" },
                "example": {
                  "source": {
                    "id": "rpes395vekLH1rbgCTN5Fe",
                    "slug": "my-test-source-o3p-mx",
                    "name": "my-test-source-o3p-mx",
                    "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                    "enabled": true,
                    "writeKeys": ["OsGhaeg2v0icJ0UJFHcPs8reXNGOQMbC"],
                    "metadata": {
                      "id": "IqDTy1TpoU",
                      "slug": "javascript",
                      "name": "Javascript",
                      "categories": ["Website"],
                      "description": "This is our most flexible and powerful tracking system, using analytics.js.  Track and analyze information about your visitors and customers, and every action that they take, in any of our 140 integrations, business intelligence tools, or directly with SQL tools.",
                      "logos": {
                        "default": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                        "alt": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                        "mark": "https://cdn.filepicker.io/api/file/kBpmEoSSaakidAvoFmzd"
                      },
                      "options": [],
                      "isCloudEventSource": false
                    },
                    "settings": {},
                    "labels": []
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Sources"],
        "tags": ["Sources"]
      },
      "get": {
        "summary": "listSourcesV1",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Defines the pagination parameters.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput",
              "description": "Defines the pagination parameters.",
              "title": "pagination"
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a list of Sources",
        "operationId": "listSources",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/ListSourcesAlphaOutput" },
                "example": {
                  "sources": [
                    {
                      "id": "qQEHquLrjRDN9j1ByrChyn",
                      "slug": "ios",
                      "name": "",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "writeKeys": ["pF878AD6SCcqa6tLkrga6p"],
                      "metadata": {
                        "id": "UBrsG9RVzw",
                        "slug": "ios",
                        "name": "iOS",
                        "categories": ["Mobile"],
                        "description": "",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                          "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u"
                        },
                        "options": []
                      },
                      "settings": {},
                      "labels": []
                    },
                    {
                      "id": "rh5BDZp6QDHvXFCkibm1pR",
                      "slug": "web",
                      "name": "",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "writeKeys": ["bE8UoAD7BrygwsxjfPKtv5"],
                      "metadata": {
                        "id": "IqDTy1TpoU",
                        "slug": "javascript",
                        "name": "Javascript",
                        "categories": ["Website"],
                        "description": "This is our most flexible and powerful tracking system, using analytics.js.  Track and analyze information about your visitors and customers, and every action that they take, in any of our 140 integrations, business intelligence tools, or directly with SQL tools.",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                          "alt": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                          "mark": "https://cdn.filepicker.io/api/file/kBpmEoSSaakidAvoFmzd"
                        },
                        "options": []
                      },
                      "settings": {},
                      "labels": []
                    }
                  ],
                  "pagination": { "current": "MA==", "totalEntries": 2 }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/ListSourcesBetaOutput" },
                "example": {
                  "sources": [
                    {
                      "id": "qQEHquLrjRDN9j1ByrChyn",
                      "slug": "ios",
                      "name": "",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "writeKeys": ["pF878AD6SCcqa6tLkrga6p"],
                      "metadata": {
                        "id": "UBrsG9RVzw",
                        "slug": "ios",
                        "name": "iOS",
                        "categories": ["Mobile"],
                        "description": "",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                          "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u"
                        },
                        "options": []
                      },
                      "settings": {},
                      "labels": []
                    },
                    {
                      "id": "rh5BDZp6QDHvXFCkibm1pR",
                      "slug": "web",
                      "name": "",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "writeKeys": ["bE8UoAD7BrygwsxjfPKtv5"],
                      "metadata": {
                        "id": "IqDTy1TpoU",
                        "slug": "javascript",
                        "name": "Javascript",
                        "categories": ["Website"],
                        "description": "This is our most flexible and powerful tracking system, using analytics.js.  Track and analyze information about your visitors and customers, and every action that they take, in any of our 140 integrations, business intelligence tools, or directly with SQL tools.",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                          "alt": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                          "mark": "https://cdn.filepicker.io/api/file/kBpmEoSSaakidAvoFmzd"
                        },
                        "options": []
                      },
                      "settings": {},
                      "labels": []
                    }
                  ],
                  "pagination": { "current": "MA==", "totalEntries": 2 }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/ListSourcesV1Output" },
                "example": {
                  "sources": [
                    {
                      "id": "qQEHquLrjRDN9j1ByrChyn",
                      "slug": "ios",
                      "name": "",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "writeKeys": ["3YdEudTwjouyC5WPjpbTik"],
                      "metadata": {
                        "id": "UBrsG9RVzw",
                        "slug": "ios",
                        "name": "iOS",
                        "categories": ["Mobile"],
                        "description": "",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                          "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u"
                        },
                        "options": [],
                        "isCloudEventSource": false
                      },
                      "settings": {},
                      "labels": []
                    },
                    {
                      "id": "rh5BDZp6QDHvXFCkibm1pR",
                      "slug": "web",
                      "name": "",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "writeKeys": ["dfL8upyPumumx23SjgwHjs"],
                      "metadata": {
                        "id": "IqDTy1TpoU",
                        "slug": "javascript",
                        "name": "Javascript",
                        "categories": ["Website"],
                        "description": "This is our most flexible and powerful tracking system, using analytics.js.  Track and analyze information about your visitors and customers, and every action that they take, in any of our 140 integrations, business intelligence tools, or directly with SQL tools.",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                          "alt": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                          "mark": "https://cdn.filepicker.io/api/file/kBpmEoSSaakidAvoFmzd"
                        },
                        "options": [],
                        "isCloudEventSource": false
                      },
                      "settings": {},
                      "labels": []
                    }
                  ],
                  "pagination": { "current": "MA==", "totalEntries": 2 }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ListSourcesV1Output" },
                "example": {
                  "sources": [
                    {
                      "id": "qQEHquLrjRDN9j1ByrChyn",
                      "slug": "ios",
                      "name": "",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "writeKeys": ["3YdEudTwjouyC5WPjpbTik"],
                      "metadata": {
                        "id": "UBrsG9RVzw",
                        "slug": "ios",
                        "name": "iOS",
                        "categories": ["Mobile"],
                        "description": "",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                          "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u"
                        },
                        "options": [],
                        "isCloudEventSource": false
                      },
                      "settings": {},
                      "labels": []
                    },
                    {
                      "id": "rh5BDZp6QDHvXFCkibm1pR",
                      "slug": "web",
                      "name": "",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "writeKeys": ["dfL8upyPumumx23SjgwHjs"],
                      "metadata": {
                        "id": "IqDTy1TpoU",
                        "slug": "javascript",
                        "name": "Javascript",
                        "categories": ["Website"],
                        "description": "This is our most flexible and powerful tracking system, using analytics.js.  Track and analyze information about your visitors and customers, and every action that they take, in any of our 140 integrations, business intelligence tools, or directly with SQL tools.",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                          "alt": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                          "mark": "https://cdn.filepicker.io/api/file/kBpmEoSSaakidAvoFmzd"
                        },
                        "options": [],
                        "isCloudEventSource": false
                      },
                      "settings": {},
                      "labels": []
                    }
                  ],
                  "pagination": { "current": "MA==", "totalEntries": 2 }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Sources"],
        "tags": ["Sources"]
      }
    },
    "/regulations/sources/{sourceId}": {
      "post": {
        "summary": "createSourceRegulationV1",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Creates a source-scoped regulation.\n\n\nThis endpoint generates the following audit events:\n* Source Regulation Created\n\n\nConfig API omitted fields:\n- `attributes`,\n- `userAgent`\n      ",
        "operationId": "createSourceRegulation",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/CreateSourceRegulationAlphaInput" },
              "example": {
                "regulationType": "SUPPRESS_ONLY",
                "subjectType": "USER_ID",
                "subjectIds": ["test_user_id_1"],
                "sourceId": "qQEHquLrjRDN9j1ByrChyn"
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/CreateSourceRegulationBetaInput" },
              "example": {
                "regulationType": "SUPPRESS_ONLY",
                "subjectType": "USER_ID",
                "subjectIds": ["test_user_id_1"],
                "sourceId": "qQEHquLrjRDN9j1ByrChyn"
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/CreateSourceRegulationV1Input" },
              "example": {
                "regulationType": "SUPPRESS_ONLY",
                "subjectType": "USER_ID",
                "subjectIds": ["test_user_id_1"],
                "sourceId": "qQEHquLrjRDN9j1ByrChyn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/CreateSourceRegulationAlphaOutput" },
                "example": { "regulateId": "1qJkfE1tpwvQcklImGksLN629wn" }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/CreateSourceRegulationBetaOutput" },
                "example": { "regulateId": "1qJkfE1tpwvQcklImGksLN629wn" }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/CreateSourceRegulationV1Output" },
                "example": { "regulateId": "1qJkfE1tpwvQcklImGksLN629wn" }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CreateSourceRegulationV1Output" },
                "example": { "regulateId": "1qJkfE1tpwvQcklImGksLN629wn" }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Deletion and Suppression"],
        "tags": ["Deletion and Suppression"]
      },
      "get": {
        "summary": "listRegulationsFromSourceV1",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          },
          {
            "in": "query",
            "required": false,
            "name": "sourceId",
            "description": "The id of the source the regulation.\n\nThis parameter exists in v1.",
            "schema": { "description": "The id of the source the regulation.", "type": "string", "title": "sourceId" }
          },
          {
            "in": "query",
            "required": false,
            "name": "status",
            "description": "The status on which to filter returned regulations.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The status on which to filter returned regulations.",
              "enum": ["FAILED", "FINISHED", "INITIALIZED", "INVALID", "NOT_SUPPORTED", "PARTIAL_SUCCESS", "RUNNING"],
              "type": "string",
              "title": "status"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "regulationTypes",
            "description": "The regulation types on which to filter returned regulations.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The regulation types on which to filter returned regulations.",
              "type": "array",
              "items": {
                "enum": [
                  "BULK_DELETE_ONLY",
                  "DELETE_INTERNAL",
                  "DELETE_ONLY",
                  "SUPPRESS_ONLY",
                  "SUPPRESS_WITH_DELETE",
                  "UNSUPPRESS"
                ],
                "type": "string"
              },
              "title": "regulationTypes"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Pagination parameters.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput",
              "description": "Pagination parameters.",
              "title": "pagination"
            }
          }
        ],
        "deprecated": false,
        "description": "Lists all source-scoped regulations.",
        "operationId": "listRegulationsFromSource",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/ListRegulationsFromSourceAlphaOutput" },
                "example": {
                  "regulations": [
                    {
                      "id": "1qJkfE1tpwvQcklImGksLN629wn",
                      "subjectType": "OBJECT_ID",
                      "subjects": ["test_user_id_1"],
                      "status": "FINISHED",
                      "createdAt": "2022-03-08T00:39:36.546951Z"
                    }
                  ],
                  "pagination": { "current": "MQ==" }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/ListRegulationsFromSourceBetaOutput" },
                "example": {
                  "regulations": [
                    {
                      "id": "1qJkfE1tpwvQcklImGksLN629wn",
                      "subjectType": "OBJECT_ID",
                      "subjects": ["test_user_id_1"],
                      "status": "FINISHED",
                      "createdAt": "2022-03-08T00:39:36.546951Z"
                    }
                  ],
                  "pagination": { "current": "MQ==" }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/ListRegulationsFromSourceV1Output" },
                "example": {
                  "regulations": [
                    {
                      "id": "1qJkfE1tpwvQcklImGksLN629wn",
                      "subjectType": "OBJECT_ID",
                      "subjects": ["test_user_id_1"],
                      "status": "FINISHED",
                      "createdAt": "2022-03-08T00:39:36.546951Z"
                    }
                  ],
                  "pagination": { "current": "MQ==" }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ListRegulationsFromSourceV1Output" },
                "example": {
                  "regulations": [
                    {
                      "id": "1qJkfE1tpwvQcklImGksLN629wn",
                      "subjectType": "OBJECT_ID",
                      "subjects": ["test_user_id_1"],
                      "status": "FINISHED",
                      "createdAt": "2022-03-08T00:39:36.546951Z"
                    }
                  ],
                  "pagination": { "current": "MQ==" }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Deletion and Suppression"],
        "tags": ["Deletion and Suppression"]
      }
    },
    "/tracking-plans": {
      "post": {
        "summary": "createTrackingPlanV1",
        "parameters": [],
        "deprecated": false,
        "description": "Creates a tracking plan\n\n**Note**: In order to successfully call this endpoint, the specified workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "createTrackingPlan",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/CreateTrackingPlanAlphaInput" },
              "example": { "name": "New TP", "type": "LIVE" }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/CreateTrackingPlanBetaInput" },
              "example": { "name": "New TP", "type": "LIVE" }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/CreateTrackingPlanV1Input" },
              "example": { "name": "New TP", "type": "LIVE" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/CreateTrackingPlanAlphaOutput" },
                "example": {
                  "trackingPlan": {
                    "id": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
                    "name": "New TP",
                    "slug": "",
                    "description": "",
                    "type": "LIVE",
                    "updatedAt": "2006-01-02T15:04:05.000Z",
                    "createdAt": "2006-01-02T15:04:05.000Z"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/CreateTrackingPlanBetaOutput" },
                "example": {
                  "trackingPlan": {
                    "id": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
                    "name": "New TP",
                    "slug": "",
                    "description": "",
                    "type": "LIVE",
                    "updatedAt": "2006-01-02T15:04:05.000Z",
                    "createdAt": "2006-01-02T15:04:05.000Z"
                  }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/CreateTrackingPlanV1Output" },
                "example": {
                  "trackingPlan": {
                    "id": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
                    "name": "New TP",
                    "resourceSchemaId": "rs_1yVwS3zy60dONy9UhCyDqMmVvAE",
                    "slug": "",
                    "description": "",
                    "type": "LIVE",
                    "updatedAt": "2006-01-02T15:04:05.000Z",
                    "createdAt": "2006-01-02T15:04:05.000Z"
                  }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CreateTrackingPlanV1Output" },
                "example": {
                  "trackingPlan": {
                    "id": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
                    "name": "New TP",
                    "resourceSchemaId": "rs_1yVwS3zy60dONy9UhCyDqMmVvAE",
                    "slug": "",
                    "description": "",
                    "type": "LIVE",
                    "updatedAt": "2006-01-02T15:04:05.000Z",
                    "createdAt": "2006-01-02T15:04:05.000Z"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Protocols", "Tracking Plans"],
        "tags": ["Tracking Plans"]
      },
      "get": {
        "summary": "listTrackingPlansV1",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "type",
            "description": "Requests tracking plans of a certain type. If omitted, lists all types.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "Requests tracking plans of a certain type. If omitted, lists all types.",
              "enum": ["LIVE", "PROPERTY_LIBRARY", "RULE_LIBRARY", "TEMPLATE"],
              "type": "string",
              "title": "type"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Pagination options.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput",
              "description": "Pagination options.",
              "title": "pagination"
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a list of tracking plans\n\n**Note**: In order to successfully call this endpoint, the specified workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "listTrackingPlans",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/ListTrackingPlansAlphaOutput" },
                "example": {
                  "trackingPlans": [
                    {
                      "id": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
                      "name": "New TP",
                      "slug": "",
                      "description": "",
                      "type": "LIVE",
                      "updatedAt": "2006-01-02T15:04:05.000Z",
                      "createdAt": "2006-01-02T15:04:05.000Z"
                    }
                  ],
                  "pagination": { "current": "MA==" }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/ListTrackingPlansBetaOutput" },
                "example": {
                  "trackingPlans": [
                    {
                      "id": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
                      "name": "New TP",
                      "slug": "",
                      "description": "",
                      "type": "LIVE",
                      "updatedAt": "2006-01-02T15:04:05.000Z",
                      "createdAt": "2006-01-02T15:04:05.000Z"
                    }
                  ],
                  "pagination": { "current": "MA==" }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/ListTrackingPlansV1Output" },
                "example": {
                  "trackingPlans": [
                    {
                      "id": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
                      "name": "New TP",
                      "resourceSchemaId": "rs_1yVwS3zy60dONy9UhCyDqMmVvAE",
                      "slug": "",
                      "description": "",
                      "type": "LIVE",
                      "updatedAt": "2006-01-02T15:04:05.000Z",
                      "createdAt": "2006-01-02T15:04:05.000Z"
                    }
                  ],
                  "pagination": { "current": "MA==" }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ListTrackingPlansV1Output" },
                "example": {
                  "trackingPlans": [
                    {
                      "id": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
                      "name": "New TP",
                      "resourceSchemaId": "rs_1yVwS3zy60dONy9UhCyDqMmVvAE",
                      "slug": "",
                      "description": "",
                      "type": "LIVE",
                      "updatedAt": "2006-01-02T15:04:05.000Z",
                      "createdAt": "2006-01-02T15:04:05.000Z"
                    }
                  ],
                  "pagination": { "current": "MA==" }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Protocols", "Tracking Plans"],
        "tags": ["Tracking Plans"]
      }
    },
    "/transformations": {
      "post": {
        "summary": "createTransformationBeta",
        "parameters": [],
        "deprecated": false,
        "description": "Creates a new transformation.\n\n\nThis endpoint generates the following audit events:\n* Transformation Created\n\n**Note**: In order to successfully call this endpoint, the specified workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "createTransformation",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/CreateTransformationAlphaInput" },
              "example": {
                "name": "Name of the new transformation",
                "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                "enabled": true,
                "newEventName": "new-event-name",
                "propertyRenames": [
                  { "oldName": "old-name", "newName": "new-name" },
                  { "oldName": "another-name-old", "newName": "another-name-new" }
                ],
                "if": "event = 'Example Event'"
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/CreateTransformationBetaInput" },
              "example": {
                "name": "Name of the new transformation",
                "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                "enabled": true,
                "newEventName": "new-event-name",
                "propertyRenames": [
                  { "oldName": "old-name", "newName": "new-name" },
                  { "oldName": "another-name-old", "newName": "another-name-new" }
                ],
                "if": "event = 'Example Event Beta'"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/CreateTransformationAlphaOutput" },
                "example": {
                  "transformation": {
                    "id": "29wPWIxjhf7stYwmeMkfD0RCGLw",
                    "name": "Name of the new transformation",
                    "enabled": true,
                    "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                    "if": "event = 'Example Event'",
                    "newEventName": "new-event-name",
                    "propertyRenames": [
                      { "oldName": "old-name", "newName": "new-name" },
                      { "oldName": "another-name-old", "newName": "another-name-new" }
                    ]
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/CreateTransformationBetaOutput" },
                "example": {
                  "transformation": {
                    "id": "2BXyFaShhqWa71kAlxjle9aK1LK",
                    "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                    "name": "Name of the new transformation",
                    "enabled": true,
                    "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                    "if": "event = 'Example Event Beta'",
                    "newEventName": "new-event-name",
                    "propertyRenames": [
                      { "oldName": "old-name", "newName": "new-name" },
                      { "oldName": "another-name-old", "newName": "another-name-new" }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Protocols", "Transformations"],
        "tags": ["Transformations"]
      },
      "get": {
        "summary": "listTransformationsBeta",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Pagination options.\n\nThis parameter exists in beta.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput",
              "description": "Pagination options.",
              "title": "pagination"
            }
          }
        ],
        "deprecated": false,
        "description": "Lists all transformations in the workspace.\n\n**Note**: In order to successfully call this endpoint, the specified workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "listTransformations",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/ListTransformationsAlphaOutput" },
                "example": {
                  "transformations": [
                    {
                      "id": "c5EmPMhTGmgwoas8YCKXgs",
                      "name": "Order cancelled event rename in destination",
                      "enabled": true,
                      "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                      "destinationMetadataId": "54521fd725e721e32a72eebb",
                      "if": "event = 'Order Cancelled'",
                      "newEventName": "order_cancelled",
                      "propertyRenames": []
                    },
                    {
                      "id": "pHrD51Ds35Zjfka84yXQE6",
                      "name": "User clicked edit track event",
                      "enabled": true,
                      "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                      "if": "event = 'User Clicked'",
                      "propertyRenames": [{ "oldName": "Category", "newName": "category" }]
                    },
                    {
                      "id": "rBoBnPKiAek36M192XJsYQ",
                      "name": "User clicked edit identify event",
                      "enabled": true,
                      "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                      "if": "type = 'identify'",
                      "propertyRenames": [{ "oldName": "Group", "newName": "group" }]
                    }
                  ],
                  "pagination": { "current": "MA==", "totalEntries": 3 }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/ListTransformationsBetaOutput" },
                "example": {
                  "transformations": [
                    {
                      "id": "2BXuWJ7g0beyz2ahqLAryzrGyEa",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "name": "Name of the new transformation",
                      "enabled": true,
                      "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                      "if": "event = 'Example Event'",
                      "newEventName": "new-event-name",
                      "propertyRenames": [
                        { "oldName": "old-name", "newName": "new-name" },
                        { "oldName": "another-name-old", "newName": "another-name-new" }
                      ]
                    },
                    {
                      "id": "c5EmPMhTGmgwoas8YCKXgs",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "name": "Order cancelled event rename in destination",
                      "enabled": true,
                      "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                      "destinationMetadataId": "54521fd725e721e32a72eebb",
                      "if": "event = 'Order Cancelled'",
                      "newEventName": "order_cancelled",
                      "propertyRenames": []
                    },
                    {
                      "id": "ks7SJDAn4XvW4VykJSQVz7",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "name": "User clicked event rename",
                      "enabled": true,
                      "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                      "if": "event = 'User Clicked'",
                      "newEventName": "user_clicked",
                      "propertyRenames": []
                    },
                    {
                      "id": "rBoBnPKiAek36M192XJsYQ",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "name": "User clicked edit identify event",
                      "enabled": true,
                      "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                      "if": "type = 'identify'",
                      "propertyRenames": [{ "oldName": "Group", "newName": "group" }]
                    }
                  ],
                  "pagination": { "current": "MA==", "totalEntries": 4 }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Protocols", "Transformations"],
        "tags": ["Transformations"]
      }
    },
    "/groups": {
      "post": {
        "summary": "createUserGroupV1",
        "parameters": [],
        "deprecated": false,
        "description": "Creates a User Group.\n\n\nThis endpoint generates the following audit event:\n* User Group Created\n* Policy Created\n\n      ",
        "operationId": "createUserGroup",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/CreateUserGroupAlphaInput" },
              "example": { "name": "New User Group _043NxhuP7" }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/CreateUserGroupBetaInput" },
              "example": { "name": "New User Group Zw3ka7Edn7" }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/CreateUserGroupV1Input" },
              "example": { "name": "New User Group YIdZTIsq69" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/CreateUserGroupAlphaOutput" },
                "example": {
                  "userGroup": {
                    "id": "26DB8IiH9hC3MvUL6RvkfCLtKRe",
                    "name": "New User Group _043NxhuP7",
                    "memberCount": 0
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/CreateUserGroupBetaOutput" },
                "example": {
                  "userGroup": {
                    "id": "26DB8NOHa2bicp2kmWDv6kNdHm2",
                    "name": "New User Group Zw3ka7Edn7",
                    "memberCount": 0
                  }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/CreateUserGroupV1Output" },
                "example": {
                  "userGroup": {
                    "id": "2BdJmDQAlSJmHLOsSP7qAdWhOi3",
                    "name": "New User Group YIdZTIsq69",
                    "memberCount": 0
                  }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CreateUserGroupV1Output" },
                "example": {
                  "userGroup": {
                    "id": "2BdJmDQAlSJmHLOsSP7qAdWhOi3",
                    "name": "New User Group YIdZTIsq69",
                    "memberCount": 0
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Admin", "IAM Groups"],
        "tags": ["IAM Groups"]
      },
      "get": {
        "summary": "listUserGroupsV1",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Pagination for user groups.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput",
              "description": "Pagination for user groups.",
              "title": "pagination"
            }
          }
        ],
        "deprecated": false,
        "description": "Returns all User Groups",
        "operationId": "listUserGroups",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/ListUserGroupsAlphaOutput" },
                "example": {
                  "userGroups": [
                    {
                      "id": "bBABwqbaDf2QdwTbW8bNEm",
                      "name": "Public API Group",
                      "memberCount": 1,
                      "permissions": [
                        {
                          "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                          "roleName": "Workspace Owner",
                          "resources": [{ "id": "9aQ1Lj62S4bomZKLF4DPqW", "type": "WORKSPACE", "labels": [] }]
                        }
                      ]
                    }
                  ],
                  "pagination": { "current": "MA==" }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/ListUserGroupsBetaOutput" },
                "example": {
                  "userGroups": [
                    {
                      "id": "bBABwqbaDf2QdwTbW8bNEm",
                      "name": "Public API Group",
                      "memberCount": 1,
                      "permissions": [
                        {
                          "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                          "roleName": "Workspace Owner",
                          "resources": [{ "id": "9aQ1Lj62S4bomZKLF4DPqW", "type": "WORKSPACE", "labels": [] }]
                        }
                      ]
                    }
                  ],
                  "pagination": { "current": "MA==" }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/ListUserGroupsV1Output" },
                "example": {
                  "userGroups": [
                    {
                      "id": "bBABwqbaDf2QdwTbW8bNEm",
                      "name": "PAPI Example Group",
                      "memberCount": 0,
                      "permissions": [
                        {
                          "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                          "roleName": "Workspace Owner",
                          "resources": [{ "id": "9aQ1Lj62S4bomZKLF4DPqW", "type": "WORKSPACE", "labels": [] }]
                        }
                      ]
                    }
                  ],
                  "pagination": { "current": "MA==" }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ListUserGroupsV1Output" },
                "example": {
                  "userGroups": [
                    {
                      "id": "bBABwqbaDf2QdwTbW8bNEm",
                      "name": "PAPI Example Group",
                      "memberCount": 0,
                      "permissions": [
                        {
                          "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                          "roleName": "Workspace Owner",
                          "resources": [{ "id": "9aQ1Lj62S4bomZKLF4DPqW", "type": "WORKSPACE", "labels": [] }]
                        }
                      ]
                    }
                  ],
                  "pagination": { "current": "MA==" }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Admin", "IAM Groups"],
        "tags": ["IAM Groups"]
      }
    },
    "/warehouses/validation": {
      "post": {
        "summary": "createValidationInWarehouseV1",
        "parameters": [],
        "deprecated": false,
        "description": "Validates input settings against a Warehouse.\n\n\nThis endpoint generates the following audit events:\n* Storage Destination Settings Validation\n\n      ",
        "operationId": "createValidationInWarehouse",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/CreateValidationInWarehouseAlphaInput" },
              "example": {
                "metadataId": "55d3d3aea3c",
                "settings": {
                  "hostname": "address.us-west-2.redshift.amazonaws.com",
                  "port": "5439",
                  "database": "db",
                  "username": "user",
                  "password": "test"
                }
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/CreateValidationInWarehouseBetaInput" },
              "example": {
                "metadataId": "55d3d3aea3c",
                "settings": {
                  "hostname": "address.us-west-2.redshift.amazonaws.com",
                  "port": "5439",
                  "database": "db",
                  "username": "user",
                  "password": "test"
                }
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/CreateValidationInWarehouseV1Input" },
              "example": {
                "metadataId": "55d3d3aea3c",
                "settings": {
                  "hostname": "address.us-west-2.redshift.amazonaws.com",
                  "port": "5439",
                  "database": "db",
                  "username": "user",
                  "password": "test"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/CreateValidationInWarehouseAlphaOutput" },
                "example": { "status": "CONNECTED" }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/CreateValidationInWarehouseBetaOutput" },
                "example": { "status": "CONNECTED" }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/CreateValidationInWarehouseV1Output" },
                "example": { "status": "CONNECTED" }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CreateValidationInWarehouseV1Output" },
                "example": { "status": "CONNECTED" }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Warehouses"],
        "tags": ["Warehouses"]
      }
    },
    "/warehouses": {
      "post": {
        "summary": "createWarehouseV1",
        "parameters": [],
        "deprecated": false,
        "description": "Creates a new Warehouse.\n\n\nThis endpoint generates the following audit events:\n* Storage Destination Created\n\n      ",
        "operationId": "createWarehouse",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/CreateWarehouseAlphaInput" },
              "example": { "metadataId": "aea3c55dsz", "settings": {} }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/CreateWarehouseBetaInput" },
              "example": { "metadataId": "aea3c55dsz", "settings": {} }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/CreateWarehouseV1Input" },
              "example": { "metadataId": "aea3c55dsz", "settings": {} }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/CreateWarehouseAlphaOutput" },
                "example": {
                  "warehouse": {
                    "id": "qDNGXyPATDnGc1X5s1DK7y",
                    "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                    "enabled": true,
                    "metadata": {
                      "id": "aea3c55dsz",
                      "slug": "redshift",
                      "name": "Redshift",
                      "description": "Powered by Amazon Web Services",
                      "logos": {
                        "default": "https://d3hotuclm6if1r.cloudfront.net/logos/redshift-default.svg",
                        "mark": "",
                        "alt": ""
                      },
                      "options": [
                        { "name": "port", "required": true, "type": "string" },
                        { "name": "database", "required": true, "type": "string" },
                        { "name": "hostname", "required": true, "type": "string" },
                        { "name": "password", "required": true, "type": "string" },
                        { "name": "username", "required": true, "type": "string" },
                        { "name": "ciphertext", "required": true, "type": "string" }
                      ]
                    },
                    "settings": { "name": "Redshift_2" }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/CreateWarehouseBetaOutput" },
                "example": {
                  "warehouse": {
                    "id": "pDM3QqRdH3PVz7Ctozsaw5",
                    "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                    "enabled": true,
                    "metadata": {
                      "id": "aea3c55dsz",
                      "slug": "redshift",
                      "name": "Redshift",
                      "description": "Powered by Amazon Web Services",
                      "logos": {
                        "default": "https://d3hotuclm6if1r.cloudfront.net/logos/redshift-default.svg",
                        "mark": "",
                        "alt": ""
                      },
                      "options": [
                        { "name": "port", "required": true, "type": "string" },
                        { "name": "database", "required": true, "type": "string" },
                        { "name": "hostname", "required": true, "type": "string" },
                        { "name": "password", "required": true, "type": "string" },
                        { "name": "username", "required": true, "type": "string" },
                        { "name": "ciphertext", "required": true, "type": "string" }
                      ]
                    },
                    "settings": { "name": "Redshift_2" }
                  }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/CreateWarehouseV1Output" },
                "example": {
                  "warehouse": {
                    "id": "6oeXh1ckusMcZqhVCo52Lp",
                    "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                    "enabled": true,
                    "metadata": {
                      "id": "aea3c55dsz",
                      "slug": "redshift",
                      "name": "Redshift",
                      "description": "Powered by Amazon Web Services",
                      "logos": {
                        "default": "https://d3hotuclm6if1r.cloudfront.net/logos/redshift-default.svg",
                        "mark": "",
                        "alt": ""
                      },
                      "options": [
                        { "name": "port", "required": true, "type": "string" },
                        { "name": "database", "required": true, "type": "string" },
                        { "name": "hostname", "required": true, "type": "string" },
                        { "name": "password", "required": true, "type": "string" },
                        { "name": "username", "required": true, "type": "string" },
                        { "name": "ciphertext", "required": true, "type": "string" }
                      ]
                    },
                    "settings": { "name": "Redshift_2" }
                  }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CreateWarehouseV1Output" },
                "example": {
                  "warehouse": {
                    "id": "6oeXh1ckusMcZqhVCo52Lp",
                    "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                    "enabled": true,
                    "metadata": {
                      "id": "aea3c55dsz",
                      "slug": "redshift",
                      "name": "Redshift",
                      "description": "Powered by Amazon Web Services",
                      "logos": {
                        "default": "https://d3hotuclm6if1r.cloudfront.net/logos/redshift-default.svg",
                        "mark": "",
                        "alt": ""
                      },
                      "options": [
                        { "name": "port", "required": true, "type": "string" },
                        { "name": "database", "required": true, "type": "string" },
                        { "name": "hostname", "required": true, "type": "string" },
                        { "name": "password", "required": true, "type": "string" },
                        { "name": "username", "required": true, "type": "string" },
                        { "name": "ciphertext", "required": true, "type": "string" }
                      ]
                    },
                    "settings": { "name": "Redshift_2" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Warehouses"],
        "tags": ["Warehouses"]
      },
      "get": {
        "summary": "listWarehousesV1",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Defines the pagination parameters.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput",
              "description": "Defines the pagination parameters.",
              "title": "pagination"
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a list of Warehouses",
        "operationId": "listWarehouses",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/ListWarehousesAlphaOutput" },
                "example": {
                  "warehouses": [
                    {
                      "id": "kjU72LCJexvrqL7G4TMHHN",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "metadata": {
                        "id": "55d3d3aea3c",
                        "slug": "postgres",
                        "name": "Postgres",
                        "description": "Open source data warehouse",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                          "mark": "",
                          "alt": ""
                        },
                        "options": [
                          { "name": "port", "required": true, "type": "string" },
                          { "name": "database", "required": true, "type": "string" },
                          { "name": "hostname", "required": true, "type": "string" },
                          { "name": "password", "required": true, "type": "string" },
                          { "name": "username", "required": true, "type": "string" },
                          { "name": "ciphertext", "required": true, "type": "string" }
                        ]
                      },
                      "settings": {}
                    },
                    {
                      "id": "v1e6FCE8P9EvQmCLWpKtJ3",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "metadata": {
                        "id": "aea3c55dsz",
                        "slug": "redshift",
                        "name": "Redshift",
                        "description": "Powered by Amazon Web Services",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/redshift-default.svg",
                          "mark": "",
                          "alt": ""
                        },
                        "options": [
                          { "name": "port", "required": true, "type": "string" },
                          { "name": "database", "required": true, "type": "string" },
                          { "name": "hostname", "required": true, "type": "string" },
                          { "name": "password", "required": true, "type": "string" },
                          { "name": "username", "required": true, "type": "string" },
                          { "name": "ciphertext", "required": true, "type": "string" }
                        ]
                      },
                      "settings": {}
                    }
                  ],
                  "pagination": { "current": "MA==", "totalEntries": 2 }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/ListWarehousesBetaOutput" },
                "example": {
                  "warehouses": [
                    {
                      "id": "kjU72LCJexvrqL7G4TMHHN",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "metadata": {
                        "id": "55d3d3aea3c",
                        "slug": "postgres",
                        "name": "Postgres",
                        "description": "Open source data warehouse",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                          "mark": "",
                          "alt": ""
                        },
                        "options": [
                          { "name": "port", "required": true, "type": "string" },
                          { "name": "database", "required": true, "type": "string" },
                          { "name": "hostname", "required": true, "type": "string" },
                          { "name": "password", "required": true, "type": "string" },
                          { "name": "username", "required": true, "type": "string" },
                          { "name": "ciphertext", "required": true, "type": "string" }
                        ]
                      },
                      "settings": {}
                    },
                    {
                      "id": "v1e6FCE8P9EvQmCLWpKtJ3",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "metadata": {
                        "id": "aea3c55dsz",
                        "slug": "redshift",
                        "name": "Redshift",
                        "description": "Powered by Amazon Web Services",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/redshift-default.svg",
                          "mark": "",
                          "alt": ""
                        },
                        "options": [
                          { "name": "port", "required": true, "type": "string" },
                          { "name": "database", "required": true, "type": "string" },
                          { "name": "hostname", "required": true, "type": "string" },
                          { "name": "password", "required": true, "type": "string" },
                          { "name": "username", "required": true, "type": "string" },
                          { "name": "ciphertext", "required": true, "type": "string" }
                        ]
                      },
                      "settings": {}
                    }
                  ],
                  "pagination": { "current": "MA==", "totalEntries": 2 }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/ListWarehousesV1Output" },
                "example": {
                  "warehouses": [
                    {
                      "id": "kjU72LCJexvrqL7G4TMHHN",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "metadata": {
                        "id": "55d3d3aea3c",
                        "slug": "postgres",
                        "name": "Postgres",
                        "description": "Open source data warehouse",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                          "mark": "",
                          "alt": ""
                        },
                        "options": [
                          { "name": "port", "required": true, "type": "string" },
                          { "name": "database", "required": true, "type": "string" },
                          { "name": "hostname", "required": true, "type": "string" },
                          { "name": "password", "required": true, "type": "string" },
                          { "name": "username", "required": true, "type": "string" },
                          { "name": "ciphertext", "required": true, "type": "string" }
                        ]
                      },
                      "settings": {}
                    },
                    {
                      "id": "v1e6FCE8P9EvQmCLWpKtJ3",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "metadata": {
                        "id": "aea3c55dsz",
                        "slug": "redshift",
                        "name": "Redshift",
                        "description": "Powered by Amazon Web Services",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/redshift-default.svg",
                          "mark": "",
                          "alt": ""
                        },
                        "options": [
                          { "name": "port", "required": true, "type": "string" },
                          { "name": "database", "required": true, "type": "string" },
                          { "name": "hostname", "required": true, "type": "string" },
                          { "name": "password", "required": true, "type": "string" },
                          { "name": "username", "required": true, "type": "string" },
                          { "name": "ciphertext", "required": true, "type": "string" }
                        ]
                      },
                      "settings": {}
                    }
                  ],
                  "pagination": { "current": "MA==", "totalEntries": 2 }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ListWarehousesV1Output" },
                "example": {
                  "warehouses": [
                    {
                      "id": "kjU72LCJexvrqL7G4TMHHN",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "metadata": {
                        "id": "55d3d3aea3c",
                        "slug": "postgres",
                        "name": "Postgres",
                        "description": "Open source data warehouse",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                          "mark": "",
                          "alt": ""
                        },
                        "options": [
                          { "name": "port", "required": true, "type": "string" },
                          { "name": "database", "required": true, "type": "string" },
                          { "name": "hostname", "required": true, "type": "string" },
                          { "name": "password", "required": true, "type": "string" },
                          { "name": "username", "required": true, "type": "string" },
                          { "name": "ciphertext", "required": true, "type": "string" }
                        ]
                      },
                      "settings": {}
                    },
                    {
                      "id": "v1e6FCE8P9EvQmCLWpKtJ3",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "metadata": {
                        "id": "aea3c55dsz",
                        "slug": "redshift",
                        "name": "Redshift",
                        "description": "Powered by Amazon Web Services",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/redshift-default.svg",
                          "mark": "",
                          "alt": ""
                        },
                        "options": [
                          { "name": "port", "required": true, "type": "string" },
                          { "name": "database", "required": true, "type": "string" },
                          { "name": "hostname", "required": true, "type": "string" },
                          { "name": "password", "required": true, "type": "string" },
                          { "name": "username", "required": true, "type": "string" },
                          { "name": "ciphertext", "required": true, "type": "string" }
                        ]
                      },
                      "settings": {}
                    }
                  ],
                  "pagination": { "current": "MA==", "totalEntries": 2 }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Warehouses"],
        "tags": ["Warehouses"]
      }
    },
    "/regulations": {
      "post": {
        "summary": "createWorkspaceRegulationV1",
        "parameters": [],
        "deprecated": false,
        "description": "Creates a workspace-scoped regulation.\n\n\nThis endpoint generates the following audit events:\n* Workspace Regulation Created\n\n\nConfig API omitted fields:\n- `attributes`,\n- `userAgent`\n      ",
        "operationId": "createWorkspaceRegulation",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/CreateWorkspaceRegulationAlphaInput" },
              "example": {
                "regulationType": "SUPPRESS_ONLY",
                "subjectType": "USER_ID",
                "subjectIds": ["test_user_id_1"]
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/CreateWorkspaceRegulationBetaInput" },
              "example": {
                "regulationType": "SUPPRESS_ONLY",
                "subjectType": "USER_ID",
                "subjectIds": ["test_user_id_1"]
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/CreateWorkspaceRegulationV1Input" },
              "example": {
                "regulationType": "SUPPRESS_ONLY",
                "subjectType": "USER_ID",
                "subjectIds": ["test_user_id_1"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/CreateWorkspaceRegulationAlphaOutput" },
                "example": { "regulateId": "1qJkfE1tpwvQcklImGksLN629wn" }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/CreateWorkspaceRegulationBetaOutput" },
                "example": { "regulateId": "1qJkfE1tpwvQcklImGksLN629wn" }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/CreateWorkspaceRegulationV1Output" },
                "example": { "regulateId": "1qJkfE1tpwvQcklImGksLN629wn" }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CreateWorkspaceRegulationV1Output" },
                "example": { "regulateId": "1qJkfE1tpwvQcklImGksLN629wn" }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Deletion and Suppression"],
        "tags": ["Deletion and Suppression"]
      },
      "get": {
        "summary": "listWorkspaceRegulationsV1",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "status",
            "description": "The status on which to filter the returned regulations.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The status on which to filter the returned regulations.",
              "enum": ["FAILED", "FINISHED", "INITIALIZED", "INVALID", "NOT_SUPPORTED", "PARTIAL_SUCCESS", "RUNNING"],
              "type": "string",
              "title": "status"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "regulationTypes",
            "description": "The regulation types on which to filter returned regulations.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The regulation types on which to filter returned regulations.",
              "type": "array",
              "items": {
                "enum": [
                  "BULK_DELETE_ONLY",
                  "DELETE_INTERNAL",
                  "DELETE_ONLY",
                  "SUPPRESS_ONLY",
                  "SUPPRESS_WITH_DELETE",
                  "UNSUPPRESS"
                ],
                "type": "string"
              },
              "title": "regulationTypes"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Pagination parameters.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput",
              "description": "Pagination parameters.",
              "title": "pagination"
            }
          }
        ],
        "deprecated": false,
        "description": "Lists all workspace-scoped regulations.",
        "operationId": "listWorkspaceRegulations",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/ListWorkspaceRegulationsAlphaOutput" },
                "example": {
                  "regulations": [
                    {
                      "id": "1qJkfE1tpwvQcklImGksLN629wn",
                      "subjectType": "OBJECT_ID",
                      "subjects": ["test_user_id_1"],
                      "status": "FINISHED",
                      "createdAt": "2022-03-08T00:39:36.546951Z"
                    }
                  ],
                  "pagination": { "current": "MQ==" }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/ListWorkspaceRegulationsBetaOutput" },
                "example": {
                  "regulations": [
                    {
                      "id": "1qJkfE1tpwvQcklImGksLN629wn",
                      "subjectType": "OBJECT_ID",
                      "subjects": ["test_user_id_1"],
                      "status": "FINISHED",
                      "createdAt": "2022-03-08T00:39:36.546951Z"
                    }
                  ],
                  "pagination": { "current": "MQ==" }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/ListWorkspaceRegulationsV1Output" },
                "example": {
                  "regulations": [
                    {
                      "id": "1qJkfE1tpwvQcklImGksLN629wn",
                      "subjectType": "OBJECT_ID",
                      "subjects": ["test_user_id_1"],
                      "status": "FINISHED",
                      "createdAt": "2022-03-08T00:39:36.546951Z"
                    }
                  ],
                  "pagination": { "current": "MQ==" }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ListWorkspaceRegulationsV1Output" },
                "example": {
                  "regulations": [
                    {
                      "id": "1qJkfE1tpwvQcklImGksLN629wn",
                      "subjectType": "OBJECT_ID",
                      "subjects": ["test_user_id_1"],
                      "status": "FINISHED",
                      "createdAt": "2022-03-08T00:39:36.546951Z"
                    }
                  ],
                  "pagination": { "current": "MQ==" }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Deletion and Suppression"],
        "tags": ["Deletion and Suppression"]
      }
    },
    "/destinations/{destinationId}": {
      "delete": {
        "summary": "deleteDestinationV1",
        "parameters": [
          {
            "in": "path",
            "name": "destinationId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Deletes an existing Destination.\n\n\nThis endpoint generates the following audit events:\n* Integration Deleted\n\n\nConfig API omitted fields:\n- `catalogId`\n      ",
        "operationId": "deleteDestination",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/DeleteDestinationAlphaInput" },
              "example": { "destinationId": "6217eee8d091a70d9cddd1e0" }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/DeleteDestinationBetaInput" },
              "example": { "destinationId": "6217eeead091a723ccddd1e2" }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/DeleteDestinationV1Input" },
              "example": { "destinationId": "62c4adc52860064540c80343" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/DeleteDestinationAlphaOutput" },
                "example": { "status": "SUCCESS" }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/DeleteDestinationBetaOutput" },
                "example": { "status": "SUCCESS" }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/DeleteDestinationV1Output" },
                "example": { "status": "SUCCESS" }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DeleteDestinationV1Output" },
                "example": { "status": "SUCCESS" }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Destinations"],
        "tags": ["Destinations"]
      },
      "get": {
        "summary": "getDestinationV1",
        "parameters": [
          {
            "in": "path",
            "name": "destinationId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          },
          {
            "in": "query",
            "required": false,
            "name": "destinationId",
            "description": "The id of the destination to look up.\n\nConfig API note: analogous to `name`.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The id of the destination to look up.\n\nConfig API note: analogous to `name`.",
              "type": "string",
              "title": "destinationId"
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a Destination by its ID.\n\n      Config API omitted fields:\n- `catalogId`\n",
        "operationId": "getDestination",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/GetDestinationAlphaOutput" },
                "example": {
                  "destination": {
                    "id": "fP7qoQw2HTWt9WdMr718gn",
                    "enabled": true,
                    "name": "",
                    "settings": { "mobileTrackingId": "123", "serversideTrackingId": "123", "trackingId": "123" },
                    "metadata": {
                      "id": "54521fd725e721e32a72eebb",
                      "name": "Google Universal Analytics",
                      "slug": "google-analytics",
                      "logos": {
                        "default": "https://cdn.filepicker.io/api/file/anFgceQJTGeMxChCgiyU",
                        "mark": "https://cdn.filepicker.io/api/file/zebLRcY3RtOlynDXTgNk"
                      },
                      "options": [
                        {
                          "name": "anonymizeIp",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "For client side libraries. Read more about anonymizing IP addresses from the [Google support documentation](https://support.google.com/analytics/answer/2763052?hl=en).",
                          "required": false,
                          "label": "Anonymize IP Addresses"
                        },
                        {
                          "name": "classic",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "**Important:** When creating your Google Analytics profile, you can choose between **Classic** and **Universal** Analytics. After March 2013, new profiles default to Universal, while earlier ones are Classic. An easy test: if you see `_gaq.push` in your code you're using Classic, so enable this.",
                          "required": false,
                          "label": "Use Classic Analytics on Your Site"
                        },
                        {
                          "name": "contentGroupings",
                          "type": "map",
                          "defaultValue": {},
                          "description": "Enter a property name on the left. Choose the Google Analytics content grouping you want on the right. Google Analytics only accepts numbered content groupings (e.g. contentGrouping3). When you use `analytics.page(name, properties)` with custom properties, we'll use the value of the property you designate as the value of the specified content grouping.",
                          "required": false,
                          "label": "Content Groupings"
                        },
                        {
                          "name": "dimensions",
                          "type": "map",
                          "defaultValue": {},
                          "description": "Because Google Analytics cannot accept arbitrary data about users or events, when you use `analytics.identify(userId, traits)` with custom traits or `analytics.track('event', properties)` with custom properties, you need to map those traits and properties to Google Analytics custom dimensions if you want them to be sent to GA. Enter a trait or property name on the left. Choose the Google Analytics dimension you want on the right. Google Analytics only accepts numbered dimensions (e.g. dimension3). We suggest using user-scoped dimensions for trait mappings and hit-scoped dimensions for properties [Contact us](https://segment.com/contact) if you need help!",
                          "required": false,
                          "label": "Custom Dimensions"
                        },
                        {
                          "name": "domain",
                          "type": "string",
                          "defaultValue": "",
                          "description": "_Only data sent from visitors on this domain_ will be recorded. By default Google Analytics automatically resolves the domain name, so you should **leave this blank unless you know you want otherwise**! This option is useful if you need to ignore data from other domains, or explicitly set the domain of your Google Analytics cookie. This is known as Override Domain Name in [GA Classic](https://developers.google.com/analytics/devguides/collection/gajs/gaTrackingSite). If you are testing locally, you can set the domain to `none`. [Read more about this setting in our docs](https://segment.com/docs/connections/destinations/catalog/google-analytics/#cookie-domain-name).",
                          "required": false,
                          "label": "Cookie Domain Name"
                        },
                        {
                          "name": "doubleClick",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Works with both Universal and Classic tracking methods.",
                          "required": false,
                          "label": "Remarketing, Display Ads and Demographic Reports."
                        },
                        {
                          "name": "enableServerIdentify",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "If you are sending `.identify()` calls from your server side libraries or have Segment Cloud Apps that send back `.identify()` calls with enriched user traits, you can send that data to your GA account via custom dimensions and metrics. Unlike the client side integration which has the luxury of browsers and the global window `ga` tracker, for server side we will check your `traits` and your settings for custom dimension/metric mappings and send it with an explicit event. ",
                          "required": false,
                          "label": "Enable Server Side Identify"
                        },
                        {
                          "name": "enhancedEcommerce",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "If you want more detailed reports on ecommerce, you might want to enable this feature. Read more about it [here](https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanced-ecommerce).",
                          "required": false,
                          "label": "Enable Enhanced Ecommerce"
                        },
                        {
                          "name": "enhancedLinkAttribution",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Provides more detailed reports on the links clicked on your site. Read more about it in the [Google support documentation](https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanced-link-attribution).",
                          "required": false,
                          "label": "Enable Enhanced Link Attribution"
                        },
                        {
                          "name": "identifyCategory",
                          "type": "string",
                          "defaultValue": "",
                          "description": "If you have **Enabled Server Side Identify**, you can specify the trait you want to look up for setting the event category will be since all custom metrics/dimensions for server side `.identify()` calls will be sent via an event hit to GA. The default value will be `'All'`. For example, if you are sending `traits.category`, you can put 'category' in the setting above and we will send the value of this trait as the event category.",
                          "required": false,
                          "label": "Server Side Identify Event Category"
                        },
                        {
                          "name": "identifyEventName",
                          "type": "string",
                          "defaultValue": "",
                          "description": "If you have **Enabled Server Side Identify**, you can specify what the event action will be since all custom metrics/dimensions for server side `.identify()` calls will be sent via an event hit to GA. The default value will be `'User Enriched'`",
                          "required": false,
                          "label": "Server Side Identify Event Action"
                        },
                        {
                          "name": "ignoredReferrers",
                          "type": "strings",
                          "defaultValue": [],
                          "description": "Add any domains you want to ignore, separated by line breaks. You might use this if you want Google Analytics to ignore certain referral domains (e.g. to prevent your subdomains from showing up as referrers in your analytics). _Note: this only works for Classic profiles. Universal profiles can_ [edit their ignored referrers](https://support.google.com/analytics/answer/2795830?hl=en&ref_topic=2790009) _directly inside Google Analytics._",
                          "required": false,
                          "label": "Ignored Referrers"
                        },
                        {
                          "name": "includeSearch",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "The querystring doesn't usually affect the content of the page in a significant way (like sorting), so we disable this by default.",
                          "required": false,
                          "label": "Include the Querystring in Page Views"
                        },
                        {
                          "name": "metrics",
                          "type": "map",
                          "defaultValue": {},
                          "description": "Because Google Analytics cannot accept arbitrary data about users or events, when you use `analytics.identify(userId, traits)` with custom numerical traits or `analytics.track('event', properties)` with custom numerical properties, you need to map those traits and properties to Google Analytics custom metrics if you want them to be sent to GA. Enter a trait or property name on the left. Choose the Google Analytics metric you want on the right. Google Analytics only accepts numbered metrics (e.g. metric3). We suggest using user-scoped metrics for trait mappings and hit-scoped metrics for properties. [Contact us](https://segment.com/contact) if you need help!",
                          "required": false,
                          "label": "Custom Metrics"
                        },
                        {
                          "name": "mobileTrackingId",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Google Analytics tracks mobile apps separately, so you'll want to create a separate Google Analytics mobile app property. Remember to only add a mobile tracking ID if you're tracking from a mobile library. If you're tracking from a hybrid app, fill in your website tracking ID instead. Leave it blank if you don't have a mobile app property.",
                          "required": true,
                          "label": "Mobile Tracking ID"
                        },
                        {
                          "name": "nameTracker",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Name the tracker 'segmentGATracker'. Enable this if you're working with additional Google Analytics trackers and want to ensure that your Segment tracker has a distinct name. If this is enabled you must prepend this tracker name to any native Google Analytics (except for create) that you call, e.g. 'segmentGATracker.require(....)' ",
                          "required": false,
                          "label": "Name Tracker"
                        },
                        {
                          "name": "nonInteraction",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Adds a _nonInteraction: true_ flag to every non-enhanced ecommerce event tracked to Google Analytics. If you're seeing unusually low bounce rates this will solve that issue.",
                          "required": false,
                          "label": "Add the non-interaction flag to all events"
                        },
                        {
                          "name": "optimize",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Integrate with Google Analytics Optimize plugin. Please enter your Optimize Container ID",
                          "required": false,
                          "label": "Optimize Container ID"
                        },
                        {
                          "name": "preferAnonymousId",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Enable this setting if you want `clientId` to always be set as a hash of `anonymousId`. If no `anonymousId` is present we will fallback to set the `clientId` to `userId`. This setting only applies to server side connections.",
                          "required": false,
                          "label": "Prefer Anonymous ID for Client ID - Server Side Only"
                        },
                        {
                          "name": "protocolMappings",
                          "type": "map",
                          "defaultValue": {},
                          "description": "If you are using the *server side* GA integration, you can map your custom traits or properties to known [measurement protocol params](https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters).",
                          "required": false,
                          "label": "Map Traits or Properties to Measurement Protocol Params"
                        },
                        {
                          "name": "reportUncaughtExceptions",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "This lets you study errors and exceptions in your iOS and Android apps in Google Analytics.",
                          "required": false,
                          "label": "Send Uncaught Exceptions to GA (Mobile)"
                        },
                        {
                          "name": "resetCustomDimensionsOnPage",
                          "type": "array",
                          "defaultValue": [],
                          "description": "If you have an SPA website, and need to reset custom dimensions between page calls, add to this setting all the properties (already mapped as custom dimensions) that need to be reset for each page call.",
                          "required": false,
                          "label": "Reset dimensions on Page calls"
                        },
                        {
                          "name": "sampleRate",
                          "type": "number",
                          "defaultValue": 100,
                          "description": "Specifies what percentage of users should be tracked. This defaults to 100 (no users are sampled out) but large sites may need to use a lower sample rate to stay within Google Analytics processing limits as [seen here](https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#sampleRate). Currently only available in the browser - mobile coming soon.",
                          "required": false,
                          "label": "Sample Rate"
                        },
                        {
                          "name": "sendUserId",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "User-ID enables the analysis of groups of sessions across devices, using a unique and persistent ID. This only works with Google Analytics Universal. IMPORTANT: Sending email or other personally identifiable information (PII) violates Google Analytics Terms of Service.",
                          "required": false,
                          "label": "Send User-ID to GA"
                        },
                        {
                          "name": "serversideClassic",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "**Important:** When creating your Google Analytics profile, you can choose between **Classic** and **Universal** Analytics. After March 2013, new profiles default to Universal, while earlier profiles are Classic. An easy test: if you see `_gaq.push` in your code you're using Classic, so enable this.",
                          "required": false,
                          "label": "Use Classic Analytics for Your Serverside Tracking"
                        },
                        {
                          "name": "serversideTrackingId",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Your Serverside Tracking ID is the UA code for the Google Analytics property you want to send server-side calls to. Leave it blank if you don't have a server-side client library that you want to send data from. Remember that data tracked from mobile integrations that are not bundled in your app send data to Google Analytics server side, since Segment sends data to them via our own servers.",
                          "required": true,
                          "label": "Serverside Tracking ID"
                        },
                        {
                          "name": "setAllMappedProps",
                          "type": "boolean",
                          "defaultValue": true,
                          "description": "Google Analytics allows users to either pass custom dimensions / metrics as properties of specific events or as properties for all events on a given page (or the lifetime of the global tracker object). The default Segment behavior is the latter. Any metrics / dimensions that are mapped to a given property will be set to the page and sent as properties of all subsequent events on that page. You can disable this functionality with this setting. If disabled, Segment will only pass custom dimensions / metrics as part of the payload of the event with which they are explicitly associated. Please reference the Google Analytics [documentation](https://developers.google.com/analytics/devguides/collection/analyticsjs/custom-dims-mets#implementation) for more info.",
                          "required": false,
                          "label": "Set Custom Dimensions & Metrics to the Page"
                        },
                        {
                          "name": "siteSpeedSampleRate",
                          "type": "number",
                          "defaultValue": 1,
                          "description": "Defines the sample size for Site Speed data collection. If you have a small number of visitors you might want to adjust the sampling to a larger rate for your [site speed stats](https://developers.google.com/analytics/devguides/collection/gajs/methods/gaJSApiBasicConfiguration?hl=en#_gat.GA_Tracker_._setSiteSpeedSampleRate).",
                          "required": false,
                          "label": "Site Speed Sample Rate"
                        },
                        {
                          "name": "topLevelContextMapping",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "By default, Segment allows mappings from custom traits and properties to Google Analytics custom dimensions and metrics. If you enable this setting, Segment will also send top-level and `context` object fields mapped in the **Custom Dimensions** and **Custom Metrics** settings. When evaluating mappings, Segment will prioritize properties and traits before top-level and `context` fields. This setting only applies to server side connections.",
                          "required": false,
                          "label": "Enable Mappings from Top-Level or Context Fields - Server Side Only"
                        },
                        {
                          "name": "trackCategorizedPages",
                          "type": "boolean",
                          "defaultValue": true,
                          "description": "Tracks events to Google Analytics for [`page` method](https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/#page) calls that have a `category` associated with them. E.g. `page('Docs', 'Index')` translates to **Viewed Docs Page**.",
                          "required": false,
                          "label": "Track Categorized Pages"
                        },
                        {
                          "name": "trackNamedPages",
                          "type": "boolean",
                          "defaultValue": true,
                          "description": "Tracks events to Google Analytics for [`page` method](https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/#page) calls that have a `name` associated with them. E.g. `page('Signup')` translates to **Viewed Signup Page**.",
                          "required": false,
                          "label": "Track Named Pages"
                        },
                        {
                          "name": "trackingId",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Your website's Tracking ID is in the **Tracking Info** tab on the [Admin Page](https://www.google.com/analytics/web/#management/Property) of Google Analytics. Leave it blank if you don't have a website property.",
                          "required": true,
                          "label": "Website Tracking ID"
                        },
                        {
                          "name": "typeOverride",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "By default, Segment sends \"Product List Viewed\" and \"Product List Filtered\" ecommerce events to GA as \"pageview\" hit types. Enable this setting to instead map these two specced Segment track events to GA as \"event\" hit types.",
                          "required": false,
                          "label": "Send Segment \"Product List\" Events to GA as \"Event\" Hits"
                        },
                        {
                          "name": "useGoogleAmpClientId",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Google’s AMP Client ID API lets you uniquely identify users who engage with your content on AMP and non-AMP pages. If you opt-in, Google Analytics will use the user's AMP Client ID to determine that multiple site events belong to the same user when those users visit AMP pages via a [Google viewer](https://support.google.com/websearch/answer/7220196). Associating events and users provides features like user counts and session-based metrics. *Enabling this feature will affect your reporting.* Please carefully reference Google's [documentation](https://support.google.com/analytics/answer/7486764?hl=en&ref_topic=7378717) for more info before you enable it.",
                          "required": false,
                          "label": "Use Google AMP Client ID"
                        },
                        {
                          "name": "userDeletion",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Sign in to Google Analytics oAuth to enable User Deletion. ",
                          "required": false,
                          "label": "User Deletion"
                        }
                      ],
                      "status": "PUBLIC",
                      "categories": ["Analytics"],
                      "website": "http://google.com/analytics",
                      "components": [
                        {
                          "code": "https://github.com/segment-integrations/analytics.js-integration-google-analytics",
                          "type": "BROWSER"
                        },
                        {
                          "code": "https://github.com/segment-integrations/analytics-ios-integration-google-analytics",
                          "type": "IOS"
                        },
                        {
                          "code": "https://github.com/segment-integrations/analytics-android-integration-google-analytics",
                          "type": "ANDROID"
                        },
                        {
                          "code": "https://github.com/segmentio/integrations/tree/master/integrations/google-analytics",
                          "type": "SERVER"
                        }
                      ],
                      "previousNames": ["Google Analytics", "Google Universal Analytics"],
                      "supportedMethods": {
                        "track": true,
                        "pageview": true,
                        "identify": true,
                        "group": false,
                        "alias": false
                      },
                      "supportedPlatforms": { "browser": true, "mobile": true, "server": true },
                      "supportedFeatures": {
                        "cloudModeInstances": "0",
                        "deviceModeInstances": "0",
                        "replay": false,
                        "browserUnbundling": true,
                        "browserUnbundlingPublic": true
                      },
                      "actions": [],
                      "presets": []
                    },
                    "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/GetDestinationBetaOutput" },
                "example": {
                  "destination": {
                    "id": "fP7qoQw2HTWt9WdMr718gn",
                    "enabled": false,
                    "name": "",
                    "settings": {
                      "anonymizeIp": false,
                      "classic": false,
                      "contentGroupings": {},
                      "dimensions": {},
                      "domain": "",
                      "doubleClick": false,
                      "enableServerIdentify": false,
                      "enhancedEcommerce": false,
                      "enhancedLinkAttribution": false,
                      "identifyCategory": "",
                      "identifyEventName": "",
                      "ignoredReferrers": [],
                      "includeSearch": false,
                      "metrics": {},
                      "mobileTrackingId": "123",
                      "nameTracker": false,
                      "nonInteraction": false,
                      "optimize": "",
                      "preferAnonymousId": false,
                      "protocolMappings": {},
                      "reportUncaughtExceptions": false,
                      "resetCustomDimensionsOnPage": [],
                      "sampleRate": 100,
                      "sendUserId": false,
                      "serversideClassic": false,
                      "serversideTrackingId": "123",
                      "setAllMappedProps": true,
                      "siteSpeedSampleRate": 1,
                      "topLevelContextMapping": false,
                      "trackCategorizedPages": true,
                      "trackNamedPages": true,
                      "trackingId": "123",
                      "typeOverride": false,
                      "useGoogleAmpClientId": false,
                      "userDeletion": ""
                    },
                    "metadata": {
                      "id": "54521fd725e721e32a72eebb",
                      "name": "Google Universal Analytics",
                      "slug": "google-analytics",
                      "logos": {
                        "default": "https://cdn.filepicker.io/api/file/anFgceQJTGeMxChCgiyU",
                        "mark": "https://cdn.filepicker.io/api/file/zebLRcY3RtOlynDXTgNk"
                      },
                      "options": [
                        {
                          "name": "anonymizeIp",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "For client side libraries. Read more about anonymizing IP addresses from the [Google support documentation](https://support.google.com/analytics/answer/2763052?hl=en).",
                          "required": false,
                          "label": "Anonymize IP Addresses"
                        },
                        {
                          "name": "classic",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "**Important:** When creating your Google Analytics profile, you can choose between **Classic** and **Universal** Analytics. After March 2013, new profiles default to Universal, while earlier ones are Classic. An easy test: if you see `_gaq.push` in your code you're using Classic, so enable this.",
                          "required": false,
                          "label": "Use Classic Analytics on Your Site"
                        },
                        {
                          "name": "contentGroupings",
                          "type": "map",
                          "defaultValue": {},
                          "description": "Enter a property name on the left. Choose the Google Analytics content grouping you want on the right. Google Analytics only accepts numbered content groupings (e.g. contentGrouping3). When you use `analytics.page(name, properties)` with custom properties, we'll use the value of the property you designate as the value of the specified content grouping.",
                          "required": false,
                          "label": "Content Groupings"
                        },
                        {
                          "name": "dimensions",
                          "type": "map",
                          "defaultValue": {},
                          "description": "Because Google Analytics cannot accept arbitrary data about users or events, when you use `analytics.identify(userId, traits)` with custom traits or `analytics.track('event', properties)` with custom properties, you need to map those traits and properties to Google Analytics custom dimensions if you want them to be sent to GA. Enter a trait or property name on the left. Choose the Google Analytics dimension you want on the right. Google Analytics only accepts numbered dimensions (e.g. dimension3). We suggest using user-scoped dimensions for trait mappings and hit-scoped dimensions for properties [Contact us](https://segment.com/contact) if you need help!",
                          "required": false,
                          "label": "Custom Dimensions"
                        },
                        {
                          "name": "domain",
                          "type": "string",
                          "defaultValue": "",
                          "description": "_Only data sent from visitors on this domain_ will be recorded. By default Google Analytics automatically resolves the domain name, so you should **leave this blank unless you know you want otherwise**! This option is useful if you need to ignore data from other domains, or explicitly set the domain of your Google Analytics cookie. This is known as Override Domain Name in [GA Classic](https://developers.google.com/analytics/devguides/collection/gajs/gaTrackingSite). If you are testing locally, you can set the domain to `none`. [Read more about this setting in our docs](https://segment.com/docs/connections/destinations/catalog/google-analytics/#cookie-domain-name).",
                          "required": false,
                          "label": "Cookie Domain Name"
                        },
                        {
                          "name": "doubleClick",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Works with both Universal and Classic tracking methods.",
                          "required": false,
                          "label": "Remarketing, Display Ads and Demographic Reports."
                        },
                        {
                          "name": "enableServerIdentify",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "If you are sending `.identify()` calls from your server side libraries or have Segment Cloud Apps that send back `.identify()` calls with enriched user traits, you can send that data to your GA account via custom dimensions and metrics. Unlike the client side integration which has the luxury of browsers and the global window `ga` tracker, for server side we will check your `traits` and your settings for custom dimension/metric mappings and send it with an explicit event. ",
                          "required": false,
                          "label": "Enable Server Side Identify"
                        },
                        {
                          "name": "enhancedEcommerce",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "If you want more detailed reports on ecommerce, you might want to enable this feature. Read more about it [here](https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanced-ecommerce).",
                          "required": false,
                          "label": "Enable Enhanced Ecommerce"
                        },
                        {
                          "name": "enhancedLinkAttribution",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Provides more detailed reports on the links clicked on your site. Read more about it in the [Google support documentation](https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanced-link-attribution).",
                          "required": false,
                          "label": "Enable Enhanced Link Attribution"
                        },
                        {
                          "name": "identifyCategory",
                          "type": "string",
                          "defaultValue": "",
                          "description": "If you have **Enabled Server Side Identify**, you can specify the trait you want to look up for setting the event category will be since all custom metrics/dimensions for server side `.identify()` calls will be sent via an event hit to GA. The default value will be `'All'`. For example, if you are sending `traits.category`, you can put 'category' in the setting above and we will send the value of this trait as the event category.",
                          "required": false,
                          "label": "Server Side Identify Event Category"
                        },
                        {
                          "name": "identifyEventName",
                          "type": "string",
                          "defaultValue": "",
                          "description": "If you have **Enabled Server Side Identify**, you can specify what the event action will be since all custom metrics/dimensions for server side `.identify()` calls will be sent via an event hit to GA. The default value will be `'User Enriched'`",
                          "required": false,
                          "label": "Server Side Identify Event Action"
                        },
                        {
                          "name": "ignoredReferrers",
                          "type": "strings",
                          "defaultValue": [],
                          "description": "Add any domains you want to ignore, separated by line breaks. You might use this if you want Google Analytics to ignore certain referral domains (e.g. to prevent your subdomains from showing up as referrers in your analytics). _Note: this only works for Classic profiles. Universal profiles can_ [edit their ignored referrers](https://support.google.com/analytics/answer/2795830?hl=en&ref_topic=2790009) _directly inside Google Analytics._",
                          "required": false,
                          "label": "Ignored Referrers"
                        },
                        {
                          "name": "includeSearch",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "The querystring doesn't usually affect the content of the page in a significant way (like sorting), so we disable this by default.",
                          "required": false,
                          "label": "Include the Querystring in Page Views"
                        },
                        {
                          "name": "metrics",
                          "type": "map",
                          "defaultValue": {},
                          "description": "Because Google Analytics cannot accept arbitrary data about users or events, when you use `analytics.identify(userId, traits)` with custom numerical traits or `analytics.track('event', properties)` with custom numerical properties, you need to map those traits and properties to Google Analytics custom metrics if you want them to be sent to GA. Enter a trait or property name on the left. Choose the Google Analytics metric you want on the right. Google Analytics only accepts numbered metrics (e.g. metric3). We suggest using user-scoped metrics for trait mappings and hit-scoped metrics for properties. [Contact us](https://segment.com/contact) if you need help!",
                          "required": false,
                          "label": "Custom Metrics"
                        },
                        {
                          "name": "mobileTrackingId",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Google Analytics tracks mobile apps separately, so you'll want to create a separate Google Analytics mobile app property. Remember to only add a mobile tracking ID if you're tracking from a mobile library. If you're tracking from a hybrid app, fill in your website tracking ID instead. Leave it blank if you don't have a mobile app property.",
                          "required": true,
                          "label": "Mobile Tracking ID"
                        },
                        {
                          "name": "nameTracker",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Name the tracker 'segmentGATracker'. Enable this if you're working with additional Google Analytics trackers and want to ensure that your Segment tracker has a distinct name. If this is enabled you must prepend this tracker name to any native Google Analytics (except for create) that you call, e.g. 'segmentGATracker.require(....)' ",
                          "required": false,
                          "label": "Name Tracker"
                        },
                        {
                          "name": "nonInteraction",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Adds a _nonInteraction: true_ flag to every non-enhanced ecommerce event tracked to Google Analytics. If you're seeing unusually low bounce rates this will solve that issue.",
                          "required": false,
                          "label": "Add the non-interaction flag to all events"
                        },
                        {
                          "name": "optimize",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Integrate with Google Analytics Optimize plugin. Please enter your Optimize Container ID",
                          "required": false,
                          "label": "Optimize Container ID"
                        },
                        {
                          "name": "preferAnonymousId",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Enable this setting if you want `clientId` to always be set as a hash of `anonymousId`. If no `anonymousId` is present we will fallback to set the `clientId` to `userId`. This setting only applies to server side connections.",
                          "required": false,
                          "label": "Prefer Anonymous ID for Client ID - Server Side Only"
                        },
                        {
                          "name": "protocolMappings",
                          "type": "map",
                          "defaultValue": {},
                          "description": "If you are using the *server side* GA integration, you can map your custom traits or properties to known [measurement protocol params](https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters).",
                          "required": false,
                          "label": "Map Traits or Properties to Measurement Protocol Params"
                        },
                        {
                          "name": "reportUncaughtExceptions",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "This lets you study errors and exceptions in your iOS and Android apps in Google Analytics.",
                          "required": false,
                          "label": "Send Uncaught Exceptions to GA (Mobile)"
                        },
                        {
                          "name": "resetCustomDimensionsOnPage",
                          "type": "array",
                          "defaultValue": [],
                          "description": "If you have an SPA website, and need to reset custom dimensions between page calls, add to this setting all the properties (already mapped as custom dimensions) that need to be reset for each page call.",
                          "required": false,
                          "label": "Reset dimensions on Page calls"
                        },
                        {
                          "name": "sampleRate",
                          "type": "number",
                          "defaultValue": 100,
                          "description": "Specifies what percentage of users should be tracked. This defaults to 100 (no users are sampled out) but large sites may need to use a lower sample rate to stay within Google Analytics processing limits as [seen here](https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#sampleRate). Currently only available in the browser - mobile coming soon.",
                          "required": false,
                          "label": "Sample Rate"
                        },
                        {
                          "name": "sendUserId",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "User-ID enables the analysis of groups of sessions across devices, using a unique and persistent ID. This only works with Google Analytics Universal. IMPORTANT: Sending email or other personally identifiable information (PII) violates Google Analytics Terms of Service.",
                          "required": false,
                          "label": "Send User-ID to GA"
                        },
                        {
                          "name": "serversideClassic",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "**Important:** When creating your Google Analytics profile, you can choose between **Classic** and **Universal** Analytics. After March 2013, new profiles default to Universal, while earlier profiles are Classic. An easy test: if you see `_gaq.push` in your code you're using Classic, so enable this.",
                          "required": false,
                          "label": "Use Classic Analytics for Your Serverside Tracking"
                        },
                        {
                          "name": "serversideTrackingId",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Your Serverside Tracking ID is the UA code for the Google Analytics property you want to send server-side calls to. Leave it blank if you don't have a server-side client library that you want to send data from. Remember that data tracked from mobile integrations that are not bundled in your app send data to Google Analytics server side, since Segment sends data to them via our own servers.",
                          "required": true,
                          "label": "Serverside Tracking ID"
                        },
                        {
                          "name": "setAllMappedProps",
                          "type": "boolean",
                          "defaultValue": true,
                          "description": "Google Analytics allows users to either pass custom dimensions / metrics as properties of specific events or as properties for all events on a given page (or the lifetime of the global tracker object). The default Segment behavior is the latter. Any metrics / dimensions that are mapped to a given property will be set to the page and sent as properties of all subsequent events on that page. You can disable this functionality with this setting. If disabled, Segment will only pass custom dimensions / metrics as part of the payload of the event with which they are explicitly associated. Please reference the Google Analytics [documentation](https://developers.google.com/analytics/devguides/collection/analyticsjs/custom-dims-mets#implementation) for more info.",
                          "required": false,
                          "label": "Set Custom Dimensions & Metrics to the Page"
                        },
                        {
                          "name": "siteSpeedSampleRate",
                          "type": "number",
                          "defaultValue": 1,
                          "description": "Defines the sample size for Site Speed data collection. If you have a small number of visitors you might want to adjust the sampling to a larger rate for your [site speed stats](https://developers.google.com/analytics/devguides/collection/gajs/methods/gaJSApiBasicConfiguration?hl=en#_gat.GA_Tracker_._setSiteSpeedSampleRate).",
                          "required": false,
                          "label": "Site Speed Sample Rate"
                        },
                        {
                          "name": "topLevelContextMapping",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "By default, Segment allows mappings from custom traits and properties to Google Analytics custom dimensions and metrics. If you enable this setting, Segment will also send top-level and `context` object fields mapped in the **Custom Dimensions** and **Custom Metrics** settings. When evaluating mappings, Segment will prioritize properties and traits before top-level and `context` fields. This setting only applies to server side connections.",
                          "required": false,
                          "label": "Enable Mappings from Top-Level or Context Fields - Server Side Only"
                        },
                        {
                          "name": "trackCategorizedPages",
                          "type": "boolean",
                          "defaultValue": true,
                          "description": "Tracks events to Google Analytics for [`page` method](https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/#page) calls that have a `category` associated with them. E.g. `page('Docs', 'Index')` translates to **Viewed Docs Page**.",
                          "required": false,
                          "label": "Track Categorized Pages"
                        },
                        {
                          "name": "trackNamedPages",
                          "type": "boolean",
                          "defaultValue": true,
                          "description": "Tracks events to Google Analytics for [`page` method](https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/#page) calls that have a `name` associated with them. E.g. `page('Signup')` translates to **Viewed Signup Page**.",
                          "required": false,
                          "label": "Track Named Pages"
                        },
                        {
                          "name": "trackingId",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Your website's Tracking ID is in the **Tracking Info** tab on the [Admin Page](https://www.google.com/analytics/web/#management/Property) of Google Analytics. Leave it blank if you don't have a website property.",
                          "required": true,
                          "label": "Website Tracking ID"
                        },
                        {
                          "name": "typeOverride",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "By default, Segment sends \"Product List Viewed\" and \"Product List Filtered\" ecommerce events to GA as \"pageview\" hit types. Enable this setting to instead map these two specced Segment track events to GA as \"event\" hit types.",
                          "required": false,
                          "label": "Send Segment \"Product List\" Events to GA as \"Event\" Hits"
                        },
                        {
                          "name": "useGoogleAmpClientId",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Google’s AMP Client ID API lets you uniquely identify users who engage with your content on AMP and non-AMP pages. If you opt-in, Google Analytics will use the user's AMP Client ID to determine that multiple site events belong to the same user when those users visit AMP pages via a [Google viewer](https://support.google.com/websearch/answer/7220196). Associating events and users provides features like user counts and session-based metrics. *Enabling this feature will affect your reporting.* Please carefully reference Google's [documentation](https://support.google.com/analytics/answer/7486764?hl=en&ref_topic=7378717) for more info before you enable it.",
                          "required": false,
                          "label": "Use Google AMP Client ID"
                        },
                        {
                          "name": "userDeletion",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Sign in to Google Analytics oAuth to enable User Deletion. ",
                          "required": false,
                          "label": "User Deletion"
                        }
                      ],
                      "status": "PUBLIC",
                      "categories": ["Analytics"],
                      "website": "http://google.com/analytics",
                      "components": [
                        {
                          "code": "https://github.com/segment-integrations/analytics.js-integration-google-analytics",
                          "type": "BROWSER"
                        },
                        {
                          "code": "https://github.com/segment-integrations/analytics-ios-integration-google-analytics",
                          "type": "IOS"
                        },
                        {
                          "code": "https://github.com/segment-integrations/analytics-android-integration-google-analytics",
                          "type": "ANDROID"
                        },
                        {
                          "code": "https://github.com/segmentio/integrations/tree/master/integrations/google-analytics",
                          "type": "SERVER"
                        }
                      ],
                      "previousNames": ["Google Analytics", "Google Universal Analytics"],
                      "supportedMethods": {
                        "track": true,
                        "pageview": true,
                        "identify": true,
                        "group": false,
                        "alias": false
                      },
                      "supportedPlatforms": { "browser": true, "mobile": true, "server": true },
                      "supportedFeatures": {
                        "cloudModeInstances": "0",
                        "deviceModeInstances": "0",
                        "replay": false,
                        "browserUnbundling": true,
                        "browserUnbundlingPublic": true
                      },
                      "actions": [],
                      "presets": []
                    },
                    "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                  }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/GetDestinationV1Output" },
                "example": {
                  "destination": {
                    "id": "fP7qoQw2HTWt9WdMr718gn",
                    "enabled": false,
                    "name": "",
                    "settings": {
                      "anonymizeIp": false,
                      "classic": false,
                      "contentGroupings": {},
                      "dimensions": {},
                      "domain": "",
                      "doubleClick": false,
                      "enableServerIdentify": false,
                      "enhancedEcommerce": false,
                      "enhancedLinkAttribution": false,
                      "identifyCategory": "",
                      "identifyEventName": "",
                      "ignoredReferrers": [],
                      "includeSearch": false,
                      "metrics": {},
                      "mobileTrackingId": "123",
                      "nameTracker": false,
                      "nonInteraction": false,
                      "optimize": "",
                      "preferAnonymousId": false,
                      "protocolMappings": {},
                      "reportUncaughtExceptions": false,
                      "resetCustomDimensionsOnPage": [],
                      "sampleRate": 100,
                      "sendUserId": false,
                      "serversideClassic": false,
                      "serversideTrackingId": "123",
                      "setAllMappedProps": true,
                      "siteSpeedSampleRate": 1,
                      "topLevelContextMapping": false,
                      "trackCategorizedPages": true,
                      "trackNamedPages": true,
                      "trackingId": "123",
                      "typeOverride": false,
                      "useGoogleAmpClientId": false,
                      "userDeletion": ""
                    },
                    "metadata": {
                      "id": "54521fd725e721e32a72eebb",
                      "name": "Google Universal Analytics",
                      "description": "Google Universal Analytics is the most popular analytics tool for the web. It’s free and provides a wide range of features. It’s especially good at measuring traffic sources and ad campaigns.",
                      "slug": "google-analytics",
                      "logos": {
                        "default": "https://cdn.filepicker.io/api/file/anFgceQJTGeMxChCgiyU",
                        "mark": "https://cdn.filepicker.io/api/file/zebLRcY3RtOlynDXTgNk"
                      },
                      "options": [
                        {
                          "name": "anonymizeIp",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "For client side libraries. Read more about anonymizing IP addresses from the [Google support documentation](https://support.google.com/analytics/answer/2763052?hl=en).",
                          "required": false,
                          "label": "Anonymize IP Addresses"
                        },
                        {
                          "name": "classic",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "**Important:** When creating your Google Analytics profile, you can choose between **Classic** and **Universal** Analytics. After March 2013, new profiles default to Universal, while earlier ones are Classic. An easy test: if you see `_gaq.push` in your code you're using Classic, so enable this.",
                          "required": false,
                          "label": "Use Classic Analytics on Your Site"
                        },
                        {
                          "name": "contentGroupings",
                          "type": "map",
                          "defaultValue": {},
                          "description": "Enter a property name on the left. Choose the Google Analytics content grouping you want on the right. Google Analytics only accepts numbered content groupings (e.g. contentGrouping3). When you use `analytics.page(name, properties)` with custom properties, we'll use the value of the property you designate as the value of the specified content grouping.",
                          "required": false,
                          "label": "Content Groupings"
                        },
                        {
                          "name": "dimensions",
                          "type": "map",
                          "defaultValue": {},
                          "description": "Because Google Analytics cannot accept arbitrary data about users or events, when you use `analytics.identify(userId, traits)` with custom traits or `analytics.track('event', properties)` with custom properties, you need to map those traits and properties to Google Analytics custom dimensions if you want them to be sent to GA. Enter a trait or property name on the left. Choose the Google Analytics dimension you want on the right. Google Analytics only accepts numbered dimensions (e.g. dimension3). We suggest using user-scoped dimensions for trait mappings and hit-scoped dimensions for properties [Contact us](https://segment.com/contact) if you need help!",
                          "required": false,
                          "label": "Custom Dimensions"
                        },
                        {
                          "name": "domain",
                          "type": "string",
                          "defaultValue": "",
                          "description": "_Only data sent from visitors on this domain_ will be recorded. By default Google Analytics automatically resolves the domain name, so you should **leave this blank unless you know you want otherwise**! This option is useful if you need to ignore data from other domains, or explicitly set the domain of your Google Analytics cookie. This is known as Override Domain Name in [GA Classic](https://developers.google.com/analytics/devguides/collection/gajs/gaTrackingSite). If you are testing locally, you can set the domain to `none`. [Read more about this setting in our docs](https://segment.com/docs/connections/destinations/catalog/google-analytics/#cookie-domain-name).",
                          "required": false,
                          "label": "Cookie Domain Name"
                        },
                        {
                          "name": "doubleClick",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Works with both Universal and Classic tracking methods.",
                          "required": false,
                          "label": "Remarketing, Display Ads and Demographic Reports."
                        },
                        {
                          "name": "enableServerIdentify",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "If you are sending `.identify()` calls from your server side libraries or have Segment Cloud Apps that send back `.identify()` calls with enriched user traits, you can send that data to your GA account via custom dimensions and metrics. Unlike the client side integration which has the luxury of browsers and the global window `ga` tracker, for server side we will check your `traits` and your settings for custom dimension/metric mappings and send it with an explicit event. ",
                          "required": false,
                          "label": "Enable Server Side Identify"
                        },
                        {
                          "name": "enhancedEcommerce",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "If you want more detailed reports on ecommerce, you might want to enable this feature. Read more about it [here](https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanced-ecommerce).",
                          "required": false,
                          "label": "Enable Enhanced Ecommerce"
                        },
                        {
                          "name": "enhancedLinkAttribution",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Provides more detailed reports on the links clicked on your site. Read more about it in the [Google support documentation](https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanced-link-attribution).",
                          "required": false,
                          "label": "Enable Enhanced Link Attribution"
                        },
                        {
                          "name": "identifyCategory",
                          "type": "string",
                          "defaultValue": "",
                          "description": "If you have **Enabled Server Side Identify**, you can specify the trait you want to look up for setting the event category will be since all custom metrics/dimensions for server side `.identify()` calls will be sent via an event hit to GA. The default value will be `'All'`. For example, if you are sending `traits.category`, you can put 'category' in the setting above and we will send the value of this trait as the event category.",
                          "required": false,
                          "label": "Server Side Identify Event Category"
                        },
                        {
                          "name": "identifyEventName",
                          "type": "string",
                          "defaultValue": "",
                          "description": "If you have **Enabled Server Side Identify**, you can specify what the event action will be since all custom metrics/dimensions for server side `.identify()` calls will be sent via an event hit to GA. The default value will be `'User Enriched'`",
                          "required": false,
                          "label": "Server Side Identify Event Action"
                        },
                        {
                          "name": "ignoredReferrers",
                          "type": "strings",
                          "defaultValue": [],
                          "description": "Add any domains you want to ignore, separated by line breaks. You might use this if you want Google Analytics to ignore certain referral domains (e.g. to prevent your subdomains from showing up as referrers in your analytics). _Note: this only works for Classic profiles. Universal profiles can_ [edit their ignored referrers](https://support.google.com/analytics/answer/2795830?hl=en&ref_topic=2790009) _directly inside Google Analytics._",
                          "required": false,
                          "label": "Ignored Referrers"
                        },
                        {
                          "name": "includeSearch",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "The querystring doesn't usually affect the content of the page in a significant way (like sorting), so we disable this by default.",
                          "required": false,
                          "label": "Include the Querystring in Page Views"
                        },
                        {
                          "name": "metrics",
                          "type": "map",
                          "defaultValue": {},
                          "description": "Because Google Analytics cannot accept arbitrary data about users or events, when you use `analytics.identify(userId, traits)` with custom numerical traits or `analytics.track('event', properties)` with custom numerical properties, you need to map those traits and properties to Google Analytics custom metrics if you want them to be sent to GA. Enter a trait or property name on the left. Choose the Google Analytics metric you want on the right. Google Analytics only accepts numbered metrics (e.g. metric3). We suggest using user-scoped metrics for trait mappings and hit-scoped metrics for properties. [Contact us](https://segment.com/contact) if you need help!",
                          "required": false,
                          "label": "Custom Metrics"
                        },
                        {
                          "name": "mobileTrackingId",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Google Analytics tracks mobile apps separately, so you'll want to create a separate Google Analytics mobile app property. Remember to only add a mobile tracking ID if you're tracking from a mobile library. If you're tracking from a hybrid app, fill in your website tracking ID instead. Leave it blank if you don't have a mobile app property.",
                          "required": true,
                          "label": "Mobile Tracking ID"
                        },
                        {
                          "name": "nameTracker",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Name the tracker 'segmentGATracker'. Enable this if you're working with additional Google Analytics trackers and want to ensure that your Segment tracker has a distinct name. If this is enabled you must prepend this tracker name to any native Google Analytics (except for create) that you call, e.g. 'segmentGATracker.require(....)' ",
                          "required": false,
                          "label": "Name Tracker"
                        },
                        {
                          "name": "nonInteraction",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Adds a _nonInteraction: true_ flag to every non-enhanced ecommerce event tracked to Google Analytics. If you're seeing unusually low bounce rates this will solve that issue.",
                          "required": false,
                          "label": "Add the non-interaction flag to all events"
                        },
                        {
                          "name": "optimize",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Integrate with Google Analytics Optimize plugin. Please enter your Optimize Container ID",
                          "required": false,
                          "label": "Optimize Container ID"
                        },
                        {
                          "name": "preferAnonymousId",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Enable this setting if you want `clientId` to always be set as a hash of `anonymousId`. If no `anonymousId` is present we will fallback to set the `clientId` to `userId`. This setting only applies to server side connections.",
                          "required": false,
                          "label": "Prefer Anonymous ID for Client ID - Server Side Only"
                        },
                        {
                          "name": "protocolMappings",
                          "type": "map",
                          "defaultValue": {},
                          "description": "If you are using the *server side* GA integration, you can map your custom traits or properties to known [measurement protocol params](https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters).",
                          "required": false,
                          "label": "Map Traits or Properties to Measurement Protocol Params"
                        },
                        {
                          "name": "reportUncaughtExceptions",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "This lets you study errors and exceptions in your iOS and Android apps in Google Analytics.",
                          "required": false,
                          "label": "Send Uncaught Exceptions to GA (Mobile)"
                        },
                        {
                          "name": "resetCustomDimensionsOnPage",
                          "type": "array",
                          "defaultValue": [],
                          "description": "If you have an SPA website, and need to reset custom dimensions between page calls, add to this setting all the properties (already mapped as custom dimensions) that need to be reset for each page call.",
                          "required": false,
                          "label": "Reset dimensions on Page calls"
                        },
                        {
                          "name": "sampleRate",
                          "type": "number",
                          "defaultValue": 100,
                          "description": "Specifies what percentage of users should be tracked. This defaults to 100 (no users are sampled out) but large sites may need to use a lower sample rate to stay within Google Analytics processing limits as [seen here](https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#sampleRate). Currently only available in the browser - mobile coming soon.",
                          "required": false,
                          "label": "Sample Rate"
                        },
                        {
                          "name": "sendUserId",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "User-ID enables the analysis of groups of sessions across devices, using a unique and persistent ID. This only works with Google Analytics Universal. IMPORTANT: Sending email or other personally identifiable information (PII) violates Google Analytics Terms of Service.",
                          "required": false,
                          "label": "Send User-ID to GA"
                        },
                        {
                          "name": "serversideClassic",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "**Important:** When creating your Google Analytics profile, you can choose between **Classic** and **Universal** Analytics. After March 2013, new profiles default to Universal, while earlier profiles are Classic. An easy test: if you see `_gaq.push` in your code you're using Classic, so enable this.",
                          "required": false,
                          "label": "Use Classic Analytics for Your Serverside Tracking"
                        },
                        {
                          "name": "serversideTrackingId",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Your Serverside Tracking ID is the UA code for the Google Analytics property you want to send server-side calls to. Leave it blank if you don't have a server-side client library that you want to send data from. Remember that data tracked from mobile integrations that are not bundled in your app send data to Google Analytics server side, since Segment sends data to them via our own servers.",
                          "required": true,
                          "label": "Serverside Tracking ID"
                        },
                        {
                          "name": "setAllMappedProps",
                          "type": "boolean",
                          "defaultValue": true,
                          "description": "Google Analytics allows users to either pass custom dimensions / metrics as properties of specific events or as properties for all events on a given page (or the lifetime of the global tracker object). The default Segment behavior is the latter. Any metrics / dimensions that are mapped to a given property will be set to the page and sent as properties of all subsequent events on that page. You can disable this functionality with this setting. If disabled, Segment will only pass custom dimensions / metrics as part of the payload of the event with which they are explicitly associated. Please reference the Google Analytics [documentation](https://developers.google.com/analytics/devguides/collection/analyticsjs/custom-dims-mets#implementation) for more info.",
                          "required": false,
                          "label": "Set Custom Dimensions & Metrics to the Page"
                        },
                        {
                          "name": "siteSpeedSampleRate",
                          "type": "number",
                          "defaultValue": 1,
                          "description": "Defines the sample size for Site Speed data collection. If you have a small number of visitors you might want to adjust the sampling to a larger rate for your [site speed stats](https://developers.google.com/analytics/devguides/collection/gajs/methods/gaJSApiBasicConfiguration?hl=en#_gat.GA_Tracker_._setSiteSpeedSampleRate).",
                          "required": false,
                          "label": "Site Speed Sample Rate"
                        },
                        {
                          "name": "topLevelContextMapping",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "By default, Segment allows mappings from custom traits and properties to Google Analytics custom dimensions and metrics. If you enable this setting, Segment will also send top-level and `context` object fields mapped in the **Custom Dimensions** and **Custom Metrics** settings. When evaluating mappings, Segment will prioritize properties and traits before top-level and `context` fields. This setting only applies to server side connections.",
                          "required": false,
                          "label": "Enable Mappings from Top-Level or Context Fields - Server Side Only"
                        },
                        {
                          "name": "trackCategorizedPages",
                          "type": "boolean",
                          "defaultValue": true,
                          "description": "Tracks events to Google Analytics for [`page` method](https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/#page) calls that have a `category` associated with them. E.g. `page('Docs', 'Index')` translates to **Viewed Docs Page**.",
                          "required": false,
                          "label": "Track Categorized Pages"
                        },
                        {
                          "name": "trackNamedPages",
                          "type": "boolean",
                          "defaultValue": true,
                          "description": "Tracks events to Google Analytics for [`page` method](https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/#page) calls that have a `name` associated with them. E.g. `page('Signup')` translates to **Viewed Signup Page**.",
                          "required": false,
                          "label": "Track Named Pages"
                        },
                        {
                          "name": "trackingId",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Your website's Tracking ID is in the **Tracking Info** tab on the [Admin Page](https://www.google.com/analytics/web/#management/Property) of Google Analytics. Leave it blank if you don't have a website property.",
                          "required": true,
                          "label": "Website Tracking ID"
                        },
                        {
                          "name": "typeOverride",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "By default, Segment sends \"Product List Viewed\" and \"Product List Filtered\" ecommerce events to GA as \"pageview\" hit types. Enable this setting to instead map these two specced Segment track events to GA as \"event\" hit types.",
                          "required": false,
                          "label": "Send Segment \"Product List\" Events to GA as \"Event\" Hits"
                        },
                        {
                          "name": "useGoogleAmpClientId",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Google’s AMP Client ID API lets you uniquely identify users who engage with your content on AMP and non-AMP pages. If you opt-in, Google Analytics will use the user's AMP Client ID to determine that multiple site events belong to the same user when those users visit AMP pages via a [Google viewer](https://support.google.com/websearch/answer/7220196). Associating events and users provides features like user counts and session-based metrics. *Enabling this feature will affect your reporting.* Please carefully reference Google's [documentation](https://support.google.com/analytics/answer/7486764?hl=en&ref_topic=7378717) for more info before you enable it.",
                          "required": false,
                          "label": "Use Google AMP Client ID"
                        },
                        {
                          "name": "userDeletion",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Sign in to Google Analytics oAuth to enable User Deletion. ",
                          "required": false,
                          "label": "User Deletion"
                        }
                      ],
                      "status": "PUBLIC",
                      "categories": ["Analytics"],
                      "website": "http://google.com/analytics",
                      "components": [
                        {
                          "code": "https://github.com/segment-integrations/analytics.js-integration-google-analytics",
                          "type": "BROWSER"
                        },
                        {
                          "code": "https://github.com/segment-integrations/analytics-ios-integration-google-analytics",
                          "type": "IOS"
                        },
                        {
                          "code": "https://github.com/segment-integrations/analytics-android-integration-google-analytics",
                          "type": "ANDROID"
                        },
                        {
                          "code": "https://github.com/segmentio/integrations/tree/master/integrations/google-analytics",
                          "type": "SERVER"
                        }
                      ],
                      "previousNames": ["Google Analytics", "Google Universal Analytics"],
                      "supportedMethods": {
                        "track": true,
                        "pageview": true,
                        "identify": true,
                        "group": false,
                        "alias": false
                      },
                      "supportedPlatforms": { "browser": true, "mobile": true, "server": true },
                      "supportedFeatures": {
                        "cloudModeInstances": "0",
                        "deviceModeInstances": "0",
                        "replay": false,
                        "browserUnbundling": true,
                        "browserUnbundlingPublic": true
                      },
                      "actions": [],
                      "presets": []
                    },
                    "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                  }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetDestinationV1Output" },
                "example": {
                  "destination": {
                    "id": "fP7qoQw2HTWt9WdMr718gn",
                    "enabled": false,
                    "name": "",
                    "settings": {
                      "anonymizeIp": false,
                      "classic": false,
                      "contentGroupings": {},
                      "dimensions": {},
                      "domain": "",
                      "doubleClick": false,
                      "enableServerIdentify": false,
                      "enhancedEcommerce": false,
                      "enhancedLinkAttribution": false,
                      "identifyCategory": "",
                      "identifyEventName": "",
                      "ignoredReferrers": [],
                      "includeSearch": false,
                      "metrics": {},
                      "mobileTrackingId": "123",
                      "nameTracker": false,
                      "nonInteraction": false,
                      "optimize": "",
                      "preferAnonymousId": false,
                      "protocolMappings": {},
                      "reportUncaughtExceptions": false,
                      "resetCustomDimensionsOnPage": [],
                      "sampleRate": 100,
                      "sendUserId": false,
                      "serversideClassic": false,
                      "serversideTrackingId": "123",
                      "setAllMappedProps": true,
                      "siteSpeedSampleRate": 1,
                      "topLevelContextMapping": false,
                      "trackCategorizedPages": true,
                      "trackNamedPages": true,
                      "trackingId": "123",
                      "typeOverride": false,
                      "useGoogleAmpClientId": false,
                      "userDeletion": ""
                    },
                    "metadata": {
                      "id": "54521fd725e721e32a72eebb",
                      "name": "Google Universal Analytics",
                      "description": "Google Universal Analytics is the most popular analytics tool for the web. It’s free and provides a wide range of features. It’s especially good at measuring traffic sources and ad campaigns.",
                      "slug": "google-analytics",
                      "logos": {
                        "default": "https://cdn.filepicker.io/api/file/anFgceQJTGeMxChCgiyU",
                        "mark": "https://cdn.filepicker.io/api/file/zebLRcY3RtOlynDXTgNk"
                      },
                      "options": [
                        {
                          "name": "anonymizeIp",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "For client side libraries. Read more about anonymizing IP addresses from the [Google support documentation](https://support.google.com/analytics/answer/2763052?hl=en).",
                          "required": false,
                          "label": "Anonymize IP Addresses"
                        },
                        {
                          "name": "classic",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "**Important:** When creating your Google Analytics profile, you can choose between **Classic** and **Universal** Analytics. After March 2013, new profiles default to Universal, while earlier ones are Classic. An easy test: if you see `_gaq.push` in your code you're using Classic, so enable this.",
                          "required": false,
                          "label": "Use Classic Analytics on Your Site"
                        },
                        {
                          "name": "contentGroupings",
                          "type": "map",
                          "defaultValue": {},
                          "description": "Enter a property name on the left. Choose the Google Analytics content grouping you want on the right. Google Analytics only accepts numbered content groupings (e.g. contentGrouping3). When you use `analytics.page(name, properties)` with custom properties, we'll use the value of the property you designate as the value of the specified content grouping.",
                          "required": false,
                          "label": "Content Groupings"
                        },
                        {
                          "name": "dimensions",
                          "type": "map",
                          "defaultValue": {},
                          "description": "Because Google Analytics cannot accept arbitrary data about users or events, when you use `analytics.identify(userId, traits)` with custom traits or `analytics.track('event', properties)` with custom properties, you need to map those traits and properties to Google Analytics custom dimensions if you want them to be sent to GA. Enter a trait or property name on the left. Choose the Google Analytics dimension you want on the right. Google Analytics only accepts numbered dimensions (e.g. dimension3). We suggest using user-scoped dimensions for trait mappings and hit-scoped dimensions for properties [Contact us](https://segment.com/contact) if you need help!",
                          "required": false,
                          "label": "Custom Dimensions"
                        },
                        {
                          "name": "domain",
                          "type": "string",
                          "defaultValue": "",
                          "description": "_Only data sent from visitors on this domain_ will be recorded. By default Google Analytics automatically resolves the domain name, so you should **leave this blank unless you know you want otherwise**! This option is useful if you need to ignore data from other domains, or explicitly set the domain of your Google Analytics cookie. This is known as Override Domain Name in [GA Classic](https://developers.google.com/analytics/devguides/collection/gajs/gaTrackingSite). If you are testing locally, you can set the domain to `none`. [Read more about this setting in our docs](https://segment.com/docs/connections/destinations/catalog/google-analytics/#cookie-domain-name).",
                          "required": false,
                          "label": "Cookie Domain Name"
                        },
                        {
                          "name": "doubleClick",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Works with both Universal and Classic tracking methods.",
                          "required": false,
                          "label": "Remarketing, Display Ads and Demographic Reports."
                        },
                        {
                          "name": "enableServerIdentify",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "If you are sending `.identify()` calls from your server side libraries or have Segment Cloud Apps that send back `.identify()` calls with enriched user traits, you can send that data to your GA account via custom dimensions and metrics. Unlike the client side integration which has the luxury of browsers and the global window `ga` tracker, for server side we will check your `traits` and your settings for custom dimension/metric mappings and send it with an explicit event. ",
                          "required": false,
                          "label": "Enable Server Side Identify"
                        },
                        {
                          "name": "enhancedEcommerce",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "If you want more detailed reports on ecommerce, you might want to enable this feature. Read more about it [here](https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanced-ecommerce).",
                          "required": false,
                          "label": "Enable Enhanced Ecommerce"
                        },
                        {
                          "name": "enhancedLinkAttribution",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Provides more detailed reports on the links clicked on your site. Read more about it in the [Google support documentation](https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanced-link-attribution).",
                          "required": false,
                          "label": "Enable Enhanced Link Attribution"
                        },
                        {
                          "name": "identifyCategory",
                          "type": "string",
                          "defaultValue": "",
                          "description": "If you have **Enabled Server Side Identify**, you can specify the trait you want to look up for setting the event category will be since all custom metrics/dimensions for server side `.identify()` calls will be sent via an event hit to GA. The default value will be `'All'`. For example, if you are sending `traits.category`, you can put 'category' in the setting above and we will send the value of this trait as the event category.",
                          "required": false,
                          "label": "Server Side Identify Event Category"
                        },
                        {
                          "name": "identifyEventName",
                          "type": "string",
                          "defaultValue": "",
                          "description": "If you have **Enabled Server Side Identify**, you can specify what the event action will be since all custom metrics/dimensions for server side `.identify()` calls will be sent via an event hit to GA. The default value will be `'User Enriched'`",
                          "required": false,
                          "label": "Server Side Identify Event Action"
                        },
                        {
                          "name": "ignoredReferrers",
                          "type": "strings",
                          "defaultValue": [],
                          "description": "Add any domains you want to ignore, separated by line breaks. You might use this if you want Google Analytics to ignore certain referral domains (e.g. to prevent your subdomains from showing up as referrers in your analytics). _Note: this only works for Classic profiles. Universal profiles can_ [edit their ignored referrers](https://support.google.com/analytics/answer/2795830?hl=en&ref_topic=2790009) _directly inside Google Analytics._",
                          "required": false,
                          "label": "Ignored Referrers"
                        },
                        {
                          "name": "includeSearch",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "The querystring doesn't usually affect the content of the page in a significant way (like sorting), so we disable this by default.",
                          "required": false,
                          "label": "Include the Querystring in Page Views"
                        },
                        {
                          "name": "metrics",
                          "type": "map",
                          "defaultValue": {},
                          "description": "Because Google Analytics cannot accept arbitrary data about users or events, when you use `analytics.identify(userId, traits)` with custom numerical traits or `analytics.track('event', properties)` with custom numerical properties, you need to map those traits and properties to Google Analytics custom metrics if you want them to be sent to GA. Enter a trait or property name on the left. Choose the Google Analytics metric you want on the right. Google Analytics only accepts numbered metrics (e.g. metric3). We suggest using user-scoped metrics for trait mappings and hit-scoped metrics for properties. [Contact us](https://segment.com/contact) if you need help!",
                          "required": false,
                          "label": "Custom Metrics"
                        },
                        {
                          "name": "mobileTrackingId",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Google Analytics tracks mobile apps separately, so you'll want to create a separate Google Analytics mobile app property. Remember to only add a mobile tracking ID if you're tracking from a mobile library. If you're tracking from a hybrid app, fill in your website tracking ID instead. Leave it blank if you don't have a mobile app property.",
                          "required": true,
                          "label": "Mobile Tracking ID"
                        },
                        {
                          "name": "nameTracker",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Name the tracker 'segmentGATracker'. Enable this if you're working with additional Google Analytics trackers and want to ensure that your Segment tracker has a distinct name. If this is enabled you must prepend this tracker name to any native Google Analytics (except for create) that you call, e.g. 'segmentGATracker.require(....)' ",
                          "required": false,
                          "label": "Name Tracker"
                        },
                        {
                          "name": "nonInteraction",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Adds a _nonInteraction: true_ flag to every non-enhanced ecommerce event tracked to Google Analytics. If you're seeing unusually low bounce rates this will solve that issue.",
                          "required": false,
                          "label": "Add the non-interaction flag to all events"
                        },
                        {
                          "name": "optimize",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Integrate with Google Analytics Optimize plugin. Please enter your Optimize Container ID",
                          "required": false,
                          "label": "Optimize Container ID"
                        },
                        {
                          "name": "preferAnonymousId",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Enable this setting if you want `clientId` to always be set as a hash of `anonymousId`. If no `anonymousId` is present we will fallback to set the `clientId` to `userId`. This setting only applies to server side connections.",
                          "required": false,
                          "label": "Prefer Anonymous ID for Client ID - Server Side Only"
                        },
                        {
                          "name": "protocolMappings",
                          "type": "map",
                          "defaultValue": {},
                          "description": "If you are using the *server side* GA integration, you can map your custom traits or properties to known [measurement protocol params](https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters).",
                          "required": false,
                          "label": "Map Traits or Properties to Measurement Protocol Params"
                        },
                        {
                          "name": "reportUncaughtExceptions",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "This lets you study errors and exceptions in your iOS and Android apps in Google Analytics.",
                          "required": false,
                          "label": "Send Uncaught Exceptions to GA (Mobile)"
                        },
                        {
                          "name": "resetCustomDimensionsOnPage",
                          "type": "array",
                          "defaultValue": [],
                          "description": "If you have an SPA website, and need to reset custom dimensions between page calls, add to this setting all the properties (already mapped as custom dimensions) that need to be reset for each page call.",
                          "required": false,
                          "label": "Reset dimensions on Page calls"
                        },
                        {
                          "name": "sampleRate",
                          "type": "number",
                          "defaultValue": 100,
                          "description": "Specifies what percentage of users should be tracked. This defaults to 100 (no users are sampled out) but large sites may need to use a lower sample rate to stay within Google Analytics processing limits as [seen here](https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#sampleRate). Currently only available in the browser - mobile coming soon.",
                          "required": false,
                          "label": "Sample Rate"
                        },
                        {
                          "name": "sendUserId",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "User-ID enables the analysis of groups of sessions across devices, using a unique and persistent ID. This only works with Google Analytics Universal. IMPORTANT: Sending email or other personally identifiable information (PII) violates Google Analytics Terms of Service.",
                          "required": false,
                          "label": "Send User-ID to GA"
                        },
                        {
                          "name": "serversideClassic",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "**Important:** When creating your Google Analytics profile, you can choose between **Classic** and **Universal** Analytics. After March 2013, new profiles default to Universal, while earlier profiles are Classic. An easy test: if you see `_gaq.push` in your code you're using Classic, so enable this.",
                          "required": false,
                          "label": "Use Classic Analytics for Your Serverside Tracking"
                        },
                        {
                          "name": "serversideTrackingId",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Your Serverside Tracking ID is the UA code for the Google Analytics property you want to send server-side calls to. Leave it blank if you don't have a server-side client library that you want to send data from. Remember that data tracked from mobile integrations that are not bundled in your app send data to Google Analytics server side, since Segment sends data to them via our own servers.",
                          "required": true,
                          "label": "Serverside Tracking ID"
                        },
                        {
                          "name": "setAllMappedProps",
                          "type": "boolean",
                          "defaultValue": true,
                          "description": "Google Analytics allows users to either pass custom dimensions / metrics as properties of specific events or as properties for all events on a given page (or the lifetime of the global tracker object). The default Segment behavior is the latter. Any metrics / dimensions that are mapped to a given property will be set to the page and sent as properties of all subsequent events on that page. You can disable this functionality with this setting. If disabled, Segment will only pass custom dimensions / metrics as part of the payload of the event with which they are explicitly associated. Please reference the Google Analytics [documentation](https://developers.google.com/analytics/devguides/collection/analyticsjs/custom-dims-mets#implementation) for more info.",
                          "required": false,
                          "label": "Set Custom Dimensions & Metrics to the Page"
                        },
                        {
                          "name": "siteSpeedSampleRate",
                          "type": "number",
                          "defaultValue": 1,
                          "description": "Defines the sample size for Site Speed data collection. If you have a small number of visitors you might want to adjust the sampling to a larger rate for your [site speed stats](https://developers.google.com/analytics/devguides/collection/gajs/methods/gaJSApiBasicConfiguration?hl=en#_gat.GA_Tracker_._setSiteSpeedSampleRate).",
                          "required": false,
                          "label": "Site Speed Sample Rate"
                        },
                        {
                          "name": "topLevelContextMapping",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "By default, Segment allows mappings from custom traits and properties to Google Analytics custom dimensions and metrics. If you enable this setting, Segment will also send top-level and `context` object fields mapped in the **Custom Dimensions** and **Custom Metrics** settings. When evaluating mappings, Segment will prioritize properties and traits before top-level and `context` fields. This setting only applies to server side connections.",
                          "required": false,
                          "label": "Enable Mappings from Top-Level or Context Fields - Server Side Only"
                        },
                        {
                          "name": "trackCategorizedPages",
                          "type": "boolean",
                          "defaultValue": true,
                          "description": "Tracks events to Google Analytics for [`page` method](https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/#page) calls that have a `category` associated with them. E.g. `page('Docs', 'Index')` translates to **Viewed Docs Page**.",
                          "required": false,
                          "label": "Track Categorized Pages"
                        },
                        {
                          "name": "trackNamedPages",
                          "type": "boolean",
                          "defaultValue": true,
                          "description": "Tracks events to Google Analytics for [`page` method](https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/#page) calls that have a `name` associated with them. E.g. `page('Signup')` translates to **Viewed Signup Page**.",
                          "required": false,
                          "label": "Track Named Pages"
                        },
                        {
                          "name": "trackingId",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Your website's Tracking ID is in the **Tracking Info** tab on the [Admin Page](https://www.google.com/analytics/web/#management/Property) of Google Analytics. Leave it blank if you don't have a website property.",
                          "required": true,
                          "label": "Website Tracking ID"
                        },
                        {
                          "name": "typeOverride",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "By default, Segment sends \"Product List Viewed\" and \"Product List Filtered\" ecommerce events to GA as \"pageview\" hit types. Enable this setting to instead map these two specced Segment track events to GA as \"event\" hit types.",
                          "required": false,
                          "label": "Send Segment \"Product List\" Events to GA as \"Event\" Hits"
                        },
                        {
                          "name": "useGoogleAmpClientId",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Google’s AMP Client ID API lets you uniquely identify users who engage with your content on AMP and non-AMP pages. If you opt-in, Google Analytics will use the user's AMP Client ID to determine that multiple site events belong to the same user when those users visit AMP pages via a [Google viewer](https://support.google.com/websearch/answer/7220196). Associating events and users provides features like user counts and session-based metrics. *Enabling this feature will affect your reporting.* Please carefully reference Google's [documentation](https://support.google.com/analytics/answer/7486764?hl=en&ref_topic=7378717) for more info before you enable it.",
                          "required": false,
                          "label": "Use Google AMP Client ID"
                        },
                        {
                          "name": "userDeletion",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Sign in to Google Analytics oAuth to enable User Deletion. ",
                          "required": false,
                          "label": "User Deletion"
                        }
                      ],
                      "status": "PUBLIC",
                      "categories": ["Analytics"],
                      "website": "http://google.com/analytics",
                      "components": [
                        {
                          "code": "https://github.com/segment-integrations/analytics.js-integration-google-analytics",
                          "type": "BROWSER"
                        },
                        {
                          "code": "https://github.com/segment-integrations/analytics-ios-integration-google-analytics",
                          "type": "IOS"
                        },
                        {
                          "code": "https://github.com/segment-integrations/analytics-android-integration-google-analytics",
                          "type": "ANDROID"
                        },
                        {
                          "code": "https://github.com/segmentio/integrations/tree/master/integrations/google-analytics",
                          "type": "SERVER"
                        }
                      ],
                      "previousNames": ["Google Analytics", "Google Universal Analytics"],
                      "supportedMethods": {
                        "track": true,
                        "pageview": true,
                        "identify": true,
                        "group": false,
                        "alias": false
                      },
                      "supportedPlatforms": { "browser": true, "mobile": true, "server": true },
                      "supportedFeatures": {
                        "cloudModeInstances": "0",
                        "deviceModeInstances": "0",
                        "replay": false,
                        "browserUnbundling": true,
                        "browserUnbundlingPublic": true
                      },
                      "actions": [],
                      "presets": []
                    },
                    "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Destinations"],
        "tags": ["Destinations"]
      },
      "patch": {
        "summary": "updateDestinationV1",
        "parameters": [
          {
            "in": "path",
            "name": "destinationId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Updates an existing Destination.\n\n**Note**: if you attempt to update read-only settings for your destination you'll encounter the following behavior:\n\n  * If only read-only properties are being updated, the endpoint will return an HTTP 400 error.\n  * If there's a mix of writable and read-only properties in the payload, the request will be accepted, the writable properties will be updated and the read-only properties ignored.\n\n\n\nThis endpoint generates the following audit events:\n* Integration Disabled\n\n\nConfig API omitted fields:\n- `updateMask`\n         ",
        "operationId": "updateDestination",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/UpdateDestinationAlphaInput" },
              "example": { "destinationId": "fP7qoQw2HTWt9WdMr718gn", "enabled": false }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/UpdateDestinationBetaInput" },
              "example": { "destinationId": "fP7qoQw2HTWt9WdMr718gn", "enabled": false }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/UpdateDestinationV1Input" },
              "example": { "destinationId": "fP7qoQw2HTWt9WdMr718gn", "enabled": false }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/UpdateDestinationAlphaOutput" },
                "example": {
                  "destination": {
                    "id": "fP7qoQw2HTWt9WdMr718gn",
                    "enabled": false,
                    "name": "",
                    "settings": {
                      "anonymizeIp": false,
                      "classic": false,
                      "contentGroupings": {},
                      "dimensions": {},
                      "domain": "",
                      "doubleClick": false,
                      "enableServerIdentify": false,
                      "enhancedEcommerce": false,
                      "enhancedLinkAttribution": false,
                      "identifyCategory": "",
                      "identifyEventName": "",
                      "ignoredReferrers": [],
                      "includeSearch": false,
                      "metrics": {},
                      "mobileTrackingId": "123",
                      "nameTracker": false,
                      "nonInteraction": false,
                      "optimize": "",
                      "preferAnonymousId": false,
                      "protocolMappings": {},
                      "reportUncaughtExceptions": false,
                      "resetCustomDimensionsOnPage": [],
                      "sampleRate": 100,
                      "sendUserId": false,
                      "serversideClassic": false,
                      "serversideTrackingId": "123",
                      "setAllMappedProps": true,
                      "siteSpeedSampleRate": 1,
                      "topLevelContextMapping": false,
                      "trackCategorizedPages": true,
                      "trackNamedPages": true,
                      "trackingId": "123",
                      "typeOverride": false,
                      "useGoogleAmpClientId": false,
                      "userDeletion": ""
                    },
                    "metadata": {
                      "id": "54521fd725e721e32a72eebb",
                      "name": "Google Universal Analytics",
                      "slug": "google-analytics",
                      "logos": {
                        "default": "https://cdn.filepicker.io/api/file/anFgceQJTGeMxChCgiyU",
                        "mark": "https://cdn.filepicker.io/api/file/zebLRcY3RtOlynDXTgNk"
                      },
                      "options": [
                        {
                          "name": "anonymizeIp",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "For client side libraries. Read more about anonymizing IP addresses from the [Google support documentation](https://support.google.com/analytics/answer/2763052?hl=en).",
                          "required": false,
                          "label": "Anonymize IP Addresses"
                        },
                        {
                          "name": "classic",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "**Important:** When creating your Google Analytics profile, you can choose between **Classic** and **Universal** Analytics. After March 2013, new profiles default to Universal, while earlier ones are Classic. An easy test: if you see `_gaq.push` in your code you're using Classic, so enable this.",
                          "required": false,
                          "label": "Use Classic Analytics on Your Site"
                        },
                        {
                          "name": "contentGroupings",
                          "type": "map",
                          "defaultValue": {},
                          "description": "Enter a property name on the left. Choose the Google Analytics content grouping you want on the right. Google Analytics only accepts numbered content groupings (e.g. contentGrouping3). When you use `analytics.page(name, properties)` with custom properties, we'll use the value of the property you designate as the value of the specified content grouping.",
                          "required": false,
                          "label": "Content Groupings"
                        },
                        {
                          "name": "dimensions",
                          "type": "map",
                          "defaultValue": {},
                          "description": "Because Google Analytics cannot accept arbitrary data about users or events, when you use `analytics.identify(userId, traits)` with custom traits or `analytics.track('event', properties)` with custom properties, you need to map those traits and properties to Google Analytics custom dimensions if you want them to be sent to GA. Enter a trait or property name on the left. Choose the Google Analytics dimension you want on the right. Google Analytics only accepts numbered dimensions (e.g. dimension3). We suggest using user-scoped dimensions for trait mappings and hit-scoped dimensions for properties [Contact us](https://segment.com/contact) if you need help!",
                          "required": false,
                          "label": "Custom Dimensions"
                        },
                        {
                          "name": "domain",
                          "type": "string",
                          "defaultValue": "",
                          "description": "_Only data sent from visitors on this domain_ will be recorded. By default Google Analytics automatically resolves the domain name, so you should **leave this blank unless you know you want otherwise**! This option is useful if you need to ignore data from other domains, or explicitly set the domain of your Google Analytics cookie. This is known as Override Domain Name in [GA Classic](https://developers.google.com/analytics/devguides/collection/gajs/gaTrackingSite). If you are testing locally, you can set the domain to `none`. [Read more about this setting in our docs](https://segment.com/docs/connections/destinations/catalog/google-analytics/#cookie-domain-name).",
                          "required": false,
                          "label": "Cookie Domain Name"
                        },
                        {
                          "name": "doubleClick",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Works with both Universal and Classic tracking methods.",
                          "required": false,
                          "label": "Remarketing, Display Ads and Demographic Reports."
                        },
                        {
                          "name": "enableServerIdentify",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "If you are sending `.identify()` calls from your server side libraries or have Segment Cloud Apps that send back `.identify()` calls with enriched user traits, you can send that data to your GA account via custom dimensions and metrics. Unlike the client side integration which has the luxury of browsers and the global window `ga` tracker, for server side we will check your `traits` and your settings for custom dimension/metric mappings and send it with an explicit event. ",
                          "required": false,
                          "label": "Enable Server Side Identify"
                        },
                        {
                          "name": "enhancedEcommerce",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "If you want more detailed reports on ecommerce, you might want to enable this feature. Read more about it [here](https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanced-ecommerce).",
                          "required": false,
                          "label": "Enable Enhanced Ecommerce"
                        },
                        {
                          "name": "enhancedLinkAttribution",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Provides more detailed reports on the links clicked on your site. Read more about it in the [Google support documentation](https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanced-link-attribution).",
                          "required": false,
                          "label": "Enable Enhanced Link Attribution"
                        },
                        {
                          "name": "identifyCategory",
                          "type": "string",
                          "defaultValue": "",
                          "description": "If you have **Enabled Server Side Identify**, you can specify the trait you want to look up for setting the event category will be since all custom metrics/dimensions for server side `.identify()` calls will be sent via an event hit to GA. The default value will be `'All'`. For example, if you are sending `traits.category`, you can put 'category' in the setting above and we will send the value of this trait as the event category.",
                          "required": false,
                          "label": "Server Side Identify Event Category"
                        },
                        {
                          "name": "identifyEventName",
                          "type": "string",
                          "defaultValue": "",
                          "description": "If you have **Enabled Server Side Identify**, you can specify what the event action will be since all custom metrics/dimensions for server side `.identify()` calls will be sent via an event hit to GA. The default value will be `'User Enriched'`",
                          "required": false,
                          "label": "Server Side Identify Event Action"
                        },
                        {
                          "name": "ignoredReferrers",
                          "type": "strings",
                          "defaultValue": [],
                          "description": "Add any domains you want to ignore, separated by line breaks. You might use this if you want Google Analytics to ignore certain referral domains (e.g. to prevent your subdomains from showing up as referrers in your analytics). _Note: this only works for Classic profiles. Universal profiles can_ [edit their ignored referrers](https://support.google.com/analytics/answer/2795830?hl=en&ref_topic=2790009) _directly inside Google Analytics._",
                          "required": false,
                          "label": "Ignored Referrers"
                        },
                        {
                          "name": "includeSearch",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "The querystring doesn't usually affect the content of the page in a significant way (like sorting), so we disable this by default.",
                          "required": false,
                          "label": "Include the Querystring in Page Views"
                        },
                        {
                          "name": "metrics",
                          "type": "map",
                          "defaultValue": {},
                          "description": "Because Google Analytics cannot accept arbitrary data about users or events, when you use `analytics.identify(userId, traits)` with custom numerical traits or `analytics.track('event', properties)` with custom numerical properties, you need to map those traits and properties to Google Analytics custom metrics if you want them to be sent to GA. Enter a trait or property name on the left. Choose the Google Analytics metric you want on the right. Google Analytics only accepts numbered metrics (e.g. metric3). We suggest using user-scoped metrics for trait mappings and hit-scoped metrics for properties. [Contact us](https://segment.com/contact) if you need help!",
                          "required": false,
                          "label": "Custom Metrics"
                        },
                        {
                          "name": "mobileTrackingId",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Google Analytics tracks mobile apps separately, so you'll want to create a separate Google Analytics mobile app property. Remember to only add a mobile tracking ID if you're tracking from a mobile library. If you're tracking from a hybrid app, fill in your website tracking ID instead. Leave it blank if you don't have a mobile app property.",
                          "required": true,
                          "label": "Mobile Tracking ID"
                        },
                        {
                          "name": "nameTracker",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Name the tracker 'segmentGATracker'. Enable this if you're working with additional Google Analytics trackers and want to ensure that your Segment tracker has a distinct name. If this is enabled you must prepend this tracker name to any native Google Analytics (except for create) that you call, e.g. 'segmentGATracker.require(....)' ",
                          "required": false,
                          "label": "Name Tracker"
                        },
                        {
                          "name": "nonInteraction",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Adds a _nonInteraction: true_ flag to every non-enhanced ecommerce event tracked to Google Analytics. If you're seeing unusually low bounce rates this will solve that issue.",
                          "required": false,
                          "label": "Add the non-interaction flag to all events"
                        },
                        {
                          "name": "optimize",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Integrate with Google Analytics Optimize plugin. Please enter your Optimize Container ID",
                          "required": false,
                          "label": "Optimize Container ID"
                        },
                        {
                          "name": "preferAnonymousId",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Enable this setting if you want `clientId` to always be set as a hash of `anonymousId`. If no `anonymousId` is present we will fallback to set the `clientId` to `userId`. This setting only applies to server side connections.",
                          "required": false,
                          "label": "Prefer Anonymous ID for Client ID - Server Side Only"
                        },
                        {
                          "name": "protocolMappings",
                          "type": "map",
                          "defaultValue": {},
                          "description": "If you are using the *server side* GA integration, you can map your custom traits or properties to known [measurement protocol params](https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters).",
                          "required": false,
                          "label": "Map Traits or Properties to Measurement Protocol Params"
                        },
                        {
                          "name": "reportUncaughtExceptions",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "This lets you study errors and exceptions in your iOS and Android apps in Google Analytics.",
                          "required": false,
                          "label": "Send Uncaught Exceptions to GA (Mobile)"
                        },
                        {
                          "name": "resetCustomDimensionsOnPage",
                          "type": "array",
                          "defaultValue": [],
                          "description": "If you have an SPA website, and need to reset custom dimensions between page calls, add to this setting all the properties (already mapped as custom dimensions) that need to be reset for each page call.",
                          "required": false,
                          "label": "Reset dimensions on Page calls"
                        },
                        {
                          "name": "sampleRate",
                          "type": "number",
                          "defaultValue": 100,
                          "description": "Specifies what percentage of users should be tracked. This defaults to 100 (no users are sampled out) but large sites may need to use a lower sample rate to stay within Google Analytics processing limits as [seen here](https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#sampleRate). Currently only available in the browser - mobile coming soon.",
                          "required": false,
                          "label": "Sample Rate"
                        },
                        {
                          "name": "sendUserId",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "User-ID enables the analysis of groups of sessions across devices, using a unique and persistent ID. This only works with Google Analytics Universal. IMPORTANT: Sending email or other personally identifiable information (PII) violates Google Analytics Terms of Service.",
                          "required": false,
                          "label": "Send User-ID to GA"
                        },
                        {
                          "name": "serversideClassic",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "**Important:** When creating your Google Analytics profile, you can choose between **Classic** and **Universal** Analytics. After March 2013, new profiles default to Universal, while earlier profiles are Classic. An easy test: if you see `_gaq.push` in your code you're using Classic, so enable this.",
                          "required": false,
                          "label": "Use Classic Analytics for Your Serverside Tracking"
                        },
                        {
                          "name": "serversideTrackingId",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Your Serverside Tracking ID is the UA code for the Google Analytics property you want to send server-side calls to. Leave it blank if you don't have a server-side client library that you want to send data from. Remember that data tracked from mobile integrations that are not bundled in your app send data to Google Analytics server side, since Segment sends data to them via our own servers.",
                          "required": true,
                          "label": "Serverside Tracking ID"
                        },
                        {
                          "name": "setAllMappedProps",
                          "type": "boolean",
                          "defaultValue": true,
                          "description": "Google Analytics allows users to either pass custom dimensions / metrics as properties of specific events or as properties for all events on a given page (or the lifetime of the global tracker object). The default Segment behavior is the latter. Any metrics / dimensions that are mapped to a given property will be set to the page and sent as properties of all subsequent events on that page. You can disable this functionality with this setting. If disabled, Segment will only pass custom dimensions / metrics as part of the payload of the event with which they are explicitly associated. Please reference the Google Analytics [documentation](https://developers.google.com/analytics/devguides/collection/analyticsjs/custom-dims-mets#implementation) for more info.",
                          "required": false,
                          "label": "Set Custom Dimensions & Metrics to the Page"
                        },
                        {
                          "name": "siteSpeedSampleRate",
                          "type": "number",
                          "defaultValue": 1,
                          "description": "Defines the sample size for Site Speed data collection. If you have a small number of visitors you might want to adjust the sampling to a larger rate for your [site speed stats](https://developers.google.com/analytics/devguides/collection/gajs/methods/gaJSApiBasicConfiguration?hl=en#_gat.GA_Tracker_._setSiteSpeedSampleRate).",
                          "required": false,
                          "label": "Site Speed Sample Rate"
                        },
                        {
                          "name": "topLevelContextMapping",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "By default, Segment allows mappings from custom traits and properties to Google Analytics custom dimensions and metrics. If you enable this setting, Segment will also send top-level and `context` object fields mapped in the **Custom Dimensions** and **Custom Metrics** settings. When evaluating mappings, Segment will prioritize properties and traits before top-level and `context` fields. This setting only applies to server side connections.",
                          "required": false,
                          "label": "Enable Mappings from Top-Level or Context Fields - Server Side Only"
                        },
                        {
                          "name": "trackCategorizedPages",
                          "type": "boolean",
                          "defaultValue": true,
                          "description": "Tracks events to Google Analytics for [`page` method](https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/#page) calls that have a `category` associated with them. E.g. `page('Docs', 'Index')` translates to **Viewed Docs Page**.",
                          "required": false,
                          "label": "Track Categorized Pages"
                        },
                        {
                          "name": "trackNamedPages",
                          "type": "boolean",
                          "defaultValue": true,
                          "description": "Tracks events to Google Analytics for [`page` method](https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/#page) calls that have a `name` associated with them. E.g. `page('Signup')` translates to **Viewed Signup Page**.",
                          "required": false,
                          "label": "Track Named Pages"
                        },
                        {
                          "name": "trackingId",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Your website's Tracking ID is in the **Tracking Info** tab on the [Admin Page](https://www.google.com/analytics/web/#management/Property) of Google Analytics. Leave it blank if you don't have a website property.",
                          "required": true,
                          "label": "Website Tracking ID"
                        },
                        {
                          "name": "typeOverride",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "By default, Segment sends \"Product List Viewed\" and \"Product List Filtered\" ecommerce events to GA as \"pageview\" hit types. Enable this setting to instead map these two specced Segment track events to GA as \"event\" hit types.",
                          "required": false,
                          "label": "Send Segment \"Product List\" Events to GA as \"Event\" Hits"
                        },
                        {
                          "name": "useGoogleAmpClientId",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Google’s AMP Client ID API lets you uniquely identify users who engage with your content on AMP and non-AMP pages. If you opt-in, Google Analytics will use the user's AMP Client ID to determine that multiple site events belong to the same user when those users visit AMP pages via a [Google viewer](https://support.google.com/websearch/answer/7220196). Associating events and users provides features like user counts and session-based metrics. *Enabling this feature will affect your reporting.* Please carefully reference Google's [documentation](https://support.google.com/analytics/answer/7486764?hl=en&ref_topic=7378717) for more info before you enable it.",
                          "required": false,
                          "label": "Use Google AMP Client ID"
                        },
                        {
                          "name": "userDeletion",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Sign in to Google Analytics oAuth to enable User Deletion. ",
                          "required": false,
                          "label": "User Deletion"
                        }
                      ],
                      "status": "PUBLIC",
                      "categories": ["Analytics"],
                      "website": "http://google.com/analytics",
                      "components": [
                        {
                          "code": "https://github.com/segment-integrations/analytics.js-integration-google-analytics",
                          "type": "BROWSER"
                        },
                        {
                          "code": "https://github.com/segment-integrations/analytics-ios-integration-google-analytics",
                          "type": "IOS"
                        },
                        {
                          "code": "https://github.com/segment-integrations/analytics-android-integration-google-analytics",
                          "type": "ANDROID"
                        },
                        {
                          "code": "https://github.com/segmentio/integrations/tree/master/integrations/google-analytics",
                          "type": "SERVER"
                        }
                      ],
                      "previousNames": ["Google Analytics", "Google Universal Analytics"],
                      "supportedMethods": {
                        "track": true,
                        "pageview": true,
                        "identify": true,
                        "group": false,
                        "alias": false
                      },
                      "supportedPlatforms": { "browser": true, "mobile": true, "server": true },
                      "supportedFeatures": {
                        "cloudModeInstances": "0",
                        "deviceModeInstances": "0",
                        "replay": false,
                        "browserUnbundling": true,
                        "browserUnbundlingPublic": true
                      },
                      "actions": [],
                      "presets": []
                    },
                    "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/UpdateDestinationBetaOutput" },
                "example": {
                  "destination": {
                    "id": "fP7qoQw2HTWt9WdMr718gn",
                    "enabled": false,
                    "name": "",
                    "settings": {
                      "anonymizeIp": false,
                      "classic": false,
                      "contentGroupings": {},
                      "dimensions": {},
                      "domain": "",
                      "doubleClick": false,
                      "enableServerIdentify": false,
                      "enhancedEcommerce": false,
                      "enhancedLinkAttribution": false,
                      "identifyCategory": "",
                      "identifyEventName": "",
                      "ignoredReferrers": [],
                      "includeSearch": false,
                      "metrics": {},
                      "mobileTrackingId": "123",
                      "nameTracker": false,
                      "nonInteraction": false,
                      "optimize": "",
                      "preferAnonymousId": false,
                      "protocolMappings": {},
                      "reportUncaughtExceptions": false,
                      "resetCustomDimensionsOnPage": [],
                      "sampleRate": 100,
                      "sendUserId": false,
                      "serversideClassic": false,
                      "serversideTrackingId": "123",
                      "setAllMappedProps": true,
                      "siteSpeedSampleRate": 1,
                      "topLevelContextMapping": false,
                      "trackCategorizedPages": true,
                      "trackNamedPages": true,
                      "trackingId": "123",
                      "typeOverride": false,
                      "useGoogleAmpClientId": false,
                      "userDeletion": ""
                    },
                    "metadata": {
                      "id": "54521fd725e721e32a72eebb",
                      "name": "Google Universal Analytics",
                      "slug": "google-analytics",
                      "logos": {
                        "default": "https://cdn.filepicker.io/api/file/anFgceQJTGeMxChCgiyU",
                        "mark": "https://cdn.filepicker.io/api/file/zebLRcY3RtOlynDXTgNk"
                      },
                      "options": [
                        {
                          "name": "anonymizeIp",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "For client side libraries. Read more about anonymizing IP addresses from the [Google support documentation](https://support.google.com/analytics/answer/2763052?hl=en).",
                          "required": false,
                          "label": "Anonymize IP Addresses"
                        },
                        {
                          "name": "classic",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "**Important:** When creating your Google Analytics profile, you can choose between **Classic** and **Universal** Analytics. After March 2013, new profiles default to Universal, while earlier ones are Classic. An easy test: if you see `_gaq.push` in your code you're using Classic, so enable this.",
                          "required": false,
                          "label": "Use Classic Analytics on Your Site"
                        },
                        {
                          "name": "contentGroupings",
                          "type": "map",
                          "defaultValue": {},
                          "description": "Enter a property name on the left. Choose the Google Analytics content grouping you want on the right. Google Analytics only accepts numbered content groupings (e.g. contentGrouping3). When you use `analytics.page(name, properties)` with custom properties, we'll use the value of the property you designate as the value of the specified content grouping.",
                          "required": false,
                          "label": "Content Groupings"
                        },
                        {
                          "name": "dimensions",
                          "type": "map",
                          "defaultValue": {},
                          "description": "Because Google Analytics cannot accept arbitrary data about users or events, when you use `analytics.identify(userId, traits)` with custom traits or `analytics.track('event', properties)` with custom properties, you need to map those traits and properties to Google Analytics custom dimensions if you want them to be sent to GA. Enter a trait or property name on the left. Choose the Google Analytics dimension you want on the right. Google Analytics only accepts numbered dimensions (e.g. dimension3). We suggest using user-scoped dimensions for trait mappings and hit-scoped dimensions for properties [Contact us](https://segment.com/contact) if you need help!",
                          "required": false,
                          "label": "Custom Dimensions"
                        },
                        {
                          "name": "domain",
                          "type": "string",
                          "defaultValue": "",
                          "description": "_Only data sent from visitors on this domain_ will be recorded. By default Google Analytics automatically resolves the domain name, so you should **leave this blank unless you know you want otherwise**! This option is useful if you need to ignore data from other domains, or explicitly set the domain of your Google Analytics cookie. This is known as Override Domain Name in [GA Classic](https://developers.google.com/analytics/devguides/collection/gajs/gaTrackingSite). If you are testing locally, you can set the domain to `none`. [Read more about this setting in our docs](https://segment.com/docs/connections/destinations/catalog/google-analytics/#cookie-domain-name).",
                          "required": false,
                          "label": "Cookie Domain Name"
                        },
                        {
                          "name": "doubleClick",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Works with both Universal and Classic tracking methods.",
                          "required": false,
                          "label": "Remarketing, Display Ads and Demographic Reports."
                        },
                        {
                          "name": "enableServerIdentify",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "If you are sending `.identify()` calls from your server side libraries or have Segment Cloud Apps that send back `.identify()` calls with enriched user traits, you can send that data to your GA account via custom dimensions and metrics. Unlike the client side integration which has the luxury of browsers and the global window `ga` tracker, for server side we will check your `traits` and your settings for custom dimension/metric mappings and send it with an explicit event. ",
                          "required": false,
                          "label": "Enable Server Side Identify"
                        },
                        {
                          "name": "enhancedEcommerce",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "If you want more detailed reports on ecommerce, you might want to enable this feature. Read more about it [here](https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanced-ecommerce).",
                          "required": false,
                          "label": "Enable Enhanced Ecommerce"
                        },
                        {
                          "name": "enhancedLinkAttribution",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Provides more detailed reports on the links clicked on your site. Read more about it in the [Google support documentation](https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanced-link-attribution).",
                          "required": false,
                          "label": "Enable Enhanced Link Attribution"
                        },
                        {
                          "name": "identifyCategory",
                          "type": "string",
                          "defaultValue": "",
                          "description": "If you have **Enabled Server Side Identify**, you can specify the trait you want to look up for setting the event category will be since all custom metrics/dimensions for server side `.identify()` calls will be sent via an event hit to GA. The default value will be `'All'`. For example, if you are sending `traits.category`, you can put 'category' in the setting above and we will send the value of this trait as the event category.",
                          "required": false,
                          "label": "Server Side Identify Event Category"
                        },
                        {
                          "name": "identifyEventName",
                          "type": "string",
                          "defaultValue": "",
                          "description": "If you have **Enabled Server Side Identify**, you can specify what the event action will be since all custom metrics/dimensions for server side `.identify()` calls will be sent via an event hit to GA. The default value will be `'User Enriched'`",
                          "required": false,
                          "label": "Server Side Identify Event Action"
                        },
                        {
                          "name": "ignoredReferrers",
                          "type": "strings",
                          "defaultValue": [],
                          "description": "Add any domains you want to ignore, separated by line breaks. You might use this if you want Google Analytics to ignore certain referral domains (e.g. to prevent your subdomains from showing up as referrers in your analytics). _Note: this only works for Classic profiles. Universal profiles can_ [edit their ignored referrers](https://support.google.com/analytics/answer/2795830?hl=en&ref_topic=2790009) _directly inside Google Analytics._",
                          "required": false,
                          "label": "Ignored Referrers"
                        },
                        {
                          "name": "includeSearch",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "The querystring doesn't usually affect the content of the page in a significant way (like sorting), so we disable this by default.",
                          "required": false,
                          "label": "Include the Querystring in Page Views"
                        },
                        {
                          "name": "metrics",
                          "type": "map",
                          "defaultValue": {},
                          "description": "Because Google Analytics cannot accept arbitrary data about users or events, when you use `analytics.identify(userId, traits)` with custom numerical traits or `analytics.track('event', properties)` with custom numerical properties, you need to map those traits and properties to Google Analytics custom metrics if you want them to be sent to GA. Enter a trait or property name on the left. Choose the Google Analytics metric you want on the right. Google Analytics only accepts numbered metrics (e.g. metric3). We suggest using user-scoped metrics for trait mappings and hit-scoped metrics for properties. [Contact us](https://segment.com/contact) if you need help!",
                          "required": false,
                          "label": "Custom Metrics"
                        },
                        {
                          "name": "mobileTrackingId",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Google Analytics tracks mobile apps separately, so you'll want to create a separate Google Analytics mobile app property. Remember to only add a mobile tracking ID if you're tracking from a mobile library. If you're tracking from a hybrid app, fill in your website tracking ID instead. Leave it blank if you don't have a mobile app property.",
                          "required": true,
                          "label": "Mobile Tracking ID"
                        },
                        {
                          "name": "nameTracker",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Name the tracker 'segmentGATracker'. Enable this if you're working with additional Google Analytics trackers and want to ensure that your Segment tracker has a distinct name. If this is enabled you must prepend this tracker name to any native Google Analytics (except for create) that you call, e.g. 'segmentGATracker.require(....)' ",
                          "required": false,
                          "label": "Name Tracker"
                        },
                        {
                          "name": "nonInteraction",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Adds a _nonInteraction: true_ flag to every non-enhanced ecommerce event tracked to Google Analytics. If you're seeing unusually low bounce rates this will solve that issue.",
                          "required": false,
                          "label": "Add the non-interaction flag to all events"
                        },
                        {
                          "name": "optimize",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Integrate with Google Analytics Optimize plugin. Please enter your Optimize Container ID",
                          "required": false,
                          "label": "Optimize Container ID"
                        },
                        {
                          "name": "preferAnonymousId",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Enable this setting if you want `clientId` to always be set as a hash of `anonymousId`. If no `anonymousId` is present we will fallback to set the `clientId` to `userId`. This setting only applies to server side connections.",
                          "required": false,
                          "label": "Prefer Anonymous ID for Client ID - Server Side Only"
                        },
                        {
                          "name": "protocolMappings",
                          "type": "map",
                          "defaultValue": {},
                          "description": "If you are using the *server side* GA integration, you can map your custom traits or properties to known [measurement protocol params](https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters).",
                          "required": false,
                          "label": "Map Traits or Properties to Measurement Protocol Params"
                        },
                        {
                          "name": "reportUncaughtExceptions",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "This lets you study errors and exceptions in your iOS and Android apps in Google Analytics.",
                          "required": false,
                          "label": "Send Uncaught Exceptions to GA (Mobile)"
                        },
                        {
                          "name": "resetCustomDimensionsOnPage",
                          "type": "array",
                          "defaultValue": [],
                          "description": "If you have an SPA website, and need to reset custom dimensions between page calls, add to this setting all the properties (already mapped as custom dimensions) that need to be reset for each page call.",
                          "required": false,
                          "label": "Reset dimensions on Page calls"
                        },
                        {
                          "name": "sampleRate",
                          "type": "number",
                          "defaultValue": 100,
                          "description": "Specifies what percentage of users should be tracked. This defaults to 100 (no users are sampled out) but large sites may need to use a lower sample rate to stay within Google Analytics processing limits as [seen here](https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#sampleRate). Currently only available in the browser - mobile coming soon.",
                          "required": false,
                          "label": "Sample Rate"
                        },
                        {
                          "name": "sendUserId",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "User-ID enables the analysis of groups of sessions across devices, using a unique and persistent ID. This only works with Google Analytics Universal. IMPORTANT: Sending email or other personally identifiable information (PII) violates Google Analytics Terms of Service.",
                          "required": false,
                          "label": "Send User-ID to GA"
                        },
                        {
                          "name": "serversideClassic",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "**Important:** When creating your Google Analytics profile, you can choose between **Classic** and **Universal** Analytics. After March 2013, new profiles default to Universal, while earlier profiles are Classic. An easy test: if you see `_gaq.push` in your code you're using Classic, so enable this.",
                          "required": false,
                          "label": "Use Classic Analytics for Your Serverside Tracking"
                        },
                        {
                          "name": "serversideTrackingId",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Your Serverside Tracking ID is the UA code for the Google Analytics property you want to send server-side calls to. Leave it blank if you don't have a server-side client library that you want to send data from. Remember that data tracked from mobile integrations that are not bundled in your app send data to Google Analytics server side, since Segment sends data to them via our own servers.",
                          "required": true,
                          "label": "Serverside Tracking ID"
                        },
                        {
                          "name": "setAllMappedProps",
                          "type": "boolean",
                          "defaultValue": true,
                          "description": "Google Analytics allows users to either pass custom dimensions / metrics as properties of specific events or as properties for all events on a given page (or the lifetime of the global tracker object). The default Segment behavior is the latter. Any metrics / dimensions that are mapped to a given property will be set to the page and sent as properties of all subsequent events on that page. You can disable this functionality with this setting. If disabled, Segment will only pass custom dimensions / metrics as part of the payload of the event with which they are explicitly associated. Please reference the Google Analytics [documentation](https://developers.google.com/analytics/devguides/collection/analyticsjs/custom-dims-mets#implementation) for more info.",
                          "required": false,
                          "label": "Set Custom Dimensions & Metrics to the Page"
                        },
                        {
                          "name": "siteSpeedSampleRate",
                          "type": "number",
                          "defaultValue": 1,
                          "description": "Defines the sample size for Site Speed data collection. If you have a small number of visitors you might want to adjust the sampling to a larger rate for your [site speed stats](https://developers.google.com/analytics/devguides/collection/gajs/methods/gaJSApiBasicConfiguration?hl=en#_gat.GA_Tracker_._setSiteSpeedSampleRate).",
                          "required": false,
                          "label": "Site Speed Sample Rate"
                        },
                        {
                          "name": "topLevelContextMapping",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "By default, Segment allows mappings from custom traits and properties to Google Analytics custom dimensions and metrics. If you enable this setting, Segment will also send top-level and `context` object fields mapped in the **Custom Dimensions** and **Custom Metrics** settings. When evaluating mappings, Segment will prioritize properties and traits before top-level and `context` fields. This setting only applies to server side connections.",
                          "required": false,
                          "label": "Enable Mappings from Top-Level or Context Fields - Server Side Only"
                        },
                        {
                          "name": "trackCategorizedPages",
                          "type": "boolean",
                          "defaultValue": true,
                          "description": "Tracks events to Google Analytics for [`page` method](https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/#page) calls that have a `category` associated with them. E.g. `page('Docs', 'Index')` translates to **Viewed Docs Page**.",
                          "required": false,
                          "label": "Track Categorized Pages"
                        },
                        {
                          "name": "trackNamedPages",
                          "type": "boolean",
                          "defaultValue": true,
                          "description": "Tracks events to Google Analytics for [`page` method](https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/#page) calls that have a `name` associated with them. E.g. `page('Signup')` translates to **Viewed Signup Page**.",
                          "required": false,
                          "label": "Track Named Pages"
                        },
                        {
                          "name": "trackingId",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Your website's Tracking ID is in the **Tracking Info** tab on the [Admin Page](https://www.google.com/analytics/web/#management/Property) of Google Analytics. Leave it blank if you don't have a website property.",
                          "required": true,
                          "label": "Website Tracking ID"
                        },
                        {
                          "name": "typeOverride",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "By default, Segment sends \"Product List Viewed\" and \"Product List Filtered\" ecommerce events to GA as \"pageview\" hit types. Enable this setting to instead map these two specced Segment track events to GA as \"event\" hit types.",
                          "required": false,
                          "label": "Send Segment \"Product List\" Events to GA as \"Event\" Hits"
                        },
                        {
                          "name": "useGoogleAmpClientId",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Google’s AMP Client ID API lets you uniquely identify users who engage with your content on AMP and non-AMP pages. If you opt-in, Google Analytics will use the user's AMP Client ID to determine that multiple site events belong to the same user when those users visit AMP pages via a [Google viewer](https://support.google.com/websearch/answer/7220196). Associating events and users provides features like user counts and session-based metrics. *Enabling this feature will affect your reporting.* Please carefully reference Google's [documentation](https://support.google.com/analytics/answer/7486764?hl=en&ref_topic=7378717) for more info before you enable it.",
                          "required": false,
                          "label": "Use Google AMP Client ID"
                        },
                        {
                          "name": "userDeletion",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Sign in to Google Analytics oAuth to enable User Deletion. ",
                          "required": false,
                          "label": "User Deletion"
                        }
                      ],
                      "status": "PUBLIC",
                      "categories": ["Analytics"],
                      "website": "http://google.com/analytics",
                      "components": [
                        {
                          "code": "https://github.com/segment-integrations/analytics.js-integration-google-analytics",
                          "type": "BROWSER"
                        },
                        {
                          "code": "https://github.com/segment-integrations/analytics-ios-integration-google-analytics",
                          "type": "IOS"
                        },
                        {
                          "code": "https://github.com/segment-integrations/analytics-android-integration-google-analytics",
                          "type": "ANDROID"
                        },
                        {
                          "code": "https://github.com/segmentio/integrations/tree/master/integrations/google-analytics",
                          "type": "SERVER"
                        }
                      ],
                      "previousNames": ["Google Analytics", "Google Universal Analytics"],
                      "supportedMethods": {
                        "track": true,
                        "pageview": true,
                        "identify": true,
                        "group": false,
                        "alias": false
                      },
                      "supportedPlatforms": { "browser": true, "mobile": true, "server": true },
                      "supportedFeatures": {
                        "cloudModeInstances": "0",
                        "deviceModeInstances": "0",
                        "replay": false,
                        "browserUnbundling": true,
                        "browserUnbundlingPublic": true
                      },
                      "actions": [],
                      "presets": []
                    },
                    "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                  }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/UpdateDestinationV1Output" },
                "example": {
                  "destination": {
                    "id": "fP7qoQw2HTWt9WdMr718gn",
                    "enabled": false,
                    "name": "",
                    "settings": {
                      "anonymizeIp": false,
                      "classic": false,
                      "contentGroupings": {},
                      "dimensions": {},
                      "domain": "",
                      "doubleClick": false,
                      "enableServerIdentify": false,
                      "enhancedEcommerce": false,
                      "enhancedLinkAttribution": false,
                      "identifyCategory": "",
                      "identifyEventName": "",
                      "ignoredReferrers": [],
                      "includeSearch": false,
                      "metrics": {},
                      "mobileTrackingId": "123",
                      "nameTracker": false,
                      "nonInteraction": false,
                      "optimize": "",
                      "preferAnonymousId": false,
                      "protocolMappings": {},
                      "reportUncaughtExceptions": false,
                      "resetCustomDimensionsOnPage": [],
                      "sampleRate": 100,
                      "sendUserId": false,
                      "serversideClassic": false,
                      "serversideTrackingId": "123",
                      "setAllMappedProps": true,
                      "siteSpeedSampleRate": 1,
                      "topLevelContextMapping": false,
                      "trackCategorizedPages": true,
                      "trackNamedPages": true,
                      "trackingId": "123",
                      "typeOverride": false,
                      "useGoogleAmpClientId": false,
                      "userDeletion": ""
                    },
                    "metadata": {
                      "id": "54521fd725e721e32a72eebb",
                      "name": "Google Universal Analytics",
                      "description": "Google Universal Analytics is the most popular analytics tool for the web. It’s free and provides a wide range of features. It’s especially good at measuring traffic sources and ad campaigns.",
                      "slug": "google-analytics",
                      "logos": {
                        "default": "https://cdn.filepicker.io/api/file/anFgceQJTGeMxChCgiyU",
                        "mark": "https://cdn.filepicker.io/api/file/zebLRcY3RtOlynDXTgNk"
                      },
                      "options": [
                        {
                          "name": "anonymizeIp",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "For client side libraries. Read more about anonymizing IP addresses from the [Google support documentation](https://support.google.com/analytics/answer/2763052?hl=en).",
                          "required": false,
                          "label": "Anonymize IP Addresses"
                        },
                        {
                          "name": "classic",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "**Important:** When creating your Google Analytics profile, you can choose between **Classic** and **Universal** Analytics. After March 2013, new profiles default to Universal, while earlier ones are Classic. An easy test: if you see `_gaq.push` in your code you're using Classic, so enable this.",
                          "required": false,
                          "label": "Use Classic Analytics on Your Site"
                        },
                        {
                          "name": "contentGroupings",
                          "type": "map",
                          "defaultValue": {},
                          "description": "Enter a property name on the left. Choose the Google Analytics content grouping you want on the right. Google Analytics only accepts numbered content groupings (e.g. contentGrouping3). When you use `analytics.page(name, properties)` with custom properties, we'll use the value of the property you designate as the value of the specified content grouping.",
                          "required": false,
                          "label": "Content Groupings"
                        },
                        {
                          "name": "dimensions",
                          "type": "map",
                          "defaultValue": {},
                          "description": "Because Google Analytics cannot accept arbitrary data about users or events, when you use `analytics.identify(userId, traits)` with custom traits or `analytics.track('event', properties)` with custom properties, you need to map those traits and properties to Google Analytics custom dimensions if you want them to be sent to GA. Enter a trait or property name on the left. Choose the Google Analytics dimension you want on the right. Google Analytics only accepts numbered dimensions (e.g. dimension3). We suggest using user-scoped dimensions for trait mappings and hit-scoped dimensions for properties [Contact us](https://segment.com/contact) if you need help!",
                          "required": false,
                          "label": "Custom Dimensions"
                        },
                        {
                          "name": "domain",
                          "type": "string",
                          "defaultValue": "",
                          "description": "_Only data sent from visitors on this domain_ will be recorded. By default Google Analytics automatically resolves the domain name, so you should **leave this blank unless you know you want otherwise**! This option is useful if you need to ignore data from other domains, or explicitly set the domain of your Google Analytics cookie. This is known as Override Domain Name in [GA Classic](https://developers.google.com/analytics/devguides/collection/gajs/gaTrackingSite). If you are testing locally, you can set the domain to `none`. [Read more about this setting in our docs](https://segment.com/docs/connections/destinations/catalog/google-analytics/#cookie-domain-name).",
                          "required": false,
                          "label": "Cookie Domain Name"
                        },
                        {
                          "name": "doubleClick",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Works with both Universal and Classic tracking methods.",
                          "required": false,
                          "label": "Remarketing, Display Ads and Demographic Reports."
                        },
                        {
                          "name": "enableServerIdentify",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "If you are sending `.identify()` calls from your server side libraries or have Segment Cloud Apps that send back `.identify()` calls with enriched user traits, you can send that data to your GA account via custom dimensions and metrics. Unlike the client side integration which has the luxury of browsers and the global window `ga` tracker, for server side we will check your `traits` and your settings for custom dimension/metric mappings and send it with an explicit event. ",
                          "required": false,
                          "label": "Enable Server Side Identify"
                        },
                        {
                          "name": "enhancedEcommerce",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "If you want more detailed reports on ecommerce, you might want to enable this feature. Read more about it [here](https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanced-ecommerce).",
                          "required": false,
                          "label": "Enable Enhanced Ecommerce"
                        },
                        {
                          "name": "enhancedLinkAttribution",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Provides more detailed reports on the links clicked on your site. Read more about it in the [Google support documentation](https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanced-link-attribution).",
                          "required": false,
                          "label": "Enable Enhanced Link Attribution"
                        },
                        {
                          "name": "identifyCategory",
                          "type": "string",
                          "defaultValue": "",
                          "description": "If you have **Enabled Server Side Identify**, you can specify the trait you want to look up for setting the event category will be since all custom metrics/dimensions for server side `.identify()` calls will be sent via an event hit to GA. The default value will be `'All'`. For example, if you are sending `traits.category`, you can put 'category' in the setting above and we will send the value of this trait as the event category.",
                          "required": false,
                          "label": "Server Side Identify Event Category"
                        },
                        {
                          "name": "identifyEventName",
                          "type": "string",
                          "defaultValue": "",
                          "description": "If you have **Enabled Server Side Identify**, you can specify what the event action will be since all custom metrics/dimensions for server side `.identify()` calls will be sent via an event hit to GA. The default value will be `'User Enriched'`",
                          "required": false,
                          "label": "Server Side Identify Event Action"
                        },
                        {
                          "name": "ignoredReferrers",
                          "type": "strings",
                          "defaultValue": [],
                          "description": "Add any domains you want to ignore, separated by line breaks. You might use this if you want Google Analytics to ignore certain referral domains (e.g. to prevent your subdomains from showing up as referrers in your analytics). _Note: this only works for Classic profiles. Universal profiles can_ [edit their ignored referrers](https://support.google.com/analytics/answer/2795830?hl=en&ref_topic=2790009) _directly inside Google Analytics._",
                          "required": false,
                          "label": "Ignored Referrers"
                        },
                        {
                          "name": "includeSearch",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "The querystring doesn't usually affect the content of the page in a significant way (like sorting), so we disable this by default.",
                          "required": false,
                          "label": "Include the Querystring in Page Views"
                        },
                        {
                          "name": "metrics",
                          "type": "map",
                          "defaultValue": {},
                          "description": "Because Google Analytics cannot accept arbitrary data about users or events, when you use `analytics.identify(userId, traits)` with custom numerical traits or `analytics.track('event', properties)` with custom numerical properties, you need to map those traits and properties to Google Analytics custom metrics if you want them to be sent to GA. Enter a trait or property name on the left. Choose the Google Analytics metric you want on the right. Google Analytics only accepts numbered metrics (e.g. metric3). We suggest using user-scoped metrics for trait mappings and hit-scoped metrics for properties. [Contact us](https://segment.com/contact) if you need help!",
                          "required": false,
                          "label": "Custom Metrics"
                        },
                        {
                          "name": "mobileTrackingId",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Google Analytics tracks mobile apps separately, so you'll want to create a separate Google Analytics mobile app property. Remember to only add a mobile tracking ID if you're tracking from a mobile library. If you're tracking from a hybrid app, fill in your website tracking ID instead. Leave it blank if you don't have a mobile app property.",
                          "required": true,
                          "label": "Mobile Tracking ID"
                        },
                        {
                          "name": "nameTracker",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Name the tracker 'segmentGATracker'. Enable this if you're working with additional Google Analytics trackers and want to ensure that your Segment tracker has a distinct name. If this is enabled you must prepend this tracker name to any native Google Analytics (except for create) that you call, e.g. 'segmentGATracker.require(....)' ",
                          "required": false,
                          "label": "Name Tracker"
                        },
                        {
                          "name": "nonInteraction",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Adds a _nonInteraction: true_ flag to every non-enhanced ecommerce event tracked to Google Analytics. If you're seeing unusually low bounce rates this will solve that issue.",
                          "required": false,
                          "label": "Add the non-interaction flag to all events"
                        },
                        {
                          "name": "optimize",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Integrate with Google Analytics Optimize plugin. Please enter your Optimize Container ID",
                          "required": false,
                          "label": "Optimize Container ID"
                        },
                        {
                          "name": "preferAnonymousId",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Enable this setting if you want `clientId` to always be set as a hash of `anonymousId`. If no `anonymousId` is present we will fallback to set the `clientId` to `userId`. This setting only applies to server side connections.",
                          "required": false,
                          "label": "Prefer Anonymous ID for Client ID - Server Side Only"
                        },
                        {
                          "name": "protocolMappings",
                          "type": "map",
                          "defaultValue": {},
                          "description": "If you are using the *server side* GA integration, you can map your custom traits or properties to known [measurement protocol params](https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters).",
                          "required": false,
                          "label": "Map Traits or Properties to Measurement Protocol Params"
                        },
                        {
                          "name": "reportUncaughtExceptions",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "This lets you study errors and exceptions in your iOS and Android apps in Google Analytics.",
                          "required": false,
                          "label": "Send Uncaught Exceptions to GA (Mobile)"
                        },
                        {
                          "name": "resetCustomDimensionsOnPage",
                          "type": "array",
                          "defaultValue": [],
                          "description": "If you have an SPA website, and need to reset custom dimensions between page calls, add to this setting all the properties (already mapped as custom dimensions) that need to be reset for each page call.",
                          "required": false,
                          "label": "Reset dimensions on Page calls"
                        },
                        {
                          "name": "sampleRate",
                          "type": "number",
                          "defaultValue": 100,
                          "description": "Specifies what percentage of users should be tracked. This defaults to 100 (no users are sampled out) but large sites may need to use a lower sample rate to stay within Google Analytics processing limits as [seen here](https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#sampleRate). Currently only available in the browser - mobile coming soon.",
                          "required": false,
                          "label": "Sample Rate"
                        },
                        {
                          "name": "sendUserId",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "User-ID enables the analysis of groups of sessions across devices, using a unique and persistent ID. This only works with Google Analytics Universal. IMPORTANT: Sending email or other personally identifiable information (PII) violates Google Analytics Terms of Service.",
                          "required": false,
                          "label": "Send User-ID to GA"
                        },
                        {
                          "name": "serversideClassic",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "**Important:** When creating your Google Analytics profile, you can choose between **Classic** and **Universal** Analytics. After March 2013, new profiles default to Universal, while earlier profiles are Classic. An easy test: if you see `_gaq.push` in your code you're using Classic, so enable this.",
                          "required": false,
                          "label": "Use Classic Analytics for Your Serverside Tracking"
                        },
                        {
                          "name": "serversideTrackingId",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Your Serverside Tracking ID is the UA code for the Google Analytics property you want to send server-side calls to. Leave it blank if you don't have a server-side client library that you want to send data from. Remember that data tracked from mobile integrations that are not bundled in your app send data to Google Analytics server side, since Segment sends data to them via our own servers.",
                          "required": true,
                          "label": "Serverside Tracking ID"
                        },
                        {
                          "name": "setAllMappedProps",
                          "type": "boolean",
                          "defaultValue": true,
                          "description": "Google Analytics allows users to either pass custom dimensions / metrics as properties of specific events or as properties for all events on a given page (or the lifetime of the global tracker object). The default Segment behavior is the latter. Any metrics / dimensions that are mapped to a given property will be set to the page and sent as properties of all subsequent events on that page. You can disable this functionality with this setting. If disabled, Segment will only pass custom dimensions / metrics as part of the payload of the event with which they are explicitly associated. Please reference the Google Analytics [documentation](https://developers.google.com/analytics/devguides/collection/analyticsjs/custom-dims-mets#implementation) for more info.",
                          "required": false,
                          "label": "Set Custom Dimensions & Metrics to the Page"
                        },
                        {
                          "name": "siteSpeedSampleRate",
                          "type": "number",
                          "defaultValue": 1,
                          "description": "Defines the sample size for Site Speed data collection. If you have a small number of visitors you might want to adjust the sampling to a larger rate for your [site speed stats](https://developers.google.com/analytics/devguides/collection/gajs/methods/gaJSApiBasicConfiguration?hl=en#_gat.GA_Tracker_._setSiteSpeedSampleRate).",
                          "required": false,
                          "label": "Site Speed Sample Rate"
                        },
                        {
                          "name": "topLevelContextMapping",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "By default, Segment allows mappings from custom traits and properties to Google Analytics custom dimensions and metrics. If you enable this setting, Segment will also send top-level and `context` object fields mapped in the **Custom Dimensions** and **Custom Metrics** settings. When evaluating mappings, Segment will prioritize properties and traits before top-level and `context` fields. This setting only applies to server side connections.",
                          "required": false,
                          "label": "Enable Mappings from Top-Level or Context Fields - Server Side Only"
                        },
                        {
                          "name": "trackCategorizedPages",
                          "type": "boolean",
                          "defaultValue": true,
                          "description": "Tracks events to Google Analytics for [`page` method](https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/#page) calls that have a `category` associated with them. E.g. `page('Docs', 'Index')` translates to **Viewed Docs Page**.",
                          "required": false,
                          "label": "Track Categorized Pages"
                        },
                        {
                          "name": "trackNamedPages",
                          "type": "boolean",
                          "defaultValue": true,
                          "description": "Tracks events to Google Analytics for [`page` method](https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/#page) calls that have a `name` associated with them. E.g. `page('Signup')` translates to **Viewed Signup Page**.",
                          "required": false,
                          "label": "Track Named Pages"
                        },
                        {
                          "name": "trackingId",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Your website's Tracking ID is in the **Tracking Info** tab on the [Admin Page](https://www.google.com/analytics/web/#management/Property) of Google Analytics. Leave it blank if you don't have a website property.",
                          "required": true,
                          "label": "Website Tracking ID"
                        },
                        {
                          "name": "typeOverride",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "By default, Segment sends \"Product List Viewed\" and \"Product List Filtered\" ecommerce events to GA as \"pageview\" hit types. Enable this setting to instead map these two specced Segment track events to GA as \"event\" hit types.",
                          "required": false,
                          "label": "Send Segment \"Product List\" Events to GA as \"Event\" Hits"
                        },
                        {
                          "name": "useGoogleAmpClientId",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Google’s AMP Client ID API lets you uniquely identify users who engage with your content on AMP and non-AMP pages. If you opt-in, Google Analytics will use the user's AMP Client ID to determine that multiple site events belong to the same user when those users visit AMP pages via a [Google viewer](https://support.google.com/websearch/answer/7220196). Associating events and users provides features like user counts and session-based metrics. *Enabling this feature will affect your reporting.* Please carefully reference Google's [documentation](https://support.google.com/analytics/answer/7486764?hl=en&ref_topic=7378717) for more info before you enable it.",
                          "required": false,
                          "label": "Use Google AMP Client ID"
                        },
                        {
                          "name": "userDeletion",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Sign in to Google Analytics oAuth to enable User Deletion. ",
                          "required": false,
                          "label": "User Deletion"
                        }
                      ],
                      "status": "PUBLIC",
                      "categories": ["Analytics"],
                      "website": "http://google.com/analytics",
                      "components": [
                        {
                          "code": "https://github.com/segment-integrations/analytics.js-integration-google-analytics",
                          "type": "BROWSER"
                        },
                        {
                          "code": "https://github.com/segment-integrations/analytics-ios-integration-google-analytics",
                          "type": "IOS"
                        },
                        {
                          "code": "https://github.com/segment-integrations/analytics-android-integration-google-analytics",
                          "type": "ANDROID"
                        },
                        {
                          "code": "https://github.com/segmentio/integrations/tree/master/integrations/google-analytics",
                          "type": "SERVER"
                        }
                      ],
                      "previousNames": ["Google Analytics", "Google Universal Analytics"],
                      "supportedMethods": {
                        "track": true,
                        "pageview": true,
                        "identify": true,
                        "group": false,
                        "alias": false
                      },
                      "supportedPlatforms": { "browser": true, "mobile": true, "server": true },
                      "supportedFeatures": {
                        "cloudModeInstances": "0",
                        "deviceModeInstances": "0",
                        "replay": false,
                        "browserUnbundling": true,
                        "browserUnbundlingPublic": true
                      },
                      "actions": [],
                      "presets": []
                    },
                    "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                  }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UpdateDestinationV1Output" },
                "example": {
                  "destination": {
                    "id": "fP7qoQw2HTWt9WdMr718gn",
                    "enabled": false,
                    "name": "",
                    "settings": {
                      "anonymizeIp": false,
                      "classic": false,
                      "contentGroupings": {},
                      "dimensions": {},
                      "domain": "",
                      "doubleClick": false,
                      "enableServerIdentify": false,
                      "enhancedEcommerce": false,
                      "enhancedLinkAttribution": false,
                      "identifyCategory": "",
                      "identifyEventName": "",
                      "ignoredReferrers": [],
                      "includeSearch": false,
                      "metrics": {},
                      "mobileTrackingId": "123",
                      "nameTracker": false,
                      "nonInteraction": false,
                      "optimize": "",
                      "preferAnonymousId": false,
                      "protocolMappings": {},
                      "reportUncaughtExceptions": false,
                      "resetCustomDimensionsOnPage": [],
                      "sampleRate": 100,
                      "sendUserId": false,
                      "serversideClassic": false,
                      "serversideTrackingId": "123",
                      "setAllMappedProps": true,
                      "siteSpeedSampleRate": 1,
                      "topLevelContextMapping": false,
                      "trackCategorizedPages": true,
                      "trackNamedPages": true,
                      "trackingId": "123",
                      "typeOverride": false,
                      "useGoogleAmpClientId": false,
                      "userDeletion": ""
                    },
                    "metadata": {
                      "id": "54521fd725e721e32a72eebb",
                      "name": "Google Universal Analytics",
                      "description": "Google Universal Analytics is the most popular analytics tool for the web. It’s free and provides a wide range of features. It’s especially good at measuring traffic sources and ad campaigns.",
                      "slug": "google-analytics",
                      "logos": {
                        "default": "https://cdn.filepicker.io/api/file/anFgceQJTGeMxChCgiyU",
                        "mark": "https://cdn.filepicker.io/api/file/zebLRcY3RtOlynDXTgNk"
                      },
                      "options": [
                        {
                          "name": "anonymizeIp",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "For client side libraries. Read more about anonymizing IP addresses from the [Google support documentation](https://support.google.com/analytics/answer/2763052?hl=en).",
                          "required": false,
                          "label": "Anonymize IP Addresses"
                        },
                        {
                          "name": "classic",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "**Important:** When creating your Google Analytics profile, you can choose between **Classic** and **Universal** Analytics. After March 2013, new profiles default to Universal, while earlier ones are Classic. An easy test: if you see `_gaq.push` in your code you're using Classic, so enable this.",
                          "required": false,
                          "label": "Use Classic Analytics on Your Site"
                        },
                        {
                          "name": "contentGroupings",
                          "type": "map",
                          "defaultValue": {},
                          "description": "Enter a property name on the left. Choose the Google Analytics content grouping you want on the right. Google Analytics only accepts numbered content groupings (e.g. contentGrouping3). When you use `analytics.page(name, properties)` with custom properties, we'll use the value of the property you designate as the value of the specified content grouping.",
                          "required": false,
                          "label": "Content Groupings"
                        },
                        {
                          "name": "dimensions",
                          "type": "map",
                          "defaultValue": {},
                          "description": "Because Google Analytics cannot accept arbitrary data about users or events, when you use `analytics.identify(userId, traits)` with custom traits or `analytics.track('event', properties)` with custom properties, you need to map those traits and properties to Google Analytics custom dimensions if you want them to be sent to GA. Enter a trait or property name on the left. Choose the Google Analytics dimension you want on the right. Google Analytics only accepts numbered dimensions (e.g. dimension3). We suggest using user-scoped dimensions for trait mappings and hit-scoped dimensions for properties [Contact us](https://segment.com/contact) if you need help!",
                          "required": false,
                          "label": "Custom Dimensions"
                        },
                        {
                          "name": "domain",
                          "type": "string",
                          "defaultValue": "",
                          "description": "_Only data sent from visitors on this domain_ will be recorded. By default Google Analytics automatically resolves the domain name, so you should **leave this blank unless you know you want otherwise**! This option is useful if you need to ignore data from other domains, or explicitly set the domain of your Google Analytics cookie. This is known as Override Domain Name in [GA Classic](https://developers.google.com/analytics/devguides/collection/gajs/gaTrackingSite). If you are testing locally, you can set the domain to `none`. [Read more about this setting in our docs](https://segment.com/docs/connections/destinations/catalog/google-analytics/#cookie-domain-name).",
                          "required": false,
                          "label": "Cookie Domain Name"
                        },
                        {
                          "name": "doubleClick",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Works with both Universal and Classic tracking methods.",
                          "required": false,
                          "label": "Remarketing, Display Ads and Demographic Reports."
                        },
                        {
                          "name": "enableServerIdentify",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "If you are sending `.identify()` calls from your server side libraries or have Segment Cloud Apps that send back `.identify()` calls with enriched user traits, you can send that data to your GA account via custom dimensions and metrics. Unlike the client side integration which has the luxury of browsers and the global window `ga` tracker, for server side we will check your `traits` and your settings for custom dimension/metric mappings and send it with an explicit event. ",
                          "required": false,
                          "label": "Enable Server Side Identify"
                        },
                        {
                          "name": "enhancedEcommerce",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "If you want more detailed reports on ecommerce, you might want to enable this feature. Read more about it [here](https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanced-ecommerce).",
                          "required": false,
                          "label": "Enable Enhanced Ecommerce"
                        },
                        {
                          "name": "enhancedLinkAttribution",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Provides more detailed reports on the links clicked on your site. Read more about it in the [Google support documentation](https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanced-link-attribution).",
                          "required": false,
                          "label": "Enable Enhanced Link Attribution"
                        },
                        {
                          "name": "identifyCategory",
                          "type": "string",
                          "defaultValue": "",
                          "description": "If you have **Enabled Server Side Identify**, you can specify the trait you want to look up for setting the event category will be since all custom metrics/dimensions for server side `.identify()` calls will be sent via an event hit to GA. The default value will be `'All'`. For example, if you are sending `traits.category`, you can put 'category' in the setting above and we will send the value of this trait as the event category.",
                          "required": false,
                          "label": "Server Side Identify Event Category"
                        },
                        {
                          "name": "identifyEventName",
                          "type": "string",
                          "defaultValue": "",
                          "description": "If you have **Enabled Server Side Identify**, you can specify what the event action will be since all custom metrics/dimensions for server side `.identify()` calls will be sent via an event hit to GA. The default value will be `'User Enriched'`",
                          "required": false,
                          "label": "Server Side Identify Event Action"
                        },
                        {
                          "name": "ignoredReferrers",
                          "type": "strings",
                          "defaultValue": [],
                          "description": "Add any domains you want to ignore, separated by line breaks. You might use this if you want Google Analytics to ignore certain referral domains (e.g. to prevent your subdomains from showing up as referrers in your analytics). _Note: this only works for Classic profiles. Universal profiles can_ [edit their ignored referrers](https://support.google.com/analytics/answer/2795830?hl=en&ref_topic=2790009) _directly inside Google Analytics._",
                          "required": false,
                          "label": "Ignored Referrers"
                        },
                        {
                          "name": "includeSearch",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "The querystring doesn't usually affect the content of the page in a significant way (like sorting), so we disable this by default.",
                          "required": false,
                          "label": "Include the Querystring in Page Views"
                        },
                        {
                          "name": "metrics",
                          "type": "map",
                          "defaultValue": {},
                          "description": "Because Google Analytics cannot accept arbitrary data about users or events, when you use `analytics.identify(userId, traits)` with custom numerical traits or `analytics.track('event', properties)` with custom numerical properties, you need to map those traits and properties to Google Analytics custom metrics if you want them to be sent to GA. Enter a trait or property name on the left. Choose the Google Analytics metric you want on the right. Google Analytics only accepts numbered metrics (e.g. metric3). We suggest using user-scoped metrics for trait mappings and hit-scoped metrics for properties. [Contact us](https://segment.com/contact) if you need help!",
                          "required": false,
                          "label": "Custom Metrics"
                        },
                        {
                          "name": "mobileTrackingId",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Google Analytics tracks mobile apps separately, so you'll want to create a separate Google Analytics mobile app property. Remember to only add a mobile tracking ID if you're tracking from a mobile library. If you're tracking from a hybrid app, fill in your website tracking ID instead. Leave it blank if you don't have a mobile app property.",
                          "required": true,
                          "label": "Mobile Tracking ID"
                        },
                        {
                          "name": "nameTracker",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Name the tracker 'segmentGATracker'. Enable this if you're working with additional Google Analytics trackers and want to ensure that your Segment tracker has a distinct name. If this is enabled you must prepend this tracker name to any native Google Analytics (except for create) that you call, e.g. 'segmentGATracker.require(....)' ",
                          "required": false,
                          "label": "Name Tracker"
                        },
                        {
                          "name": "nonInteraction",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Adds a _nonInteraction: true_ flag to every non-enhanced ecommerce event tracked to Google Analytics. If you're seeing unusually low bounce rates this will solve that issue.",
                          "required": false,
                          "label": "Add the non-interaction flag to all events"
                        },
                        {
                          "name": "optimize",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Integrate with Google Analytics Optimize plugin. Please enter your Optimize Container ID",
                          "required": false,
                          "label": "Optimize Container ID"
                        },
                        {
                          "name": "preferAnonymousId",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Enable this setting if you want `clientId` to always be set as a hash of `anonymousId`. If no `anonymousId` is present we will fallback to set the `clientId` to `userId`. This setting only applies to server side connections.",
                          "required": false,
                          "label": "Prefer Anonymous ID for Client ID - Server Side Only"
                        },
                        {
                          "name": "protocolMappings",
                          "type": "map",
                          "defaultValue": {},
                          "description": "If you are using the *server side* GA integration, you can map your custom traits or properties to known [measurement protocol params](https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters).",
                          "required": false,
                          "label": "Map Traits or Properties to Measurement Protocol Params"
                        },
                        {
                          "name": "reportUncaughtExceptions",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "This lets you study errors and exceptions in your iOS and Android apps in Google Analytics.",
                          "required": false,
                          "label": "Send Uncaught Exceptions to GA (Mobile)"
                        },
                        {
                          "name": "resetCustomDimensionsOnPage",
                          "type": "array",
                          "defaultValue": [],
                          "description": "If you have an SPA website, and need to reset custom dimensions between page calls, add to this setting all the properties (already mapped as custom dimensions) that need to be reset for each page call.",
                          "required": false,
                          "label": "Reset dimensions on Page calls"
                        },
                        {
                          "name": "sampleRate",
                          "type": "number",
                          "defaultValue": 100,
                          "description": "Specifies what percentage of users should be tracked. This defaults to 100 (no users are sampled out) but large sites may need to use a lower sample rate to stay within Google Analytics processing limits as [seen here](https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#sampleRate). Currently only available in the browser - mobile coming soon.",
                          "required": false,
                          "label": "Sample Rate"
                        },
                        {
                          "name": "sendUserId",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "User-ID enables the analysis of groups of sessions across devices, using a unique and persistent ID. This only works with Google Analytics Universal. IMPORTANT: Sending email or other personally identifiable information (PII) violates Google Analytics Terms of Service.",
                          "required": false,
                          "label": "Send User-ID to GA"
                        },
                        {
                          "name": "serversideClassic",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "**Important:** When creating your Google Analytics profile, you can choose between **Classic** and **Universal** Analytics. After March 2013, new profiles default to Universal, while earlier profiles are Classic. An easy test: if you see `_gaq.push` in your code you're using Classic, so enable this.",
                          "required": false,
                          "label": "Use Classic Analytics for Your Serverside Tracking"
                        },
                        {
                          "name": "serversideTrackingId",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Your Serverside Tracking ID is the UA code for the Google Analytics property you want to send server-side calls to. Leave it blank if you don't have a server-side client library that you want to send data from. Remember that data tracked from mobile integrations that are not bundled in your app send data to Google Analytics server side, since Segment sends data to them via our own servers.",
                          "required": true,
                          "label": "Serverside Tracking ID"
                        },
                        {
                          "name": "setAllMappedProps",
                          "type": "boolean",
                          "defaultValue": true,
                          "description": "Google Analytics allows users to either pass custom dimensions / metrics as properties of specific events or as properties for all events on a given page (or the lifetime of the global tracker object). The default Segment behavior is the latter. Any metrics / dimensions that are mapped to a given property will be set to the page and sent as properties of all subsequent events on that page. You can disable this functionality with this setting. If disabled, Segment will only pass custom dimensions / metrics as part of the payload of the event with which they are explicitly associated. Please reference the Google Analytics [documentation](https://developers.google.com/analytics/devguides/collection/analyticsjs/custom-dims-mets#implementation) for more info.",
                          "required": false,
                          "label": "Set Custom Dimensions & Metrics to the Page"
                        },
                        {
                          "name": "siteSpeedSampleRate",
                          "type": "number",
                          "defaultValue": 1,
                          "description": "Defines the sample size for Site Speed data collection. If you have a small number of visitors you might want to adjust the sampling to a larger rate for your [site speed stats](https://developers.google.com/analytics/devguides/collection/gajs/methods/gaJSApiBasicConfiguration?hl=en#_gat.GA_Tracker_._setSiteSpeedSampleRate).",
                          "required": false,
                          "label": "Site Speed Sample Rate"
                        },
                        {
                          "name": "topLevelContextMapping",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "By default, Segment allows mappings from custom traits and properties to Google Analytics custom dimensions and metrics. If you enable this setting, Segment will also send top-level and `context` object fields mapped in the **Custom Dimensions** and **Custom Metrics** settings. When evaluating mappings, Segment will prioritize properties and traits before top-level and `context` fields. This setting only applies to server side connections.",
                          "required": false,
                          "label": "Enable Mappings from Top-Level or Context Fields - Server Side Only"
                        },
                        {
                          "name": "trackCategorizedPages",
                          "type": "boolean",
                          "defaultValue": true,
                          "description": "Tracks events to Google Analytics for [`page` method](https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/#page) calls that have a `category` associated with them. E.g. `page('Docs', 'Index')` translates to **Viewed Docs Page**.",
                          "required": false,
                          "label": "Track Categorized Pages"
                        },
                        {
                          "name": "trackNamedPages",
                          "type": "boolean",
                          "defaultValue": true,
                          "description": "Tracks events to Google Analytics for [`page` method](https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/#page) calls that have a `name` associated with them. E.g. `page('Signup')` translates to **Viewed Signup Page**.",
                          "required": false,
                          "label": "Track Named Pages"
                        },
                        {
                          "name": "trackingId",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Your website's Tracking ID is in the **Tracking Info** tab on the [Admin Page](https://www.google.com/analytics/web/#management/Property) of Google Analytics. Leave it blank if you don't have a website property.",
                          "required": true,
                          "label": "Website Tracking ID"
                        },
                        {
                          "name": "typeOverride",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "By default, Segment sends \"Product List Viewed\" and \"Product List Filtered\" ecommerce events to GA as \"pageview\" hit types. Enable this setting to instead map these two specced Segment track events to GA as \"event\" hit types.",
                          "required": false,
                          "label": "Send Segment \"Product List\" Events to GA as \"Event\" Hits"
                        },
                        {
                          "name": "useGoogleAmpClientId",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "Google’s AMP Client ID API lets you uniquely identify users who engage with your content on AMP and non-AMP pages. If you opt-in, Google Analytics will use the user's AMP Client ID to determine that multiple site events belong to the same user when those users visit AMP pages via a [Google viewer](https://support.google.com/websearch/answer/7220196). Associating events and users provides features like user counts and session-based metrics. *Enabling this feature will affect your reporting.* Please carefully reference Google's [documentation](https://support.google.com/analytics/answer/7486764?hl=en&ref_topic=7378717) for more info before you enable it.",
                          "required": false,
                          "label": "Use Google AMP Client ID"
                        },
                        {
                          "name": "userDeletion",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Sign in to Google Analytics oAuth to enable User Deletion. ",
                          "required": false,
                          "label": "User Deletion"
                        }
                      ],
                      "status": "PUBLIC",
                      "categories": ["Analytics"],
                      "website": "http://google.com/analytics",
                      "components": [
                        {
                          "code": "https://github.com/segment-integrations/analytics.js-integration-google-analytics",
                          "type": "BROWSER"
                        },
                        {
                          "code": "https://github.com/segment-integrations/analytics-ios-integration-google-analytics",
                          "type": "IOS"
                        },
                        {
                          "code": "https://github.com/segment-integrations/analytics-android-integration-google-analytics",
                          "type": "ANDROID"
                        },
                        {
                          "code": "https://github.com/segmentio/integrations/tree/master/integrations/google-analytics",
                          "type": "SERVER"
                        }
                      ],
                      "previousNames": ["Google Analytics", "Google Universal Analytics"],
                      "supportedMethods": {
                        "track": true,
                        "pageview": true,
                        "identify": true,
                        "group": false,
                        "alias": false
                      },
                      "supportedPlatforms": { "browser": true, "mobile": true, "server": true },
                      "supportedFeatures": {
                        "cloudModeInstances": "0",
                        "deviceModeInstances": "0",
                        "replay": false,
                        "browserUnbundling": true,
                        "browserUnbundlingPublic": true
                      },
                      "actions": [],
                      "presets": []
                    },
                    "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Destinations"],
        "tags": ["Destinations"]
      }
    },
    "/functions/{functionId}": {
      "delete": {
        "summary": "deleteFunctionV1",
        "parameters": [
          {
            "in": "path",
            "name": "functionId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Deletes a function\n\n**Note**: In order to successfully call this endpoint, the specified workspace needs to have the Functions feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "deleteFunction",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/DeleteFunctionAlphaInput" },
              "example": { "functionId": "sfnc_wXzcDGFR3KmjLDrtSawNHf" }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/DeleteFunctionBetaInput" },
              "example": { "functionId": "sfnc_wXzcDGFR3KmjLDrtSawNHf" }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/DeleteFunctionV1Input" },
              "example": { "functionId": "sfnc_wXzcDGFR3KmjLDrtSawNHf" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/DeleteFunctionAlphaOutput" },
                "example": { "status": "SUCCESS" }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/DeleteFunctionBetaOutput" },
                "example": { "status": "SUCCESS" }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/DeleteFunctionV1Output" },
                "example": { "status": "SUCCESS" }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DeleteFunctionV1Output" },
                "example": { "status": "SUCCESS" }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Functions"],
        "tags": ["Functions"]
      },
      "get": {
        "summary": "getFunctionV1",
        "parameters": [
          {
            "in": "path",
            "name": "functionId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          },
          {
            "in": "query",
            "required": false,
            "name": "functionId",
            "description": "An identifier for this function.\n\nThis parameter exists in v1.",
            "schema": { "description": "An identifier for this function.", "type": "string", "title": "functionId" }
          }
        ],
        "deprecated": false,
        "description": "Gets a function\n\n**Note**: In order to successfully call this endpoint, the specified workspace needs to have the Functions feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "getFunction",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/GetFunctionAlphaOutput" },
                "example": {
                  "function": {
                    "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                    "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                    "displayName": "PAPI Source Function",
                    "description": "My source function",
                    "logoUrl": "https://placekitten.com/200/139",
                    "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                    "createdAt": "2006-01-02T15:04:05.000Z",
                    "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                    "previewWebhookUrl": "",
                    "settings": [
                      {
                        "name": "apiKey",
                        "label": "api key",
                        "description": "api key",
                        "type": "STRING",
                        "required": false,
                        "sensitive": false
                      },
                      {
                        "name": "mySecret",
                        "label": "my secret key",
                        "description": "secret key",
                        "type": "STRING",
                        "required": false,
                        "sensitive": true
                      }
                    ],
                    "buildpack": "",
                    "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                    "batchMaxCount": 0,
                    "resourceType": "SOURCE"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/GetFunctionBetaOutput" },
                "example": {
                  "function": {
                    "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                    "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                    "displayName": "PAPI Source Function",
                    "description": "My source function",
                    "logoUrl": "https://placekitten.com/200/139",
                    "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                    "createdAt": "2006-01-02T15:04:05.000Z",
                    "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                    "previewWebhookUrl": "",
                    "settings": [
                      {
                        "name": "apiKey",
                        "label": "api key",
                        "description": "api key",
                        "type": "STRING",
                        "required": false,
                        "sensitive": false
                      },
                      {
                        "name": "mySecret",
                        "label": "my secret key",
                        "description": "secret key",
                        "type": "STRING",
                        "required": false,
                        "sensitive": true
                      }
                    ],
                    "buildpack": "",
                    "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                    "batchMaxCount": 0,
                    "resourceType": "SOURCE"
                  }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/GetFunctionV1Output" },
                "example": {
                  "function": {
                    "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                    "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                    "displayName": "PAPI Source Function",
                    "description": "My source function",
                    "logoUrl": "https://placekitten.com/200/139",
                    "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                    "createdAt": "2006-01-02T15:04:05.000Z",
                    "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                    "previewWebhookUrl": "",
                    "settings": [
                      {
                        "name": "apiKey",
                        "label": "api key",
                        "description": "api key",
                        "type": "STRING",
                        "required": false,
                        "sensitive": false
                      },
                      {
                        "name": "mySecret",
                        "label": "my secret key",
                        "description": "secret key",
                        "type": "STRING",
                        "required": false,
                        "sensitive": true
                      }
                    ],
                    "buildpack": "",
                    "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                    "batchMaxCount": 0,
                    "resourceType": "SOURCE"
                  }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetFunctionV1Output" },
                "example": {
                  "function": {
                    "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                    "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                    "displayName": "PAPI Source Function",
                    "description": "My source function",
                    "logoUrl": "https://placekitten.com/200/139",
                    "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                    "createdAt": "2006-01-02T15:04:05.000Z",
                    "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                    "previewWebhookUrl": "",
                    "settings": [
                      {
                        "name": "apiKey",
                        "label": "api key",
                        "description": "api key",
                        "type": "STRING",
                        "required": false,
                        "sensitive": false
                      },
                      {
                        "name": "mySecret",
                        "label": "my secret key",
                        "description": "secret key",
                        "type": "STRING",
                        "required": false,
                        "sensitive": true
                      }
                    ],
                    "buildpack": "",
                    "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                    "batchMaxCount": 0,
                    "resourceType": "SOURCE"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Functions"],
        "tags": ["Functions"]
      },
      "patch": {
        "summary": "updateFunctionV1",
        "parameters": [
          {
            "in": "path",
            "name": "functionId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Updates a function.\n\n**Note**: In order to successfully call this endpoint, the specified workspace needs to have the Functions feature enabled. Please reach out to your customer success manager for more information.\n\nConfig API omitted fields:\n- `updateMask`\n",
        "operationId": "updateFunction",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/UpdateFunctionAlphaInput" },
              "example": {
                "functionId": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                "logoUrl": "https://placekitten.com/200/139"
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/UpdateFunctionBetaInput" },
              "example": {
                "functionId": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                "logoUrl": "https://placekitten.com/200/139"
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/UpdateFunctionV1Input" },
              "example": {
                "functionId": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                "logoUrl": "https://placekitten.com/200/139"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/UpdateFunctionAlphaOutput" },
                "example": {
                  "function": {
                    "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                    "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                    "displayName": "PAPI Source Function",
                    "description": "My source function",
                    "logoUrl": "https://placekitten.com/200/139",
                    "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                    "createdAt": "2006-01-02T15:04:05.000Z",
                    "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                    "previewWebhookUrl": "",
                    "settings": [
                      {
                        "name": "apiKey",
                        "label": "api key",
                        "description": "api key",
                        "type": "STRING",
                        "required": false,
                        "sensitive": false
                      },
                      {
                        "name": "mySecret",
                        "label": "my secret key",
                        "description": "secret key",
                        "type": "STRING",
                        "required": false,
                        "sensitive": true
                      }
                    ],
                    "buildpack": "",
                    "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                    "batchMaxCount": 0,
                    "resourceType": "SOURCE"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/UpdateFunctionBetaOutput" },
                "example": {
                  "function": {
                    "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                    "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                    "displayName": "PAPI Source Function",
                    "description": "My source function",
                    "logoUrl": "https://placekitten.com/200/139",
                    "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                    "createdAt": "2006-01-02T15:04:05.000Z",
                    "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                    "previewWebhookUrl": "",
                    "settings": [
                      {
                        "name": "apiKey",
                        "label": "api key",
                        "description": "api key",
                        "type": "STRING",
                        "required": false,
                        "sensitive": false
                      },
                      {
                        "name": "mySecret",
                        "label": "my secret key",
                        "description": "secret key",
                        "type": "STRING",
                        "required": false,
                        "sensitive": true
                      }
                    ],
                    "buildpack": "",
                    "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                    "batchMaxCount": 0,
                    "resourceType": "SOURCE"
                  }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/UpdateFunctionV1Output" },
                "example": {
                  "function": {
                    "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                    "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                    "displayName": "PAPI Source Function",
                    "description": "My source function",
                    "logoUrl": "https://placekitten.com/200/139",
                    "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                    "createdAt": "2006-01-02T15:04:05.000Z",
                    "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                    "previewWebhookUrl": "",
                    "settings": [
                      {
                        "name": "apiKey",
                        "label": "api key",
                        "description": "api key",
                        "type": "STRING",
                        "required": false,
                        "sensitive": false
                      },
                      {
                        "name": "mySecret",
                        "label": "my secret key",
                        "description": "secret key",
                        "type": "STRING",
                        "required": false,
                        "sensitive": true
                      }
                    ],
                    "buildpack": "",
                    "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                    "batchMaxCount": 0,
                    "resourceType": "SOURCE"
                  }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UpdateFunctionV1Output" },
                "example": {
                  "function": {
                    "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                    "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                    "displayName": "PAPI Source Function",
                    "description": "My source function",
                    "logoUrl": "https://placekitten.com/200/139",
                    "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                    "createdAt": "2006-01-02T15:04:05.000Z",
                    "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                    "previewWebhookUrl": "",
                    "settings": [
                      {
                        "name": "apiKey",
                        "label": "api key",
                        "description": "api key",
                        "type": "STRING",
                        "required": false,
                        "sensitive": false
                      },
                      {
                        "name": "mySecret",
                        "label": "my secret key",
                        "description": "secret key",
                        "type": "STRING",
                        "required": false,
                        "sensitive": true
                      }
                    ],
                    "buildpack": "",
                    "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                    "batchMaxCount": 0,
                    "resourceType": "SOURCE"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Functions"],
        "tags": ["Functions"]
      }
    },
    "/labels/{key}/{value}": {
      "delete": {
        "summary": "deleteLabelV1",
        "parameters": [
          {
            "in": "path",
            "name": "key",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          },
          {
            "in": "path",
            "name": "value",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Deletes a Label.\n\n\nThis endpoint generates the following audit events:\n* Label Deleted\n\n      ",
        "operationId": "deleteLabel",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/DeleteLabelAlphaInput" },
              "example": { "key": "environment", "value": "yolo" }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/DeleteLabelBetaInput" },
              "example": { "key": "environment", "value": "yolo" }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/DeleteLabelV1Input" },
              "example": { "key": "environment", "value": "yolo" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/DeleteLabelAlphaOutput" },
                "example": { "status": "SUCCESS" }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/DeleteLabelBetaOutput" },
                "example": { "status": "SUCCESS" }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/DeleteLabelV1Output" },
                "example": { "status": "SUCCESS" }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DeleteLabelV1Output" },
                "example": { "status": "SUCCESS" }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Admin", "Labels"],
        "tags": ["Labels"]
      }
    },
    "/regulations/{regulateId}": {
      "delete": {
        "summary": "deleteRegulationV1",
        "parameters": [
          {
            "in": "path",
            "name": "regulateId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Deletes a regulation from the workspace. The regulation must be in the initialized state to be deleted.\n\n\nThis endpoint generates the following audit events:\n* Regulation Deleted\n\n      ",
        "operationId": "deleteRegulation",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/DeleteRegulationAlphaInput" },
              "example": { "regulateId": "1qJkfE1tpwvQcklImGksLN629wn" }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/DeleteRegulationBetaInput" },
              "example": { "regulateId": "1qJkfE1tpwvQcklImGksLN629wn" }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/DeleteRegulationV1Input" },
              "example": { "regulateId": "1qJkfE1tpwvQcklImGksLN629wn" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/DeleteRegulationAlphaOutput" },
                "example": { "status": "SUCCESS" }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/DeleteRegulationBetaOutput" },
                "example": { "status": "SUCCESS" }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/DeleteRegulationV1Output" },
                "example": { "status": "SUCCESS" }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DeleteRegulationV1Output" },
                "example": { "status": "SUCCESS" }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Deletion and Suppression"],
        "tags": ["Deletion and Suppression"]
      },
      "get": {
        "summary": "getRegulationV1",
        "parameters": [
          {
            "in": "path",
            "name": "regulateId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          },
          {
            "in": "query",
            "required": false,
            "name": "regulateId",
            "description": "The id of the regulate request to retrieve.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The id of the regulate request to retrieve.",
              "type": "string",
              "title": "regulateId"
            }
          }
        ],
        "deprecated": false,
        "description": "Gets a regulation from the workspace.\n\n      Config API omitted fields:\n- `parent`\n      ",
        "operationId": "getRegulation",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/GetRegulationAlphaOutput" },
                "example": {
                  "regulation": {
                    "id": "1qJkfE1tpwvQcklImGksLN629wn",
                    "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                    "overallStatus": "FINISHED",
                    "finishedAt": "2022-03-08T00:39:36.546951Z",
                    "createdAt": "2022-03-08T00:39:36.546951Z",
                    "streamStatus": []
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/GetRegulationBetaOutput" },
                "example": {
                  "regulation": {
                    "id": "1qJkfE1tpwvQcklImGksLN629wn",
                    "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                    "overallStatus": "FINISHED",
                    "finishedAt": "2022-03-08T00:39:36.546951Z",
                    "createdAt": "2022-03-08T00:39:36.546951Z",
                    "streamStatus": []
                  }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/GetRegulationV1Output" },
                "example": {
                  "regulation": {
                    "id": "1qJkfE1tpwvQcklImGksLN629wn",
                    "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                    "overallStatus": "FINISHED",
                    "finishedAt": "2022-03-08T00:39:36.546951Z",
                    "createdAt": "2022-03-08T00:39:36.546951Z",
                    "streamStatus": []
                  }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetRegulationV1Output" },
                "example": {
                  "regulation": {
                    "id": "1qJkfE1tpwvQcklImGksLN629wn",
                    "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                    "overallStatus": "FINISHED",
                    "finishedAt": "2022-03-08T00:39:36.546951Z",
                    "createdAt": "2022-03-08T00:39:36.546951Z",
                    "streamStatus": []
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Deletion and Suppression"],
        "tags": ["Deletion and Suppression"]
      }
    },
    "/sources/{sourceId}": {
      "delete": {
        "summary": "deleteSourceV1",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Deletes an existing Source.\n\n\nThis endpoint generates the following audit events:\n* Source Deleted\n\n      ",
        "operationId": "deleteSource",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/DeleteSourceAlphaInput" },
              "example": { "sourceId": "id5p7otyaQSwp9df2pftZA" }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/DeleteSourceBetaInput" },
              "example": { "sourceId": "5WnXEcBfrBdUXr2GpJK1dA" }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/DeleteSourceV1Input" },
              "example": { "sourceId": "wABrA3VnFkzYb255RucKfi" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/DeleteSourceAlphaOutput" },
                "example": { "status": "SUCCESS" }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/DeleteSourceBetaOutput" },
                "example": { "status": "SUCCESS" }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/DeleteSourceV1Output" },
                "example": { "status": "SUCCESS" }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DeleteSourceV1Output" },
                "example": { "status": "SUCCESS" }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Sources"],
        "tags": ["Sources"]
      },
      "get": {
        "summary": "getSourceV1",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          },
          {
            "in": "query",
            "required": false,
            "name": "sourceId",
            "description": "The id of the source to look up.\n\nConfig API note: analogous to `name`.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The id of the source to look up.\n\nConfig API note: analogous to `name`.",
              "type": "string",
              "title": "sourceId"
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a Source by its ID",
        "operationId": "getSource",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/GetSourceAlphaOutput" },
                "example": {
                  "source": {
                    "id": "qQEHquLrjRDN9j1ByrChyn",
                    "slug": "ios",
                    "name": "",
                    "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                    "enabled": true,
                    "writeKeys": ["8dyiooU2GvromHjyzD5ZmM"],
                    "metadata": {
                      "id": "UBrsG9RVzw",
                      "slug": "ios",
                      "name": "iOS",
                      "categories": ["Mobile"],
                      "description": "",
                      "logos": {
                        "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                        "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u"
                      },
                      "options": []
                    },
                    "settings": {},
                    "labels": []
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/GetSourceBetaOutput" },
                "example": {
                  "source": {
                    "id": "qQEHquLrjRDN9j1ByrChyn",
                    "slug": "ios",
                    "name": "",
                    "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                    "enabled": true,
                    "writeKeys": ["8dyiooU2GvromHjyzD5ZmM"],
                    "metadata": {
                      "id": "UBrsG9RVzw",
                      "slug": "ios",
                      "name": "iOS",
                      "categories": ["Mobile"],
                      "description": "",
                      "logos": {
                        "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                        "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u"
                      },
                      "options": []
                    },
                    "settings": {},
                    "labels": []
                  }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/GetSourceV1Output" },
                "example": {
                  "source": {
                    "id": "qQEHquLrjRDN9j1ByrChyn",
                    "slug": "ios",
                    "name": "",
                    "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                    "enabled": true,
                    "writeKeys": ["3YdEudTwjouyC5WPjpbTik"],
                    "metadata": {
                      "id": "UBrsG9RVzw",
                      "slug": "ios",
                      "name": "iOS",
                      "categories": ["Mobile"],
                      "description": "",
                      "logos": {
                        "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                        "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u"
                      },
                      "options": [],
                      "isCloudEventSource": false
                    },
                    "settings": {},
                    "labels": []
                  }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetSourceV1Output" },
                "example": {
                  "source": {
                    "id": "qQEHquLrjRDN9j1ByrChyn",
                    "slug": "ios",
                    "name": "",
                    "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                    "enabled": true,
                    "writeKeys": ["3YdEudTwjouyC5WPjpbTik"],
                    "metadata": {
                      "id": "UBrsG9RVzw",
                      "slug": "ios",
                      "name": "iOS",
                      "categories": ["Mobile"],
                      "description": "",
                      "logos": {
                        "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                        "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u"
                      },
                      "options": [],
                      "isCloudEventSource": false
                    },
                    "settings": {},
                    "labels": []
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Sources"],
        "tags": ["Sources"]
      },
      "patch": {
        "summary": "updateSourceV1",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Updates an existing Source.\n\n\nThis endpoint generates the following audit events:\n* Source Modified\n* Source Enabled\n* Source Settings Modified\n* Source Disabled\n\n\nConfig API omitted fields:\n- `updateMask`\n",
        "operationId": "updateSource",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/UpdateSourceAlphaInput" },
              "example": { "sourceId": "43hGqZgRbjHpjfa7quDFoT", "name": "My updated source", "enabled": false }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/UpdateSourceBetaInput" },
              "example": { "sourceId": "aMnpp5Y1ZoW5q2qUKHAy7q", "name": "My updated source", "enabled": false }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/UpdateSourceV1Input" },
              "example": { "sourceId": "tUkYfybvMeu3hpJcfYCqga", "name": "My updated source", "enabled": false }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/UpdateSourceAlphaOutput" },
                "example": {
                  "source": {
                    "id": "43hGqZgRbjHpjfa7quDFoT",
                    "slug": "update-source-slug-vb47p0",
                    "name": "My updated source",
                    "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                    "enabled": false,
                    "writeKeys": ["i8jcHENlBLLl6rdAobNik8NL0J6nQDNN"],
                    "metadata": {
                      "id": "IqDTy1TpoU",
                      "slug": "javascript",
                      "name": "Javascript",
                      "categories": ["Website"],
                      "description": "This is our most flexible and powerful tracking system, using analytics.js.  Track and analyze information about your visitors and customers, and every action that they take, in any of our 140 integrations, business intelligence tools, or directly with SQL tools.",
                      "logos": {
                        "default": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                        "alt": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                        "mark": "https://cdn.filepicker.io/api/file/kBpmEoSSaakidAvoFmzd"
                      },
                      "options": []
                    },
                    "settings": {},
                    "labels": []
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/UpdateSourceBetaOutput" },
                "example": {
                  "source": {
                    "id": "aMnpp5Y1ZoW5q2qUKHAy7q",
                    "slug": "update-source-slug-m4ph_f",
                    "name": "My updated source",
                    "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                    "enabled": false,
                    "writeKeys": ["nCkxIJN4yNd0sDsGBbFoldzjwtesUxcd"],
                    "metadata": {
                      "id": "IqDTy1TpoU",
                      "slug": "javascript",
                      "name": "Javascript",
                      "categories": ["Website"],
                      "description": "This is our most flexible and powerful tracking system, using analytics.js.  Track and analyze information about your visitors and customers, and every action that they take, in any of our 140 integrations, business intelligence tools, or directly with SQL tools.",
                      "logos": {
                        "default": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                        "alt": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                        "mark": "https://cdn.filepicker.io/api/file/kBpmEoSSaakidAvoFmzd"
                      },
                      "options": []
                    },
                    "settings": {},
                    "labels": []
                  }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/UpdateSourceV1Output" },
                "example": {
                  "source": {
                    "id": "tUkYfybvMeu3hpJcfYCqga",
                    "slug": "update-source-slug-pmugan",
                    "name": "My updated source",
                    "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                    "enabled": false,
                    "writeKeys": ["7cPLBuCAgAkyHVhRAXV5vFfU5tcy261u"],
                    "metadata": {
                      "id": "IqDTy1TpoU",
                      "slug": "javascript",
                      "name": "Javascript",
                      "categories": ["Website"],
                      "description": "This is our most flexible and powerful tracking system, using analytics.js.  Track and analyze information about your visitors and customers, and every action that they take, in any of our 140 integrations, business intelligence tools, or directly with SQL tools.",
                      "logos": {
                        "default": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                        "alt": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                        "mark": "https://cdn.filepicker.io/api/file/kBpmEoSSaakidAvoFmzd"
                      },
                      "options": [],
                      "isCloudEventSource": false
                    },
                    "settings": {},
                    "labels": []
                  }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UpdateSourceV1Output" },
                "example": {
                  "source": {
                    "id": "tUkYfybvMeu3hpJcfYCqga",
                    "slug": "update-source-slug-pmugan",
                    "name": "My updated source",
                    "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                    "enabled": false,
                    "writeKeys": ["7cPLBuCAgAkyHVhRAXV5vFfU5tcy261u"],
                    "metadata": {
                      "id": "IqDTy1TpoU",
                      "slug": "javascript",
                      "name": "Javascript",
                      "categories": ["Website"],
                      "description": "This is our most flexible and powerful tracking system, using analytics.js.  Track and analyze information about your visitors and customers, and every action that they take, in any of our 140 integrations, business intelligence tools, or directly with SQL tools.",
                      "logos": {
                        "default": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                        "alt": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                        "mark": "https://cdn.filepicker.io/api/file/kBpmEoSSaakidAvoFmzd"
                      },
                      "options": [],
                      "isCloudEventSource": false
                    },
                    "settings": {},
                    "labels": []
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Sources"],
        "tags": ["Sources"]
      }
    },
    "/tracking-plans/{trackingPlanId}": {
      "delete": {
        "summary": "deleteTrackingPlanV1",
        "parameters": [
          {
            "in": "path",
            "name": "trackingPlanId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Deletes a tracking plan\n\n**Note**: In order to successfully call this endpoint, the specified workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "deleteTrackingPlan",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/DeleteTrackingPlanAlphaInput" },
              "example": { "trackingPlanId": "tp_sprout_rVGCC6WdrNxjCf6JpCHP" }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/DeleteTrackingPlanBetaInput" },
              "example": { "trackingPlanId": "tp_sprout_rVGCC6WdrNxjCf6JpCHP" }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/DeleteTrackingPlanV1Input" },
              "example": { "trackingPlanId": "tp_sprout_rVGCC6WdrNxjCf6JpCHP" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/DeleteTrackingPlanAlphaOutput" },
                "example": { "status": "SUCCESS" }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/DeleteTrackingPlanBetaOutput" },
                "example": { "status": "SUCCESS" }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/DeleteTrackingPlanV1Output" },
                "example": { "status": "SUCCESS" }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DeleteTrackingPlanV1Output" },
                "example": { "status": "SUCCESS" }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Protocols", "Tracking Plans"],
        "tags": ["Tracking Plans"]
      },
      "get": {
        "summary": "getTrackingPlanV1",
        "parameters": [
          {
            "in": "path",
            "name": "trackingPlanId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          },
          {
            "in": "query",
            "required": false,
            "name": "trackingPlanId",
            "description": "The id of the tracking plan to request.\n\nConfig API note: analogous to `name`.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The id of the tracking plan to request.\n\nConfig API note: analogous to `name`.",
              "type": "string",
              "title": "trackingPlanId"
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a tracking plan\n\n**Note**: In order to successfully call this endpoint, the specified workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "getTrackingPlan",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/GetTrackingPlanAlphaOutput" },
                "example": {
                  "trackingPlan": {
                    "id": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
                    "name": "New TP",
                    "slug": "",
                    "description": "",
                    "type": "LIVE",
                    "updatedAt": "2006-01-02T15:04:05.000Z",
                    "createdAt": "2006-01-02T15:04:05.000Z"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/GetTrackingPlanBetaOutput" },
                "example": {
                  "trackingPlan": {
                    "id": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
                    "name": "New TP",
                    "slug": "",
                    "description": "",
                    "type": "LIVE",
                    "updatedAt": "2006-01-02T15:04:05.000Z",
                    "createdAt": "2006-01-02T15:04:05.000Z"
                  }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/GetTrackingPlanV1Output" },
                "example": {
                  "trackingPlan": {
                    "id": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
                    "name": "New TP",
                    "resourceSchemaId": "rs_1yVwS3zy60dONy9UhCyDqMmVvAE",
                    "slug": "",
                    "description": "",
                    "type": "LIVE",
                    "updatedAt": "2006-01-02T15:04:05.000Z",
                    "createdAt": "2006-01-02T15:04:05.000Z"
                  }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetTrackingPlanV1Output" },
                "example": {
                  "trackingPlan": {
                    "id": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
                    "name": "New TP",
                    "resourceSchemaId": "rs_1yVwS3zy60dONy9UhCyDqMmVvAE",
                    "slug": "",
                    "description": "",
                    "type": "LIVE",
                    "updatedAt": "2006-01-02T15:04:05.000Z",
                    "createdAt": "2006-01-02T15:04:05.000Z"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Protocols", "Tracking Plans"],
        "tags": ["Tracking Plans"]
      },
      "patch": {
        "summary": "updateTrackingPlanV1",
        "parameters": [
          {
            "in": "path",
            "name": "trackingPlanId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Updates a tracking plan\n\n**Note**: In order to successfully call this endpoint, the specified workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.\n\nConfig API omitted fields:\n- `updateMask`\n      ",
        "operationId": "updateTrackingPlan",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/UpdateTrackingPlanAlphaInput" },
              "example": { "trackingPlanId": "tp_sprout_rVGCC6WdrNxjCf6JpCHP", "name": "Updated TP" }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/UpdateTrackingPlanBetaInput" },
              "example": { "trackingPlanId": "tp_sprout_rVGCC6WdrNxjCf6JpCHP", "name": "Updated TP" }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/UpdateTrackingPlanV1Input" },
              "example": { "trackingPlanId": "tp_sprout_rVGCC6WdrNxjCf6JpCHP", "name": "Updated TP" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/UpdateTrackingPlanAlphaOutput" },
                "example": { "status": "SUCCESS" }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/UpdateTrackingPlanBetaOutput" },
                "example": { "status": "SUCCESS" }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/UpdateTrackingPlanV1Output" },
                "example": { "status": "SUCCESS" }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UpdateTrackingPlanV1Output" },
                "example": { "status": "SUCCESS" }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Protocols", "Tracking Plans"],
        "tags": ["Tracking Plans"]
      }
    },
    "/transformations/{transformationId}": {
      "delete": {
        "summary": "deleteTransformationBeta",
        "parameters": [
          {
            "in": "path",
            "name": "transformationId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Deletes a transformation.\n\n\nThis endpoint generates the following audit events:\n* Transformation Deleted\n\n**Note**: In order to successfully call this endpoint, the specified workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "deleteTransformation",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/DeleteTransformationAlphaInput" },
              "example": { "transformationId": "ks7SJDAn4XvW4VykJSQVz7" }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/DeleteTransformationBetaInput" },
              "example": { "transformationId": "2BYhdT9MK820M3CPvdkzwPpb7HY" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/DeleteTransformationAlphaOutput" },
                "example": { "status": "SUCCESS" }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/DeleteTransformationBetaOutput" },
                "example": { "status": "SUCCESS" }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Protocols", "Transformations"],
        "tags": ["Transformations"]
      },
      "get": {
        "summary": "getTransformationBeta",
        "parameters": [
          {
            "in": "path",
            "name": "transformationId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          },
          {
            "in": "query",
            "required": false,
            "name": "transformationId",
            "description": "The transformation id.\n\nThis parameter exists in beta.",
            "schema": { "description": "The transformation id.", "type": "string", "title": "transformationId" }
          }
        ],
        "deprecated": false,
        "description": "Gets a transformation.\n\n**Note**: In order to successfully call this endpoint, the specified workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "getTransformation",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/GetTransformationAlphaOutput" },
                "example": {
                  "transformation": {
                    "id": "pHrD51Ds35Zjfka84yXQE6",
                    "name": "User clicked edit track event",
                    "enabled": true,
                    "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                    "if": "event = 'User Clicked'",
                    "propertyRenames": [{ "oldName": "Category", "newName": "category" }]
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/GetTransformationBetaOutput" },
                "example": {
                  "transformation": {
                    "id": "pHrD51Ds35Zjfka84yXQE6",
                    "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                    "name": "updated-name",
                    "enabled": true,
                    "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                    "destinationMetadataId": "547610a5db31d978f14a5c4e",
                    "if": "event=\"my-event\"",
                    "newEventName": "my-updated-event",
                    "propertyRenames": [{ "oldName": "old-property", "newName": "new-property" }]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Protocols", "Transformations"],
        "tags": ["Transformations"]
      },
      "patch": {
        "summary": "updateTransformationBeta",
        "parameters": [
          {
            "in": "path",
            "name": "transformationId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Updates an existing transformation.\n\n\nThis endpoint generates the following audit events:\n* Transformation Updated\n\n**Note**: In order to successfully call this endpoint, the specified workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "updateTransformation",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/UpdateTransformationAlphaInput" },
              "example": {
                "transformationId": "pHrD51Ds35Zjfka84yXQE6",
                "name": "updated-name",
                "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                "enabled": true,
                "destinationMetadataId": "547610a5db31d978f14a5c4e",
                "if": "event=\"my-event\"",
                "newEventName": "my-updated-event",
                "propertyRenames": [{ "newName": "new-property", "oldName": "old-property" }]
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/UpdateTransformationBetaInput" },
              "example": {
                "transformationId": "pHrD51Ds35Zjfka84yXQE6",
                "name": "updated-name",
                "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                "enabled": true,
                "destinationMetadataId": "547610a5db31d978f14a5c4e",
                "if": "event=\"my-event\"",
                "newEventName": "my-updated-event",
                "propertyRenames": [{ "newName": "new-property", "oldName": "old-property" }]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/UpdateTransformationAlphaOutput" },
                "example": {
                  "transformation": {
                    "id": "pHrD51Ds35Zjfka84yXQE6",
                    "name": "updated-name",
                    "enabled": true,
                    "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                    "destinationMetadataId": "547610a5db31d978f14a5c4e",
                    "if": "event=\"my-event\"",
                    "newEventName": "my-updated-event",
                    "propertyRenames": [{ "oldName": "old-property", "newName": "new-property" }]
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/UpdateTransformationBetaOutput" },
                "example": {
                  "transformation": {
                    "id": "pHrD51Ds35Zjfka84yXQE6",
                    "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                    "name": "updated-name",
                    "enabled": true,
                    "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                    "destinationMetadataId": "547610a5db31d978f14a5c4e",
                    "if": "event=\"my-event\"",
                    "newEventName": "my-updated-event",
                    "propertyRenames": [{ "oldName": "old-property", "newName": "new-property" }]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Protocols", "Transformations"],
        "tags": ["Transformations"]
      }
    },
    "/groups/{userGroupId}": {
      "delete": {
        "summary": "deleteUserGroupV1",
        "parameters": [
          {
            "in": "path",
            "name": "userGroupId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Removes a user group from a workspace.\n\n\nThis endpoint generates the following audit events:\n* User Group Deleted\n\n      ",
        "operationId": "deleteUserGroup",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/DeleteUserGroupAlphaInput" },
              "example": { "userGroupId": "26DB8R8sBcoNiHvNSHrdqRco9Ux" }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/DeleteUserGroupBetaInput" },
              "example": { "userGroupId": "26DB8PsgCpGo9BVASTtJqOMMlwC" }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/DeleteUserGroupV1Input" },
              "example": { "userGroupId": "2BdJmHTrQo6C3WuBfTwrB651ith" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/DeleteUserGroupAlphaOutput" },
                "example": { "status": "SUCCESS" }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/DeleteUserGroupBetaOutput" },
                "example": { "status": "SUCCESS" }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/DeleteUserGroupV1Output" },
                "example": { "status": "SUCCESS" }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DeleteUserGroupV1Output" },
                "example": { "status": "SUCCESS" }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Admin", "IAM Groups"],
        "tags": ["IAM Groups"]
      },
      "get": {
        "summary": "getUserGroupV1",
        "parameters": [
          {
            "in": "path",
            "name": "userGroupId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          },
          {
            "in": "query",
            "required": false,
            "name": "userGroupId",
            "description": "The id of the user group.\n\nThis parameter exists in v1.",
            "schema": { "description": "The id of the user group.", "type": "string", "title": "userGroupId" }
          }
        ],
        "deprecated": false,
        "description": "Returns a User Group",
        "operationId": "getUserGroup",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/GetUserGroupAlphaOutput" },
                "example": {
                  "userGroup": {
                    "id": "bBABwqbaDf2QdwTbW8bNEm",
                    "name": "PAPI Example Group",
                    "memberCount": 0,
                    "permissions": [
                      {
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "roleName": "Workspace Owner",
                        "resources": [{ "id": "9aQ1Lj62S4bomZKLF4DPqW", "type": "WORKSPACE", "labels": [] }]
                      }
                    ]
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/GetUserGroupBetaOutput" },
                "example": {
                  "userGroup": {
                    "id": "bBABwqbaDf2QdwTbW8bNEm",
                    "name": "PAPI Example Group",
                    "memberCount": 0,
                    "permissions": [
                      {
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "roleName": "Workspace Owner",
                        "resources": [{ "id": "9aQ1Lj62S4bomZKLF4DPqW", "type": "WORKSPACE", "labels": [] }]
                      }
                    ]
                  }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/GetUserGroupV1Output" },
                "example": {
                  "userGroup": {
                    "id": "bBABwqbaDf2QdwTbW8bNEm",
                    "name": "PAPI Example Group",
                    "memberCount": 0,
                    "permissions": [
                      {
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "roleName": "Workspace Owner",
                        "resources": [{ "id": "9aQ1Lj62S4bomZKLF4DPqW", "type": "WORKSPACE", "labels": [] }]
                      }
                    ]
                  }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetUserGroupV1Output" },
                "example": {
                  "userGroup": {
                    "id": "bBABwqbaDf2QdwTbW8bNEm",
                    "name": "PAPI Example Group",
                    "memberCount": 0,
                    "permissions": [
                      {
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "roleName": "Workspace Owner",
                        "resources": [{ "id": "9aQ1Lj62S4bomZKLF4DPqW", "type": "WORKSPACE", "labels": [] }]
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Admin", "IAM Groups"],
        "tags": ["IAM Groups"]
      },
      "patch": {
        "summary": "updateUserGroupV1",
        "parameters": [
          {
            "in": "path",
            "name": "userGroupId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Updates a user group for a workspace.\n\n\nThis endpoint generates the following audit events:\n* User Group Updated\n\n      ",
        "operationId": "updateUserGroup",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/UpdateUserGroupAlphaInput" },
              "example": { "userGroupId": "bBABwqbaDf2QdwTbW8bNEm", "name": "PAPI Example Group" }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/UpdateUserGroupBetaInput" },
              "example": { "userGroupId": "bBABwqbaDf2QdwTbW8bNEm", "name": "PAPI Example Group" }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/UpdateUserGroupV1Input" },
              "example": { "userGroupId": "bBABwqbaDf2QdwTbW8bNEm", "name": "PAPI Example Group" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/UpdateUserGroupAlphaOutput" },
                "example": {
                  "userGroup": { "id": "bBABwqbaDf2QdwTbW8bNEm", "name": "PAPI Example Group", "memberCount": 0 }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/UpdateUserGroupBetaOutput" },
                "example": {
                  "userGroup": { "id": "bBABwqbaDf2QdwTbW8bNEm", "name": "PAPI Example Group", "memberCount": 0 }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/UpdateUserGroupV1Output" },
                "example": {
                  "userGroup": { "id": "bBABwqbaDf2QdwTbW8bNEm", "name": "PAPI Example Group", "memberCount": 0 }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UpdateUserGroupV1Output" },
                "example": {
                  "userGroup": { "id": "bBABwqbaDf2QdwTbW8bNEm", "name": "PAPI Example Group", "memberCount": 0 }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Admin", "IAM Groups"],
        "tags": ["IAM Groups"]
      }
    },
    "/users": {
      "delete": {
        "summary": "deleteUsersV1",
        "parameters": [],
        "deprecated": false,
        "description": "Removes one or multiple Users.\n\n\nThis endpoint generates the following audit events:\n* Group Memberships Deleted\n\n      ",
        "operationId": "deleteUsers",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/DeleteUsersAlphaInput" },
              "example": { "userIds": ["sgJDWk3K21k6LE3tLU9nRK"] }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/DeleteUsersBetaInput" },
              "example": { "userIds": ["sgJDWk3K21k6LE3tLU9nRK"] }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/DeleteUsersV1Input" },
              "example": { "userIds": ["sgJDWk3K21k6LE3tLU9nRK"] }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/DeleteUsersAlphaOutput" },
                "example": { "status": "SUCCESS" }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/DeleteUsersBetaOutput" },
                "example": { "status": "SUCCESS" }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/DeleteUsersV1Output" },
                "example": { "status": "SUCCESS" }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DeleteUsersV1Output" },
                "example": { "status": "SUCCESS" }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Admin", "IAM Users"],
        "tags": ["IAM Users"]
      },
      "get": {
        "summary": "listUsersV1",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Pagination for users.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput",
              "description": "Pagination for users.",
              "title": "pagination"
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a list of Users with access to the Workspace",
        "operationId": "listUsers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/ListUsersAlphaOutput" },
                "example": {
                  "users": [
                    { "id": "i2VTJURQprNfqdwjLFPWYx", "name": "Sloth", "email": "sloth@segment.com" },
                    { "id": "sgJDWk3K21k6LE3tLU9nRK", "name": "", "email": "papi@segment.com" }
                  ],
                  "pagination": { "current": "MA==", "totalEntries": 2 }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/ListUsersBetaOutput" },
                "example": {
                  "users": [
                    { "id": "i2VTJURQprNfqdwjLFPWYx", "name": "Sloth", "email": "sloth@segment.com" },
                    { "id": "sgJDWk3K21k6LE3tLU9nRK", "name": "", "email": "papi@segment.com" }
                  ],
                  "pagination": { "current": "MA==", "totalEntries": 2 }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/ListUsersV1Output" },
                "example": {
                  "users": [{ "id": "i2VTJURQprNfqdwjLFPWYx", "name": "Sloth", "email": "sloth@segment.com" }],
                  "pagination": { "current": "MA==", "totalEntries": 1 }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ListUsersV1Output" },
                "example": {
                  "users": [{ "id": "i2VTJURQprNfqdwjLFPWYx", "name": "Sloth", "email": "sloth@segment.com" }],
                  "pagination": { "current": "MA==", "totalEntries": 1 }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Admin", "IAM Users"],
        "tags": ["IAM Users"]
      }
    },
    "/warehouses/{warehouseId}": {
      "delete": {
        "summary": "deleteWarehouseV1",
        "parameters": [
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Deletes an existing Warehouse.\n\n\nThis endpoint generates the following audit events:\n* Storage Destination Deleted\n\n      ",
        "operationId": "deleteWarehouse",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/DeleteWarehouseAlphaInput" },
              "example": { "warehouseId": "tpdkKH3DzNmvuEdKHB2EWp" }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/DeleteWarehouseBetaInput" },
              "example": { "warehouseId": "wHPsADzBZSugBoRfUy3VSG" }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/DeleteWarehouseV1Input" },
              "example": { "warehouseId": "4U9wMWmm2je4RZ4uawJhy2" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/DeleteWarehouseAlphaOutput" },
                "example": { "status": "SUCCESS" }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/DeleteWarehouseBetaOutput" },
                "example": { "status": "SUCCESS" }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/DeleteWarehouseV1Output" },
                "example": { "status": "SUCCESS" }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DeleteWarehouseV1Output" },
                "example": { "status": "SUCCESS" }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Warehouses"],
        "tags": ["Warehouses"]
      },
      "get": {
        "summary": "getWarehouseV1",
        "parameters": [
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          },
          {
            "in": "query",
            "required": false,
            "name": "warehouseId",
            "description": "The id of the warehouse to look up.\n\nThis parameter exists in v1.",
            "schema": { "description": "The id of the warehouse to look up.", "type": "string", "title": "warehouseId" }
          }
        ],
        "deprecated": false,
        "description": "Returns a Warehouse by its ID",
        "operationId": "getWarehouse",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/GetWarehouseAlphaOutput" },
                "example": {
                  "warehouse": {
                    "id": "kjU72LCJexvrqL7G4TMHHN",
                    "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                    "enabled": true,
                    "metadata": {
                      "id": "55d3d3aea3c",
                      "slug": "postgres",
                      "name": "Postgres",
                      "description": "Open source data warehouse",
                      "logos": {
                        "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                        "mark": "",
                        "alt": ""
                      },
                      "options": [
                        { "name": "port", "required": true, "type": "string" },
                        { "name": "database", "required": true, "type": "string" },
                        { "name": "hostname", "required": true, "type": "string" },
                        { "name": "password", "required": true, "type": "string" },
                        { "name": "username", "required": true, "type": "string" },
                        { "name": "ciphertext", "required": true, "type": "string" }
                      ]
                    },
                    "settings": {}
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/GetWarehouseBetaOutput" },
                "example": {
                  "warehouse": {
                    "id": "kjU72LCJexvrqL7G4TMHHN",
                    "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                    "enabled": true,
                    "metadata": {
                      "id": "55d3d3aea3c",
                      "slug": "postgres",
                      "name": "Postgres",
                      "description": "Open source data warehouse",
                      "logos": {
                        "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                        "mark": "",
                        "alt": ""
                      },
                      "options": [
                        { "name": "port", "required": true, "type": "string" },
                        { "name": "database", "required": true, "type": "string" },
                        { "name": "hostname", "required": true, "type": "string" },
                        { "name": "password", "required": true, "type": "string" },
                        { "name": "username", "required": true, "type": "string" },
                        { "name": "ciphertext", "required": true, "type": "string" }
                      ]
                    },
                    "settings": {}
                  }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/GetWarehouseV1Output" },
                "example": {
                  "warehouse": {
                    "id": "kjU72LCJexvrqL7G4TMHHN",
                    "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                    "enabled": true,
                    "metadata": {
                      "id": "55d3d3aea3c",
                      "slug": "postgres",
                      "name": "Postgres",
                      "description": "Open source data warehouse",
                      "logos": {
                        "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                        "mark": "",
                        "alt": ""
                      },
                      "options": [
                        { "name": "port", "required": true, "type": "string" },
                        { "name": "database", "required": true, "type": "string" },
                        { "name": "hostname", "required": true, "type": "string" },
                        { "name": "password", "required": true, "type": "string" },
                        { "name": "username", "required": true, "type": "string" },
                        { "name": "ciphertext", "required": true, "type": "string" }
                      ]
                    },
                    "settings": {}
                  }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetWarehouseV1Output" },
                "example": {
                  "warehouse": {
                    "id": "kjU72LCJexvrqL7G4TMHHN",
                    "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                    "enabled": true,
                    "metadata": {
                      "id": "55d3d3aea3c",
                      "slug": "postgres",
                      "name": "Postgres",
                      "description": "Open source data warehouse",
                      "logos": {
                        "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                        "mark": "",
                        "alt": ""
                      },
                      "options": [
                        { "name": "port", "required": true, "type": "string" },
                        { "name": "database", "required": true, "type": "string" },
                        { "name": "hostname", "required": true, "type": "string" },
                        { "name": "password", "required": true, "type": "string" },
                        { "name": "username", "required": true, "type": "string" },
                        { "name": "ciphertext", "required": true, "type": "string" }
                      ]
                    },
                    "settings": {}
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Warehouses"],
        "tags": ["Warehouses"]
      },
      "patch": {
        "summary": "updateWarehouseV1",
        "parameters": [
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Updates an existing Warehouse.\n\n\nThis endpoint generates the following audit event:\n* Storage Destination Modified\n* Storage Destination Enabled\n\n      ",
        "operationId": "updateWarehouse",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/UpdateWarehouseAlphaInput" },
              "example": {
                "warehouseId": "kjU72LCJexvrqL7G4TMHHN",
                "name": "API Example Test Warehouse Update",
                "settings": { "host": "aws.redshift.dev" }
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/UpdateWarehouseBetaInput" },
              "example": {
                "warehouseId": "kjU72LCJexvrqL7G4TMHHN",
                "name": "Redshift Dev",
                "settings": { "host": "aws.redshift.dev" }
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/UpdateWarehouseV1Input" },
              "example": {
                "warehouseId": "kjU72LCJexvrqL7G4TMHHN",
                "name": "Redshift Dev",
                "settings": { "host": "aws.redshift.dev" }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/UpdateWarehouseAlphaOutput" },
                "example": {
                  "warehouse": {
                    "id": "kjU72LCJexvrqL7G4TMHHN",
                    "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                    "enabled": true,
                    "metadata": {
                      "id": "55d3d3aea3c",
                      "slug": "postgres",
                      "name": "Postgres",
                      "description": "Open source data warehouse",
                      "logos": {
                        "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                        "mark": "",
                        "alt": ""
                      },
                      "options": [
                        { "name": "port", "required": true, "type": "string" },
                        { "name": "database", "required": true, "type": "string" },
                        { "name": "hostname", "required": true, "type": "string" },
                        { "name": "password", "required": true, "type": "string" },
                        { "name": "username", "required": true, "type": "string" },
                        { "name": "ciphertext", "required": true, "type": "string" }
                      ]
                    },
                    "settings": { "host": "aws.redshift.dev", "name": "API Example Test Warehouse Update" }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/UpdateWarehouseBetaOutput" },
                "example": {
                  "warehouse": {
                    "id": "kjU72LCJexvrqL7G4TMHHN",
                    "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                    "enabled": true,
                    "metadata": {
                      "id": "55d3d3aea3c",
                      "slug": "postgres",
                      "name": "Postgres",
                      "description": "Open source data warehouse",
                      "logos": {
                        "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                        "mark": "",
                        "alt": ""
                      },
                      "options": [
                        { "name": "port", "required": true, "type": "string" },
                        { "name": "database", "required": true, "type": "string" },
                        { "name": "hostname", "required": true, "type": "string" },
                        { "name": "password", "required": true, "type": "string" },
                        { "name": "username", "required": true, "type": "string" },
                        { "name": "ciphertext", "required": true, "type": "string" }
                      ]
                    },
                    "settings": { "host": "aws.redshift.dev", "name": "Redshift Dev" }
                  }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/UpdateWarehouseV1Output" },
                "example": {
                  "warehouse": {
                    "id": "kjU72LCJexvrqL7G4TMHHN",
                    "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                    "enabled": true,
                    "metadata": {
                      "id": "55d3d3aea3c",
                      "slug": "postgres",
                      "name": "Postgres",
                      "description": "Open source data warehouse",
                      "logos": {
                        "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                        "mark": "",
                        "alt": ""
                      },
                      "options": [
                        { "name": "port", "required": true, "type": "string" },
                        { "name": "database", "required": true, "type": "string" },
                        { "name": "hostname", "required": true, "type": "string" },
                        { "name": "password", "required": true, "type": "string" },
                        { "name": "username", "required": true, "type": "string" },
                        { "name": "ciphertext", "required": true, "type": "string" }
                      ]
                    },
                    "settings": { "host": "aws.redshift.dev", "name": "Redshift Dev" }
                  }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UpdateWarehouseV1Output" },
                "example": {
                  "warehouse": {
                    "id": "kjU72LCJexvrqL7G4TMHHN",
                    "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                    "enabled": true,
                    "metadata": {
                      "id": "55d3d3aea3c",
                      "slug": "postgres",
                      "name": "Postgres",
                      "description": "Open source data warehouse",
                      "logos": {
                        "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                        "mark": "",
                        "alt": ""
                      },
                      "options": [
                        { "name": "port", "required": true, "type": "string" },
                        { "name": "database", "required": true, "type": "string" },
                        { "name": "hostname", "required": true, "type": "string" },
                        { "name": "password", "required": true, "type": "string" },
                        { "name": "username", "required": true, "type": "string" },
                        { "name": "ciphertext", "required": true, "type": "string" }
                      ]
                    },
                    "settings": { "host": "aws.redshift.dev", "name": "Redshift Dev" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Warehouses"],
        "tags": ["Warehouses"]
      }
    },
    "/sources/{sourceId}/edge-functions/disable": {
      "patch": {
        "summary": "disableEdgeFunctionsAlpha",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Disable Edge Functions for your source.\n\n**Note**: In order to successfully call this endpoint, the specified workspace needs to have the Edge Functions feature enabled. Please reach out to your customer success manager for more information.\n      ",
        "operationId": "disableEdgeFunctions",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/DisableEdgeFunctionsAlphaInput" },
              "example": { "sourceId": "qQEHquLrjRDN9j1ByrChyn" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/DisableEdgeFunctionsAlphaOutput" },
                "example": {
                  "edgeFunctions": {
                    "id": "11d1a7ac-d6cd-4ec4-a89d-7bc46af8ebfe",
                    "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                    "downloadURL": "",
                    "createdBy": "public-api-token/1ba60cca",
                    "createdAt": "2006-01-02T15:04:05.000Z",
                    "version": 2
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Edge Functions"],
        "tags": ["Edge Functions"]
      }
    },
    "/echo": {
      "get": {
        "summary": "echoV1",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "message",
            "description": "Sets the response `message` field. The response contains this field's entry.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "Sets the response `message` field. The response contains this field's entry.",
              "type": "string",
              "title": "message"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "delay",
            "description": "The desired response delay, in milliseconds.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The desired response delay, in milliseconds.",
              "type": "number",
              "title": "delay"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "triggerError",
            "description": "If `true`, returns an HTTP `4xx` error that contains the string in `message`.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "If `true`, returns an HTTP `4xx` error that contains the string in `message`.",
              "type": "boolean",
              "title": "triggerError"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "triggerMultipleErrors",
            "description": "If `true`, returns an HTTP `4xx` error that contains the value of the `message` field in the error message array.\n\nThis has no effect if the request sets `triggerError`.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "If `true`, returns an HTTP `4xx` error that contains the value of the `message` field in the error message array.\n\nThis has no effect if the request sets `triggerError`.",
              "type": "boolean",
              "title": "triggerMultipleErrors"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "triggerUnexpectedError",
            "description": "If `true`, triggers a `500` error.\n\nThis has no effect if the request sets either `triggerError` or `triggerMultipleErrors`.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "If `true`, triggers a `500` error.\n\nThis has no effect if the request sets either `triggerError` or `triggerMultipleErrors`.",
              "type": "boolean",
              "title": "triggerUnexpectedError"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "statusCode",
            "description": "Sets the HTTP status code to return.\n\nThis parameter exists in v1.",
            "schema": { "description": "Sets the HTTP status code to return.", "type": "number", "title": "statusCode" }
          }
        ],
        "deprecated": false,
        "description": "Public Echo endpoint",
        "operationId": "echo",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/EchoAlphaOutput" },
                "example": { "method": "get", "message": "Hello, World!", "headers": { "<omitted>": "<omitted>" } }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/EchoV1Output" },
                "example": { "method": "get", "message": "Hello, World!", "headers": { "<omitted>": "<omitted>" } }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/EchoV1Output" },
                "example": { "method": "get", "message": "Hello, World!", "headers": { "<omitted>": "<omitted>" } }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Testing"],
        "tags": ["Testing"]
      }
    },
    "/sources/{sourceId}/edge-functions/upload-url": {
      "post": {
        "summary": "generateUploadURLForEdgeFunctionsAlpha",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Generate a temporary upload URL, that can be used to upload an Edge Functions bundle.\n\n**Note**: In order to successfully call this endpoint, the specified workspace needs to have the Edge Functions feature enabled. Please reach out to your customer success manager for more information.\n      ",
        "operationId": "generateUploadURLForEdgeFunctions",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/GenerateUploadURLForEdgeFunctionsAlphaInput" },
              "example": { "sourceId": "qQEHquLrjRDN9j1ByrChyn" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/GenerateUploadURLForEdgeFunctionsAlphaOutput" },
                "example": {
                  "uploadURL": "https://segment-edge-functions-bundles-stage.s3.us-west-2.amazonaws.com/qQEHquLrjRDN9j1ByrChyn/cef1d2b9-1479-423f-b9f3-3cc1eaf8a290.js?Content-Type=text%2Fjavascript%3B%20charset%3Dutf-8&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIA4XLQZ2ITV7GRB2GN%2F20220525%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20220525T191213Z&X-Amz-Expires=900&X-Amz-Security-Token=FwoGZXIvYXdzELz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaDKbWlIC%2BBDVmTVXD0SKDAuKlRi8z2xU0%2Btq1mISyvYJU7ieJxq40uA4Vhq1bwWyxjKJ6dUF%2BV%2BNHQMDbGygzCM5mCqIFJivMl559j0M5ghiVhz2V9GB%2FmtkIWkTQr%2FoyhlFsBlZFBL51JSLVaZ9nTaIB5bR%2FmVi8hQXkFIGlfHfJoARMkZLKg1YDGAbl7gO3cJCjN58nEfT1kiALzQEMn0TCr%2BVLHdQBp8E54UB6X5KP5Ccrm3p%2BBay5dPdC40hJD7hV2fcwYDS7CxrAwPZmBLeuwSbmQfb32kQ47LupuuSC6KPQB0howLmF69rXk1itFbTM7AYtMQALbJYPzilApqahpE5Q9DEj%2BNY1gq0pc%2BI%2FYkAokPe5lAYyK2SXpSm4XiGP3v%2B54uak0lRJcLmiTtTw9p0zZPDNR4PzrwAmix4H21p%2FFGA%3D&X-Amz-Signature=96a0c51539d6d087cd92f0308f8440f91b9396728b9ea84cfb576283aed6ab4c&X-Amz-SignedHeaders=host%3Bx-amz-grant-full-control%3Bx-amz-grant-read&x-amz-grant-full-control=id%3D&x-amz-grant-read=id%3D"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Edge Functions"],
        "tags": ["Edge Functions"]
      }
    },
    "/warehouses/{warehouseId}/advanced-sync-schedule": {
      "get": {
        "summary": "getAdvancedSyncScheduleFromWarehouseV1",
        "parameters": [
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          },
          {
            "in": "query",
            "required": false,
            "name": "warehouseId",
            "description": "The id of the warehouse.\n\nThis parameter exists in v1.",
            "schema": { "description": "The id of the warehouse.", "type": "string", "title": "warehouseId" }
          }
        ],
        "deprecated": false,
        "description": "Returns the advanced sync schedule for a Warehouse",
        "operationId": "getAdvancedSyncScheduleFromWarehouse",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/GetAdvancedSyncScheduleFromWarehouseAlphaOutput" },
                "example": { "enabled": false }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/GetAdvancedSyncScheduleFromWarehouseBetaOutput" },
                "example": {
                  "enabled": true,
                  "schedule": {
                    "times": [
                      { "hourOfDay": 5, "enabled": false },
                      { "hourOfDay": 7, "enabled": true },
                      { "hourOfDay": 23, "enabled": true }
                    ],
                    "timezone": "America/Vancouver"
                  }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/GetAdvancedSyncScheduleFromWarehouseV1Output" },
                "example": {
                  "enabled": true,
                  "schedule": {
                    "times": [
                      { "hourOfDay": 5, "enabled": false },
                      { "hourOfDay": 7, "enabled": true },
                      { "hourOfDay": 23, "enabled": true }
                    ],
                    "timezone": "America/Vancouver"
                  }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetAdvancedSyncScheduleFromWarehouseV1Output" },
                "example": {
                  "enabled": true,
                  "schedule": {
                    "times": [
                      { "hourOfDay": 5, "enabled": false },
                      { "hourOfDay": 7, "enabled": true },
                      { "hourOfDay": 23, "enabled": true }
                    ],
                    "timezone": "America/Vancouver"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Selective Sync"],
        "tags": ["Selective Sync"]
      },
      "put": {
        "summary": "replaceAdvancedSyncScheduleForWarehouseV1",
        "parameters": [
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Updates the advanced sync schedule for a Warehouse, replacing the sync schedule with a new schedule",
        "operationId": "replaceAdvancedSyncScheduleForWarehouse",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/ReplaceAdvancedSyncScheduleForWarehouseAlphaInput" },
              "example": {
                "warehouseId": "kjU72LCJexvrqL7G4TMHHN",
                "enabled": true,
                "schedule": {
                  "times": [
                    { "enabled": true, "hourOfDay": 7 },
                    { "enabled": false, "hourOfDay": 5 },
                    { "enabled": true, "hourOfDay": 23 }
                  ],
                  "timezone": "America/Vancouver"
                }
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/ReplaceAdvancedSyncScheduleForWarehouseBetaInput" },
              "example": {
                "warehouseId": "kjU72LCJexvrqL7G4TMHHN",
                "enabled": true,
                "schedule": {
                  "times": [
                    { "enabled": true, "hourOfDay": 7 },
                    { "enabled": false, "hourOfDay": 5 },
                    { "enabled": true, "hourOfDay": 23 }
                  ],
                  "timezone": "America/Vancouver"
                }
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/ReplaceAdvancedSyncScheduleForWarehouseV1Input" },
              "example": {
                "warehouseId": "kjU72LCJexvrqL7G4TMHHN",
                "enabled": true,
                "schedule": {
                  "times": [
                    { "enabled": true, "hourOfDay": 7 },
                    { "enabled": false, "hourOfDay": 5 },
                    { "enabled": true, "hourOfDay": 23 }
                  ],
                  "timezone": "America/Vancouver"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/ReplaceAdvancedSyncScheduleForWarehouseAlphaOutput" },
                "example": {
                  "enabled": true,
                  "schedule": {
                    "times": [
                      { "hourOfDay": 5, "enabled": false },
                      { "hourOfDay": 7, "enabled": true },
                      { "hourOfDay": 23, "enabled": true }
                    ],
                    "timezone": "America/Vancouver"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/ReplaceAdvancedSyncScheduleForWarehouseBetaOutput" },
                "example": {
                  "enabled": true,
                  "schedule": {
                    "times": [
                      { "hourOfDay": 5, "enabled": false },
                      { "hourOfDay": 7, "enabled": true },
                      { "hourOfDay": 23, "enabled": true }
                    ],
                    "timezone": "America/Vancouver"
                  }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/ReplaceAdvancedSyncScheduleForWarehouseV1Output" },
                "example": {
                  "enabled": true,
                  "schedule": {
                    "times": [
                      { "hourOfDay": 5, "enabled": false },
                      { "hourOfDay": 7, "enabled": true },
                      { "hourOfDay": 23, "enabled": true }
                    ],
                    "timezone": "America/Vancouver"
                  }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ReplaceAdvancedSyncScheduleForWarehouseV1Output" },
                "example": {
                  "enabled": true,
                  "schedule": {
                    "times": [
                      { "hourOfDay": 5, "enabled": false },
                      { "hourOfDay": 7, "enabled": true },
                      { "hourOfDay": 23, "enabled": true }
                    ],
                    "timezone": "America/Vancouver"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Selective Sync"],
        "tags": ["Selective Sync"]
      }
    },
    "/warehouses/{warehouseId}/connection-state": {
      "get": {
        "summary": "getConnectionStateFromWarehouseV1",
        "parameters": [
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          },
          {
            "in": "query",
            "required": false,
            "name": "warehouseId",
            "description": "The id of the warehouse to verify the connection for.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The id of the warehouse to verify the connection for.",
              "type": "string",
              "title": "warehouseId"
            }
          }
        ],
        "deprecated": false,
        "description": "Verifies the state of Warehouse connection settings",
        "operationId": "getConnectionStateFromWarehouse",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/GetConnectionStateFromWarehouseAlphaOutput" },
                "example": { "connectionState": "CONNECTED" }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/GetConnectionStateFromWarehouseBetaOutput" },
                "example": { "connectionState": "CONNECTED" }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/GetConnectionStateFromWarehouseV1Output" },
                "example": { "connectionState": "CONNECTED" }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetConnectionStateFromWarehouseV1Output" },
                "example": { "connectionState": "CONNECTED" }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Warehouses"],
        "tags": ["Warehouses"]
      }
    },
    "/usage/api-calls/sources/daily": {
      "get": {
        "summary": "getDailyPerSourceAPICallsUsageV1",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "period",
            "description": "The start of the usage month in the ISO-8601 format.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The start of the usage month in the ISO-8601 format.",
              "type": "string",
              "title": "period"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Pagination input for per source API calls counts.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput",
              "description": "Pagination input for per source API calls counts.",
              "title": "pagination"
            }
          }
        ],
        "deprecated": false,
        "description": "Provides daily cumulative per-source API call counts for a usage period",
        "operationId": "getDailyPerSourceAPICallsUsage",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/GetDailyPerSourceAPICallsUsageAlphaOutput" },
                "example": {
                  "dailyPerSourceAPICallsUsage": [
                    { "sourceId": "rh5BDZp6QDHvXFCkibm1pR", "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "sourceId": "rh5BDZp6QDHvXFCkibm1pR", "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "sourceId": "rh5BDZp6QDHvXFCkibm1pR", "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "sourceId": "rh5BDZp6QDHvXFCkibm1pR", "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "sourceId": "rh5BDZp6QDHvXFCkibm1pR", "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "sourceId": "rh5BDZp6QDHvXFCkibm1pR", "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "sourceId": "rh5BDZp6QDHvXFCkibm1pR", "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "sourceId": "rh5BDZp6QDHvXFCkibm1pR", "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "sourceId": "rh5BDZp6QDHvXFCkibm1pR", "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "sourceId": "rh5BDZp6QDHvXFCkibm1pR", "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" }
                  ],
                  "pagination": { "current": "MA==", "next": "MTA=", "totalEntries": 28 }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/GetDailyPerSourceAPICallsUsageBetaOutput" },
                "example": {
                  "dailyPerSourceAPICallsUsage": [
                    { "sourceId": "rh5BDZp6QDHvXFCkibm1pR", "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "sourceId": "rh5BDZp6QDHvXFCkibm1pR", "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "sourceId": "rh5BDZp6QDHvXFCkibm1pR", "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "sourceId": "rh5BDZp6QDHvXFCkibm1pR", "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "sourceId": "rh5BDZp6QDHvXFCkibm1pR", "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "sourceId": "rh5BDZp6QDHvXFCkibm1pR", "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "sourceId": "rh5BDZp6QDHvXFCkibm1pR", "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "sourceId": "rh5BDZp6QDHvXFCkibm1pR", "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "sourceId": "rh5BDZp6QDHvXFCkibm1pR", "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "sourceId": "rh5BDZp6QDHvXFCkibm1pR", "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" }
                  ],
                  "pagination": { "current": "MA==", "next": "MTA=", "totalEntries": 28 }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/GetDailyPerSourceAPICallsUsageV1Output" },
                "example": {
                  "dailyPerSourceAPICallsUsage": [
                    { "sourceId": "rh5BDZp6QDHvXFCkibm1pR", "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "sourceId": "rh5BDZp6QDHvXFCkibm1pR", "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "sourceId": "rh5BDZp6QDHvXFCkibm1pR", "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "sourceId": "rh5BDZp6QDHvXFCkibm1pR", "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "sourceId": "rh5BDZp6QDHvXFCkibm1pR", "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "sourceId": "rh5BDZp6QDHvXFCkibm1pR", "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "sourceId": "rh5BDZp6QDHvXFCkibm1pR", "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "sourceId": "rh5BDZp6QDHvXFCkibm1pR", "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "sourceId": "rh5BDZp6QDHvXFCkibm1pR", "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "sourceId": "rh5BDZp6QDHvXFCkibm1pR", "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" }
                  ],
                  "pagination": { "current": "MA==", "next": "MTA=", "totalEntries": 28 }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetDailyPerSourceAPICallsUsageV1Output" },
                "example": {
                  "dailyPerSourceAPICallsUsage": [
                    { "sourceId": "rh5BDZp6QDHvXFCkibm1pR", "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "sourceId": "rh5BDZp6QDHvXFCkibm1pR", "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "sourceId": "rh5BDZp6QDHvXFCkibm1pR", "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "sourceId": "rh5BDZp6QDHvXFCkibm1pR", "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "sourceId": "rh5BDZp6QDHvXFCkibm1pR", "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "sourceId": "rh5BDZp6QDHvXFCkibm1pR", "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "sourceId": "rh5BDZp6QDHvXFCkibm1pR", "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "sourceId": "rh5BDZp6QDHvXFCkibm1pR", "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "sourceId": "rh5BDZp6QDHvXFCkibm1pR", "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "sourceId": "rh5BDZp6QDHvXFCkibm1pR", "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" }
                  ],
                  "pagination": { "current": "MA==", "next": "MTA=", "totalEntries": 28 }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Usage", "API Calls"],
        "tags": ["API Calls"]
      }
    },
    "/usage/mtu/sources/daily": {
      "get": {
        "summary": "getDailyPerSourceMTUUsageV1",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "period",
            "description": "The start of the usage month, in the ISO-8601 format.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The start of the usage month, in the ISO-8601 format.",
              "type": "string",
              "title": "period"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Pagination input for per source MTU counts.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput",
              "description": "Pagination input for per source MTU counts.",
              "title": "pagination"
            }
          }
        ],
        "deprecated": false,
        "description": "Provides daily cumulative per-source MTU counts for a usage period",
        "operationId": "getDailyPerSourceMTUUsage",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/GetDailyPerSourceMTUUsageAlphaOutput" },
                "example": {
                  "dailyPerSourceMTUUsage": [
                    {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "3",
                      "anonymousIdentified": "7",
                      "identified": "33",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "7",
                      "anonymousIdentified": "13",
                      "identified": "67",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "10",
                      "anonymousIdentified": "20",
                      "identified": "100",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "13",
                      "anonymousIdentified": "27",
                      "identified": "133",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "17",
                      "anonymousIdentified": "33",
                      "identified": "167",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "20",
                      "anonymousIdentified": "40",
                      "identified": "200",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "23",
                      "anonymousIdentified": "47",
                      "identified": "233",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "27",
                      "anonymousIdentified": "53",
                      "identified": "267",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "30",
                      "anonymousIdentified": "60",
                      "identified": "300",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "33",
                      "anonymousIdentified": "67",
                      "identified": "333",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    }
                  ],
                  "pagination": { "current": "MA==", "next": "MTA=", "totalEntries": 28 }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/GetDailyPerSourceMTUUsageBetaOutput" },
                "example": {
                  "dailyPerSourceMTUUsage": [
                    {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "3",
                      "anonymousIdentified": "7",
                      "identified": "33",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "7",
                      "anonymousIdentified": "13",
                      "identified": "67",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "10",
                      "anonymousIdentified": "20",
                      "identified": "100",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "13",
                      "anonymousIdentified": "27",
                      "identified": "133",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "17",
                      "anonymousIdentified": "33",
                      "identified": "167",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "20",
                      "anonymousIdentified": "40",
                      "identified": "200",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "23",
                      "anonymousIdentified": "47",
                      "identified": "233",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "27",
                      "anonymousIdentified": "53",
                      "identified": "267",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "30",
                      "anonymousIdentified": "60",
                      "identified": "300",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "33",
                      "anonymousIdentified": "67",
                      "identified": "333",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    }
                  ],
                  "pagination": { "current": "MA==", "next": "MTA=", "totalEntries": 28 }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/GetDailyPerSourceMTUUsageV1Output" },
                "example": {
                  "dailyPerSourceMTUUsage": [
                    {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "3",
                      "anonymousIdentified": "7",
                      "identified": "33",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "7",
                      "anonymousIdentified": "13",
                      "identified": "67",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "10",
                      "anonymousIdentified": "20",
                      "identified": "100",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "13",
                      "anonymousIdentified": "27",
                      "identified": "133",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "17",
                      "anonymousIdentified": "33",
                      "identified": "167",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "20",
                      "anonymousIdentified": "40",
                      "identified": "200",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "23",
                      "anonymousIdentified": "47",
                      "identified": "233",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "27",
                      "anonymousIdentified": "53",
                      "identified": "267",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "30",
                      "anonymousIdentified": "60",
                      "identified": "300",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "33",
                      "anonymousIdentified": "67",
                      "identified": "333",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    }
                  ],
                  "pagination": { "current": "MA==", "next": "MTA=", "totalEntries": 28 }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetDailyPerSourceMTUUsageV1Output" },
                "example": {
                  "dailyPerSourceMTUUsage": [
                    {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "3",
                      "anonymousIdentified": "7",
                      "identified": "33",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "7",
                      "anonymousIdentified": "13",
                      "identified": "67",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "10",
                      "anonymousIdentified": "20",
                      "identified": "100",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "13",
                      "anonymousIdentified": "27",
                      "identified": "133",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "17",
                      "anonymousIdentified": "33",
                      "identified": "167",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "20",
                      "anonymousIdentified": "40",
                      "identified": "200",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "23",
                      "anonymousIdentified": "47",
                      "identified": "233",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "27",
                      "anonymousIdentified": "53",
                      "identified": "267",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "30",
                      "anonymousIdentified": "60",
                      "identified": "300",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "33",
                      "anonymousIdentified": "67",
                      "identified": "333",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    }
                  ],
                  "pagination": { "current": "MA==", "next": "MTA=", "totalEntries": 28 }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Usage", "Monthly Tracked Users"],
        "tags": ["Monthly Tracked Users"]
      }
    },
    "/usage/api-calls/daily": {
      "get": {
        "summary": "getDailyWorkspaceAPICallsUsageV1",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "period",
            "description": "The start of the usage month in the ISO-8601 format.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The start of the usage month in the ISO-8601 format.",
              "type": "string",
              "title": "period"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Pagination input for workspace API call counts.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput",
              "description": "Pagination input for workspace API call counts.",
              "title": "pagination"
            }
          }
        ],
        "deprecated": false,
        "description": "Provides daily cumulative API call counts for a usage period",
        "operationId": "getDailyWorkspaceAPICallsUsage",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/GetDailyWorkspaceAPICallsUsageAlphaOutput" },
                "example": {
                  "dailyWorkspaceAPICallsUsage": [
                    { "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" }
                  ],
                  "pagination": { "current": "MA==", "next": "MTA=", "totalEntries": 28 }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/GetDailyWorkspaceAPICallsUsageBetaOutput" },
                "example": {
                  "dailyWorkspaceAPICallsUsage": [
                    { "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" }
                  ],
                  "pagination": { "current": "MA==", "next": "MTA=", "totalEntries": 28 }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/GetDailyWorkspaceAPICallsUsageV1Output" },
                "example": {
                  "dailyWorkspaceAPICallsUsage": [
                    { "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" }
                  ],
                  "pagination": { "current": "MA==", "next": "MTA=", "totalEntries": 28 }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetDailyWorkspaceAPICallsUsageV1Output" },
                "example": {
                  "dailyWorkspaceAPICallsUsage": [
                    { "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" },
                    { "apiCalls": "0", "timestamp": "2006-01-02T15:04:05.000Z" }
                  ],
                  "pagination": { "current": "MA==", "next": "MTA=", "totalEntries": 28 }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Usage", "API Calls"],
        "tags": ["API Calls"]
      }
    },
    "/usage/mtu/daily": {
      "get": {
        "summary": "getDailyWorkspaceMTUUsageV1",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "period",
            "description": "The start of the usage month, in the ISO-8601 format.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The start of the usage month, in the ISO-8601 format.",
              "type": "string",
              "title": "period"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Pagination input for workspace MTU counts.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput",
              "description": "Pagination input for workspace MTU counts.",
              "title": "pagination"
            }
          }
        ],
        "deprecated": false,
        "description": "Provides daily cumulative MTU counts for a usage period",
        "operationId": "getDailyWorkspaceMTUUsage",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/GetDailyWorkspaceMTUUsageAlphaOutput" },
                "example": {
                  "dailyWorkspaceMTUUsage": [
                    {
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "3",
                      "anonymousIdentified": "7",
                      "identified": "33",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "7",
                      "anonymousIdentified": "13",
                      "identified": "67",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "10",
                      "anonymousIdentified": "20",
                      "identified": "100",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "13",
                      "anonymousIdentified": "27",
                      "identified": "133",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "17",
                      "anonymousIdentified": "33",
                      "identified": "167",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "20",
                      "anonymousIdentified": "40",
                      "identified": "200",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "23",
                      "anonymousIdentified": "47",
                      "identified": "233",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "27",
                      "anonymousIdentified": "53",
                      "identified": "267",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "30",
                      "anonymousIdentified": "60",
                      "identified": "300",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "33",
                      "anonymousIdentified": "67",
                      "identified": "333",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    }
                  ],
                  "pagination": { "current": "MA==", "next": "MTA=", "totalEntries": 28 }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/GetDailyWorkspaceMTUUsageBetaOutput" },
                "example": {
                  "dailyWorkspaceMTUUsage": [
                    {
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "3",
                      "anonymousIdentified": "7",
                      "identified": "33",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "7",
                      "anonymousIdentified": "13",
                      "identified": "67",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "10",
                      "anonymousIdentified": "20",
                      "identified": "100",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "13",
                      "anonymousIdentified": "27",
                      "identified": "133",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "17",
                      "anonymousIdentified": "33",
                      "identified": "167",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "20",
                      "anonymousIdentified": "40",
                      "identified": "200",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "23",
                      "anonymousIdentified": "47",
                      "identified": "233",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "27",
                      "anonymousIdentified": "53",
                      "identified": "267",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "30",
                      "anonymousIdentified": "60",
                      "identified": "300",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "33",
                      "anonymousIdentified": "67",
                      "identified": "333",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    }
                  ],
                  "pagination": { "current": "MA==", "next": "MTA=", "totalEntries": 28 }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/GetDailyWorkspaceMTUUsageV1Output" },
                "example": {
                  "dailyWorkspaceMTUUsage": [
                    {
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "3",
                      "anonymousIdentified": "7",
                      "identified": "33",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "7",
                      "anonymousIdentified": "13",
                      "identified": "67",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "10",
                      "anonymousIdentified": "20",
                      "identified": "100",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "13",
                      "anonymousIdentified": "27",
                      "identified": "133",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "17",
                      "anonymousIdentified": "33",
                      "identified": "167",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "20",
                      "anonymousIdentified": "40",
                      "identified": "200",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "23",
                      "anonymousIdentified": "47",
                      "identified": "233",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "27",
                      "anonymousIdentified": "53",
                      "identified": "267",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "30",
                      "anonymousIdentified": "60",
                      "identified": "300",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "33",
                      "anonymousIdentified": "67",
                      "identified": "333",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    }
                  ],
                  "pagination": { "current": "MA==", "next": "MTA=", "totalEntries": 28 }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetDailyWorkspaceMTUUsageV1Output" },
                "example": {
                  "dailyWorkspaceMTUUsage": [
                    {
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "3",
                      "anonymousIdentified": "7",
                      "identified": "33",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "7",
                      "anonymousIdentified": "13",
                      "identified": "67",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "10",
                      "anonymousIdentified": "20",
                      "identified": "100",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "13",
                      "anonymousIdentified": "27",
                      "identified": "133",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "17",
                      "anonymousIdentified": "33",
                      "identified": "167",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "20",
                      "anonymousIdentified": "40",
                      "identified": "200",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "23",
                      "anonymousIdentified": "47",
                      "identified": "233",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "27",
                      "anonymousIdentified": "53",
                      "identified": "267",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "30",
                      "anonymousIdentified": "60",
                      "identified": "300",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    },
                    {
                      "periodStart": 1612137600,
                      "periodEnd": 1614556800,
                      "anonymous": "33",
                      "anonymousIdentified": "67",
                      "identified": "333",
                      "neverIdentified": "0",
                      "timestamp": "2006-01-02T15:04:05.000Z"
                    }
                  ],
                  "pagination": { "current": "MA==", "next": "MTA=", "totalEntries": 28 }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Usage", "Monthly Tracked Users"],
        "tags": ["Monthly Tracked Users"]
      }
    },
    "/catalog/destinations/{destinationMetadataId}": {
      "get": {
        "summary": "getDestinationMetadataV1",
        "parameters": [
          {
            "in": "path",
            "name": "destinationMetadataId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          },
          {
            "in": "query",
            "required": false,
            "name": "destinationMetadataId",
            "description": "The id of the destination catalog item to load.\n\nConfig API note: analogous to `name`.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The id of the destination catalog item to load.\n\nConfig API note: analogous to `name`.",
              "type": "string",
              "title": "destinationMetadataId"
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a Destination Catalog item by its ID",
        "operationId": "getDestinationMetadata",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/GetDestinationMetadataAlphaOutput" },
                "example": {
                  "destinationMetadata": {
                    "id": "54521fd525e721e32a72ee91",
                    "name": "Amplitude",
                    "description": "Amplitude is an event tracking and segmentation platform for your web and mobile apps. By analyzing the actions your users perform, you can gain a better understanding to drive retention, engagement, and conversion.",
                    "slug": "amplitude",
                    "logos": {
                      "default": "https://d3hotuclm6if1r.cloudfront.net/logos/amplitude-default.svg",
                      "mark": "https://cdn.filepicker.io/api/file/Nmj7LgOQR62rdAmlbnLO"
                    },
                    "options": [
                      {
                        "name": "apiKey",
                        "type": "string",
                        "defaultValue": "",
                        "description": "You can find your API Key on your Amplitude [Settings page](https://amplitude.com/settings).",
                        "required": true,
                        "label": "API Key"
                      },
                      {
                        "name": "appendFieldsToEventProps",
                        "type": "text-map",
                        "defaultValue": {},
                        "description": "Web Device-mode only. Configure event fields to be appended to `event_props` for all track calls. For example, entering `context.page.title` on the left and `pageTitle` on the right will set the value of `context.page.title` at `event_properties.pageTitle`.",
                        "required": false,
                        "label": "Append Fields To Event Properties"
                      },
                      {
                        "name": "batchEvents",
                        "type": "boolean",
                        "defaultValue": false,
                        "description": "If true, events are batched together and uploaded only when the number of unsent events is greater than or equal to `eventUploadThreshold` or after `eventUploadPeriodMillis` milliseconds have passed since the first unsent event was logged.",
                        "required": false,
                        "label": "Batch Events"
                      },
                      {
                        "name": "deviceIdFromUrlParam",
                        "type": "boolean",
                        "defaultValue": false,
                        "description": "If true, the SDK will parse device ID values from url parameter `amp_device_id` if available.",
                        "required": false,
                        "label": "Set Device ID From URL Parameter amp_device_id"
                      },
                      {
                        "name": "enableLocationListening",
                        "type": "boolean",
                        "defaultValue": true,
                        "description": "Mobile Only. If a user has granted your app location permissions, enable this setting so that the SDK will also grab the location of the user. Amplitude will never prompt the user for location permission, so this must be done by your app. ",
                        "required": false,
                        "label": "Enable Location Listening"
                      }
                    ],
                    "status": "PUBLIC",
                    "categories": ["Analytics"],
                    "website": "http://amplitude.com",
                    "components": [
                      {
                        "code": "https://github.com/segmentio/analytics.js-integrations/tree/master/integrations/amplitude",
                        "owner": "SEGMENT",
                        "type": "BROWSER"
                      },
                      {
                        "code": "https://github.com/segment-integrations/analytics-ios-integration-amplitude",
                        "owner": "SEGMENT",
                        "type": "IOS"
                      },
                      {
                        "code": "https://github.com/segment-integrations/analytics-android-integration-amplitude",
                        "owner": "SEGMENT",
                        "type": "ANDROID"
                      },
                      {
                        "code": "https://github.com/segmentio/integrations/tree/master/integrations/amplitude",
                        "owner": "SEGMENT",
                        "type": "SERVER"
                      }
                    ],
                    "previousNames": ["Amplitude"],
                    "supportedMethods": {
                      "track": true,
                      "pageview": true,
                      "identify": true,
                      "group": true,
                      "alias": false
                    },
                    "supportedPlatforms": { "browser": true, "mobile": true, "server": true },
                    "supportedFeatures": {
                      "cloudModeInstances": "0",
                      "deviceModeInstances": "0",
                      "replay": false,
                      "browserUnbundling": true,
                      "browserUnbundlingPublic": true
                    },
                    "actions": [],
                    "presets": []
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/GetDestinationMetadataBetaOutput" },
                "example": {
                  "destinationMetadata": {
                    "id": "54521fd525e721e32a72ee91",
                    "name": "Amplitude",
                    "description": "Amplitude is an event tracking and segmentation platform for your web and mobile apps. By analyzing the actions your users perform, you can gain a better understanding to drive retention, engagement, and conversion.",
                    "slug": "amplitude",
                    "logos": {
                      "default": "https://d3hotuclm6if1r.cloudfront.net/logos/amplitude-default.svg",
                      "mark": "https://cdn.filepicker.io/api/file/Nmj7LgOQR62rdAmlbnLO"
                    },
                    "options": [
                      {
                        "name": "apiKey",
                        "type": "string",
                        "defaultValue": "",
                        "description": "You can find your API Key on your Amplitude [Settings page](https://amplitude.com/settings).",
                        "required": true,
                        "label": "API Key"
                      },
                      {
                        "name": "appendFieldsToEventProps",
                        "type": "text-map",
                        "defaultValue": {},
                        "description": "Web Device-mode only. Configure event fields to be appended to `event_props` for all track calls. For example, entering `context.page.title` on the left and `pageTitle` on the right will set the value of `context.page.title` at `event_properties.pageTitle`.",
                        "required": false,
                        "label": "Append Fields To Event Properties"
                      },
                      {
                        "name": "batchEvents",
                        "type": "boolean",
                        "defaultValue": false,
                        "description": "If true, events are batched together and uploaded only when the number of unsent events is greater than or equal to `eventUploadThreshold` or after `eventUploadPeriodMillis` milliseconds have passed since the first unsent event was logged.",
                        "required": false,
                        "label": "Batch Events"
                      },
                      {
                        "name": "deviceIdFromUrlParam",
                        "type": "boolean",
                        "defaultValue": false,
                        "description": "If true, the SDK will parse device ID values from url parameter `amp_device_id` if available.",
                        "required": false,
                        "label": "Set Device ID From URL Parameter amp_device_id"
                      },
                      {
                        "name": "enableLocationListening",
                        "type": "boolean",
                        "defaultValue": true,
                        "description": "Mobile Only. If a user has granted your app location permissions, enable this setting so that the SDK will also grab the location of the user. Amplitude will never prompt the user for location permission, so this must be done by your app. ",
                        "required": false,
                        "label": "Enable Location Listening"
                      }
                    ],
                    "status": "PUBLIC",
                    "categories": ["Analytics"],
                    "website": "http://amplitude.com",
                    "components": [
                      {
                        "code": "https://github.com/segmentio/analytics.js-integrations/tree/master/integrations/amplitude",
                        "owner": "SEGMENT",
                        "type": "BROWSER"
                      },
                      {
                        "code": "https://github.com/segment-integrations/analytics-ios-integration-amplitude",
                        "owner": "SEGMENT",
                        "type": "IOS"
                      },
                      {
                        "code": "https://github.com/segment-integrations/analytics-android-integration-amplitude",
                        "owner": "SEGMENT",
                        "type": "ANDROID"
                      },
                      {
                        "code": "https://github.com/segmentio/integrations/tree/master/integrations/amplitude",
                        "owner": "SEGMENT",
                        "type": "SERVER"
                      }
                    ],
                    "previousNames": ["Amplitude"],
                    "supportedMethods": {
                      "track": true,
                      "pageview": true,
                      "identify": true,
                      "group": true,
                      "alias": false
                    },
                    "supportedPlatforms": { "browser": true, "mobile": true, "server": true },
                    "supportedFeatures": {
                      "cloudModeInstances": "0",
                      "deviceModeInstances": "0",
                      "replay": false,
                      "browserUnbundling": true,
                      "browserUnbundlingPublic": true
                    },
                    "actions": [],
                    "presets": []
                  }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/GetDestinationMetadataV1Output" },
                "example": {
                  "destinationMetadata": {
                    "id": "54521fd525e721e32a72ee91",
                    "name": "Amplitude",
                    "description": "Amplitude is an event tracking and segmentation platform for your web and mobile apps. By analyzing the actions your users perform, you can gain a better understanding to drive retention, engagement, and conversion.",
                    "slug": "amplitude",
                    "logos": {
                      "default": "https://d3hotuclm6if1r.cloudfront.net/logos/amplitude-default.svg",
                      "mark": "https://cdn.filepicker.io/api/file/Nmj7LgOQR62rdAmlbnLO"
                    },
                    "options": [
                      {
                        "name": "apiKey",
                        "type": "string",
                        "defaultValue": "",
                        "description": "You can find your API Key on your Amplitude [Settings page](https://amplitude.com/settings).",
                        "required": true,
                        "label": "API Key"
                      },
                      {
                        "name": "appendFieldsToEventProps",
                        "type": "text-map",
                        "defaultValue": {},
                        "description": "Web Device-mode only. Configure event fields to be appended to `event_props` for all track calls. For example, entering `context.page.title` on the left and `pageTitle` on the right will set the value of `context.page.title` at `event_properties.pageTitle`.",
                        "required": false,
                        "label": "Append Fields To Event Properties"
                      },
                      {
                        "name": "batchEvents",
                        "type": "boolean",
                        "defaultValue": false,
                        "description": "If true, events are batched together and uploaded only when the number of unsent events is greater than or equal to `eventUploadThreshold` or after `eventUploadPeriodMillis` milliseconds have passed since the first unsent event was logged.",
                        "required": false,
                        "label": "Batch Events"
                      },
                      {
                        "name": "deviceIdFromUrlParam",
                        "type": "boolean",
                        "defaultValue": false,
                        "description": "If true, the SDK will parse device ID values from url parameter `amp_device_id` if available.",
                        "required": false,
                        "label": "Set Device ID From URL Parameter amp_device_id"
                      },
                      {
                        "name": "enableLocationListening",
                        "type": "boolean",
                        "defaultValue": true,
                        "description": "Mobile Only. If a user has granted your app location permissions, enable this setting so that the SDK will also grab the location of the user. Amplitude will never prompt the user for location permission, so this must be done by your app. ",
                        "required": false,
                        "label": "Enable Location Listening"
                      }
                    ],
                    "status": "PUBLIC",
                    "categories": ["Analytics"],
                    "website": "http://amplitude.com",
                    "components": [
                      {
                        "code": "https://github.com/segmentio/analytics.js-integrations/tree/master/integrations/amplitude",
                        "owner": "SEGMENT",
                        "type": "BROWSER"
                      },
                      {
                        "code": "https://github.com/segment-integrations/analytics-ios-integration-amplitude",
                        "owner": "SEGMENT",
                        "type": "IOS"
                      },
                      {
                        "code": "https://github.com/segment-integrations/analytics-android-integration-amplitude",
                        "owner": "SEGMENT",
                        "type": "ANDROID"
                      },
                      {
                        "code": "https://github.com/segmentio/integrations/tree/master/integrations/amplitude",
                        "owner": "SEGMENT",
                        "type": "SERVER"
                      }
                    ],
                    "previousNames": ["Amplitude"],
                    "supportedMethods": {
                      "track": true,
                      "pageview": true,
                      "identify": true,
                      "group": true,
                      "alias": false
                    },
                    "supportedPlatforms": { "browser": true, "mobile": true, "server": true },
                    "supportedFeatures": {
                      "cloudModeInstances": "0",
                      "deviceModeInstances": "0",
                      "replay": false,
                      "browserUnbundling": true,
                      "browserUnbundlingPublic": true
                    },
                    "actions": [],
                    "presets": []
                  }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetDestinationMetadataV1Output" },
                "example": {
                  "destinationMetadata": {
                    "id": "54521fd525e721e32a72ee91",
                    "name": "Amplitude",
                    "description": "Amplitude is an event tracking and segmentation platform for your web and mobile apps. By analyzing the actions your users perform, you can gain a better understanding to drive retention, engagement, and conversion.",
                    "slug": "amplitude",
                    "logos": {
                      "default": "https://d3hotuclm6if1r.cloudfront.net/logos/amplitude-default.svg",
                      "mark": "https://cdn.filepicker.io/api/file/Nmj7LgOQR62rdAmlbnLO"
                    },
                    "options": [
                      {
                        "name": "apiKey",
                        "type": "string",
                        "defaultValue": "",
                        "description": "You can find your API Key on your Amplitude [Settings page](https://amplitude.com/settings).",
                        "required": true,
                        "label": "API Key"
                      },
                      {
                        "name": "appendFieldsToEventProps",
                        "type": "text-map",
                        "defaultValue": {},
                        "description": "Web Device-mode only. Configure event fields to be appended to `event_props` for all track calls. For example, entering `context.page.title` on the left and `pageTitle` on the right will set the value of `context.page.title` at `event_properties.pageTitle`.",
                        "required": false,
                        "label": "Append Fields To Event Properties"
                      },
                      {
                        "name": "batchEvents",
                        "type": "boolean",
                        "defaultValue": false,
                        "description": "If true, events are batched together and uploaded only when the number of unsent events is greater than or equal to `eventUploadThreshold` or after `eventUploadPeriodMillis` milliseconds have passed since the first unsent event was logged.",
                        "required": false,
                        "label": "Batch Events"
                      },
                      {
                        "name": "deviceIdFromUrlParam",
                        "type": "boolean",
                        "defaultValue": false,
                        "description": "If true, the SDK will parse device ID values from url parameter `amp_device_id` if available.",
                        "required": false,
                        "label": "Set Device ID From URL Parameter amp_device_id"
                      },
                      {
                        "name": "enableLocationListening",
                        "type": "boolean",
                        "defaultValue": true,
                        "description": "Mobile Only. If a user has granted your app location permissions, enable this setting so that the SDK will also grab the location of the user. Amplitude will never prompt the user for location permission, so this must be done by your app. ",
                        "required": false,
                        "label": "Enable Location Listening"
                      }
                    ],
                    "status": "PUBLIC",
                    "categories": ["Analytics"],
                    "website": "http://amplitude.com",
                    "components": [
                      {
                        "code": "https://github.com/segmentio/analytics.js-integrations/tree/master/integrations/amplitude",
                        "owner": "SEGMENT",
                        "type": "BROWSER"
                      },
                      {
                        "code": "https://github.com/segment-integrations/analytics-ios-integration-amplitude",
                        "owner": "SEGMENT",
                        "type": "IOS"
                      },
                      {
                        "code": "https://github.com/segment-integrations/analytics-android-integration-amplitude",
                        "owner": "SEGMENT",
                        "type": "ANDROID"
                      },
                      {
                        "code": "https://github.com/segmentio/integrations/tree/master/integrations/amplitude",
                        "owner": "SEGMENT",
                        "type": "SERVER"
                      }
                    ],
                    "previousNames": ["Amplitude"],
                    "supportedMethods": {
                      "track": true,
                      "pageview": true,
                      "identify": true,
                      "group": true,
                      "alias": false
                    },
                    "supportedPlatforms": { "browser": true, "mobile": true, "server": true },
                    "supportedFeatures": {
                      "cloudModeInstances": "0",
                      "deviceModeInstances": "0",
                      "replay": false,
                      "browserUnbundling": true,
                      "browserUnbundlingPublic": true
                    },
                    "actions": [],
                    "presets": []
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Catalog"],
        "tags": ["Catalog"]
      }
    },
    "/catalog/destinations": {
      "get": {
        "summary": "getDestinationsCatalogV1",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Required pagination parameters used to filter the destinations catalog.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput",
              "description": "Required pagination parameters used to filter the destinations catalog.",
              "title": "pagination"
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a list of all available Destinations in the Segment Catalog",
        "operationId": "getDestinationsCatalog",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/GetDestinationsCatalogAlphaOutput" },
                "example": {
                  "destinationsCatalog": [
                    {
                      "id": "54521fd525e721e32a72ee8e",
                      "name": "AdRoll",
                      "description": "AdRoll is a retargeting network that allows you to show ads to visitors who've landed on your site while browsing the web. ",
                      "slug": "adroll",
                      "logos": {
                        "default": "https://d3hotuclm6if1r.cloudfront.net/logos/adroll-default.svg",
                        "mark": "https://cdn.filepicker.io/api/file/IKo2fU59RROBsNtj4lHs"
                      },
                      "options": [
                        {
                          "name": "_version",
                          "type": "number",
                          "defaultValue": 2,
                          "description": "",
                          "required": false,
                          "label": "_version"
                        },
                        {
                          "name": "advId",
                          "type": "string",
                          "defaultValue": "",
                          "description": "You can find your Advertiser ID in your AdRoll dashboard by clicking the **green or red dot** in the lower-left corner. In the Javascript snippet, the Advertiser ID appears as `adroll_avd_id = 'XXXXXXX'` on line 2. It should be 22 characters long and look something like this: `WYJD6WNIAJC2XG6PT7UK4B`.",
                          "required": true,
                          "label": "Advertiser ID"
                        },
                        {
                          "name": "events",
                          "type": "text-map",
                          "defaultValue": {},
                          "description": "AdRoll allows you to create a Segment Name and ID for conversions events. Use this mapping to trigger the *AdRoll Segment ID* (on the right) when the Event Name (on the left) is passed in a Track method.",
                          "required": false,
                          "label": "Events"
                        },
                        {
                          "name": "pixId",
                          "type": "string",
                          "defaultValue": "",
                          "description": "You can find your Pixel ID in your AdRoll dashboard by clicking the **green or red dot** in the lower-left corner. In the Javascript snippet, the Pixel ID appears as `adroll_pix_id = 'XXXXXXX'` on line 3. It should be 22 characters long, and look something like this: `6UUA5LKILFESVE44XH6SVX`.",
                          "required": true,
                          "label": "Pixel ID"
                        }
                      ],
                      "status": "PUBLIC",
                      "categories": ["Advertising"],
                      "website": "http://adroll.com",
                      "components": [
                        {
                          "code": "https://github.com/segment-integrations/analytics.js-integration-adroll",
                          "type": "BROWSER"
                        }
                      ],
                      "previousNames": ["AdRoll"],
                      "supportedMethods": {
                        "track": true,
                        "pageview": true,
                        "identify": true,
                        "group": false,
                        "alias": false
                      },
                      "supportedPlatforms": { "browser": true, "mobile": false, "server": false },
                      "supportedFeatures": {
                        "cloudModeInstances": "0",
                        "deviceModeInstances": "0",
                        "replay": false,
                        "browserUnbundling": false,
                        "browserUnbundlingPublic": true
                      },
                      "actions": [],
                      "presets": []
                    },
                    {
                      "id": "54521fd525e721e32a72ee8f",
                      "name": "AppsFlyer",
                      "description": "Mobile app measurement and tracking.",
                      "slug": "appsflyer",
                      "logos": {
                        "default": "https://d3hotuclm6if1r.cloudfront.net/logos/appsflyer-default.svg",
                        "mark": "https://cdn.filepicker.io/api/file/AnJUEBvxRouLLOvIeQuK"
                      },
                      "options": [
                        {
                          "name": "androidAppID",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Your Android App's ID. Find this in your AppsFlyer's 'My App' dashboard. It should look something like 'com.appsflyer.myapp'. This is required for Android projects if you want to send events using the server side integration.",
                          "required": true,
                          "label": "Android App ID"
                        },
                        {
                          "name": "appleAppID",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Your App's ID, which is accessible from iTunes or in AppsFlyer's 'My App' dashboard. This is optional for Android projects, and only required for iOS projects.",
                          "required": true,
                          "label": "Apple App ID (iOS)"
                        },
                        {
                          "name": "appsFlyerDevKey",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Your unique developer ID from AppsFlyer, which is accessible from your AppsFlyer account.",
                          "required": true,
                          "label": "AppsFlyer Dev Key"
                        },
                        {
                          "name": "canOmitAppsFlyerId",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "*Only applicable for Appsflyer's Business Tiers customers using server-side or cloud mode destination.* Please contact your AppsFlyer representative for more information. This setting allows to use the advertising ID as appsflyer ID.",
                          "required": false,
                          "label": "Can Omit AppsFlyerId"
                        },
                        {
                          "name": "fallbackToIdfv",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "With the update to use analytics-ios v4.x SDK if adTrackingEnabled is set to false, the advertisingId key will be deleted from the event. If you have the setting enabled \"Can Omit AppsFlyerId\", these events will fail when sent to AppsFlyer API. To prevent these event failures in this scenario enable this send the IDFV instead. When the \"Can Omit AppsFlyerId\" setting is enabled if the IDFA is zeroed out, we will also send an IDFV when this setting is enabled. ",
                          "required": false,
                          "label": "Fallback to send IDFV when advertisingId key not present (Server-Side Only)"
                        }
                      ],
                      "status": "PUBLIC",
                      "categories": ["Attribution", "Deep Linking"],
                      "website": "http://www.appsflyer.com/",
                      "components": [
                        {
                          "code": "https://github.com/AppsFlyerSDK/segment-appsflyer-ios",
                          "owner": "PARTNER",
                          "type": "IOS"
                        },
                        {
                          "code": "https://github.com/AppsFlyerSDK/AppsFlyer-Segment-Integration",
                          "owner": "PARTNER",
                          "type": "ANDROID"
                        },
                        {
                          "code": "https://github.com/segmentio/integrations/tree/master/integrations/appsflyer",
                          "owner": "SEGMENT",
                          "type": "SERVER"
                        }
                      ],
                      "previousNames": ["AppsFlyer"],
                      "supportedMethods": {
                        "track": true,
                        "pageview": true,
                        "identify": true,
                        "group": true,
                        "alias": true
                      },
                      "supportedPlatforms": { "browser": false, "mobile": true, "server": true },
                      "supportedFeatures": {
                        "cloudModeInstances": "0",
                        "deviceModeInstances": "0",
                        "replay": false,
                        "browserUnbundling": false,
                        "browserUnbundlingPublic": true
                      },
                      "actions": [],
                      "presets": []
                    }
                  ],
                  "pagination": { "current": "MA==", "next": "Mg==", "totalEntries": 348 }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/GetDestinationsCatalogBetaOutput" },
                "example": {
                  "destinationsCatalog": [
                    {
                      "id": "54521fd525e721e32a72ee8e",
                      "name": "AdRoll",
                      "description": "AdRoll is a retargeting network that allows you to show ads to visitors who've landed on your site while browsing the web. ",
                      "slug": "adroll",
                      "logos": {
                        "default": "https://d3hotuclm6if1r.cloudfront.net/logos/adroll-default.svg",
                        "mark": "https://cdn.filepicker.io/api/file/IKo2fU59RROBsNtj4lHs"
                      },
                      "options": [
                        {
                          "name": "_version",
                          "type": "number",
                          "defaultValue": 2,
                          "description": "",
                          "required": false,
                          "label": "_version"
                        },
                        {
                          "name": "advId",
                          "type": "string",
                          "defaultValue": "",
                          "description": "You can find your Advertiser ID in your AdRoll dashboard by clicking the **green or red dot** in the lower-left corner. In the Javascript snippet, the Advertiser ID appears as `adroll_avd_id = 'XXXXXXX'` on line 2. It should be 22 characters long and look something like this: `WYJD6WNIAJC2XG6PT7UK4B`.",
                          "required": true,
                          "label": "Advertiser ID"
                        },
                        {
                          "name": "events",
                          "type": "text-map",
                          "defaultValue": {},
                          "description": "AdRoll allows you to create a Segment Name and ID for conversions events. Use this mapping to trigger the *AdRoll Segment ID* (on the right) when the Event Name (on the left) is passed in a Track method.",
                          "required": false,
                          "label": "Events"
                        },
                        {
                          "name": "pixId",
                          "type": "string",
                          "defaultValue": "",
                          "description": "You can find your Pixel ID in your AdRoll dashboard by clicking the **green or red dot** in the lower-left corner. In the Javascript snippet, the Pixel ID appears as `adroll_pix_id = 'XXXXXXX'` on line 3. It should be 22 characters long, and look something like this: `6UUA5LKILFESVE44XH6SVX`.",
                          "required": true,
                          "label": "Pixel ID"
                        }
                      ],
                      "status": "PUBLIC",
                      "categories": ["Advertising"],
                      "website": "http://adroll.com",
                      "components": [
                        {
                          "code": "https://github.com/segment-integrations/analytics.js-integration-adroll",
                          "type": "BROWSER"
                        }
                      ],
                      "previousNames": ["AdRoll"],
                      "supportedMethods": {
                        "track": true,
                        "pageview": true,
                        "identify": true,
                        "group": false,
                        "alias": false
                      },
                      "supportedPlatforms": { "browser": true, "mobile": false, "server": false },
                      "supportedFeatures": {
                        "cloudModeInstances": "0",
                        "deviceModeInstances": "0",
                        "replay": false,
                        "browserUnbundling": false,
                        "browserUnbundlingPublic": true
                      },
                      "actions": [],
                      "presets": []
                    },
                    {
                      "id": "54521fd525e721e32a72ee8f",
                      "name": "AppsFlyer",
                      "description": "Mobile app measurement and tracking.",
                      "slug": "appsflyer",
                      "logos": {
                        "default": "https://d3hotuclm6if1r.cloudfront.net/logos/appsflyer-default.svg",
                        "mark": "https://cdn.filepicker.io/api/file/AnJUEBvxRouLLOvIeQuK"
                      },
                      "options": [
                        {
                          "name": "androidAppID",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Your Android App's ID. Find this in your AppsFlyer's 'My App' dashboard. It should look something like 'com.appsflyer.myapp'. This is required for Android projects if you want to send events using the server side integration.",
                          "required": true,
                          "label": "Android App ID"
                        },
                        {
                          "name": "appleAppID",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Your App's ID, which is accessible from iTunes or in AppsFlyer's 'My App' dashboard. This is optional for Android projects, and only required for iOS projects.",
                          "required": true,
                          "label": "Apple App ID (iOS)"
                        },
                        {
                          "name": "appsFlyerDevKey",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Your unique developer ID from AppsFlyer, which is accessible from your AppsFlyer account.",
                          "required": true,
                          "label": "AppsFlyer Dev Key"
                        },
                        {
                          "name": "canOmitAppsFlyerId",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "*Only applicable for Appsflyer's Business Tiers customers using server-side or cloud mode destination.* Please contact your AppsFlyer representative for more information. This setting allows to use the advertising ID as appsflyer ID.",
                          "required": false,
                          "label": "Can Omit AppsFlyerId"
                        },
                        {
                          "name": "fallbackToIdfv",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "With the update to use analytics-ios v4.x SDK if adTrackingEnabled is set to false, the advertisingId key will be deleted from the event. If you have the setting enabled \"Can Omit AppsFlyerId\", these events will fail when sent to AppsFlyer API. To prevent these event failures in this scenario enable this send the IDFV instead. When the \"Can Omit AppsFlyerId\" setting is enabled if the IDFA is zeroed out, we will also send an IDFV when this setting is enabled. ",
                          "required": false,
                          "label": "Fallback to send IDFV when advertisingId key not present (Server-Side Only)"
                        }
                      ],
                      "status": "PUBLIC",
                      "categories": ["Attribution", "Deep Linking"],
                      "website": "http://www.appsflyer.com/",
                      "components": [
                        {
                          "code": "https://github.com/AppsFlyerSDK/segment-appsflyer-ios",
                          "owner": "PARTNER",
                          "type": "IOS"
                        },
                        {
                          "code": "https://github.com/AppsFlyerSDK/AppsFlyer-Segment-Integration",
                          "owner": "PARTNER",
                          "type": "ANDROID"
                        },
                        {
                          "code": "https://github.com/segmentio/integrations/tree/master/integrations/appsflyer",
                          "owner": "SEGMENT",
                          "type": "SERVER"
                        }
                      ],
                      "previousNames": ["AppsFlyer"],
                      "supportedMethods": {
                        "track": true,
                        "pageview": true,
                        "identify": true,
                        "group": true,
                        "alias": true
                      },
                      "supportedPlatforms": { "browser": false, "mobile": true, "server": true },
                      "supportedFeatures": {
                        "cloudModeInstances": "0",
                        "deviceModeInstances": "0",
                        "replay": false,
                        "browserUnbundling": false,
                        "browserUnbundlingPublic": true
                      },
                      "actions": [],
                      "presets": []
                    }
                  ],
                  "pagination": { "current": "MA==", "next": "Mg==", "totalEntries": 348 }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/GetDestinationsCatalogV1Output" },
                "example": {
                  "destinationsCatalog": [
                    {
                      "id": "54521fd525e721e32a72ee8e",
                      "name": "AdRoll",
                      "description": "AdRoll is a retargeting network that allows you to show ads to visitors who've landed on your site while browsing the web. ",
                      "slug": "adroll",
                      "logos": {
                        "default": "https://d3hotuclm6if1r.cloudfront.net/logos/adroll-default.svg",
                        "mark": "https://cdn.filepicker.io/api/file/IKo2fU59RROBsNtj4lHs"
                      },
                      "options": [
                        {
                          "name": "_version",
                          "type": "number",
                          "defaultValue": 2,
                          "description": "",
                          "required": false,
                          "label": "_version"
                        },
                        {
                          "name": "advId",
                          "type": "string",
                          "defaultValue": "",
                          "description": "You can find your Advertiser ID in your AdRoll dashboard by clicking the **green or red dot** in the lower-left corner. In the Javascript snippet, the Advertiser ID appears as `adroll_avd_id = 'XXXXXXX'` on line 2. It should be 22 characters long and look something like this: `WYJD6WNIAJC2XG6PT7UK4B`.",
                          "required": true,
                          "label": "Advertiser ID"
                        },
                        {
                          "name": "events",
                          "type": "text-map",
                          "defaultValue": {},
                          "description": "AdRoll allows you to create a Segment Name and ID for conversions events. Use this mapping to trigger the *AdRoll Segment ID* (on the right) when the Event Name (on the left) is passed in a Track method.",
                          "required": false,
                          "label": "Events"
                        },
                        {
                          "name": "pixId",
                          "type": "string",
                          "defaultValue": "",
                          "description": "You can find your Pixel ID in your AdRoll dashboard by clicking the **green or red dot** in the lower-left corner. In the Javascript snippet, the Pixel ID appears as `adroll_pix_id = 'XXXXXXX'` on line 3. It should be 22 characters long, and look something like this: `6UUA5LKILFESVE44XH6SVX`.",
                          "required": true,
                          "label": "Pixel ID"
                        }
                      ],
                      "status": "PUBLIC",
                      "categories": ["Advertising"],
                      "website": "http://adroll.com",
                      "components": [
                        {
                          "code": "https://github.com/segment-integrations/analytics.js-integration-adroll",
                          "type": "BROWSER"
                        }
                      ],
                      "previousNames": ["AdRoll"],
                      "supportedMethods": {
                        "track": true,
                        "pageview": true,
                        "identify": true,
                        "group": false,
                        "alias": false
                      },
                      "supportedPlatforms": { "browser": true, "mobile": false, "server": false },
                      "supportedFeatures": {
                        "cloudModeInstances": "0",
                        "deviceModeInstances": "0",
                        "replay": false,
                        "browserUnbundling": false,
                        "browserUnbundlingPublic": true
                      },
                      "actions": [],
                      "presets": []
                    },
                    {
                      "id": "54521fd525e721e32a72ee8f",
                      "name": "AppsFlyer",
                      "description": "Mobile app measurement and tracking.",
                      "slug": "appsflyer",
                      "logos": {
                        "default": "https://d3hotuclm6if1r.cloudfront.net/logos/appsflyer-default.svg",
                        "mark": "https://cdn.filepicker.io/api/file/AnJUEBvxRouLLOvIeQuK"
                      },
                      "options": [
                        {
                          "name": "androidAppID",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Your Android App's ID. Find this in your AppsFlyer's 'My App' dashboard. It should look something like 'com.appsflyer.myapp'. This is required for Android projects if you want to send events using the server side integration.",
                          "required": true,
                          "label": "Android App ID"
                        },
                        {
                          "name": "appleAppID",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Your App's ID, which is accessible from iTunes or in AppsFlyer's 'My App' dashboard. This is optional for Android projects, and only required for iOS projects.",
                          "required": true,
                          "label": "Apple App ID (iOS)"
                        },
                        {
                          "name": "appsFlyerDevKey",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Your unique developer ID from AppsFlyer, which is accessible from your AppsFlyer account.",
                          "required": true,
                          "label": "AppsFlyer Dev Key"
                        },
                        {
                          "name": "canOmitAppsFlyerId",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "*Only applicable for Appsflyer's Business Tiers customers using server-side or cloud mode destination.* Please contact your AppsFlyer representative for more information. This setting allows to use the advertising ID as appsflyer ID.",
                          "required": false,
                          "label": "Can Omit AppsFlyerId"
                        },
                        {
                          "name": "fallbackToIdfv",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "With the update to use analytics-ios v4.x SDK if adTrackingEnabled is set to false, the advertisingId key will be deleted from the event. If you have the setting enabled \"Can Omit AppsFlyerId\", these events will fail when sent to AppsFlyer API. To prevent these event failures in this scenario enable this send the IDFV instead. When the \"Can Omit AppsFlyerId\" setting is enabled if the IDFA is zeroed out, we will also send an IDFV when this setting is enabled. ",
                          "required": false,
                          "label": "Fallback to send IDFV when advertisingId key not present (Server-Side Only)"
                        }
                      ],
                      "status": "PUBLIC",
                      "categories": ["Attribution", "Deep Linking"],
                      "website": "http://www.appsflyer.com/",
                      "components": [
                        {
                          "code": "https://github.com/AppsFlyerSDK/segment-appsflyer-ios",
                          "owner": "PARTNER",
                          "type": "IOS"
                        },
                        {
                          "code": "https://github.com/AppsFlyerSDK/AppsFlyer-Segment-Integration",
                          "owner": "PARTNER",
                          "type": "ANDROID"
                        },
                        {
                          "code": "https://github.com/segmentio/integrations/tree/master/integrations/appsflyer",
                          "owner": "SEGMENT",
                          "type": "SERVER"
                        }
                      ],
                      "previousNames": ["AppsFlyer"],
                      "supportedMethods": {
                        "track": true,
                        "pageview": true,
                        "identify": true,
                        "group": true,
                        "alias": true
                      },
                      "supportedPlatforms": { "browser": false, "mobile": true, "server": true },
                      "supportedFeatures": {
                        "cloudModeInstances": "0",
                        "deviceModeInstances": "0",
                        "replay": false,
                        "browserUnbundling": false,
                        "browserUnbundlingPublic": true
                      },
                      "actions": [],
                      "presets": []
                    }
                  ],
                  "pagination": { "current": "MA==", "next": "Mg==", "totalEntries": 357 }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetDestinationsCatalogV1Output" },
                "example": {
                  "destinationsCatalog": [
                    {
                      "id": "54521fd525e721e32a72ee8e",
                      "name": "AdRoll",
                      "description": "AdRoll is a retargeting network that allows you to show ads to visitors who've landed on your site while browsing the web. ",
                      "slug": "adroll",
                      "logos": {
                        "default": "https://d3hotuclm6if1r.cloudfront.net/logos/adroll-default.svg",
                        "mark": "https://cdn.filepicker.io/api/file/IKo2fU59RROBsNtj4lHs"
                      },
                      "options": [
                        {
                          "name": "_version",
                          "type": "number",
                          "defaultValue": 2,
                          "description": "",
                          "required": false,
                          "label": "_version"
                        },
                        {
                          "name": "advId",
                          "type": "string",
                          "defaultValue": "",
                          "description": "You can find your Advertiser ID in your AdRoll dashboard by clicking the **green or red dot** in the lower-left corner. In the Javascript snippet, the Advertiser ID appears as `adroll_avd_id = 'XXXXXXX'` on line 2. It should be 22 characters long and look something like this: `WYJD6WNIAJC2XG6PT7UK4B`.",
                          "required": true,
                          "label": "Advertiser ID"
                        },
                        {
                          "name": "events",
                          "type": "text-map",
                          "defaultValue": {},
                          "description": "AdRoll allows you to create a Segment Name and ID for conversions events. Use this mapping to trigger the *AdRoll Segment ID* (on the right) when the Event Name (on the left) is passed in a Track method.",
                          "required": false,
                          "label": "Events"
                        },
                        {
                          "name": "pixId",
                          "type": "string",
                          "defaultValue": "",
                          "description": "You can find your Pixel ID in your AdRoll dashboard by clicking the **green or red dot** in the lower-left corner. In the Javascript snippet, the Pixel ID appears as `adroll_pix_id = 'XXXXXXX'` on line 3. It should be 22 characters long, and look something like this: `6UUA5LKILFESVE44XH6SVX`.",
                          "required": true,
                          "label": "Pixel ID"
                        }
                      ],
                      "status": "PUBLIC",
                      "categories": ["Advertising"],
                      "website": "http://adroll.com",
                      "components": [
                        {
                          "code": "https://github.com/segment-integrations/analytics.js-integration-adroll",
                          "type": "BROWSER"
                        }
                      ],
                      "previousNames": ["AdRoll"],
                      "supportedMethods": {
                        "track": true,
                        "pageview": true,
                        "identify": true,
                        "group": false,
                        "alias": false
                      },
                      "supportedPlatforms": { "browser": true, "mobile": false, "server": false },
                      "supportedFeatures": {
                        "cloudModeInstances": "0",
                        "deviceModeInstances": "0",
                        "replay": false,
                        "browserUnbundling": false,
                        "browserUnbundlingPublic": true
                      },
                      "actions": [],
                      "presets": []
                    },
                    {
                      "id": "54521fd525e721e32a72ee8f",
                      "name": "AppsFlyer",
                      "description": "Mobile app measurement and tracking.",
                      "slug": "appsflyer",
                      "logos": {
                        "default": "https://d3hotuclm6if1r.cloudfront.net/logos/appsflyer-default.svg",
                        "mark": "https://cdn.filepicker.io/api/file/AnJUEBvxRouLLOvIeQuK"
                      },
                      "options": [
                        {
                          "name": "androidAppID",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Your Android App's ID. Find this in your AppsFlyer's 'My App' dashboard. It should look something like 'com.appsflyer.myapp'. This is required for Android projects if you want to send events using the server side integration.",
                          "required": true,
                          "label": "Android App ID"
                        },
                        {
                          "name": "appleAppID",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Your App's ID, which is accessible from iTunes or in AppsFlyer's 'My App' dashboard. This is optional for Android projects, and only required for iOS projects.",
                          "required": true,
                          "label": "Apple App ID (iOS)"
                        },
                        {
                          "name": "appsFlyerDevKey",
                          "type": "string",
                          "defaultValue": "",
                          "description": "Your unique developer ID from AppsFlyer, which is accessible from your AppsFlyer account.",
                          "required": true,
                          "label": "AppsFlyer Dev Key"
                        },
                        {
                          "name": "canOmitAppsFlyerId",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "*Only applicable for Appsflyer's Business Tiers customers using server-side or cloud mode destination.* Please contact your AppsFlyer representative for more information. This setting allows to use the advertising ID as appsflyer ID.",
                          "required": false,
                          "label": "Can Omit AppsFlyerId"
                        },
                        {
                          "name": "fallbackToIdfv",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "With the update to use analytics-ios v4.x SDK if adTrackingEnabled is set to false, the advertisingId key will be deleted from the event. If you have the setting enabled \"Can Omit AppsFlyerId\", these events will fail when sent to AppsFlyer API. To prevent these event failures in this scenario enable this send the IDFV instead. When the \"Can Omit AppsFlyerId\" setting is enabled if the IDFA is zeroed out, we will also send an IDFV when this setting is enabled. ",
                          "required": false,
                          "label": "Fallback to send IDFV when advertisingId key not present (Server-Side Only)"
                        }
                      ],
                      "status": "PUBLIC",
                      "categories": ["Attribution", "Deep Linking"],
                      "website": "http://www.appsflyer.com/",
                      "components": [
                        {
                          "code": "https://github.com/AppsFlyerSDK/segment-appsflyer-ios",
                          "owner": "PARTNER",
                          "type": "IOS"
                        },
                        {
                          "code": "https://github.com/AppsFlyerSDK/AppsFlyer-Segment-Integration",
                          "owner": "PARTNER",
                          "type": "ANDROID"
                        },
                        {
                          "code": "https://github.com/segmentio/integrations/tree/master/integrations/appsflyer",
                          "owner": "SEGMENT",
                          "type": "SERVER"
                        }
                      ],
                      "previousNames": ["AppsFlyer"],
                      "supportedMethods": {
                        "track": true,
                        "pageview": true,
                        "identify": true,
                        "group": true,
                        "alias": true
                      },
                      "supportedPlatforms": { "browser": false, "mobile": true, "server": true },
                      "supportedFeatures": {
                        "cloudModeInstances": "0",
                        "deviceModeInstances": "0",
                        "replay": false,
                        "browserUnbundling": false,
                        "browserUnbundlingPublic": true
                      },
                      "actions": [],
                      "presets": []
                    }
                  ],
                  "pagination": { "current": "MA==", "next": "Mg==", "totalEntries": 357 }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Catalog"],
        "tags": ["Catalog"]
      }
    },
    "/events/volume": {
      "get": {
        "summary": "getEventsVolumeFromWorkspaceV1",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "granularity",
            "description": "The size of each bucket in the requested window.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The size of each bucket in the requested window.",
              "enum": ["DAY", "HOUR", "MINUTE"],
              "type": "string",
              "title": "granularity"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "startTime",
            "description": "The ISO8601 formatted timestamp that corresponds to the\nbeginning of the requested timeframe, inclusive.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The ISO8601 formatted timestamp that corresponds to the\nbeginning of the requested timeframe, inclusive.",
              "type": "string",
              "title": "startTime"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "endTime",
            "description": "The ISO8601 formatted timestamp that corresponds to the\nend of the requested timeframe, noninclusive.\nSegment recommends that you lag queries 1 minute behind clock time to reduce\nthe risk for latency to impact the counts.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The ISO8601 formatted timestamp that corresponds to the\nend of the requested timeframe, noninclusive.\nSegment recommends that you lag queries 1 minute behind clock time to reduce\nthe risk for latency to impact the counts.",
              "type": "string",
              "title": "endTime"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "groupBy",
            "description": "A comma-delimited list of strings that represents the dimensions\nto group the result by. The options are:\n`eventName`, `eventType` and `source`.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "A comma-delimited list of strings that represents the dimensions\nto group the result by. The options are:\n`eventName`, `eventType` and `source`.",
              "type": "array",
              "items": { "type": "string" },
              "title": "groupBy"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "sourceId",
            "description": "A list of strings which filters the results to the given\nSourceIds.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "A list of strings which filters the results to the given\nSourceIds.",
              "type": "array",
              "items": { "type": "string" },
              "title": "sourceId"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "eventName",
            "description": "A list of strings which filters the results to the given\nEventNames.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "A list of strings which filters the results to the given\nEventNames.",
              "type": "array",
              "items": { "type": "string" },
              "title": "eventName"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "eventType",
            "description": "A list of strings which filters the results to the given\nEventTypes.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "A list of strings which filters the results to the given\nEventTypes.",
              "type": "array",
              "items": { "type": "string" },
              "title": "eventType"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "appVersion",
            "description": "A list of strings which filters the results to the given\nAppVersions.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "A list of strings which filters the results to the given\nAppVersions.",
              "type": "array",
              "items": { "type": "string" },
              "title": "appVersion"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Pagination input for event volume by workspace.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "Pagination input for event volume by workspace.",
              "$ref": "#/components/schemas/PaginationInput",
              "title": "pagination"
            }
          }
        ],
        "deprecated": false,
        "description": "Enumerates the workspace event volumes over time in minute increments.",
        "operationId": "getEventsVolumeFromWorkspace",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/GetEventsVolumeFromWorkspaceAlphaOutput" },
                "example": {
                  "result": [
                    {
                      "eventType": "track",
                      "total": 12533455,
                      "series": [
                        { "time": "2021-10-28T00:00:00Z", "count": 6221572 },
                        { "time": "2021-10-29T00:00:00Z", "count": 6311883 }
                      ]
                    },
                    {
                      "eventType": "identify",
                      "total": 178936,
                      "series": [
                        { "time": "2021-10-28T00:00:00Z", "count": 87914 },
                        { "time": "2021-10-29T00:00:00Z", "count": 91022 }
                      ]
                    },
                    {
                      "eventType": "group",
                      "total": 178936,
                      "series": [
                        { "time": "2021-10-28T00:00:00Z", "count": 87914 },
                        { "time": "2021-10-29T00:00:00Z", "count": 91022 }
                      ]
                    },
                    {
                      "eventType": "page",
                      "total": 46080,
                      "series": [
                        { "time": "2021-10-28T00:00:00Z", "count": 23040 },
                        { "time": "2021-10-29T00:00:00Z", "count": 23040 }
                      ]
                    },
                    {
                      "eventType": "screen",
                      "total": 46079,
                      "series": [
                        { "time": "2021-10-28T00:00:00Z", "count": 23039 },
                        { "time": "2021-10-29T00:00:00Z", "count": 23040 }
                      ]
                    }
                  ]
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/GetEventsVolumeFromWorkspaceBetaOutput" },
                "example": {
                  "result": [
                    {
                      "eventType": "track",
                      "total": 12533455,
                      "series": [
                        { "time": "2021-10-28T00:00:00Z", "count": 6221572 },
                        { "time": "2021-10-29T00:00:00Z", "count": 6311883 }
                      ]
                    },
                    {
                      "eventType": "identify",
                      "total": 178936,
                      "series": [
                        { "time": "2021-10-28T00:00:00Z", "count": 87914 },
                        { "time": "2021-10-29T00:00:00Z", "count": 91022 }
                      ]
                    },
                    {
                      "eventType": "group",
                      "total": 178936,
                      "series": [
                        { "time": "2021-10-28T00:00:00Z", "count": 87914 },
                        { "time": "2021-10-29T00:00:00Z", "count": 91022 }
                      ]
                    },
                    {
                      "eventType": "page",
                      "total": 46080,
                      "series": [
                        { "time": "2021-10-28T00:00:00Z", "count": 23040 },
                        { "time": "2021-10-29T00:00:00Z", "count": 23040 }
                      ]
                    },
                    {
                      "eventType": "screen",
                      "total": 46079,
                      "series": [
                        { "time": "2021-10-28T00:00:00Z", "count": 23039 },
                        { "time": "2021-10-29T00:00:00Z", "count": 23040 }
                      ]
                    }
                  ]
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/GetEventsVolumeFromWorkspaceV1Output" },
                "example": {
                  "result": [
                    {
                      "eventType": "track",
                      "total": 12533455,
                      "series": [
                        { "time": "2021-10-28T00:00:00Z", "count": 6221572 },
                        { "time": "2021-10-29T00:00:00Z", "count": 6311883 }
                      ]
                    },
                    {
                      "eventType": "identify",
                      "total": 178936,
                      "series": [
                        { "time": "2021-10-28T00:00:00Z", "count": 87914 },
                        { "time": "2021-10-29T00:00:00Z", "count": 91022 }
                      ]
                    },
                    {
                      "eventType": "group",
                      "total": 178936,
                      "series": [
                        { "time": "2021-10-28T00:00:00Z", "count": 87914 },
                        { "time": "2021-10-29T00:00:00Z", "count": 91022 }
                      ]
                    },
                    {
                      "eventType": "page",
                      "total": 46080,
                      "series": [
                        { "time": "2021-10-28T00:00:00Z", "count": 23040 },
                        { "time": "2021-10-29T00:00:00Z", "count": 23040 }
                      ]
                    },
                    {
                      "eventType": "screen",
                      "total": 46079,
                      "series": [
                        { "time": "2021-10-28T00:00:00Z", "count": 23039 },
                        { "time": "2021-10-29T00:00:00Z", "count": 23040 }
                      ]
                    }
                  ]
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetEventsVolumeFromWorkspaceV1Output" },
                "example": {
                  "result": [
                    {
                      "eventType": "track",
                      "total": 12533455,
                      "series": [
                        { "time": "2021-10-28T00:00:00Z", "count": 6221572 },
                        { "time": "2021-10-29T00:00:00Z", "count": 6311883 }
                      ]
                    },
                    {
                      "eventType": "identify",
                      "total": 178936,
                      "series": [
                        { "time": "2021-10-28T00:00:00Z", "count": 87914 },
                        { "time": "2021-10-29T00:00:00Z", "count": 91022 }
                      ]
                    },
                    {
                      "eventType": "group",
                      "total": 178936,
                      "series": [
                        { "time": "2021-10-28T00:00:00Z", "count": 87914 },
                        { "time": "2021-10-29T00:00:00Z", "count": 91022 }
                      ]
                    },
                    {
                      "eventType": "page",
                      "total": 46080,
                      "series": [
                        { "time": "2021-10-28T00:00:00Z", "count": 23040 },
                        { "time": "2021-10-29T00:00:00Z", "count": 23040 }
                      ]
                    },
                    {
                      "eventType": "screen",
                      "total": 46079,
                      "series": [
                        { "time": "2021-10-28T00:00:00Z", "count": 23039 },
                        { "time": "2021-10-29T00:00:00Z", "count": 23040 }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Monitoring", "Events"],
        "tags": ["Events"]
      }
    },
    "/destination/{destinationId}/filters/{filterId}": {
      "get": {
        "summary": "getFilterInDestinationV1",
        "parameters": [
          {
            "in": "path",
            "name": "destinationId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          },
          {
            "in": "path",
            "name": "filterId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          },
          {
            "in": "query",
            "required": false,
            "name": "destinationId",
            "description": "The id of the destination instance to which the filter belongs.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The id of the destination instance to which the filter belongs.",
              "type": "string",
              "title": "destinationId"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "filterId",
            "description": "The id of the filter to retrieve.\n\nThis parameter exists in v1.",
            "schema": { "description": "The id of the filter to retrieve.", "type": "string", "title": "filterId" }
          }
        ],
        "deprecated": false,
        "description": "Gets a destination filter by id",
        "operationId": "getFilterInDestination",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/GetFilterInDestinationAlphaOutput" },
                "example": {
                  "filter": {
                    "id": "xx6AySGeFExzdv2Gw2EuhV",
                    "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                    "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                    "if": "!(type = \"track\")",
                    "actions": [{ "type": "DROP" }],
                    "title": "Allow Track",
                    "description": "Allows track calls through to the destination.",
                    "enabled": true,
                    "createdAt": "2006-01-02T15:04:05.000Z",
                    "updatedAt": "2006-01-02T15:04:05.000Z"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/GetFilterInDestinationBetaOutput" },
                "example": {
                  "filter": {
                    "id": "xx6AySGeFExzdv2Gw2EuhV",
                    "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                    "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                    "if": "!(type = \"track\")",
                    "actions": [{ "type": "DROP" }],
                    "title": "Allow Track",
                    "description": "Allows track calls through to the destination.",
                    "enabled": true,
                    "createdAt": "2006-01-02T15:04:05.000Z",
                    "updatedAt": "2006-01-02T15:04:05.000Z"
                  }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/GetFilterInDestinationV1Output" },
                "example": {
                  "filter": {
                    "id": "xx6AySGeFExzdv2Gw2EuhV",
                    "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                    "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                    "if": "!(type = \"track\")",
                    "actions": [{ "type": "DROP" }],
                    "title": "Allow Track",
                    "description": "Allows track calls through to the destination.",
                    "enabled": true,
                    "createdAt": "2006-01-02T15:04:05.000Z",
                    "updatedAt": "2006-01-02T15:04:05.000Z"
                  }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetFilterInDestinationV1Output" },
                "example": {
                  "filter": {
                    "id": "xx6AySGeFExzdv2Gw2EuhV",
                    "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                    "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                    "if": "!(type = \"track\")",
                    "actions": [{ "type": "DROP" }],
                    "title": "Allow Track",
                    "description": "Allows track calls through to the destination.",
                    "enabled": true,
                    "createdAt": "2006-01-02T15:04:05.000Z",
                    "updatedAt": "2006-01-02T15:04:05.000Z"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Destination Filters"],
        "tags": ["Destination Filters"]
      },
      "delete": {
        "summary": "removeFilterFromDestinationV1",
        "parameters": [
          {
            "in": "path",
            "name": "destinationId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          },
          {
            "in": "path",
            "name": "filterId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Deletes a destination filter.\n\n\nThis endpoint generates the following audit events:\n* Destination Filter Deleted\n\n      ",
        "operationId": "removeFilterFromDestination",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/RemoveFilterFromDestinationAlphaInput" },
              "example": { "destinationId": "fP7qoQw2HTWt9WdMr718gn", "filterId": "25kvqq8rFOpbYNgwweNs8qnDQlE" }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/RemoveFilterFromDestinationBetaInput" },
              "example": { "destinationId": "fP7qoQw2HTWt9WdMr718gn", "filterId": "25kzdVu2AcLW1dQfT9nEZr75W8o" }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/RemoveFilterFromDestinationV1Input" },
              "example": { "destinationId": "fP7qoQw2HTWt9WdMr718gn", "filterId": "2BaMCF8arrqRgiCuXXB0D8WAryt" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/RemoveFilterFromDestinationAlphaOutput" },
                "example": { "status": "SUCCESS" }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/RemoveFilterFromDestinationBetaOutput" },
                "example": { "status": "SUCCESS" }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/RemoveFilterFromDestinationV1Output" },
                "example": { "status": "SUCCESS" }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RemoveFilterFromDestinationV1Output" },
                "example": { "status": "SUCCESS" }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Destination Filters"],
        "tags": ["Destination Filters"]
      },
      "patch": {
        "summary": "updateFilterForDestinationV1",
        "parameters": [
          {
            "in": "path",
            "name": "destinationId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          },
          {
            "in": "path",
            "name": "filterId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Updates a filter in a destination.\n\n\nThis endpoint generates the following audit event:\n* Destination Filter Enabled\n* Destination Filter Disabled\n\n      ",
        "operationId": "updateFilterForDestination",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/UpdateFilterForDestinationAlphaInput" },
              "example": {
                "filterId": "xx6AySGeFExzdv2Gw2EuhV",
                "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                "if": "!(type = \"track\")",
                "actions": [{ "type": "DROP" }],
                "title": "Allow Track",
                "description": "Allows track calls through to the destination.",
                "enabled": true
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/UpdateFilterForDestinationBetaInput" },
              "example": {
                "filterId": "xx6AySGeFExzdv2Gw2EuhV",
                "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                "if": "!(type = \"track\")",
                "actions": [{ "type": "DROP" }],
                "title": "Allow Track",
                "description": "Allows track calls through to the destination.",
                "enabled": true
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/UpdateFilterForDestinationV1Input" },
              "example": {
                "filterId": "xx6AySGeFExzdv2Gw2EuhV",
                "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                "if": "!(type = \"track\")",
                "actions": [{ "type": "DROP" }],
                "title": "Allow Track",
                "description": "Allows track calls through to the destination.",
                "enabled": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/UpdateFilterForDestinationAlphaOutput" },
                "example": {
                  "filter": {
                    "id": "xx6AySGeFExzdv2Gw2EuhV",
                    "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                    "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                    "if": "!(type = \"track\")",
                    "actions": [{ "type": "DROP" }],
                    "title": "Allow Track",
                    "description": "Allows track calls through to the destination.",
                    "enabled": true,
                    "createdAt": "2006-01-02T15:04:05.000Z",
                    "updatedAt": "2006-01-02T15:04:05.000Z"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/UpdateFilterForDestinationBetaOutput" },
                "example": {
                  "filter": {
                    "id": "xx6AySGeFExzdv2Gw2EuhV",
                    "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                    "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                    "if": "!(type = \"track\")",
                    "actions": [{ "type": "DROP" }],
                    "title": "Allow Track",
                    "description": "Allows track calls through to the destination.",
                    "enabled": true,
                    "createdAt": "2006-01-02T15:04:05.000Z",
                    "updatedAt": "2006-01-02T15:04:05.000Z"
                  }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/UpdateFilterForDestinationV1Output" },
                "example": {
                  "filter": {
                    "id": "xx6AySGeFExzdv2Gw2EuhV",
                    "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                    "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                    "if": "!(type = \"track\")",
                    "actions": [{ "type": "DROP" }],
                    "title": "Allow Track",
                    "description": "Allows track calls through to the destination.",
                    "enabled": true,
                    "createdAt": "2006-01-02T15:04:05.000Z",
                    "updatedAt": "2006-01-02T15:04:05.000Z"
                  }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UpdateFilterForDestinationV1Output" },
                "example": {
                  "filter": {
                    "id": "xx6AySGeFExzdv2Gw2EuhV",
                    "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                    "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                    "if": "!(type = \"track\")",
                    "actions": [{ "type": "DROP" }],
                    "title": "Allow Track",
                    "description": "Allows track calls through to the destination.",
                    "enabled": true,
                    "createdAt": "2006-01-02T15:04:05.000Z",
                    "updatedAt": "2006-01-02T15:04:05.000Z"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Destination Filters"],
        "tags": ["Destination Filters"]
      }
    },
    "/sources/{sourceId}/edge-functions/latest": {
      "get": {
        "summary": "getLatestFromEdgeFunctionsAlpha",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          },
          {
            "in": "query",
            "required": false,
            "name": "sourceId",
            "description": "The id of the source associated with this edge function.\n\nThis parameter exists in alpha.",
            "schema": {
              "description": "The id of the source associated with this edge function.",
              "type": "string",
              "title": "sourceId"
            }
          }
        ],
        "deprecated": false,
        "description": "Get the latest Edge Functions for your source.\n\n**Note**: In order to successfully call this endpoint, the specified workspace needs to have the Edge Functions feature enabled. Please reach out to your customer success manager for more information.\n      ",
        "operationId": "getLatestFromEdgeFunctions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/GetLatestFromEdgeFunctionsAlphaOutput" },
                "example": {
                  "edgeFunctions": {
                    "id": "a582aa47-9c65-4b67-ac88-f322a900e57b",
                    "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                    "downloadURL": "https://cdn.edgefn.segment.build/qQEHquLrjRDN9j1ByrChyn/a582aa47-9c65-4b67-ac88-f322a900e57b.js",
                    "createdBy": "public-api-token/1ba60cca",
                    "createdAt": "2006-01-02T15:04:05.000Z",
                    "version": 1
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Edge Functions"],
        "tags": ["Edge Functions"]
      }
    },
    "/catalog/sources/{sourceMetadataId}": {
      "get": {
        "summary": "getSourceMetadataV1",
        "parameters": [
          {
            "in": "path",
            "name": "sourceMetadataId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          },
          {
            "in": "query",
            "required": false,
            "name": "sourceMetadataId",
            "description": "The id of the returned source catalog item.\n\nConfig API note: analogous to `name`.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The id of the returned source catalog item.\n\nConfig API note: analogous to `name`.",
              "type": "string",
              "title": "sourceMetadataId"
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a Source Catalog item by its ID",
        "operationId": "getSourceMetadata",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/GetSourceMetadataAlphaOutput" },
                "example": {
                  "sourceMetadata": {
                    "id": "1bow82lmk",
                    "slug": "stripe",
                    "name": "Stripe",
                    "categories": ["Payments"],
                    "description": "Once you have successfully OAuth’d into Stripe, we will begin syncing Stripe objects (and their corresponding properties) to any databases you have turned on (to turn on a database, navigate to the database tab in the navigation pane on the left).",
                    "logos": {
                      "default": "https://cdn.filepicker.io/api/file/jp2UV0RtRU2FZaGxX4qF",
                      "alt": "https://cdn.filepicker.io/api/file/7BXASJF8ReVG9pfQCX9Z",
                      "mark": "https://cdn.filepicker.io/api/file/oVSkzKHQ96hIQkbK18ib"
                    },
                    "options": []
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/GetSourceMetadataBetaOutput" },
                "example": {
                  "sourceMetadata": {
                    "id": "1bow82lmk",
                    "slug": "stripe",
                    "name": "Stripe",
                    "categories": ["Payments"],
                    "description": "Once you have successfully OAuth’d into Stripe, we will begin syncing Stripe objects (and their corresponding properties) to any databases you have turned on (to turn on a database, navigate to the database tab in the navigation pane on the left).",
                    "logos": {
                      "default": "https://cdn.filepicker.io/api/file/jp2UV0RtRU2FZaGxX4qF",
                      "alt": "https://cdn.filepicker.io/api/file/7BXASJF8ReVG9pfQCX9Z",
                      "mark": "https://cdn.filepicker.io/api/file/oVSkzKHQ96hIQkbK18ib"
                    },
                    "options": []
                  }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/GetSourceMetadataV1Output" },
                "example": {
                  "sourceMetadata": {
                    "id": "1bow82lmk",
                    "slug": "stripe",
                    "name": "Stripe",
                    "categories": ["Payments"],
                    "description": "Once you have successfully OAuth’d into Stripe, we will begin syncing Stripe objects (and their corresponding properties) to any databases you have turned on (to turn on a database, navigate to the database tab in the navigation pane on the left).",
                    "logos": {
                      "default": "https://cdn.filepicker.io/api/file/jp2UV0RtRU2FZaGxX4qF",
                      "alt": "https://cdn.filepicker.io/api/file/7BXASJF8ReVG9pfQCX9Z",
                      "mark": "https://cdn.filepicker.io/api/file/oVSkzKHQ96hIQkbK18ib"
                    },
                    "options": [],
                    "isCloudEventSource": false
                  }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetSourceMetadataV1Output" },
                "example": {
                  "sourceMetadata": {
                    "id": "1bow82lmk",
                    "slug": "stripe",
                    "name": "Stripe",
                    "categories": ["Payments"],
                    "description": "Once you have successfully OAuth’d into Stripe, we will begin syncing Stripe objects (and their corresponding properties) to any databases you have turned on (to turn on a database, navigate to the database tab in the navigation pane on the left).",
                    "logos": {
                      "default": "https://cdn.filepicker.io/api/file/jp2UV0RtRU2FZaGxX4qF",
                      "alt": "https://cdn.filepicker.io/api/file/7BXASJF8ReVG9pfQCX9Z",
                      "mark": "https://cdn.filepicker.io/api/file/oVSkzKHQ96hIQkbK18ib"
                    },
                    "options": [],
                    "isCloudEventSource": false
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Catalog"],
        "tags": ["Catalog"]
      }
    },
    "/catalog/sources": {
      "get": {
        "summary": "getSourcesCatalogV1",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Defines the pagination parameters.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput",
              "description": "Defines the pagination parameters.",
              "title": "pagination"
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a list of all available Sources in the Segment Catalog",
        "operationId": "getSourcesCatalog",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/GetSourcesCatalogAlphaOutput" },
                "example": {
                  "sourcesCatalog": [
                    {
                      "id": "117eYCe9jH",
                      "slug": "youbora",
                      "name": "Youbora",
                      "categories": ["Analytics"],
                      "description": "YOUBORA is a business intelligence and video analytics solution for the online video industry to maximize revenue through understanding user behavior using actionable data. The platform delivers high quality and reliable insights based on real-time data, in order for your business to ensure the delivery of flawless video and a high quality of experiences to your users.",
                      "logos": {
                        "default": "https://cdn.filepicker.io/api/file/bzmEOg5CRO2RWAVFeHb5",
                        "mark": "https://cdn.filepicker.io/api/file/lIl1q5XSRriNiYAodvnC"
                      },
                      "options": []
                    },
                    {
                      "id": "1QTd6JKw53",
                      "slug": "regal-voice",
                      "name": "Regal Voice",
                      "categories": ["Marketing Automation", "Personalization", "SMS & Push Notifications"],
                      "description": "Next-gen phone marketing and sales enablement for innovative consumer and financial services brands",
                      "logos": {
                        "default": "https://public-segment-devcenter-production.s3.amazonaws.com/a3189276-1b86-4126-a31c-d1a50057b7fe.svg",
                        "mark": "https://public-segment-devcenter-production.s3.amazonaws.com/e20664bd-2398-440a-a6d6-59cd348b25e2.svg"
                      },
                      "options": [
                        {
                          "name": "api-key",
                          "required": true,
                          "type": "string",
                          "defaultValue": "",
                          "description": "Regal Voice API key"
                        }
                      ]
                    }
                  ],
                  "pagination": { "current": "MA==", "next": "Mg==", "totalEntries": 74 }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/GetSourcesCatalogBetaOutput" },
                "example": {
                  "sourcesCatalog": [
                    {
                      "id": "117eYCe9jH",
                      "slug": "youbora",
                      "name": "Youbora",
                      "categories": ["Analytics"],
                      "description": "YOUBORA is a business intelligence and video analytics solution for the online video industry to maximize revenue through understanding user behavior using actionable data. The platform delivers high quality and reliable insights based on real-time data, in order for your business to ensure the delivery of flawless video and a high quality of experiences to your users.",
                      "logos": {
                        "default": "https://cdn.filepicker.io/api/file/bzmEOg5CRO2RWAVFeHb5",
                        "mark": "https://cdn.filepicker.io/api/file/lIl1q5XSRriNiYAodvnC"
                      },
                      "options": []
                    },
                    {
                      "id": "1QTd6JKw53",
                      "slug": "regal-voice",
                      "name": "Regal Voice",
                      "categories": ["Marketing Automation", "Personalization", "SMS & Push Notifications"],
                      "description": "Next-gen phone marketing and sales enablement for innovative consumer and financial services brands",
                      "logos": {
                        "default": "https://public-segment-devcenter-production.s3.amazonaws.com/a3189276-1b86-4126-a31c-d1a50057b7fe.svg",
                        "mark": "https://public-segment-devcenter-production.s3.amazonaws.com/e20664bd-2398-440a-a6d6-59cd348b25e2.svg"
                      },
                      "options": [
                        {
                          "name": "api-key",
                          "required": true,
                          "type": "string",
                          "defaultValue": "",
                          "description": "Regal Voice API key"
                        }
                      ]
                    }
                  ],
                  "pagination": { "current": "MA==", "next": "Mg==", "totalEntries": 74 }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/GetSourcesCatalogV1Output" },
                "example": {
                  "sourcesCatalog": [
                    {
                      "id": "117eYCe9jH",
                      "slug": "youbora",
                      "name": "Youbora",
                      "categories": ["Analytics"],
                      "description": "YOUBORA is a business intelligence and video analytics solution for the online video industry to maximize revenue through understanding user behavior using actionable data. The platform delivers high quality and reliable insights based on real-time data, in order for your business to ensure the delivery of flawless video and a high quality of experiences to your users.",
                      "logos": {
                        "default": "https://cdn.filepicker.io/api/file/bzmEOg5CRO2RWAVFeHb5",
                        "mark": "https://cdn.filepicker.io/api/file/lIl1q5XSRriNiYAodvnC"
                      },
                      "options": [],
                      "isCloudEventSource": true
                    },
                    {
                      "id": "1QTd6JKw53",
                      "slug": "regal-voice",
                      "name": "Regal Voice",
                      "categories": ["Marketing Automation", "Personalization", "SMS & Push Notifications"],
                      "description": "Next-gen phone marketing and sales enablement for innovative consumer and financial services brands",
                      "logos": {
                        "default": "https://public-segment-devcenter-production.s3.amazonaws.com/a3189276-1b86-4126-a31c-d1a50057b7fe.svg",
                        "mark": "https://public-segment-devcenter-production.s3.amazonaws.com/e20664bd-2398-440a-a6d6-59cd348b25e2.svg"
                      },
                      "options": [
                        {
                          "name": "api-key",
                          "required": true,
                          "type": "string",
                          "defaultValue": "",
                          "description": "Regal Voice API key"
                        }
                      ],
                      "isCloudEventSource": true
                    }
                  ],
                  "pagination": { "current": "MA==", "next": "Mg==", "totalEntries": 75 }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetSourcesCatalogV1Output" },
                "example": {
                  "sourcesCatalog": [
                    {
                      "id": "117eYCe9jH",
                      "slug": "youbora",
                      "name": "Youbora",
                      "categories": ["Analytics"],
                      "description": "YOUBORA is a business intelligence and video analytics solution for the online video industry to maximize revenue through understanding user behavior using actionable data. The platform delivers high quality and reliable insights based on real-time data, in order for your business to ensure the delivery of flawless video and a high quality of experiences to your users.",
                      "logos": {
                        "default": "https://cdn.filepicker.io/api/file/bzmEOg5CRO2RWAVFeHb5",
                        "mark": "https://cdn.filepicker.io/api/file/lIl1q5XSRriNiYAodvnC"
                      },
                      "options": [],
                      "isCloudEventSource": true
                    },
                    {
                      "id": "1QTd6JKw53",
                      "slug": "regal-voice",
                      "name": "Regal Voice",
                      "categories": ["Marketing Automation", "Personalization", "SMS & Push Notifications"],
                      "description": "Next-gen phone marketing and sales enablement for innovative consumer and financial services brands",
                      "logos": {
                        "default": "https://public-segment-devcenter-production.s3.amazonaws.com/a3189276-1b86-4126-a31c-d1a50057b7fe.svg",
                        "mark": "https://public-segment-devcenter-production.s3.amazonaws.com/e20664bd-2398-440a-a6d6-59cd348b25e2.svg"
                      },
                      "options": [
                        {
                          "name": "api-key",
                          "required": true,
                          "type": "string",
                          "defaultValue": "",
                          "description": "Regal Voice API key"
                        }
                      ],
                      "isCloudEventSource": true
                    }
                  ],
                  "pagination": { "current": "MA==", "next": "Mg==", "totalEntries": 75 }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Catalog"],
        "tags": ["Catalog"]
      }
    },
    "/spaces/{spaceId}": {
      "get": {
        "summary": "getSpaceAlpha",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          },
          {
            "in": "query",
            "required": false,
            "name": "spaceId",
            "description": "The space id.\n\nThis parameter exists in alpha.",
            "schema": { "description": "The space id.", "type": "string", "title": "spaceId" }
          }
        ],
        "deprecated": false,
        "description": "Returns the Space by ID",
        "operationId": "getSpace",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/GetSpaceAlphaOutput" },
                "example": {
                  "space": {
                    "id": "9aQ1Lj62S4bomZKLF4DPqW",
                    "name": "Default Space Papi E2E",
                    "slug": "default-space-papi-e2e"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Spaces"],
        "tags": ["Spaces"]
      }
    },
    "/destinations/{destinationId}/subscriptions/{id}": {
      "get": {
        "summary": "getSubscriptionFromDestinationAlpha",
        "parameters": [
          {
            "in": "path",
            "name": "destinationId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          },
          {
            "in": "query",
            "required": false,
            "name": "id",
            "description": "The id of the subscription.\n\nThis parameter exists in alpha.",
            "schema": { "description": "The id of the subscription.", "type": "string", "title": "id" }
          },
          {
            "in": "query",
            "required": false,
            "name": "destinationId",
            "description": "The id of the destination instance.\n\nThis parameter exists in alpha.",
            "schema": {
              "description": "The id of the destination instance.",
              "type": "string",
              "title": "destinationId"
            }
          }
        ],
        "deprecated": false,
        "description": "Gets a destination subscription by ID",
        "operationId": "getSubscriptionFromDestination",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/GetSubscriptionFromDestinationAlphaOutput" },
                "example": {
                  "subscription": {
                    "id": "aJCn6DQsTLw9aBTqd34uQf",
                    "name": "Example Subscription",
                    "actionId": "jiMz7MfHNeHmUckzRnUGkU",
                    "actionSlug": "someActionSlug",
                    "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                    "trigger": "type = \"track\"",
                    "enabled": false,
                    "settings": {}
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Destinations"],
        "tags": ["Destinations"]
      },
      "delete": {
        "summary": "removeSubscriptionFromDestinationAlpha",
        "parameters": [
          {
            "in": "path",
            "name": "destinationId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          },
          { "in": "path", "name": "id", "required": true, "schema": { "type": "string", "minimum": 1, "maximum": 255 } }
        ],
        "deprecated": false,
        "description": "Deletes an existing destination subscription",
        "operationId": "removeSubscriptionFromDestination",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/RemoveSubscriptionFromDestinationAlphaInput" },
              "example": { "id": "6XXSuDDscTXJ7U8F2kJNmR", "destinationId": "fP7qoQw2HTWt9WdMr718gn" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/RemoveSubscriptionFromDestinationAlphaOutput" },
                "example": { "status": "SUCCESS" }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Destinations"],
        "tags": ["Destinations"]
      },
      "patch": {
        "summary": "updateSubscriptionForDestinationAlpha",
        "parameters": [
          {
            "in": "path",
            "name": "destinationId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          },
          { "in": "path", "name": "id", "required": true, "schema": { "type": "string", "minimum": 1, "maximum": 255 } }
        ],
        "deprecated": false,
        "description": "Updates an existing destination subscription",
        "operationId": "updateSubscriptionForDestination",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/UpdateSubscriptionForDestinationAlphaInput" },
              "example": {
                "id": "gFAo6HMsMxKK8BBAJL1eVH",
                "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                "input": { "name": "Updated name" }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/UpdateSubscriptionForDestinationAlphaOutput" },
                "example": {
                  "subscription": {
                    "id": "gFAo6HMsMxKK8BBAJL1eVH",
                    "name": "Updated name",
                    "actionId": "jiMz7MfHNeHmUckzRnUGkU",
                    "actionSlug": "someActionSlug",
                    "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                    "trigger": "type = \"track\"",
                    "enabled": false,
                    "settings": {}
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Destinations"],
        "tags": ["Destinations"]
      }
    },
    "/users/{userId}": {
      "get": {
        "summary": "getUserV1",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          },
          {
            "in": "query",
            "required": false,
            "name": "userId",
            "description": "The id of the user to return.\n\nThis parameter exists in v1.",
            "schema": { "description": "The id of the user to return.", "type": "string", "title": "userId" }
          }
        ],
        "deprecated": false,
        "description": "Returns a User given their ID",
        "operationId": "getUser",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/GetUserAlphaOutput" },
                "example": {
                  "user": {
                    "id": "sgJDWk3K21k6LE3tLU9nRK",
                    "name": "",
                    "email": "papi@segment.com",
                    "permissions": [
                      {
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "roleName": "Workspace Owner",
                        "resources": [{ "id": "9aQ1Lj62S4bomZKLF4DPqW", "type": "WORKSPACE", "labels": [] }]
                      }
                    ]
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/GetUserBetaOutput" },
                "example": {
                  "user": {
                    "id": "sgJDWk3K21k6LE3tLU9nRK",
                    "name": "",
                    "email": "papi@segment.com",
                    "permissions": [
                      {
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "roleName": "Workspace Owner",
                        "resources": [{ "id": "9aQ1Lj62S4bomZKLF4DPqW", "type": "WORKSPACE", "labels": [] }]
                      }
                    ]
                  }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/GetUserV1Output" },
                "example": {
                  "user": {
                    "id": "sgJDWk3K21k6LE3tLU9nRK",
                    "name": "",
                    "email": "papi@segment.com",
                    "permissions": [
                      {
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "roleName": "Workspace Owner",
                        "resources": [{ "id": "9aQ1Lj62S4bomZKLF4DPqW", "type": "WORKSPACE", "labels": [] }]
                      }
                    ]
                  }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetUserV1Output" },
                "example": {
                  "user": {
                    "id": "sgJDWk3K21k6LE3tLU9nRK",
                    "name": "",
                    "email": "papi@segment.com",
                    "permissions": [
                      {
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "roleName": "Workspace Owner",
                        "resources": [{ "id": "9aQ1Lj62S4bomZKLF4DPqW", "type": "WORKSPACE", "labels": [] }]
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Admin", "IAM Users"],
        "tags": ["IAM Users"]
      }
    },
    "/catalog/warehouses/{warehouseMetadataId}": {
      "get": {
        "summary": "getWarehouseMetadataV1",
        "parameters": [
          {
            "in": "path",
            "name": "warehouseMetadataId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          },
          {
            "in": "query",
            "required": false,
            "name": "warehouseMetadataId",
            "description": "The id of the warehouse catalog item to look up.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The id of the warehouse catalog item to look up.",
              "type": "string",
              "title": "warehouseMetadataId"
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a Warehouse Catalog item by its ID",
        "operationId": "getWarehouseMetadata",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/GetWarehouseMetadataAlphaOutput" },
                "example": {
                  "warehouseMetadata": {
                    "id": "55d3d3aea3c",
                    "slug": "postgres",
                    "name": "Postgres",
                    "description": "Open source data warehouse",
                    "logos": {
                      "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                      "mark": "",
                      "alt": ""
                    },
                    "options": [
                      { "name": "port", "required": true, "type": "string" },
                      { "name": "database", "required": true, "type": "string" },
                      { "name": "hostname", "required": true, "type": "string" },
                      { "name": "password", "required": true, "type": "string" },
                      { "name": "username", "required": true, "type": "string" },
                      { "name": "ciphertext", "required": true, "type": "string" }
                    ]
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/GetWarehouseMetadataBetaOutput" },
                "example": {
                  "warehouseMetadata": {
                    "id": "55d3d3aea3c",
                    "slug": "postgres",
                    "name": "Postgres",
                    "description": "Open source data warehouse",
                    "logos": {
                      "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                      "mark": "",
                      "alt": ""
                    },
                    "options": [
                      { "name": "port", "required": true, "type": "string" },
                      { "name": "database", "required": true, "type": "string" },
                      { "name": "hostname", "required": true, "type": "string" },
                      { "name": "password", "required": true, "type": "string" },
                      { "name": "username", "required": true, "type": "string" },
                      { "name": "ciphertext", "required": true, "type": "string" }
                    ]
                  }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/GetWarehouseMetadataV1Output" },
                "example": {
                  "warehouseMetadata": {
                    "id": "55d3d3aea3c",
                    "slug": "postgres",
                    "name": "Postgres",
                    "description": "Open source data warehouse",
                    "logos": {
                      "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                      "mark": "",
                      "alt": ""
                    },
                    "options": [
                      { "name": "port", "required": true, "type": "string" },
                      { "name": "database", "required": true, "type": "string" },
                      { "name": "hostname", "required": true, "type": "string" },
                      { "name": "password", "required": true, "type": "string" },
                      { "name": "username", "required": true, "type": "string" },
                      { "name": "ciphertext", "required": true, "type": "string" }
                    ]
                  }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetWarehouseMetadataV1Output" },
                "example": {
                  "warehouseMetadata": {
                    "id": "55d3d3aea3c",
                    "slug": "postgres",
                    "name": "Postgres",
                    "description": "Open source data warehouse",
                    "logos": {
                      "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                      "mark": "",
                      "alt": ""
                    },
                    "options": [
                      { "name": "port", "required": true, "type": "string" },
                      { "name": "database", "required": true, "type": "string" },
                      { "name": "hostname", "required": true, "type": "string" },
                      { "name": "password", "required": true, "type": "string" },
                      { "name": "username", "required": true, "type": "string" },
                      { "name": "ciphertext", "required": true, "type": "string" }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Catalog"],
        "tags": ["Catalog"]
      }
    },
    "/catalog/warehouses": {
      "get": {
        "summary": "getWarehousesCatalogV1",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Required pagination params used to filter the warehouses catalog.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput",
              "description": "Required pagination params used to filter the warehouses catalog.",
              "title": "pagination"
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a list of all available Warehouses in the Segment Catalog",
        "operationId": "getWarehousesCatalog",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/GetWarehousesCatalogAlphaOutput" },
                "example": {
                  "warehousesCatalog": [
                    {
                      "id": "VxcZnH5UIM",
                      "slug": "azuresqldb",
                      "name": "Azure SQL Database",
                      "description": "Connector for Azure SQL Database",
                      "logos": {
                        "default": "https://msftplayground.com/wp-content/uploads/2017/04/logoAzureSql.png",
                        "mark": "",
                        "alt": ""
                      },
                      "options": []
                    },
                    {
                      "id": "WcjBCzUGff",
                      "slug": "azuresqldw",
                      "name": "Azure SQL Data Warehouse",
                      "description": "Connector for Azure SQL Data Warehouse",
                      "logos": {
                        "default": "https://cdn.filepicker.io/api/file/VKbuWjNjQPKOnOWijFe4",
                        "mark": "https://cdn.filepicker.io/api/file/EUJvt69Q7qMqCvGrVtiu",
                        "alt": ""
                      },
                      "options": []
                    }
                  ],
                  "pagination": { "current": "MA==", "next": "Mg==", "totalEntries": 7 }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/GetWarehousesCatalogBetaOutput" },
                "example": {
                  "warehousesCatalog": [
                    {
                      "id": "VxcZnH5UIM",
                      "slug": "azuresqldb",
                      "name": "Azure SQL Database",
                      "description": "Connector for Azure SQL Database",
                      "logos": {
                        "default": "https://msftplayground.com/wp-content/uploads/2017/04/logoAzureSql.png",
                        "mark": "",
                        "alt": ""
                      },
                      "options": []
                    },
                    {
                      "id": "WcjBCzUGff",
                      "slug": "azuresqldw",
                      "name": "Azure SQL Data Warehouse",
                      "description": "Connector for Azure SQL Data Warehouse",
                      "logos": {
                        "default": "https://cdn.filepicker.io/api/file/VKbuWjNjQPKOnOWijFe4",
                        "mark": "https://cdn.filepicker.io/api/file/EUJvt69Q7qMqCvGrVtiu",
                        "alt": ""
                      },
                      "options": []
                    }
                  ],
                  "pagination": { "current": "MA==", "next": "Mg==", "totalEntries": 7 }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/GetWarehousesCatalogV1Output" },
                "example": {
                  "warehousesCatalog": [
                    {
                      "id": "VxcZnH5UIM",
                      "slug": "azuresqldb",
                      "name": "Azure SQL Database",
                      "description": "Connector for Azure SQL Database",
                      "logos": {
                        "default": "https://msftplayground.com/wp-content/uploads/2017/04/logoAzureSql.png",
                        "mark": "",
                        "alt": ""
                      },
                      "options": []
                    },
                    {
                      "id": "WcjBCzUGff",
                      "slug": "azuresqldw",
                      "name": "Azure SQL Data Warehouse",
                      "description": "Connector for Azure SQL Data Warehouse",
                      "logos": {
                        "default": "https://cdn.filepicker.io/api/file/VKbuWjNjQPKOnOWijFe4",
                        "mark": "https://cdn.filepicker.io/api/file/EUJvt69Q7qMqCvGrVtiu",
                        "alt": ""
                      },
                      "options": []
                    }
                  ],
                  "pagination": { "current": "MA==", "next": "Mg==", "totalEntries": 7 }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetWarehousesCatalogV1Output" },
                "example": {
                  "warehousesCatalog": [
                    {
                      "id": "VxcZnH5UIM",
                      "slug": "azuresqldb",
                      "name": "Azure SQL Database",
                      "description": "Connector for Azure SQL Database",
                      "logos": {
                        "default": "https://msftplayground.com/wp-content/uploads/2017/04/logoAzureSql.png",
                        "mark": "",
                        "alt": ""
                      },
                      "options": []
                    },
                    {
                      "id": "WcjBCzUGff",
                      "slug": "azuresqldw",
                      "name": "Azure SQL Data Warehouse",
                      "description": "Connector for Azure SQL Data Warehouse",
                      "logos": {
                        "default": "https://cdn.filepicker.io/api/file/VKbuWjNjQPKOnOWijFe4",
                        "mark": "https://cdn.filepicker.io/api/file/EUJvt69Q7qMqCvGrVtiu",
                        "alt": ""
                      },
                      "options": []
                    }
                  ],
                  "pagination": { "current": "MA==", "next": "Mg==", "totalEntries": 7 }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Catalog"],
        "tags": ["Catalog"]
      }
    },
    "/": {
      "get": {
        "summary": "getWorkspaceV1",
        "parameters": [],
        "deprecated": false,
        "description": "Returns the Workspace associated with the token used to access this resource",
        "operationId": "getWorkspace",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/GetWorkspaceAlphaOutput" },
                "example": { "workspace": { "id": "9aQ1Lj62S4bomZKLF4DPqW", "name": "papi e2e", "slug": "papi-e2e" } }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/GetWorkspaceBetaOutput" },
                "example": { "workspace": { "id": "9aQ1Lj62S4bomZKLF4DPqW", "name": "papi e2e", "slug": "papi-e2e" } }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/GetWorkspaceV1Output" },
                "example": { "workspace": { "id": "9aQ1Lj62S4bomZKLF4DPqW", "name": "papi e2e", "slug": "papi-e2e" } }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetWorkspaceV1Output" },
                "example": { "workspace": { "id": "9aQ1Lj62S4bomZKLF4DPqW", "name": "papi e2e", "slug": "papi-e2e" } }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Workspaces"],
        "tags": ["Workspaces"]
      }
    },
    "/audit-events": {
      "get": {
        "summary": "listAuditEventsV1",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "startTime",
            "description": "Filter response to events that happened after this time.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "Filter response to events that happened after this time.",
              "type": "string",
              "title": "startTime"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "endTime",
            "description": "Filter response to events that happened before this time.\nDefaults to the current time, or the end time from the pagination cursor.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "Filter response to events that happened before this time.\nDefaults to the current time, or the end time from the pagination cursor.",
              "type": "string",
              "title": "endTime"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "resourceId",
            "description": "Filter response to events that affect a specific resource, for example, a single source.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "Filter response to events that affect a specific resource, for example, a single source.",
              "type": "string",
              "title": "resourceId"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "resourceType",
            "description": "Filter response to events that affect a specific type, for example, sources, warehouses, and tracking plans.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "Filter response to events that affect a specific type, for example, sources, warehouses, and tracking plans.",
              "type": "string",
              "title": "resourceType"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Defines the pagination parameters.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput",
              "description": "Defines the pagination parameters.",
              "title": "pagination"
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a list of Audit Trail events",
        "operationId": "listAuditEvents",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/ListAuditEventsAlphaOutput" },
                "example": {
                  "events": [
                    {
                      "id": "events/145876976",
                      "timestamp": "2022-03-04T21:29:22Z",
                      "type": "Source Function Deleted",
                      "actor": "public-api-token/TJ7z8cg6",
                      "resourceId": "8AWE8yZRdy",
                      "resourceType": "function",
                      "resourceName": "Foo Func 543"
                    },
                    {
                      "id": "events/145876978",
                      "timestamp": "2022-03-04T21:29:22Z",
                      "type": "Source Function Modified",
                      "actor": "public-api-token/TJ7z8cg6",
                      "resourceId": "sfnc_tFXvS0Rs6T",
                      "resourceType": "function",
                      "resourceName": "displayName"
                    }
                  ],
                  "pagination": {
                    "current": "eyJwYWdlVG9rZW4iOiJNUT09IiwiZW5kVGltZSI6IjIwMjItMDMtMDhUMTU6NTU6MzQuMzIxWiJ9",
                    "next": "eyJwYWdlVG9rZW4iOiJNZz09IiwiZW5kVGltZSI6IjIwMjItMDMtMDhUMTU6NTU6MzQuMzIxWiJ9"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/ListAuditEventsBetaOutput" },
                "example": {
                  "events": [
                    {
                      "id": "events/145876976",
                      "timestamp": "2022-03-04T21:29:22Z",
                      "type": "Source Function Deleted",
                      "actor": "public-api-token/TJ7z8cg6",
                      "resourceId": "8AWE8yZRdy",
                      "resourceType": "function",
                      "resourceName": "Foo Func 543"
                    },
                    {
                      "id": "events/145876978",
                      "timestamp": "2022-03-04T21:29:22Z",
                      "type": "Source Function Modified",
                      "actor": "public-api-token/TJ7z8cg6",
                      "resourceId": "sfnc_tFXvS0Rs6T",
                      "resourceType": "function",
                      "resourceName": "displayName"
                    }
                  ],
                  "pagination": {
                    "current": "eyJwYWdlVG9rZW4iOiJNUT09IiwiZW5kVGltZSI6IjIwMjItMDMtMDhUMTU6NTU6MzQuNzI0WiJ9",
                    "next": "eyJwYWdlVG9rZW4iOiJNZz09IiwiZW5kVGltZSI6IjIwMjItMDMtMDhUMTU6NTU6MzQuNzI0WiJ9"
                  }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/ListAuditEventsV1Output" },
                "example": {
                  "events": [
                    {
                      "id": "events/145876976",
                      "timestamp": "2022-03-04T21:29:22Z",
                      "type": "Source Function Deleted",
                      "actor": "public-api-token/TJ7z8cg6",
                      "resourceId": "8AWE8yZRdy",
                      "resourceType": "function",
                      "resourceName": "Foo Func 543"
                    },
                    {
                      "id": "events/145876978",
                      "timestamp": "2022-03-04T21:29:22Z",
                      "type": "Source Function Modified",
                      "actor": "public-api-token/TJ7z8cg6",
                      "resourceId": "sfnc_tFXvS0Rs6T",
                      "resourceType": "function",
                      "resourceName": "displayName"
                    }
                  ],
                  "pagination": {
                    "current": "eyJwYWdlVG9rZW4iOiJNUT09IiwiZW5kVGltZSI6IjIwMjItMDctMDhUMjA6MjA6MTkuODcwWiJ9",
                    "next": "eyJwYWdlVG9rZW4iOiJNZz09IiwiZW5kVGltZSI6IjIwMjItMDctMDhUMjA6MjA6MTkuODcwWiJ9"
                  }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ListAuditEventsV1Output" },
                "example": {
                  "events": [
                    {
                      "id": "events/145876976",
                      "timestamp": "2022-03-04T21:29:22Z",
                      "type": "Source Function Deleted",
                      "actor": "public-api-token/TJ7z8cg6",
                      "resourceId": "8AWE8yZRdy",
                      "resourceType": "function",
                      "resourceName": "Foo Func 543"
                    },
                    {
                      "id": "events/145876978",
                      "timestamp": "2022-03-04T21:29:22Z",
                      "type": "Source Function Modified",
                      "actor": "public-api-token/TJ7z8cg6",
                      "resourceId": "sfnc_tFXvS0Rs6T",
                      "resourceType": "function",
                      "resourceName": "displayName"
                    }
                  ],
                  "pagination": {
                    "current": "eyJwYWdlVG9rZW4iOiJNUT09IiwiZW5kVGltZSI6IjIwMjItMDctMDhUMjA6MjA6MTkuODcwWiJ9",
                    "next": "eyJwYWdlVG9rZW4iOiJNZz09IiwiZW5kVGltZSI6IjIwMjItMDctMDhUMjA6MjA6MTkuODcwWiJ9"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Admin", "Audit Trail"],
        "tags": ["Audit Trail"]
      }
    },
    "/sources/{sourceId}/connected-destinations": {
      "get": {
        "summary": "listConnectedDestinationsFromSourceV1",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          },
          {
            "in": "query",
            "required": false,
            "name": "sourceId",
            "description": "The id of the source to look up.\n\nConfig API note: analogous to `name`.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The id of the source to look up.\n\nConfig API note: analogous to `name`.",
              "type": "string",
              "title": "sourceId"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Required pagination params for the request.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput",
              "description": "Required pagination params for the request.",
              "title": "pagination"
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a list of Destinations connected to a Source",
        "operationId": "listConnectedDestinationsFromSource",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/ListConnectedDestinationsFromSourceAlphaOutput" },
                "example": { "destinations": [], "pagination": { "current": "MQ==", "totalEntries": 0 } }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/ListConnectedDestinationsFromSourceBetaOutput" },
                "example": { "destinations": [], "pagination": { "current": "MQ==", "totalEntries": 0 } }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/ListConnectedDestinationsFromSourceV1Output" },
                "example": { "destinations": [], "pagination": { "current": "MQ==", "totalEntries": 0 } }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ListConnectedDestinationsFromSourceV1Output" },
                "example": { "destinations": [], "pagination": { "current": "MQ==", "totalEntries": 0 } }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Sources"],
        "tags": ["Sources"]
      }
    },
    "/warehouses/{warehouseId}/connected-sources": {
      "get": {
        "summary": "listConnectedSourcesFromWarehouseV1",
        "parameters": [
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          },
          {
            "in": "query",
            "required": false,
            "name": "warehouseId",
            "description": "The id of the warehouse to look up.\n\nThis parameter exists in v1.",
            "schema": { "description": "The id of the warehouse to look up.", "type": "string", "title": "warehouseId" }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Defines the pagination parameters.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput",
              "description": "Defines the pagination parameters.",
              "title": "pagination"
            }
          }
        ],
        "deprecated": false,
        "description": "Returns the list of Sources that are connected to a Warehouse",
        "operationId": "listConnectedSourcesFromWarehouse",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/ListConnectedSourcesFromWarehouseAlphaOutput" },
                "example": {
                  "sources": [
                    {
                      "id": "qQEHquLrjRDN9j1ByrChyn",
                      "slug": "ios",
                      "name": "",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "writeKeys": ["pF878AD6SCcqa6tLkrga6p"],
                      "metadata": {
                        "id": "UBrsG9RVzw",
                        "slug": "ios",
                        "name": "iOS",
                        "categories": ["Mobile"],
                        "description": "",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                          "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u"
                        },
                        "options": []
                      },
                      "settings": {},
                      "labels": []
                    }
                  ],
                  "pagination": { "current": "MA==", "next": "MQ==", "totalEntries": 2 }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/ListConnectedSourcesFromWarehouseBetaOutput" },
                "example": {
                  "sources": [
                    {
                      "id": "qQEHquLrjRDN9j1ByrChyn",
                      "slug": "ios",
                      "name": "",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "writeKeys": ["pF878AD6SCcqa6tLkrga6p"],
                      "metadata": {
                        "id": "UBrsG9RVzw",
                        "slug": "ios",
                        "name": "iOS",
                        "categories": ["Mobile"],
                        "description": "",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                          "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u"
                        },
                        "options": []
                      },
                      "settings": {},
                      "labels": []
                    }
                  ],
                  "pagination": { "current": "MA==", "totalEntries": 1 }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/ListConnectedSourcesFromWarehouseV1Output" },
                "example": {
                  "sources": [
                    {
                      "id": "qQEHquLrjRDN9j1ByrChyn",
                      "slug": "ios",
                      "name": "",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "writeKeys": ["3YdEudTwjouyC5WPjpbTik"],
                      "metadata": {
                        "id": "UBrsG9RVzw",
                        "slug": "ios",
                        "name": "iOS",
                        "categories": ["Mobile"],
                        "description": "",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                          "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u"
                        },
                        "options": [],
                        "isCloudEventSource": false
                      },
                      "settings": {},
                      "labels": []
                    }
                  ],
                  "pagination": { "current": "MA==", "totalEntries": 1 }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ListConnectedSourcesFromWarehouseV1Output" },
                "example": {
                  "sources": [
                    {
                      "id": "qQEHquLrjRDN9j1ByrChyn",
                      "slug": "ios",
                      "name": "",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "writeKeys": ["3YdEudTwjouyC5WPjpbTik"],
                      "metadata": {
                        "id": "UBrsG9RVzw",
                        "slug": "ios",
                        "name": "iOS",
                        "categories": ["Mobile"],
                        "description": "",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                          "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u"
                        },
                        "options": [],
                        "isCloudEventSource": false
                      },
                      "settings": {},
                      "labels": []
                    }
                  ],
                  "pagination": { "current": "MA==", "totalEntries": 1 }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Warehouses"],
        "tags": ["Warehouses"]
      }
    },
    "/sources/{sourceId}/connected-warehouses": {
      "get": {
        "summary": "listConnectedWarehousesFromSourceV1",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          },
          {
            "in": "query",
            "required": false,
            "name": "sourceId",
            "description": "The id of the source to look up.\n\nConfig API note: analogous to `name`.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The id of the source to look up.\n\nConfig API note: analogous to `name`.",
              "type": "string",
              "title": "sourceId"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Required pagination params for the request.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput",
              "description": "Required pagination params for the request.",
              "title": "pagination"
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a list of Warehouses connected to a Source",
        "operationId": "listConnectedWarehousesFromSource",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/ListConnectedWarehousesFromSourceAlphaOutput" },
                "example": {
                  "warehouses": [
                    {
                      "id": "kjU72LCJexvrqL7G4TMHHN",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "metadata": {
                        "id": "55d3d3aea3c",
                        "slug": "postgres",
                        "name": "Postgres",
                        "description": "Open source data warehouse",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                          "mark": "",
                          "alt": ""
                        },
                        "options": [
                          { "name": "port", "required": true, "type": "string" },
                          { "name": "database", "required": true, "type": "string" },
                          { "name": "hostname", "required": true, "type": "string" },
                          { "name": "password", "required": true, "type": "string" },
                          { "name": "username", "required": true, "type": "string" },
                          { "name": "ciphertext", "required": true, "type": "string" }
                        ]
                      },
                      "settings": {}
                    },
                    {
                      "id": "v1e6FCE8P9EvQmCLWpKtJ3",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "metadata": {
                        "id": "aea3c55dsz",
                        "slug": "redshift",
                        "name": "Redshift",
                        "description": "Powered by Amazon Web Services",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/redshift-default.svg",
                          "mark": "",
                          "alt": ""
                        },
                        "options": [
                          { "name": "port", "required": true, "type": "string" },
                          { "name": "database", "required": true, "type": "string" },
                          { "name": "hostname", "required": true, "type": "string" },
                          { "name": "password", "required": true, "type": "string" },
                          { "name": "username", "required": true, "type": "string" },
                          { "name": "ciphertext", "required": true, "type": "string" }
                        ]
                      },
                      "settings": {}
                    }
                  ],
                  "pagination": { "current": "MA==", "totalEntries": 2 }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/ListConnectedWarehousesFromSourceBetaOutput" },
                "example": {
                  "warehouses": [
                    {
                      "id": "kjU72LCJexvrqL7G4TMHHN",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "metadata": {
                        "id": "55d3d3aea3c",
                        "slug": "postgres",
                        "name": "Postgres",
                        "description": "Open source data warehouse",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                          "mark": "",
                          "alt": ""
                        },
                        "options": [
                          { "name": "port", "required": true, "type": "string" },
                          { "name": "database", "required": true, "type": "string" },
                          { "name": "hostname", "required": true, "type": "string" },
                          { "name": "password", "required": true, "type": "string" },
                          { "name": "username", "required": true, "type": "string" },
                          { "name": "ciphertext", "required": true, "type": "string" }
                        ]
                      },
                      "settings": {}
                    },
                    {
                      "id": "v1e6FCE8P9EvQmCLWpKtJ3",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "metadata": {
                        "id": "aea3c55dsz",
                        "slug": "redshift",
                        "name": "Redshift",
                        "description": "Powered by Amazon Web Services",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/redshift-default.svg",
                          "mark": "",
                          "alt": ""
                        },
                        "options": [
                          { "name": "port", "required": true, "type": "string" },
                          { "name": "database", "required": true, "type": "string" },
                          { "name": "hostname", "required": true, "type": "string" },
                          { "name": "password", "required": true, "type": "string" },
                          { "name": "username", "required": true, "type": "string" },
                          { "name": "ciphertext", "required": true, "type": "string" }
                        ]
                      },
                      "settings": {}
                    }
                  ],
                  "pagination": { "current": "MA==", "totalEntries": 2 }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/ListConnectedWarehousesFromSourceV1Output" },
                "example": {
                  "warehouses": [
                    {
                      "id": "kjU72LCJexvrqL7G4TMHHN",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "metadata": {
                        "id": "55d3d3aea3c",
                        "slug": "postgres",
                        "name": "Postgres",
                        "description": "Open source data warehouse",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                          "mark": "",
                          "alt": ""
                        },
                        "options": [
                          { "name": "port", "required": true, "type": "string" },
                          { "name": "database", "required": true, "type": "string" },
                          { "name": "hostname", "required": true, "type": "string" },
                          { "name": "password", "required": true, "type": "string" },
                          { "name": "username", "required": true, "type": "string" },
                          { "name": "ciphertext", "required": true, "type": "string" }
                        ]
                      },
                      "settings": {}
                    },
                    {
                      "id": "v1e6FCE8P9EvQmCLWpKtJ3",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "metadata": {
                        "id": "aea3c55dsz",
                        "slug": "redshift",
                        "name": "Redshift",
                        "description": "Powered by Amazon Web Services",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/redshift-default.svg",
                          "mark": "",
                          "alt": ""
                        },
                        "options": [
                          { "name": "port", "required": true, "type": "string" },
                          { "name": "database", "required": true, "type": "string" },
                          { "name": "hostname", "required": true, "type": "string" },
                          { "name": "password", "required": true, "type": "string" },
                          { "name": "username", "required": true, "type": "string" },
                          { "name": "ciphertext", "required": true, "type": "string" }
                        ]
                      },
                      "settings": {}
                    }
                  ],
                  "pagination": { "current": "MA==", "totalEntries": 2 }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ListConnectedWarehousesFromSourceV1Output" },
                "example": {
                  "warehouses": [
                    {
                      "id": "kjU72LCJexvrqL7G4TMHHN",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "metadata": {
                        "id": "55d3d3aea3c",
                        "slug": "postgres",
                        "name": "Postgres",
                        "description": "Open source data warehouse",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                          "mark": "",
                          "alt": ""
                        },
                        "options": [
                          { "name": "port", "required": true, "type": "string" },
                          { "name": "database", "required": true, "type": "string" },
                          { "name": "hostname", "required": true, "type": "string" },
                          { "name": "password", "required": true, "type": "string" },
                          { "name": "username", "required": true, "type": "string" },
                          { "name": "ciphertext", "required": true, "type": "string" }
                        ]
                      },
                      "settings": {}
                    },
                    {
                      "id": "v1e6FCE8P9EvQmCLWpKtJ3",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "metadata": {
                        "id": "aea3c55dsz",
                        "slug": "redshift",
                        "name": "Redshift",
                        "description": "Powered by Amazon Web Services",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/redshift-default.svg",
                          "mark": "",
                          "alt": ""
                        },
                        "options": [
                          { "name": "port", "required": true, "type": "string" },
                          { "name": "database", "required": true, "type": "string" },
                          { "name": "hostname", "required": true, "type": "string" },
                          { "name": "password", "required": true, "type": "string" },
                          { "name": "username", "required": true, "type": "string" },
                          { "name": "ciphertext", "required": true, "type": "string" }
                        ]
                      },
                      "settings": {}
                    }
                  ],
                  "pagination": { "current": "MA==", "totalEntries": 2 }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Sources"],
        "tags": ["Sources"]
      }
    },
    "/destinations/{destinationId}/delivery-metrics": {
      "get": {
        "summary": "listDeliveryMetricsSummaryFromDestinationBeta",
        "parameters": [
          {
            "in": "path",
            "name": "destinationId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          },
          {
            "in": "query",
            "required": false,
            "name": "sourceId",
            "description": "The id of the source linked to the destination.\n\nConfig API note: analogous to `parent`.\n\nThis parameter exists in beta.",
            "schema": {
              "description": "The id of the source linked to the destination.\n\nConfig API note: analogous to `parent`.",
              "type": "string",
              "title": "sourceId"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "destinationId",
            "description": "The id of the destination to get event delivery metrics.\n\nConfig API note: analogous to `name`.\n\nThis parameter exists in beta.",
            "schema": {
              "description": "The id of the destination to get event delivery metrics.\n\nConfig API note: analogous to `name`.",
              "type": "string",
              "title": "destinationId"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "startTime",
            "description": "Filter events that happened after this time.\n\nDefaults to:\n- 1 hour ago if granularity is `MINUTE`.\n- 7 days ago if granularity is `HOUR`.\n- 30 days ago if granularity is `DAY`.\n\nThis parameter exists in beta.",
            "schema": {
              "description": "Filter events that happened after this time.\n\nDefaults to:\n- 1 hour ago if granularity is `MINUTE`.\n- 7 days ago if granularity is `HOUR`.\n- 30 days ago if granularity is `DAY`.",
              "type": "string",
              "title": "startTime"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "endTime",
            "description": "Filter events that happened before this time. Defaults to now if not set.\n\nThis parameter exists in beta.",
            "schema": {
              "description": "Filter events that happened before this time. Defaults to now if not set.",
              "type": "string",
              "title": "endTime"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "granularity",
            "description": "The granularity to filter metrics to. Either `MINUTE`, `HOUR` or `DAY`.\n\nDefaults to `MINUTE` if not set.\n\nThis parameter exists in beta.",
            "schema": {
              "description": "The granularity to filter metrics to. Either `MINUTE`, `HOUR` or `DAY`.\n\nDefaults to `MINUTE` if not set.",
              "enum": ["DAY", "HOUR", "MINUTE"],
              "type": "string",
              "title": "granularity"
            }
          }
        ],
        "deprecated": false,
        "description": "Get event delivery metrics summary from a destination.\n      \n  Based on the granularity, there are restrictions on the time range you can query:\n\n\n\n  **Minute Granularity**:\n\n  - Max time range: 4 hours\n\n  - Oldest possible start time: 48 hours in the past\n\n\n\n  **Hour Granularity**:\n\n  - Max Time range: 1 week\n\n  - Oldest possible start time: 10 days in the past\n\n\n\n  **Day Granularity**:\n\n  - Max time range: 60 days\n\n  - Oldest possible start time: 60 days in the past\n  \n      ",
        "operationId": "listDeliveryMetricsSummaryFromDestination",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/ListDeliveryMetricsSummaryFromDestinationAlphaOutput" },
                "example": {
                  "deliveryMetricsSummary": {
                    "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                    "destinationMetadataId": "54521fd725e721e32a72eebb",
                    "metrics": [
                      {
                        "metricName": "successes",
                        "total": 120,
                        "breakdown": [
                          { "metricName": "successes_on_first_attempt", "value": 60 },
                          { "metricName": "successes_after_retry", "value": 60 }
                        ]
                      },
                      { "metricName": "expired", "total": 0 },
                      { "metricName": "discarded", "total": 0 },
                      { "metricName": "retried", "total": 0 },
                      {
                        "metricName": "time_to_success",
                        "total": 10,
                        "breakdown": [
                          { "metricName": "time_to_success_average", "value": 0 },
                          { "metricName": "time_to_success_p95", "value": 0 }
                        ]
                      },
                      {
                        "metricName": "time_to_first_attempt",
                        "total": 10,
                        "breakdown": [
                          { "metricName": "time_to_first_attempt_average", "value": 0 },
                          { "metricName": "time_to_first_attempt_p95", "value": 0 }
                        ]
                      }
                    ]
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/ListDeliveryMetricsSummaryFromDestinationBetaOutput" },
                "example": {
                  "deliveryMetricsSummary": {
                    "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                    "destinationMetadataId": "54521fd725e721e32a72eebb",
                    "metrics": [
                      {
                        "metricName": "successes",
                        "total": 120,
                        "breakdown": [
                          { "metricName": "successes_on_first_attempt", "value": 60 },
                          { "metricName": "successes_after_retry", "value": 60 }
                        ]
                      },
                      { "metricName": "expired", "total": 0 },
                      { "metricName": "discarded", "total": 0 },
                      { "metricName": "retried", "total": 0 },
                      {
                        "metricName": "time_to_success",
                        "total": 10,
                        "breakdown": [
                          { "metricName": "time_to_success_average", "value": 0 },
                          { "metricName": "time_to_success_p95", "value": 0 }
                        ]
                      },
                      {
                        "metricName": "time_to_first_attempt",
                        "total": 10,
                        "breakdown": [
                          { "metricName": "time_to_first_attempt_average", "value": 0 },
                          { "metricName": "time_to_first_attempt_p95", "value": 0 }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Destinations"],
        "tags": ["Destinations"]
      }
    },
    "/groups/{userGroupId}/invites": {
      "get": {
        "summary": "listInvitesFromUserGroupV1",
        "parameters": [
          {
            "in": "path",
            "name": "userGroupId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          },
          {
            "in": "query",
            "required": false,
            "name": "userGroupId",
            "description": "The id of the user group.\n\nThis parameter exists in v1.",
            "schema": { "description": "The id of the user group.", "type": "string", "title": "userGroupId" }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Pagination for invites to the group.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput",
              "description": "Pagination for invites to the group.",
              "title": "pagination"
            }
          }
        ],
        "deprecated": false,
        "description": "Returns the emails of invitees to a User Group",
        "operationId": "listInvitesFromUserGroup",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/ListInvitesFromUserGroupAlphaOutput" },
                "example": { "emails": [], "pagination": { "current": "MA==", "totalEntries": 0 } }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/ListInvitesFromUserGroupBetaOutput" },
                "example": { "emails": ["foo@example.com"], "pagination": { "current": "MA==", "totalEntries": 1 } }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/ListInvitesFromUserGroupV1Output" },
                "example": { "emails": [], "pagination": { "current": "MA==", "totalEntries": 0 } }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ListInvitesFromUserGroupV1Output" },
                "example": { "emails": [], "pagination": { "current": "MA==", "totalEntries": 0 } }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Admin", "IAM Groups"],
        "tags": ["IAM Groups"]
      }
    },
    "/roles": {
      "get": {
        "summary": "listRolesV1",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Pagination for roles.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput",
              "description": "Pagination for roles.",
              "title": "pagination"
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a list of Roles available to apply to permissions for Users and/or Groups",
        "operationId": "listRoles",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/ListRolesAlphaOutput" },
                "example": {
                  "roles": [
                    {
                      "id": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                      "name": "Workspace Owner",
                      "description": "Owners have full read and edit access to everything in the workspace, including Sources, Destinations, add-on products, and settings. Owners have full edit access to all Team Permissions."
                    },
                    {
                      "id": "1aEWAcU0fArxScocwH9xxLgW7r3",
                      "name": "Minimal Workspace Access",
                      "description": "Access to view the workspace. Cannot view any sub resources or make changes to the workspace."
                    }
                  ],
                  "pagination": { "current": "MA==", "next": "Mg==" }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/ListRolesBetaOutput" },
                "example": {
                  "roles": [
                    {
                      "id": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                      "name": "Workspace Owner",
                      "description": "Owners have full read and edit access to everything in the workspace, including Sources, Destinations, add-on products, and settings. Owners have full edit access to all Team Permissions."
                    },
                    {
                      "id": "1aEWAcU0fArxScocwH9xxLgW7r3",
                      "name": "Minimal Workspace Access",
                      "description": "Access to view the workspace. Cannot view any sub resources or make changes to the workspace."
                    }
                  ],
                  "pagination": { "current": "MA==", "next": "Mg==" }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/ListRolesV1Output" },
                "example": {
                  "roles": [
                    {
                      "id": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                      "name": "Workspace Owner",
                      "description": "Owners have full read and edit access to everything in the workspace, including Sources, Destinations, add-on products, and settings. Owners have full edit access to all Team Permissions."
                    },
                    {
                      "id": "1aEWAcU0fArxScocwH9xxLgW7r3",
                      "name": "Minimal Workspace Access",
                      "description": "Access to view the workspace. Cannot view any sub resources or make changes to the workspace."
                    }
                  ],
                  "pagination": { "current": "MA==", "next": "Mg==" }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ListRolesV1Output" },
                "example": {
                  "roles": [
                    {
                      "id": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                      "name": "Workspace Owner",
                      "description": "Owners have full read and edit access to everything in the workspace, including Sources, Destinations, add-on products, and settings. Owners have full edit access to all Team Permissions."
                    },
                    {
                      "id": "1aEWAcU0fArxScocwH9xxLgW7r3",
                      "name": "Minimal Workspace Access",
                      "description": "Access to view the workspace. Cannot view any sub resources or make changes to the workspace."
                    }
                  ],
                  "pagination": { "current": "MA==", "next": "Mg==" }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Admin", "IAM Roles"],
        "tags": ["IAM Roles"]
      }
    },
    "/tracking-plans/{trackingPlanId}/rules": {
      "get": {
        "summary": "listRulesFromTrackingPlanV1",
        "parameters": [
          {
            "in": "path",
            "name": "trackingPlanId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          },
          {
            "in": "query",
            "required": false,
            "name": "trackingPlanId",
            "description": "The tracking plan identifier.\n\nConfig API note: analogous to `name`.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The tracking plan identifier.\n\nConfig API note: analogous to `name`.",
              "type": "string",
              "title": "trackingPlanId"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Pagination options.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput",
              "description": "Pagination options.",
              "title": "pagination"
            }
          }
        ],
        "deprecated": false,
        "description": "Lists tracking plan rules\n\n**Note**: In order to successfully call this endpoint, the specified workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "listRulesFromTrackingPlan",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/ListRulesFromTrackingPlanAlphaOutput" },
                "example": {
                  "rules": [
                    {
                      "key": "New Tracking Plan Rule",
                      "type": "TRACK",
                      "version": 1,
                      "jsonSchema": {
                        "$schema": "http://json-schema.org/draft-07/schema#",
                        "type": "object",
                        "properties": {
                          "context": { "type": "object" },
                          "traits": { "type": "object" },
                          "properties": { "type": "object" }
                        }
                      },
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z",
                      "deprecatedAt": "2006-01-02T15:04:05.000Z"
                    }
                  ],
                  "pagination": { "current": "MA==" }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/ListRulesFromTrackingPlanBetaOutput" },
                "example": {
                  "rules": [
                    {
                      "key": "New Tracking Plan Rule",
                      "type": "TRACK",
                      "version": 1,
                      "jsonSchema": {
                        "$schema": "http://json-schema.org/draft-07/schema#",
                        "type": "object",
                        "properties": {
                          "context": { "type": "object" },
                          "traits": { "type": "object" },
                          "properties": { "type": "object" }
                        }
                      },
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z",
                      "deprecatedAt": "2006-01-02T15:04:05.000Z"
                    }
                  ],
                  "pagination": { "current": "MA==" }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/ListRulesFromTrackingPlanV1Output" },
                "example": {
                  "rules": [
                    {
                      "key": "New Tracking Plan Rule",
                      "type": "TRACK",
                      "version": 1,
                      "jsonSchema": {
                        "$schema": "http://json-schema.org/draft-07/schema#",
                        "type": "object",
                        "properties": {
                          "context": { "type": "object" },
                          "traits": { "type": "object" },
                          "properties": { "type": "object" }
                        }
                      },
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z",
                      "deprecatedAt": "2006-01-02T15:04:05.000Z"
                    }
                  ],
                  "pagination": { "current": "MA==" }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ListRulesFromTrackingPlanV1Output" },
                "example": {
                  "rules": [
                    {
                      "key": "New Tracking Plan Rule",
                      "type": "TRACK",
                      "version": 1,
                      "jsonSchema": {
                        "$schema": "http://json-schema.org/draft-07/schema#",
                        "type": "object",
                        "properties": {
                          "context": { "type": "object" },
                          "traits": { "type": "object" },
                          "properties": { "type": "object" }
                        }
                      },
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z",
                      "deprecatedAt": "2006-01-02T15:04:05.000Z"
                    }
                  ],
                  "pagination": { "current": "MA==" }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Protocols", "Tracking Plans"],
        "tags": ["Tracking Plans"]
      },
      "delete": {
        "summary": "removeRulesFromTrackingPlanV1",
        "parameters": [
          {
            "in": "path",
            "name": "trackingPlanId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Deletes tracking plan rules\n\n**Note**: In order to successfully call this endpoint, the specified workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "removeRulesFromTrackingPlan",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/RemoveRulesFromTrackingPlanAlphaInput" },
              "example": {
                "trackingPlanId": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
                "rules": [{ "key": "New Rule", "type": "TRACK", "version": 1 }]
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/RemoveRulesFromTrackingPlanBetaInput" },
              "example": {
                "trackingPlanId": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
                "rules": [{ "key": "New Rule", "type": "TRACK", "version": 1 }]
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/RemoveRulesFromTrackingPlanV1Input" },
              "example": {
                "trackingPlanId": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
                "rules": [{ "key": "New Rule", "type": "TRACK", "version": 1 }]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/RemoveRulesFromTrackingPlanAlphaOutput" },
                "example": { "status": "SUCCESS" }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/RemoveRulesFromTrackingPlanBetaOutput" },
                "example": { "status": "SUCCESS" }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/RemoveRulesFromTrackingPlanV1Output" },
                "example": { "status": "SUCCESS" }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RemoveRulesFromTrackingPlanV1Output" },
                "example": { "status": "SUCCESS" }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Protocols", "Tracking Plans"],
        "tags": ["Tracking Plans"]
      },
      "put": {
        "summary": "replaceRulesInTrackingPlanV1",
        "parameters": [
          {
            "in": "path",
            "name": "trackingPlanId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Replaces tracking plan rules\n\n**Note**: In order to successfully call this endpoint, the specified workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "replaceRulesInTrackingPlan",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/ReplaceRulesInTrackingPlanAlphaInput" },
              "example": {
                "trackingPlanId": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
                "rules": [{ "key": "New Replaced Rule", "type": "TRACK", "version": 1, "jsonSchema": {} }]
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/ReplaceRulesInTrackingPlanBetaInput" },
              "example": {
                "trackingPlanId": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
                "rules": [{ "key": "New Replaced Rule", "type": "TRACK", "version": 1, "jsonSchema": {} }]
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/ReplaceRulesInTrackingPlanV1Input" },
              "example": {
                "trackingPlanId": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
                "rules": [{ "key": "New Replaced Rule", "type": "TRACK", "version": 1, "jsonSchema": {} }]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/ReplaceRulesInTrackingPlanAlphaOutput" },
                "example": { "status": "SUCCESS" }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/ReplaceRulesInTrackingPlanBetaOutput" },
                "example": { "status": "SUCCESS" }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/ReplaceRulesInTrackingPlanV1Output" },
                "example": { "status": "SUCCESS" }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ReplaceRulesInTrackingPlanV1Output" },
                "example": { "status": "SUCCESS" }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Protocols", "Tracking Plans"],
        "tags": ["Tracking Plans"]
      },
      "patch": {
        "summary": "updateRulesInTrackingPlanV1",
        "parameters": [
          {
            "in": "path",
            "name": "trackingPlanId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Updates tracking plan rules\n\n**Note**: In order to successfully call this endpoint, the specified workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "updateRulesInTrackingPlan",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/UpdateRulesInTrackingPlanAlphaInput" },
              "example": {
                "trackingPlanId": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
                "rules": [{ "key": "New Rule", "type": "TRACK", "version": 1, "jsonSchema": {} }]
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/UpdateRulesInTrackingPlanBetaInput" },
              "example": {
                "trackingPlanId": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
                "rules": [{ "key": "New Rule", "type": "TRACK", "version": 1, "jsonSchema": {} }]
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/UpdateRulesInTrackingPlanV1Input" },
              "example": {
                "trackingPlanId": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
                "rules": [{ "key": "New Rule", "type": "TRACK", "version": 1, "jsonSchema": {} }]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/UpdateRulesInTrackingPlanAlphaOutput" },
                "example": { "status": "SUCCESS" }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/UpdateRulesInTrackingPlanBetaOutput" },
                "example": { "status": "SUCCESS" }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/UpdateRulesInTrackingPlanV1Output" },
                "example": { "status": "SUCCESS" }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UpdateRulesInTrackingPlanV1Output" },
                "example": { "status": "SUCCESS" }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Protocols", "Tracking Plans"],
        "tags": ["Tracking Plans"]
      }
    },
    "/sources/{sourceId}/settings": {
      "get": {
        "summary": "listSchemaSettingsInSourceV1",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          },
          {
            "in": "query",
            "required": false,
            "name": "sourceId",
            "description": "The id of the source to query settings for.\n\nConfig API note: analogous to `parent` and `name`.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The id of the source to query settings for.\n\nConfig API note: analogous to `parent` and `name`.",
              "type": "string",
              "title": "sourceId"
            }
          }
        ],
        "deprecated": false,
        "description": "Retrieves the schema configuration settings for a source. If Protocols is not enabled for the source, the configurations specific to Protocols will have default values.",
        "operationId": "listSchemaSettingsInSource",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/ListSchemaSettingsInSourceAlphaOutput" },
                "example": {
                  "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                  "settings": {
                    "track": {
                      "allowUnplannedEvents": true,
                      "allowUnplannedEventProperties": true,
                      "allowEventOnViolations": false,
                      "allowPropertiesOnViolations": true,
                      "commonEventOnViolations": "ALLOW"
                    },
                    "group": {
                      "allowTraitsOnViolations": true,
                      "allowUnplannedTraits": true,
                      "commonEventOnViolations": "ALLOW"
                    },
                    "identify": {
                      "allowTraitsOnViolations": true,
                      "allowUnplannedTraits": true,
                      "commonEventOnViolations": "ALLOW"
                    },
                    "forwardingBlockedEventsTo": "",
                    "forwardingViolationsTo": ""
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/ListSchemaSettingsInSourceBetaOutput" },
                "example": {
                  "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                  "settings": {
                    "track": {
                      "allowUnplannedEvents": true,
                      "allowUnplannedEventProperties": true,
                      "allowEventOnViolations": false,
                      "allowPropertiesOnViolations": true,
                      "commonEventOnViolations": "ALLOW"
                    },
                    "group": {
                      "allowTraitsOnViolations": true,
                      "allowUnplannedTraits": true,
                      "commonEventOnViolations": "ALLOW"
                    },
                    "identify": {
                      "allowTraitsOnViolations": true,
                      "allowUnplannedTraits": true,
                      "commonEventOnViolations": "ALLOW"
                    },
                    "forwardingBlockedEventsTo": "",
                    "forwardingViolationsTo": ""
                  }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/ListSchemaSettingsInSourceV1Output" },
                "example": {
                  "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                  "settings": {
                    "track": {
                      "allowUnplannedEvents": true,
                      "allowUnplannedEventProperties": true,
                      "allowEventOnViolations": false,
                      "allowPropertiesOnViolations": true,
                      "commonEventOnViolations": "ALLOW"
                    },
                    "group": {
                      "allowTraitsOnViolations": true,
                      "allowUnplannedTraits": true,
                      "commonEventOnViolations": "ALLOW"
                    },
                    "identify": {
                      "allowTraitsOnViolations": true,
                      "allowUnplannedTraits": true,
                      "commonEventOnViolations": "ALLOW"
                    },
                    "forwardingBlockedEventsTo": "",
                    "forwardingViolationsTo": ""
                  }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ListSchemaSettingsInSourceV1Output" },
                "example": {
                  "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                  "settings": {
                    "track": {
                      "allowUnplannedEvents": true,
                      "allowUnplannedEventProperties": true,
                      "allowEventOnViolations": false,
                      "allowPropertiesOnViolations": true,
                      "commonEventOnViolations": "ALLOW"
                    },
                    "group": {
                      "allowTraitsOnViolations": true,
                      "allowUnplannedTraits": true,
                      "commonEventOnViolations": "ALLOW"
                    },
                    "identify": {
                      "allowTraitsOnViolations": true,
                      "allowUnplannedTraits": true,
                      "commonEventOnViolations": "ALLOW"
                    },
                    "forwardingBlockedEventsTo": "",
                    "forwardingViolationsTo": ""
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Sources"],
        "tags": ["Sources"]
      },
      "patch": {
        "summary": "updateSchemaSettingsInSourceV1",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Updates the schema configuration for a source. If Protocols is not enabled for the source, any updates to Protocols-specific configurations will not be applied.\n\n      Config API omitted fields:\n- `updateMask`\n      ",
        "operationId": "updateSchemaSettingsInSource",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/UpdateSchemaSettingsInSourceAlphaInput" },
              "example": {
                "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                "group": {
                  "allowTraitsOnViolations": false,
                  "allowUnplannedTraits": false,
                  "commonEventOnViolations": "ALLOW"
                },
                "identify": {
                  "allowTraitsOnViolations": true,
                  "allowUnplannedTraits": true,
                  "commonEventOnViolations": "BLOCK"
                },
                "track": {
                  "allowEventOnViolations": false,
                  "allowPropertiesOnViolations": false,
                  "allowUnplannedEventProperties": false,
                  "allowUnplannedEvents": false,
                  "commonEventOnViolations": "OMIT_PROPERTIES"
                },
                "forwardingViolationsTo": "rh5BDZp6QDHvXFCkibm1pR",
                "forwardingBlockedEventsTo": "rh5BDZp6QDHvXFCkibm1pR"
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/UpdateSchemaSettingsInSourceBetaInput" },
              "example": {
                "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                "group": {
                  "allowTraitsOnViolations": false,
                  "allowUnplannedTraits": false,
                  "commonEventOnViolations": "ALLOW"
                },
                "identify": {
                  "allowTraitsOnViolations": true,
                  "allowUnplannedTraits": true,
                  "commonEventOnViolations": "BLOCK"
                },
                "track": {
                  "allowEventOnViolations": false,
                  "allowPropertiesOnViolations": false,
                  "allowUnplannedEventProperties": false,
                  "allowUnplannedEvents": false,
                  "commonEventOnViolations": "OMIT_PROPERTIES"
                },
                "forwardingViolationsTo": "rh5BDZp6QDHvXFCkibm1pR",
                "forwardingBlockedEventsTo": "rh5BDZp6QDHvXFCkibm1pR"
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/UpdateSchemaSettingsInSourceV1Input" },
              "example": {
                "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                "group": {
                  "allowTraitsOnViolations": false,
                  "allowUnplannedTraits": false,
                  "commonEventOnViolations": "ALLOW"
                },
                "identify": {
                  "allowTraitsOnViolations": true,
                  "allowUnplannedTraits": true,
                  "commonEventOnViolations": "BLOCK"
                },
                "track": {
                  "allowEventOnViolations": false,
                  "allowPropertiesOnViolations": false,
                  "allowUnplannedEventProperties": false,
                  "allowUnplannedEvents": false,
                  "commonEventOnViolations": "OMIT_PROPERTIES"
                },
                "forwardingViolationsTo": "rh5BDZp6QDHvXFCkibm1pR",
                "forwardingBlockedEventsTo": "rh5BDZp6QDHvXFCkibm1pR"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/UpdateSchemaSettingsInSourceAlphaOutput" },
                "example": {
                  "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                  "settings": {
                    "track": {
                      "allowUnplannedEvents": false,
                      "allowUnplannedEventProperties": false,
                      "allowEventOnViolations": false,
                      "allowPropertiesOnViolations": false,
                      "commonEventOnViolations": "OMIT_PROPERTIES"
                    },
                    "group": {
                      "allowTraitsOnViolations": false,
                      "allowUnplannedTraits": false,
                      "commonEventOnViolations": "ALLOW"
                    },
                    "identify": {
                      "allowTraitsOnViolations": true,
                      "allowUnplannedTraits": true,
                      "commonEventOnViolations": "BLOCK"
                    },
                    "forwardingBlockedEventsTo": "rh5BDZp6QDHvXFCkibm1pR",
                    "forwardingViolationsTo": "rh5BDZp6QDHvXFCkibm1pR"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/UpdateSchemaSettingsInSourceBetaOutput" },
                "example": {
                  "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                  "settings": {
                    "track": {
                      "allowUnplannedEvents": false,
                      "allowUnplannedEventProperties": false,
                      "allowEventOnViolations": false,
                      "allowPropertiesOnViolations": false,
                      "commonEventOnViolations": "OMIT_PROPERTIES"
                    },
                    "group": {
                      "allowTraitsOnViolations": false,
                      "allowUnplannedTraits": false,
                      "commonEventOnViolations": "ALLOW"
                    },
                    "identify": {
                      "allowTraitsOnViolations": true,
                      "allowUnplannedTraits": true,
                      "commonEventOnViolations": "BLOCK"
                    },
                    "forwardingBlockedEventsTo": "rh5BDZp6QDHvXFCkibm1pR",
                    "forwardingViolationsTo": "rh5BDZp6QDHvXFCkibm1pR"
                  }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/UpdateSchemaSettingsInSourceV1Output" },
                "example": {
                  "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                  "settings": {
                    "track": {
                      "allowUnplannedEvents": false,
                      "allowUnplannedEventProperties": false,
                      "allowEventOnViolations": false,
                      "allowPropertiesOnViolations": false,
                      "commonEventOnViolations": "OMIT_PROPERTIES"
                    },
                    "group": {
                      "allowTraitsOnViolations": false,
                      "allowUnplannedTraits": false,
                      "commonEventOnViolations": "ALLOW"
                    },
                    "identify": {
                      "allowTraitsOnViolations": true,
                      "allowUnplannedTraits": true,
                      "commonEventOnViolations": "BLOCK"
                    },
                    "forwardingBlockedEventsTo": "rh5BDZp6QDHvXFCkibm1pR",
                    "forwardingViolationsTo": "rh5BDZp6QDHvXFCkibm1pR"
                  }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UpdateSchemaSettingsInSourceV1Output" },
                "example": {
                  "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                  "settings": {
                    "track": {
                      "allowUnplannedEvents": false,
                      "allowUnplannedEventProperties": false,
                      "allowEventOnViolations": false,
                      "allowPropertiesOnViolations": false,
                      "commonEventOnViolations": "OMIT_PROPERTIES"
                    },
                    "group": {
                      "allowTraitsOnViolations": false,
                      "allowUnplannedTraits": false,
                      "commonEventOnViolations": "ALLOW"
                    },
                    "identify": {
                      "allowTraitsOnViolations": true,
                      "allowUnplannedTraits": true,
                      "commonEventOnViolations": "BLOCK"
                    },
                    "forwardingBlockedEventsTo": "rh5BDZp6QDHvXFCkibm1pR",
                    "forwardingViolationsTo": "rh5BDZp6QDHvXFCkibm1pR"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Sources"],
        "tags": ["Sources"]
      }
    },
    "/warehouses/{warehouseId}/connected-sources/{sourceId}/selective-syncs": {
      "get": {
        "summary": "listSelectiveSyncsFromWarehouseAndSourceV1",
        "parameters": [
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          },
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          },
          {
            "in": "query",
            "required": false,
            "name": "warehouseId",
            "description": "The id of the warehouse.\n\nThis parameter exists in v1.",
            "schema": { "description": "The id of the warehouse.", "type": "string", "title": "warehouseId" }
          },
          {
            "in": "query",
            "required": false,
            "name": "sourceId",
            "description": "The id of the source.\n\nThis parameter exists in v1.",
            "schema": { "description": "The id of the source.", "type": "string", "title": "sourceId" }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Defines the pagination parameters.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput",
              "description": "Defines the pagination parameters.",
              "title": "pagination"
            }
          }
        ],
        "deprecated": false,
        "description": "Returns the schema for a Warehouse, including Sources, Collections, and Properties",
        "operationId": "listSelectiveSyncsFromWarehouseAndSource",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/ListSelectiveSyncsFromWarehouseAndSourceAlphaOutput" },
                "example": {
                  "items": [
                    {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "collection": "tracks",
                      "warehouseId": "6WzNjtobBv3GjubD8wUnA6",
                      "properties": {
                        "amount": {
                          "enabled": true,
                          "type": "integer",
                          "lastSeenAt": "2006-01-02T15:04:05.000Z",
                          "createdAt": "2006-01-02T15:04:05.000Z"
                        },
                        "context_library_name": {
                          "enabled": true,
                          "type": "string",
                          "lastSeenAt": "2006-01-02T15:04:05.000Z",
                          "createdAt": "2006-01-02T15:04:05.000Z"
                        }
                      }
                    }
                  ],
                  "pagination": { "current": "MA==", "next": "MTAw", "totalEntries": 10 }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/ListSelectiveSyncsFromWarehouseAndSourceBetaOutput" },
                "example": {
                  "items": [
                    {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "collection": "tracks",
                      "warehouseId": "6WzNjtobBv3GjubD8wUnA6",
                      "properties": {
                        "amount": {
                          "enabled": true,
                          "type": "integer",
                          "lastSeenAt": "2006-01-02T15:04:05.000Z",
                          "createdAt": "2006-01-02T15:04:05.000Z"
                        },
                        "context_library_name": {
                          "enabled": true,
                          "type": "string",
                          "lastSeenAt": "2006-01-02T15:04:05.000Z",
                          "createdAt": "2006-01-02T15:04:05.000Z"
                        }
                      }
                    }
                  ],
                  "pagination": { "current": "MA==", "next": "MTAw", "totalEntries": 10 }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/ListSelectiveSyncsFromWarehouseAndSourceV1Output" },
                "example": {
                  "items": [
                    {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "collection": "tracks",
                      "warehouseId": "6WzNjtobBv3GjubD8wUnA6",
                      "source": "hV2lO1ZmMd",
                      "properties": {
                        "amount": {
                          "enabled": true,
                          "type": "integer",
                          "lastSeenAt": "2006-01-02T15:04:05.000Z",
                          "createdAt": "2006-01-02T15:04:05.000Z"
                        },
                        "context_library_name": {
                          "enabled": true,
                          "type": "string",
                          "lastSeenAt": "2006-01-02T15:04:05.000Z",
                          "createdAt": "2006-01-02T15:04:05.000Z"
                        }
                      }
                    }
                  ],
                  "pagination": { "current": "MA==", "next": "MTAw", "totalEntries": 10 }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ListSelectiveSyncsFromWarehouseAndSourceV1Output" },
                "example": {
                  "items": [
                    {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "collection": "tracks",
                      "warehouseId": "6WzNjtobBv3GjubD8wUnA6",
                      "source": "hV2lO1ZmMd",
                      "properties": {
                        "amount": {
                          "enabled": true,
                          "type": "integer",
                          "lastSeenAt": "2006-01-02T15:04:05.000Z",
                          "createdAt": "2006-01-02T15:04:05.000Z"
                        },
                        "context_library_name": {
                          "enabled": true,
                          "type": "string",
                          "lastSeenAt": "2006-01-02T15:04:05.000Z",
                          "createdAt": "2006-01-02T15:04:05.000Z"
                        }
                      }
                    }
                  ],
                  "pagination": { "current": "MA==", "next": "MTAw", "totalEntries": 10 }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Selective Sync"],
        "tags": ["Selective Sync"]
      }
    },
    "/suppressions": {
      "get": {
        "summary": "listSuppressionsV1",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Pagination parameters.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput",
              "description": "Pagination parameters.",
              "title": "pagination"
            }
          }
        ],
        "deprecated": false,
        "description": "Lists all suppressions in a given workspace",
        "operationId": "listSuppressions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/ListSuppressionsAlphaOutput" },
                "example": {
                  "suppressed": [{ "subjectType": "userId", "subjectIds": ["1"] }],
                  "pagination": { "current": "MQ==", "next": "cmVnLTY1MDgtMDA5ODE=" }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/ListSuppressionsBetaOutput" },
                "example": {
                  "suppressed": [{ "subjectType": "userId", "subjectIds": ["1"] }],
                  "pagination": { "current": "MQ==", "next": "cmVnLTY1MDgtMDA5ODE=" }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/ListSuppressionsV1Output" },
                "example": {
                  "suppressed": [{ "subjectType": "userId", "subjectIds": ["1"] }],
                  "pagination": { "current": "MQ==", "next": "cmVnLTY1MDgtMDA5ODE=" }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ListSuppressionsV1Output" },
                "example": {
                  "suppressed": [{ "subjectType": "userId", "subjectIds": ["1"] }],
                  "pagination": { "current": "MQ==", "next": "cmVnLTY1MDgtMDA5ODE=" }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Deletion and Suppression"],
        "tags": ["Deletion and Suppression"]
      }
    },
    "/warehouses/{warehouseId}/syncs": {
      "get": {
        "summary": "listSyncsFromWarehouseV1",
        "parameters": [
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          },
          {
            "in": "query",
            "required": false,
            "name": "warehouseId",
            "description": "The id of the warehouse for which to return the sync overview.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The id of the warehouse for which to return the sync overview.",
              "type": "string",
              "title": "warehouseId"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Defines the pagination parameters.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput",
              "description": "Defines the pagination parameters.",
              "title": "pagination"
            }
          }
        ],
        "deprecated": false,
        "description": "Returns the overview of syncs for every Source connected to a Warehouse",
        "operationId": "listSyncsFromWarehouse",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/ListSyncsFromWarehouseAlphaOutput" },
                "example": { "reports": [], "pagination": { "next": null, "current": "" } }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/ListSyncsFromWarehouseBetaOutput" },
                "example": { "reports": [], "pagination": { "next": null, "current": "" } }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/ListSyncsFromWarehouseV1Output" },
                "example": { "reports": [], "pagination": { "next": null, "current": "" } }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ListSyncsFromWarehouseV1Output" },
                "example": { "reports": [], "pagination": { "next": null, "current": "" } }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Selective Sync"],
        "tags": ["Selective Sync"]
      }
    },
    "/warehouses/{warehouseId}/connected-sources/{sourceId}/syncs": {
      "get": {
        "summary": "listSyncsFromWarehouseAndSourceV1",
        "parameters": [
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          },
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          },
          {
            "in": "query",
            "required": false,
            "name": "warehouseId",
            "description": "The id of the warehouse.\n\nThis parameter exists in v1.",
            "schema": { "description": "The id of the warehouse.", "type": "string", "title": "warehouseId" }
          },
          {
            "in": "query",
            "required": false,
            "name": "sourceId",
            "description": "The id of a source connected to the warehouse.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The id of a source connected to the warehouse.",
              "type": "string",
              "title": "sourceId"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Defines the pagination parameters.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput",
              "description": "Defines the pagination parameters.",
              "title": "pagination"
            }
          }
        ],
        "deprecated": false,
        "description": "Returns the overview of syncs for a Source connected to a Warehouse",
        "operationId": "listSyncsFromWarehouseAndSource",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/ListSyncsFromWarehouseAndSourceAlphaOutput" },
                "example": { "reports": [], "pagination": { "next": null, "current": "" } }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/ListSyncsFromWarehouseAndSourceBetaOutput" },
                "example": { "reports": [], "pagination": { "next": null, "current": "" } }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/ListSyncsFromWarehouseAndSourceV1Output" },
                "example": { "reports": [], "pagination": { "next": null, "current": "" } }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ListSyncsFromWarehouseAndSourceV1Output" },
                "example": { "reports": [], "pagination": { "next": null, "current": "" } }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Selective Sync"],
        "tags": ["Selective Sync"]
      }
    },
    "/users/{userId}/groups": {
      "get": {
        "summary": "listUserGroupsFromUserV1",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          },
          {
            "in": "query",
            "required": false,
            "name": "userId",
            "description": "The id of the user to get groups for.\n\nThis parameter exists in v1.",
            "schema": { "description": "The id of the user to get groups for.", "type": "string", "title": "userId" }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Pagination for groups.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput",
              "description": "Pagination for groups.",
              "title": "pagination"
            }
          }
        ],
        "deprecated": false,
        "description": "Returns all Groups a User belongs to",
        "operationId": "listUserGroupsFromUser",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/ListUserGroupsFromUserAlphaOutput" },
                "example": {
                  "groups": [{ "id": "bBABwqbaDf2QdwTbW8bNEm", "name": "PAPI Example Group" }],
                  "pagination": { "current": "MA==", "totalEntries": 1 }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/ListUserGroupsFromUserBetaOutput" },
                "example": { "groups": [], "pagination": { "current": "MA==", "totalEntries": 0 } }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/ListUserGroupsFromUserV1Output" },
                "example": { "groups": [], "pagination": { "current": "MA==", "totalEntries": 0 } }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ListUserGroupsFromUserV1Output" },
                "example": { "groups": [], "pagination": { "current": "MA==", "totalEntries": 0 } }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Admin", "IAM Users"],
        "tags": ["IAM Users"]
      }
    },
    "/destination/filters/preview": {
      "post": {
        "summary": "previewDestinationFilterV1",
        "parameters": [],
        "deprecated": false,
        "description": "Simulates the application of a destination filter to a provided JSON payload",
        "operationId": "previewDestinationFilter",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/PreviewDestinationFilterAlphaInput" },
              "example": {
                "filter": {
                  "if": "type = \"track\" AND event = \"Order Completed\"",
                  "actions": [{ "type": "ALLOW_PROPERTIES", "fields": { "product": ["event", "requestedFrom"] } }]
                },
                "payload": {
                  "type": "track",
                  "event": "Order Completed",
                  "product": {
                    "name": "Fake mustache",
                    "requestedFrom": "/products/123/checkout",
                    "referrer": "www.example.com"
                  }
                }
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/PreviewDestinationFilterBetaInput" },
              "example": {
                "filter": {
                  "if": "type = \"track\" AND event = \"Order Completed\"",
                  "actions": [{ "type": "ALLOW_PROPERTIES", "fields": { "product": ["event", "requestedFrom"] } }]
                },
                "payload": {
                  "type": "track",
                  "event": "Order Completed",
                  "product": {
                    "name": "Fake mustache",
                    "requestedFrom": "/products/123/checkout",
                    "referrer": "www.example.com"
                  }
                }
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/PreviewDestinationFilterV1Input" },
              "example": {
                "filter": {
                  "if": "type = \"track\" AND event = \"Order Completed\"",
                  "actions": [{ "type": "ALLOW_PROPERTIES", "fields": { "product": ["event", "requestedFrom"] } }]
                },
                "payload": {
                  "type": "track",
                  "event": "Order Completed",
                  "product": {
                    "name": "Fake mustache",
                    "requestedFrom": "/products/123/checkout",
                    "referrer": "www.example.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/PreviewDestinationFilterAlphaOutput" },
                "example": {
                  "inputPayload": {
                    "type": "track",
                    "event": "Order Completed",
                    "product": {
                      "name": "Fake mustache",
                      "requestedFrom": "/products/123/checkout",
                      "referrer": "www.example.com"
                    }
                  },
                  "result": {
                    "type": "track",
                    "event": "Order Completed",
                    "product": { "requestedFrom": "/products/123/checkout" }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/PreviewDestinationFilterBetaOutput" },
                "example": {
                  "inputPayload": {
                    "type": "track",
                    "event": "Order Completed",
                    "product": {
                      "name": "Fake mustache",
                      "requestedFrom": "/products/123/checkout",
                      "referrer": "www.example.com"
                    }
                  },
                  "result": {
                    "type": "track",
                    "event": "Order Completed",
                    "product": { "requestedFrom": "/products/123/checkout" }
                  }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/PreviewDestinationFilterV1Output" },
                "example": {
                  "inputPayload": {
                    "type": "track",
                    "event": "Order Completed",
                    "product": {
                      "name": "Fake mustache",
                      "requestedFrom": "/products/123/checkout",
                      "referrer": "www.example.com"
                    }
                  },
                  "result": {
                    "type": "track",
                    "event": "Order Completed",
                    "product": { "requestedFrom": "/products/123/checkout" }
                  }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PreviewDestinationFilterV1Output" },
                "example": {
                  "inputPayload": {
                    "type": "track",
                    "event": "Order Completed",
                    "product": {
                      "name": "Fake mustache",
                      "requestedFrom": "/products/123/checkout",
                      "referrer": "www.example.com"
                    }
                  },
                  "result": {
                    "type": "track",
                    "event": "Order Completed",
                    "product": { "requestedFrom": "/products/123/checkout" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Destination Filters"],
        "tags": ["Destination Filters"]
      }
    },
    "/group/{userGroupId}/users": {
      "delete": {
        "summary": "removeUsersFromUserGroupV1",
        "parameters": [
          {
            "in": "path",
            "name": "userGroupId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Removes one or multiple users or invites from a user group by email.\n\n\nThis endpoint generates the following audit event:\n* Group Memberships Deleted\n* User Removed From User Group\n\n      ",
        "operationId": "removeUsersFromUserGroup",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/RemoveUsersFromUserGroupAlphaInput" },
              "example": { "emails": ["foo@example.com"], "userGroupId": "bBABwqbaDf2QdwTbW8bNEm" }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/RemoveUsersFromUserGroupBetaInput" },
              "example": { "emails": ["foo@example.com"], "userGroupId": "bBABwqbaDf2QdwTbW8bNEm" }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/RemoveUsersFromUserGroupV1Input" },
              "example": { "emails": ["foo@example.com"], "userGroupId": "bBABwqbaDf2QdwTbW8bNEm" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/RemoveUsersFromUserGroupAlphaOutput" },
                "example": { "status": "SUCCESS" }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/RemoveUsersFromUserGroupBetaOutput" },
                "example": { "status": "SUCCESS" }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/RemoveUsersFromUserGroupV1Output" },
                "example": { "status": "SUCCESS" }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RemoveUsersFromUserGroupV1Output" },
                "example": { "status": "SUCCESS" }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Admin", "IAM Groups"],
        "tags": ["IAM Groups"]
      },
      "put": {
        "summary": "replaceUsersInUserGroupV1",
        "parameters": [
          {
            "in": "path",
            "name": "userGroupId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Replaces the members of a user group by email.\n\n\nThis endpoint generates the following audit events:\n* Subjects Added to Group\n* User Added To User Group\n* Group Memberships Deleted\n\n      ",
        "operationId": "replaceUsersInUserGroup",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/ReplaceUsersInUserGroupAlphaInput" },
              "example": { "emails": ["foo@example.com"], "userGroupId": "bBABwqbaDf2QdwTbW8bNEm" }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/ReplaceUsersInUserGroupBetaInput" },
              "example": { "emails": ["foo@example.com"], "userGroupId": "bBABwqbaDf2QdwTbW8bNEm" }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/ReplaceUsersInUserGroupV1Input" },
              "example": { "emails": ["foo@example.com"], "userGroupId": "bBABwqbaDf2QdwTbW8bNEm" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/ReplaceUsersInUserGroupAlphaOutput" },
                "example": {
                  "userGroup": { "id": "bBABwqbaDf2QdwTbW8bNEm", "name": "PAPI Example Group", "memberCount": 1 }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/ReplaceUsersInUserGroupBetaOutput" },
                "example": {
                  "userGroup": { "id": "bBABwqbaDf2QdwTbW8bNEm", "name": "PAPI Example Group", "memberCount": 1 }
                }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/ReplaceUsersInUserGroupV1Output" },
                "example": {
                  "userGroup": { "id": "bBABwqbaDf2QdwTbW8bNEm", "name": "PAPI Example Group", "memberCount": 1 }
                }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ReplaceUsersInUserGroupV1Output" },
                "example": {
                  "userGroup": { "id": "bBABwqbaDf2QdwTbW8bNEm", "name": "PAPI Example Group", "memberCount": 1 }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Admin", "IAM Groups"],
        "tags": ["IAM Groups"]
      }
    },
    "/spaces/{spaceId}/messaging-subscriptions": {
      "put": {
        "summary": "replaceMessagingSubscriptionsInSpacesAlpha",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Replace Messaging Subscriptions in Spaces",
        "operationId": "replaceMessagingSubscriptionsInSpaces",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/ReplaceMessagingSubscriptionsInSpacesAlphaInput" },
              "example": {
                "spaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                "subscriptions": [
                  { "key": "test@email.com", "type": "EMAIL", "status": "DID_NOT_SUBSCRIBE" },
                  { "key": "pgibbonsexample.com", "type": "EMAIL", "status": "UNSUBSCRIBED" },
                  { "key": "+12162226233", "type": "SMS", "status": "DID_NOT_SUBSCRIBE" },
                  { "key": "11", "type": "SMS", "status": "DID_NOT_SUBSCRIBE" }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/ReplaceMessagingSubscriptionsInSpacesAlphaOutput" },
                "example": {
                  "successes": [
                    { "key": "+12162226233", "type": "SMS", "status": "DID_NOT_SUBSCRIBE" },
                    { "key": "test@email.com", "type": "EMAIL", "status": "DID_NOT_SUBSCRIBE" }
                  ],
                  "failures": [
                    {
                      "key": "pgibbonsexample.com",
                      "type": "EMAIL",
                      "status": "UNSUBSCRIBED",
                      "errors": [{ "code": "INVALID_EMAIL", "message": "Email is invalid or non-existent" }]
                    },
                    {
                      "key": "11",
                      "type": "SMS",
                      "status": "DID_NOT_SUBSCRIBE",
                      "errors": [{ "code": "INVALID_SMS", "message": "SMS number is invalid or non-existent" }]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Spaces"],
        "tags": ["Spaces"]
      }
    },
    "/warehouses/{warehouseId}/selective-sync": {
      "patch": {
        "summary": "updateSelectiveSyncForWarehouseV1",
        "parameters": [
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "schema": { "type": "string", "minimum": 1, "maximum": 255 }
          }
        ],
        "deprecated": false,
        "description": "Configures the schema for a Warehouse, including Sources, Collections, and Properties.\n\n\nThis endpoint generates the following audit events:\n* Storage Destination Modified\n\n      ",
        "operationId": "updateSelectiveSyncForWarehouse",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": { "$ref": "#/components/schemas/UpdateSelectiveSyncForWarehouseAlphaInput" },
              "example": {
                "warehouseId": "kjU72LCJexvrqL7G4TMHHN",
                "syncOverrides": [
                  {
                    "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                    "enabled": true,
                    "collection": "checkout_started",
                    "property": "context_ip"
                  }
                ]
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": { "$ref": "#/components/schemas/UpdateSelectiveSyncForWarehouseBetaInput" },
              "example": {
                "warehouseId": "kjU72LCJexvrqL7G4TMHHN",
                "syncOverrides": [
                  {
                    "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                    "enabled": true,
                    "collection": "checkout_started",
                    "property": "context_ip"
                  }
                ]
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": { "$ref": "#/components/schemas/UpdateSelectiveSyncForWarehouseV1Input" },
              "example": {
                "warehouseId": "kjU72LCJexvrqL7G4TMHHN",
                "syncOverrides": [
                  {
                    "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                    "enabled": true,
                    "collection": "checkout_started",
                    "property": "context_ip"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": { "$ref": "#/components/schemas/UpdateSelectiveSyncForWarehouseAlphaOutput" },
                "example": { "status": "UPDATED", "warnings": [] }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": { "$ref": "#/components/schemas/UpdateSelectiveSyncForWarehouseBetaOutput" },
                "example": { "status": "UPDATED", "warnings": [] }
              },
              "application/vnd.segment.v1+json": {
                "schema": { "$ref": "#/components/schemas/UpdateSelectiveSyncForWarehouseV1Output" },
                "example": { "status": "UPDATED", "warnings": [] }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UpdateSelectiveSyncForWarehouseV1Output" },
                "example": { "status": "UPDATED", "warnings": [] }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "NotFound", "message": "Resource not found" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "ValidationFailure", "message": "Validation failure" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": { "errors": [{ "type": "RateLimited", "message": "Rate limit exceeded" }] },
                "schema": { "$ref": "#/components/schemas/RequestErrorEnvelope" }
              }
            }
          }
        },
        "x-domain-hierarchy": ["Connections", "Selective Sync"],
        "tags": ["Selective Sync"]
      }
    }
  },
  "security": [{ "token": [] }],
  "x-domain-hierarchy": [
    {
      "name": "Connections",
      "subDomains": [
        { "name": "Warehouses", "subDomains": [] },
        { "name": "Sources", "subDomains": [] },
        { "name": "Deletion and Suppression", "subDomains": [] },
        { "name": "Destinations", "subDomains": [] },
        { "name": "Edge Functions", "subDomains": [] },
        { "name": "Destination Filters", "subDomains": [] },
        { "name": "Functions", "subDomains": [] },
        { "name": "Selective Sync", "subDomains": [] },
        { "name": "Catalog", "subDomains": [] }
      ]
    },
    {
      "name": "Admin",
      "subDomains": [
        { "name": "IAM Users", "subDomains": [] },
        { "name": "IAM Groups", "subDomains": [] },
        { "name": "Labels", "subDomains": [] },
        { "name": "Audit Trail", "subDomains": [] },
        { "name": "IAM Roles", "subDomains": [] }
      ]
    },
    {
      "name": "Protocols",
      "subDomains": [
        { "name": "Tracking Plans", "subDomains": [] },
        { "name": "Transformations", "subDomains": [] }
      ]
    },
    { "name": "Spaces", "subDomains": [] },
    { "name": "Testing", "subDomains": [] },
    {
      "name": "Usage",
      "subDomains": [
        { "name": "API Calls", "subDomains": [] },
        { "name": "Monthly Tracked Users", "subDomains": [] }
      ]
    },
    { "name": "Monitoring", "subDomains": [{ "name": "Events", "subDomains": [] }] },
    { "name": "Workspaces", "subDomains": [] }
  ],
  "x-tagGroups": [
    {
      "name": "Connections",
      "tags": [
        "Warehouses",
        "Sources",
        "Deletion and Suppression",
        "Destinations",
        "Edge Functions",
        "Destination Filters",
        "Functions",
        "Selective Sync",
        "Catalog"
      ]
    },
    { "name": "Admin", "tags": ["IAM Users", "IAM Groups", "Labels", "Audit Trail", "IAM Roles"] },
    { "name": "Protocols", "tags": ["Tracking Plans", "Transformations"] },
    { "name": "", "tags": ["Spaces", "Testing", "Workspaces"] },
    { "name": "Usage", "tags": ["API Calls", "Monthly Tracked Users"] },
    { "name": "Monitoring", "tags": ["Events"] }
  ],
  "tags": [
    { "name": "Warehouses", "description": "Operations related to Warehouses" },
    { "name": "Sources", "description": "Operations related to Sources" },
    { "name": "IAM Users", "description": "Operations related to IAM Users" },
    { "name": "IAM Groups", "description": "Operations related to IAM Groups" },
    { "name": "Tracking Plans", "description": "Operations related to Tracking Plans" },
    { "name": "Spaces", "description": "Operations related to Spaces" },
    { "name": "Deletion and Suppression", "description": "Operations related to Deletion and Suppression" },
    { "name": "Destinations", "description": "Operations related to Destinations" },
    { "name": "Edge Functions", "description": "Operations related to Edge Functions" },
    { "name": "Destination Filters", "description": "Operations related to Destination Filters" },
    { "name": "Functions", "description": "Operations related to Functions" },
    { "name": "Labels", "description": "Operations related to Labels" },
    { "name": "Transformations", "description": "Operations related to Transformations" },
    { "name": "Testing", "description": "Operations related to Testing" },
    { "name": "Selective Sync", "description": "Operations related to Selective Sync" },
    { "name": "API Calls", "description": "Operations related to API Calls" },
    { "name": "Monthly Tracked Users", "description": "Operations related to Monthly Tracked Users" },
    { "name": "Catalog", "description": "Operations related to Catalog" },
    { "name": "Events", "description": "Operations related to Events" },
    { "name": "Workspaces", "description": "Operations related to Workspaces" },
    { "name": "Audit Trail", "description": "Operations related to Audit Trail" },
    { "name": "IAM Roles", "description": "Operations related to IAM Roles" }
  ]
}
