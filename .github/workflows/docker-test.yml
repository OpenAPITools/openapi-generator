# This is a basic workflow to help you get started with Actions

name: Build and test Docker images

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: ubuntu-18.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: uraimo/run-on-arch-action@v2.0.5
        name: Run commands
        id: runcmd
        with:
          arch: aarch64
          distro: ubuntu18.04

          # Set an output parameter `uname` for use in subsequent steps
          run: |
            uname -a
            echo ::set-output name=uname::$(uname -a)

      # set up JDK
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      # uname -a 
      - name: uname -a 
        run: uname -a 

      # build the project
      - name: mvn clean package
        run: mvn --batch-mode clean package

      # Build modules/openapi-generator-cli/Dockerfile
      - name: Build
        run: cp docker-entrypoint.sh ./modules/openapi-generator-cli && docker build -t openapi-generator-cli-test modules/openapi-generator-cli/
      
      # Runs a set of commands using the runners shell
      - name: Generate a Go client
        run: |
          docker run --rm -v "${PWD}:/local" openapi-generator-cli-test generate \
          -i https://raw.githubusercontent.com/openapitools/openapi-generator/master/modules/openapi-generator/src/test/resources/3_0/petstore.yaml \
          -g go \
          -o /local/out/go
