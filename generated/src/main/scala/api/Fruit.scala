/**
 * fruity
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package api
import play.api.libs.json._

            trait Fruit (
                fruitType: String,
        )

            object Fruit {
                private val discriminator = "fruitType"

                implicit val format: OFormat[Fruit] = new OFormat[Fruit]{
                    override def reads(json: JsValue): JsResult[Fruit] =
                        json.validate[JsObject].flatMap(
                            _.value(discriminator).as[String] match {
                                case "AppleReqDisc" => json.validate[AppleReqDisc]
                                case "BananaReqDisc" => json.validate[BananaReqDisc]
                            }
                        )

                    override def writes(o: Fruit): JsObject = o match {
                            case a: AppleReqDisc => AppleReqDisc.format.writes(a) + (discriminator -> JsString("AppleReqDisc"))
                            case a: BananaReqDisc => BananaReqDisc.format.writes(a) + (discriminator -> JsString("BananaReqDisc"))
                    }
                }
            }


