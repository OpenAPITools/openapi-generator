{
  "files": [
    {
      "input": "ada-petstore.sh",
      "matches": [
        "Client: Ada"
      ]
    },
    {
      "input": "android-petstore-httpclient.sh",
      "matches": [
        "Client: Android"
      ]
    },
    {
      "input": "android-petstore-volley.sh",
      "matches": [
        "Client: Android"
      ]
    },
    {
      "input": "apache2-petstore-config.sh",
      "matches": [
        "Config: Apache"
      ]
    },
    {
      "input": "apex-petstore.sh",
      "matches": [
        "Client: Apex"
      ]
    },
    {
      "input": "aspnetcore-petstore-server.sh",
      "matches": [
        "Server: C-Sharp"
      ]
    },
    {
      "input": "bash-petstore.sh",
      "matches": [
        "Client: Bash"
      ]
    },
    {
      "input": "c-petstore.sh",
      "matches": [
        "Client: C"
      ]
    },
    {
      "input": "clojure-petstore.sh",
      "matches": [
        "Client: Clojure"
      ]
    },
    {
      "input": "cpp-pistache-server-petstore.sh",
      "matches": [
        "Server: C++"
      ]
    },
    {
      "input": "cpp-qt5-petstore.sh",
      "matches": [
        "Client: C++",
        "Client: QT"
      ]
    },
    {
      "input": "cpp-qt5-qhttpengine-server-petstore.sh",
      "matches": [
        "Server: C++"
      ]
    },
    {
      "input": "cpp-restbed-petstore-server.sh",
      "matches": [
        "Server: C++"
      ]
    },
    {
      "input": "cpp-restsdk-petstore.sh",
      "matches": [
        "Client: C++"
      ]
    },
    {
      "input": "cpp-tizen-petstore.sh",
      "matches": [
        "Client: C++"
      ]
    },
    {
      "input": "csharp-dotnet2-petstore.sh",
      "matches": [
        "Client: C-Sharp"
      ]
    },
    {
      "input": "csharp-petstore-net-35.sh",
      "matches": [
        "Client: C-Sharp"
      ]
    },
    {
      "input": "csharp-petstore-net-40.sh",
      "matches": [
        "Client: C-Sharp"
      ]
    },
    {
      "input": "csharp-petstore-net-standard.sh",
      "matches": [
        "Client: C-Sharp"
      ]
    },
    {
      "input": "csharp-petstore-netcore-project.sh",
      "matches": [
        "Client: C-Sharp"
      ]
    },
    {
      "input": "csharp-petstore.sh",
      "matches": [
        "Client: C-Sharp"
      ]
    },
    {
      "input": "csharp-property-changed-petstore.sh",
      "matches": [
        "Client: C-Sharp"
      ]
    },
    {
      "input": "csharp-netcore-petstore.sh",
      "matches": [
        "Client: C-Sharp"
      ]
    },
    {
      "input": "cwiki-petstore.sh",
      "matches": [
        "Documentation: Cwiki"
      ]
    },
    {
      "input": "dart-jaguar-petstore.sh",
      "matches": [
        "Client: Dart"
      ]
    },
    {
      "input": "dart-dio-petstore.sh",
      "matches": [
        "Client: Dart"
      ]
    },
    {
      "input": "dart-petstore.sh",
      "matches": [
        "Client: Dart"
      ]
    },
    {
      "input": "dart2-petstore.sh",
      "matches": [
        "Client: Dart"
      ]
    },
    {
      "input": "dynamic-html.sh",
      "matches": [
        "Documentation: Dynamic HTML"
      ]
    },
    {
      "input": "eiffel-petstore.sh",
      "matches": [
        "Client: Eiffel"
      ]
    },
    {
      "input": "elixir-petstore.sh",
      "matches": [
        "Client: Elixir"
      ]
    },
    {
      "input": "elm-0.18-petstore.sh",
      "matches": [
        "Client: Elm"
      ]
    },
    {
      "input": "elm-petstore.sh",
      "matches": [
        "Client: Elm"
      ]
    },
    {
      "input": "erlang-petstore-client.sh",
      "matches": [
        "Client: Erlang"
      ]
    },
    {
      "input": "erlang-petstore-proper.sh",
      "matches": [
        "Client: Erlang"
      ]
    },
    {
      "input": "erlang-petstore-server.sh",
      "matches": [
        "Server: Erlang"
      ]
    },
    {
      "input": "scala-finch-petstore-server.sh",
      "matches": [
        "Server: Scala"
      ]
    },
    {
      "input": "flash-petstore.sh",
      "matches": [
        "Client: Flash/ActionScript"
      ]
    },
    {
      "input": "go-gin-petstore-server.sh",
      "matches": [
        "Server: Go"
      ]
    },
    {
      "input": "go-petstore-server.sh",
      "matches": [
        "Server: Go"
      ]
    },
    {
      "input": "go-petstore-withxml.sh",
      "matches": [
        "Client: Go"
      ]
    },
    {
      "input": "go-petstore.sh",
      "matches": [
        "Client: Go"
      ]
    },
    {
      "input": "graphql-schema-petstore.sh",
      "matches": [
        "Schema: GraphQL"
      ]
    },
    {
      "input": "graphql-nodejs-express-server.sh",
      "matches": [
        "Server: GraphQL"
      ]
    },
    {
      "input": "groovy-petstore.sh",
      "matches": [
        "Client: Groovy"
      ]
    },
    {
      "input": "haskell-http-client-petstore.sh",
      "matches": [
        "Client: Haskell"
      ]
    },
    {
      "input": "haskell-servant-petstore.sh",
      "matches": [
        "Server: Haskell"
      ]
    },
    {
      "input": "html-markdown.sh",
      "matches": [
        "Client: HTML"
      ]
    },
    {
      "input": "html-petstore.sh",
      "matches": [
        "Client: HTML"
      ]
    },
    {
      "input": "html2-petstore.sh",
      "matches": [
        "Client: HTML"
      ]
    },
    {
      "input": "java-inflector-petstore-server.sh",
      "matches": [
        "Server: Java"
      ]
    },
    {
      "input": "java-msf4j-petstore-server.sh",
      "matches": [
        "Server: Java"
      ]
    },
    {
      "input": "java-petstore-feign-10x.sh",
      "matches": [
        "Client: Java"
      ]
    },
    {
      "input": "java-petstore-feign.sh",
      "matches": [
        "Client: Java"
      ]
    },
    {
      "input": "java-petstore-google-api-client.sh",
      "matches": [
        "Client: Java"
      ]
    },
    {
      "input": "java-petstore-jersey1.sh",
      "matches": [
        "Client: Java"
      ]
    },
    {
      "input": "java-petstore-jersey2-java6.sh",
      "matches": [
        "Client: Java"
      ]
    },
    {
      "input": "java-petstore-jersey2.sh",
      "matches": [
        "Client: Java"
      ]
    },
    {
      "input": "java-petstore-okhttp-gson-parcelable.sh",
      "matches": [
        "Client: Java"
      ]
    },
    {
      "input": "java-petstore-okhttp-gson.sh",
      "matches": [
        "Client: Java"
      ]
    },
    {
      "input": "java-petstore-rest-assured.sh",
      "matches": [
        "Client: Java"
      ]
    },
    {
      "input": "java-petstore-resteasy.sh",
      "matches": [
        "Client: Java"
      ]
    },
    {
      "input": "java-petstore-resttemplate-withxml.sh",
      "matches": [
        "Client: Java"
      ]
    },
    {
      "input": "java-petstore-resttemplate.sh",
      "matches": [
        "Client: Java"
      ]
    },
    {
      "input": "java-petstore-retrofit.sh",
      "matches": [
        "Client: Java",
        "Client: Retrofit"
      ]
    },
    {
      "input": "java-petstore-retrofit2-play24.sh",
      "matches": [
        "Client: Java",
        "Client: Retrofit"
      ]
    },
    {
      "input": "java-petstore-retrofit2-play25.sh",
      "matches": [
        "Client: Java",
        "Client: Retrofit"
      ]
    },
    {
      "input": "java-petstore-retrofit2-play26.sh",
      "matches": [
        "Client: Java",
        "Client: Retrofit"
      ]
    },
    {
      "input": "java-petstore-retrofit2.sh",
      "matches": [
        "Client: Java",
        "Client: Retrofit"
      ]
    },
    {
      "input": "java-petstore-retrofit2rx.sh",
      "matches": [
        "Client: Java",
        "Client: Retrofit"
      ]
    },
    {
      "input": "java-petstore-retrofit2rx2.sh",
      "matches": [
        "Client: Java",
        "Client: Retrofit"
      ]
    },
    {
      "input": "java-petstore-vertx.sh",
      "matches": [
        "Client: Java"
      ]
    },
    {
      "input": "java-petstore-webclient.sh",
      "matches": [
        "Client: Java"
      ]
    },
    {
      "input": "java-pkmst-petstore-server.sh",
      "matches": [
        "Server: Java"
      ]
    },
    {
      "input": "java-play-framework-petstore-server-api-package-override.sh",
      "matches": [
        "Server: Java"
      ]
    },
    {
      "input": "java-play-framework-petstore-server-async.sh",
      "matches": [
        "Server: Java"
      ]
    },
    {
      "input": "java-play-framework-petstore-server-controller-only.sh",
      "matches": [
        "Server: Java"
      ]
    },
    {
      "input": "java-play-framework-petstore-server-fake-endpoints.sh",
      "matches": [
        "Server: Java"
      ]
    },
    {
      "input": "java-play-framework-petstore-server-no-bean-validation.sh",
      "matches": [
        "Server: Java"
      ]
    },
    {
      "input": "java-play-framework-petstore-server-no-exception-handling.sh",
      "matches": [
        "Server: Java"
      ]
    },
    {
      "input": "java-play-framework-petstore-server-no-interface.sh",
      "matches": [
        "Server: Java"
      ]
    },
    {
      "input": "java-play-framework-petstore-server-no-swagger-ui.sh",
      "matches": [
        "Server: Java"
      ]
    },
    {
      "input": "java-play-framework-petstore-server-no-wrap-calls.sh",
      "matches": [
        "Server: Java"
      ]
    },
    {
      "input": "java-play-framework-petstore-server.sh",
      "matches": [
        "Server: Java"
      ]
    },
    {
      "input": "java-undertow-petstore-server.sh",
      "matches": [
        "Server: Java"
      ]
    },
    {
      "input": "java-vertx-async-petstore-server.sh",
      "matches": [
        "Server: Java"
      ]
    },
    {
      "input": "java-vertx-rx-petstore-server.sh",
      "matches": [
        "Server: Java"
      ]
    },
    {
      "input": "javascript-closure-angular.sh",
      "matches": [
        "Client: JavaScript/Node.js"
      ]
    },
    {
      "input": "javascript-es6-petstore.sh",
      "matches": [
        "Client: JavaScript/Node.js"
      ]
    },
    {
      "input": "javascript-flowtyped-petstore.sh",
      "matches": [
        "Client: JavaScript/Node.js"
      ]
    },
    {
      "input": "javascript-petstore.sh",
      "matches": [
        "Client: JavaScript/Node.js"
      ]
    },
    {
      "input": "javascript-promise-es6-petstore.sh",
      "matches": [
        "Client: JavaScript/Node.js"
      ]
    },
    {
      "input": "javascript-promise-petstore.sh",
      "matches": [
        "Client: JavaScript/Node.js"
      ]
    },
    {
      "input": "jaxrs-cxf-cdi-petstore-server.sh",
      "matches": [
        "Server: Java"
      ]
    },
    {
      "input": "jaxrs-cxf-client-petstore.sh",
      "matches": [
        "Server: Java"
      ]
    },
    {
      "input": "jaxrs-cxf-petstore-server-annotated-base-path.sh",
      "matches": [
        "Server: Java"
      ]
    },
    {
      "input": "jaxrs-cxf-petstore-server-non-spring-application.sh",
      "matches": [
        "Server: Java"
      ]
    },
    {
      "input": "jaxrs-cxf-petstore-server.sh",
      "matches": [
        "Server: Java"
      ]
    },
    {
      "input": "jaxrs-jersey1-petstore-server.sh",
      "matches": [
        "Server: Java"
      ]
    },
    {
      "input": "jaxrs-jersey1-usetags-petstore-server.sh",
      "matches": [
        "Server: Java"
      ]
    },
    {
      "input": "jaxrs-petstore-server-datelib-j8.sh",
      "matches": [
        "Server: Java"
      ]
    },
    {
      "input": "jaxrs-petstore-server.sh",
      "matches": [
        "Server: Java"
      ]
    },
    {
      "input": "jaxrs-resteasy-eap-java8-petstore-server.sh",
      "matches": [
        "Server: Java"
      ]
    },
    {
      "input": "jaxrs-resteasy-eap-joda-petstore-server.sh",
      "matches": [
        "Server: Java"
      ]
    },
    {
      "input": "jaxrs-resteasy-eap-petstore-server.sh",
      "matches": [
        "Server: Java"
      ]
    },
    {
      "input": "jaxrs-resteasy-joda-petstore-server.sh",
      "matches": [
        "Server: Java"
      ]
    },
    {
      "input": "jaxrs-resteasy-petstore-server.sh",
      "matches": [
        "Server: Java"
      ]
    },
    {
      "input": "jaxrs-spec-petstore-server-interface-returning-response.sh",
      "matches": [
        "Server: Java"
      ]
    },
    {
      "input": "jaxrs-spec-petstore-server-interface.sh",
      "matches": [
        "Server: Java"
      ]
    },
    {
      "input": "jaxrs-spec-petstore-server.sh",
      "matches": [
        "Server: Java"
      ]
    },
    {
      "input": "jaxrs-usetags-petstore-server.sh",
      "matches": [
        "Server: Java"
      ]
    },
    {
      "input": "jmeter-petstore.sh",
      "matches": [
        "Client: JMeter"
      ]
    },
    {
      "input": "kotlin-client-petstore.sh",
      "matches": [
        "Client: Kotlin"
      ]
    },
    {
      "input": "kotlin-client-string.sh",
      "matches": [
        "Client: Kotlin"
      ]
    },
    {
      "input": "kotlin-client-threetenbp.sh",
      "matches": [
        "Client: Kotlin"
      ]
    },
    {
      "input": "kotlin-server-petstore.sh",
      "matches": [
        "Server: Kotlin"
      ]
    },
    {
      "input": "kotlin-springboot-petstore-server.sh",
      "matches": [
        "Server: Kotlin"
      ]
    },
    {
      "input": "lua-petstore.sh",
      "matches": [
        "Client: Lua"
      ]
    },
    {
      "input": "mysql-schema-petstore.sh",
      "matches": [
        "Schema: MySQL"
      ]
    },
    {
      "input": "nancyfx-petstore-server-async.sh",
      "matches": [
        "Server: C-Sharp"
      ]
    },
    {
      "input": "nancyfx-petstore-server.sh",
      "matches": [
        "Server: C-Sharp"
      ]
    },
    {
      "input": "nodejs-petstore-google-cloud-functions.sh",
      "matches": [
        "Server: Nodejs"
      ]
    },
    {
      "input": "nodejs-petstore-server.sh",
      "matches": [
        "Server: Nodejs"
      ]
    },
    {
      "input": "objc-petstore-coredata.sh",
      "matches": [
        "Client: Objc"
      ]
    },
    {
      "input": "objc-petstore.sh",
      "matches": [
        "Client: Objc"
      ]
    },
    {
      "input": "perl-deep-module-petstore.sh",
      "matches": [
        "Client: Perl"
      ]
    },
    {
      "input": "perl-petstore.sh",
      "matches": [
        "Client: Perl"
      ]
    },
    {
      "input": "php-laravel-petstore-server.sh",
      "matches": [
        "Server: PHP"
      ]
    },
    {
      "input": "php-lumen-petstore-server.sh",
      "matches": [
        "Server: PHP"
      ]
    },
    {
      "input": "php-petstore.sh",
      "matches": [
        "Server: PHP"
      ]
    },
    {
      "input": "php-silex-petstore-server.sh",
      "matches": [
        "Server: PHP"
      ]
    },
    {
      "input": "php-slim-server-petstore.sh",
      "matches": [
        "Server: PHP"
      ]
    },
    {
      "input": "php-symfony-petstore.sh",
      "matches": [
        "Server: PHP"
      ]
    },
    {
      "input": "php-mezzio-ph-petstore-server.sh",
      "matches": [
        "Server: PHP"
      ]
    },
    {
      "input": "powershell-petstore.sh",
      "matches": [
        "Client: PowerShell"
      ]
    },
    {
      "input": "python-asyncio-petstore.sh",
      "matches": [
        "Client: Python"
      ]
    },
    {
      "input": "python-server-flask-petstore-python2.sh",
      "matches": [
        "Server: Python"
      ]
    },
    {
      "input": "python-server-flask-petstore.sh",
      "matches": [
        "Server: Python"
      ]
    },
    {
      "input": "python-petstore.sh",
      "matches": [
        "Client: Python"
      ]
    },
    {
      "input": "python-tornado-petstore.sh",
      "matches": [
        "Client: Python"
      ]
    },
    {
      "input": "r-petstore.sh",
      "matches": [
        "Client: R"
      ]
    },
    {
      "input": "ruby-client-petstore.sh",
      "matches": [
        "Client: Ruby"
      ]
    },
    {
      "input": "ruby-on-rails-server-petstore.sh",
      "matches": [
        "Server: Ruby"
      ]
    },
    {
      "input": "ruby-sinatra-server-petstore.sh",
      "matches": [
        "Server: Ruby"
      ]
    },
    {
      "input": "rust-petstore.sh",
      "matches": [
        "Client: Rust"
      ]
    },
    {
      "input": "rust-server-petstore.sh",
      "matches": [
        "Server: Rust"
      ]
    },
    {
      "input": "scala-akka-petstore.sh",
      "matches": [
        "Client: Scala"
      ]
    },
    {
      "input": "scala-gatling-petstore.sh",
      "matches": [
        "Client: Scala"
      ]
    },
    {
      "input": "scala-httpclient-petstore.sh",
      "matches": [
        "Client: Scala"
      ]
    },
    {
      "input": "scala-lagom-server-petstore.sh",
      "matches": [
        "Server: Scala"
      ]
    },
    {
      "input": "scalatra-petstore-server.sh",
      "matches": [
        "Server: Scala"
      ]
    },
    {
      "input": "scalaz-petstore.sh",
      "matches": [
        "Client: Scala"
      ]
    },
    {
      "input": "spring-all-petstore.sh",
      "matches": [
        "Server: Spring"
      ]
    },
    {
      "input": "spring-cloud-feign-petstore.sh",
      "matches": [
        "Server: Spring"
      ]
    },
    {
      "input": "spring-delegate-j8.sh",
      "matches": [
        "Server: Spring"
      ]
    },
    {
      "input": "spring-delegate.sh",
      "matches": [
        "Server: Spring"
      ]
    },
    {
      "input": "spring-mvc-petstore-j8-async-server.sh",
      "matches": [
        "Server: Spring"
      ]
    },
    {
      "input": "spring-mvc-petstore-j8-localdatetime.sh",
      "matches": [
        "Server: Spring"
      ]
    },
    {
      "input": "spring-mvc-petstore-server.sh",
      "matches": [
        "Server: Spring"
      ]
    },
    {
      "input": "spring-stubs.sh",
      "matches": [
        "Server: Spring"
      ]
    },
    {
      "input": "springboot-petstore-server-beanvalidation.sh",
      "matches": [
        "Server: Spring"
      ]
    },
    {
      "input": "springboot-petstore-server-implicitHeaders.sh",
      "matches": [
        "Server: Spring"
      ]
    },
    {
      "input": "springboot-petstore-server-reactive.sh",
      "matches": [
        "Server: Spring"
      ]
    },
    {
      "input": "springboot-petstore-server-useOptional.sh",
      "matches": [
        "Server: Spring"
      ]
    },
    {
      "input": "springboot-petstore-server.sh",
      "matches": [
        "Server: Spring"
      ]
    },
    {
      "input": "springboot-virtualan-petstore-server.sh",
      "matches": [
        "Server: Spring"
      ]
    },
    {
      "input": "swift-petstore-promisekit.sh",
      "matches": [
        "Client: Swift"
      ]
    },
    {
      "input": "swift-petstore-rxswift.sh",
      "matches": [
        "Client: Swift"
      ]
    },
    {
      "input": "swift-petstore.sh",
      "matches": [
        "Client: Swift"
      ]
    },
    {
      "input": "swift3-petstore-objcCompatible.sh",
      "matches": [
        "Client: Swift"
      ]
    },
    {
      "input": "swift3-petstore-promisekit.sh",
      "matches": [
        "Client: Swift"
      ]
    },
    {
      "input": "swift3-petstore-rxswift.sh",
      "matches": [
        "Client: Swift"
      ]
    },
    {
      "input": "swift3-petstore-unwraprequired.sh",
      "matches": [
        "Client: Swift"
      ]
    },
    {
      "input": "swift3-petstore.sh",
      "matches": [
        "Client: Swift"
      ]
    },
    {
      "input": "swift4-petstore-objcCompatible.sh",
      "matches": [
        "Client: Swift"
      ]
    },
    {
      "input": "swift4-petstore-promisekit.sh",
      "matches": [
        "Client: Swift"
      ]
    },
    {
      "input": "swift4-petstore-rxswift.sh",
      "matches": [
        "Client: Swift"
      ]
    },
    {
      "input": "swift4-petstore-unwrapRequired.sh",
      "matches": [
        "Client: Swift"
      ]
    },
    {
      "input": "swift4-petstore.sh",
      "matches": [
        "Client: Swift"
      ]
    },
    {
      "input": "swift4-test.sh",
      "matches": [
        "Client: Swift"
      ]
    },
    {
      "input": "typescript-angular-v2-petstore-interfaces.sh",
      "matches": [
        "Client: TypeScript"
      ]
    },
    {
      "input": "typescript-angular-v2-petstore-with-npm.sh",
      "matches": [
        "Client: TypeScript"
      ]
    },
    {
      "input": "typescript-angular-v2-petstore.sh",
      "matches": [
        "Client: TypeScript"
      ]
    },
    {
      "input": "typescript-angular-v4-petstore-with-npm.sh",
      "matches": [
        "Client: TypeScript"
      ]
    },
    {
      "input": "typescript-angular-v4.3-petstore-with-npm.sh",
      "matches": [
        "Client: TypeScript"
      ]
    },
    {
      "input": "typescript-angular-v6-petstore-not-provided-in-root-with-npm.sh",
      "matches": [
        "Client: TypeScript"
      ]
    },
    {
      "input": "typescript-angular-v6-petstore-not-provided-in-root.sh",
      "matches": [
        "Client: TypeScript"
      ]
    },
    {
      "input": "typescript-angular-v6-petstore-provided-in-root-with-npm.sh",
      "matches": [
        "Client: TypeScript"
      ]
    },
    {
      "input": "typescript-angular-v6-petstore-provided-in-root.sh",
      "matches": [
        "Client: TypeScript"
      ]
    },
    {
      "input": "typescript-angular-v7-petstore-not-provided-in-root-with-npm.sh",
      "matches": [
        "Client: TypeScript"
      ]
    },
    {
      "input": "typescript-angular-v7-petstore-not-provided-in-root.sh",
      "matches": [
        "Client: TypeScript"
      ]
    },
    {
      "input": "typescript-angular-v7-petstore-provided-in-root-with-npm.sh",
      "matches": [
        "Client: TypeScript"
      ]
    },
    {
      "input": "typescript-angular-v7-petstore-provided-in-root.sh",
      "matches": [
        "Client: TypeScript"
      ]
    },
    {
      "input": "typescript-angularjs-petstore.sh",
      "matches": [
        "Client: TypeScript"
      ]
    },
    {
      "input": "typescript-aurelia-petstore.sh",
      "matches": [
        "Client: TypeScript"
      ]
    },
    {
      "input": "typescript-axios-petstore-interfaces.sh",
      "matches": [
        "Client: TypeScript"
      ]
    },
    {
      "input": "typescript-axios-petstore-target-es6.sh",
      "matches": [
        "Client: TypeScript"
      ]
    },
    {
      "input": "typescript-axios-petstore-with-npm-version.sh",
      "matches": [
        "Client: TypeScript"
      ]
    },
    {
      "input": "typescript-axios-petstore.sh",
      "matches": [
        "Client: TypeScript"
      ]
    },
    {
      "input": "typescript-fetch-petstore-interfaces.sh",
      "matches": [
        "Client: TypeScript"
      ]
    },
    {
      "input": "typescript-fetch-petstore-target-es6.sh",
      "matches": [
        "Client: TypeScript"
      ]
    },
    {
      "input": "typescript-fetch-petstore-with-npm-version.sh",
      "matches": [
        "Client: TypeScript"
      ]
    },
    {
      "input": "typescript-fetch-petstore.sh",
      "matches": [
        "Client: TypeScript"
      ]
    },
    {
      "input": "typescript-inversify-petstore.sh",
      "matches": [
        "Client: TypeScript"
      ]
    },
    {
      "input": "typescript-jquery-petstore-with-npm.sh",
      "matches": [
        "Client: TypeScript"
      ]
    },
    {
      "input": "typescript-jquery-petstore.sh",
      "matches": [
        "Client: TypeScript"
      ]
    },
    {
      "input": "typescript-nestjs-v6-petstore-not-provided-in-root-with-npm.sh",
      "matches": [
        "Client: TypeScript"
      ]
    },
    {
      "input": "typescript-nestjs-v6-petstore-not-provided-in-root.sh",
      "matches": [
        "Client: TypeScript"
      ]
    },
    {
      "input": "typescript-nestjs-v6-petstore-provided-in-root-with-npm.sh",
      "matches": [
        "Client: TypeScript"
      ]
    },
    {
      "input": "typescript-nestjs-v6-petstore-provided-in-root.sh",
      "matches": [
        "Client: TypeScript"
      ]
    },
    {
      "input": "typescript-node-petstore-with-npm.sh",
      "matches": [
        "Client: TypeScript"
      ]
    },
    {
      "input": "typescript-node-petstore.sh",
      "matches": [
        "Client: TypeScript"
      ]
    },
    {
      "input": "typescript-rxjs-petstore-interfaces.sh",
      "matches": [
        "Client: TypeScript"
      ]
    },
    {
      "input": "typescript-rxjs-petstore-target-es6.sh",
      "matches": [
        "Client: TypeScript"
      ]
    },
    {
      "input": "typescript-rxjs-petstore-with-npm-version.sh",
      "matches": [
        "Client: TypeScript"
      ]
    },
    {
      "input": "typescript-rxjs-petstore.sh",
      "matches": [
        "Client: TypeScript"
      ]
    }
  ],
  "text": [
    {
      "input": "WIP: Example",
      "matches": [
        "WIP"
      ]
    },
    {
      "input": "[help wanted] Looking for help",
      "matches": [
        "help wanted"
      ]
    },
    {
      "input": "[Announcement] Release 1.0",
      "matches": [
        "Announcement"
      ]
    },
    {
      "input": "[announcement] Release 2.0",
      "matches": [
        "Announcement"
      ]
    },
    {
      "input": "[typescript] Generic typescript text",
      "matches": [
        "Client: TypeScript"
      ]
    },
    {
      "input": "[typescript] Generic typescript text",
      "matches": [
        "Client: TypeScript"
      ]
    },
    {
      "input": "[typescript-angular] Generic typescript text",
      "matches": [
        "Client: TypeScript"
      ]
    },
    {
      "input": "[typescript-angularjs] Generic typescript text",
      "matches": [
        "Client: TypeScript"
      ]
    },
    {
      "input": "[typescript-aurelia] Generic typescript text",
      "matches": [
        "Client: TypeScript"
      ]
    },
    {
      "input": "[typescript-axios] Generic typescript text",
      "matches": [
        "Client: TypeScript"
      ]
    },
    {
      "input": "[typescript-fetch] Generic typescript text",
      "matches": [
        "Client: TypeScript"
      ]
    },
    {
      "input": "[typescript-inversify] Generic typescript text",
      "matches": [
        "Client: TypeScript"
      ]
    },
    {
      "input": "[typescript-jquery] Generic typescript text",
      "matches": [
        "Client: TypeScript"
      ]
    },
    {
      "input": "[typescript-node] Generic typescript text",
      "matches": [
        "Client: TypeScript"
      ]
    },
    {
      "input": "[typescript-rxjs] Generic typescript text",
      "matches": [
        "Client: TypeScript"
      ]
    },
    {
      "input": "Should not auto-label for typescript outside of brackets.",
      "matches": []
    }
  ]
}