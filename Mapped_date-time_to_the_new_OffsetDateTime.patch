Index: modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/KotlinMultiplatformClientCodegen.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/KotlinMultiplatformClientCodegen.java b/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/KotlinMultiplatformClientCodegen.java
--- a/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/KotlinMultiplatformClientCodegen.java	(revision 14bddcdfd9ac20654efc77ff8751eb20ad51009e)
+++ b/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/KotlinMultiplatformClientCodegen.java	(revision f3f801573bd6ee9d782e97d012b3dba60a481e16)
@@ -392,6 +392,7 @@
         supportingFiles.add(new SupportingFile(infraSrc + "OctetByteArray.kt.mustache", infraDest, "OctetByteArray.kt"));
         if (dateLibrary == Options.DateLibrary.KOTLINX) {
             supportingFiles.add(new SupportingFile(infraSrc + "DateTime.kt.mustache", infraDest, "DateTime.kt"));
+            supportingFiles.add(new SupportingFile(infraSrc + "OffsetDateTime.kt.mustache", infraDest, "OffsetDateTime.kt"));
         }
 
         // Auth
@@ -414,9 +415,9 @@
         typeMapping.put("file", "OctetByteArray");
         typeMapping.put("binary", "OctetByteArray");
         typeMapping.put("ByteArray", "Base64ByteArray");
-        typeMapping.put("object", "kotlinx.serialization.json.JsonObject");
-        typeMapping.put("AnyType", "kotlinx.serialization.json.JsonElement");
-        typeMapping.put("array", "kotlin.collections.List"); // Prefer lists to arrays
+        typeMapping.put("object", "JsonObject");
+        typeMapping.put("AnyType", "JsonElement");
+        typeMapping.put("array", "List"); // Prefer lists to arrays
 
         instantiationTypes.put("array", "kotlin.collections.ArrayList"); // Prefer lists to arrays
 
@@ -429,6 +430,9 @@
         importMapping.put("File", "io.ktor.client.statement.HttpResponse");
         importMapping.put("Base64ByteArray", packageName + ".infrastructure.Base64ByteArray");
         importMapping.put("OctetByteArray", packageName + ".infrastructure.OctetByteArray");
+        importMapping.put("List", "kotlin.collections.List");
+        importMapping.put("JsonObject", "kotlinx.serialization.json.JsonObject");
+        importMapping.put("JsonElement", "kotlinx.serialization.json.JsonElement");
 
         switch (dateLibrary) {
             case STRING: {
@@ -436,18 +440,14 @@
                 typeMapping.put("date", "String");
                 typeMapping.put("Date", "String");
                 typeMapping.put("DateTime", "String");
-                importMapping.put("Timestamp", "kotlin.String");
-                importMapping.put("LocalDateTime", "kotlin.String");
-                importMapping.put("LocalDate", "kotlin.String");
-                importMapping.put("LocalTime", "kotlin.String");
                 break;
             }
             case KOTLINX: {
-                typeMapping.put("date-time", "LocalDateTime");
+                typeMapping.put("date-time", "OffsetDateTime");
                 typeMapping.put("date", "LocalDate");
                 typeMapping.put("Date", "LocalDate");
                 typeMapping.put("DateTime", "LocalDateTime");
-                importMapping.put("Timestamp", "kotlinx.datetime.Instant");
+                importMapping.put("OffsetDateTime", packageName + ".infrastructure.OffsetDateTime");
                 importMapping.put("LocalDateTime", "kotlinx.datetime.LocalDateTime");
                 importMapping.put("LocalDate", "kotlinx.datetime.LocalDate");
                 importMapping.put("LocalTime", "kotlin.String");
Index: modules/openapi-generator/src/main/resources/kotlin-multiplatform-client/ApiClient.kt.mustache
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/modules/openapi-generator/src/main/resources/kotlin-multiplatform-client/ApiClient.kt.mustache b/modules/openapi-generator/src/main/resources/kotlin-multiplatform-client/ApiClient.kt.mustache
--- a/modules/openapi-generator/src/main/resources/kotlin-multiplatform-client/ApiClient.kt.mustache	(revision 14bddcdfd9ac20654efc77ff8751eb20ad51009e)
+++ b/modules/openapi-generator/src/main/resources/kotlin-multiplatform-client/ApiClient.kt.mustache	(revision f3f801573bd6ee9d782e97d012b3dba60a481e16)
@@ -16,7 +16,7 @@
     httpClientEngine: HttpClientEngine? = null,
     json: Json = Json {}
 ) {
-    protected val serializer = KotlinxSerializer(json)
+    protected val serializer: KotlinxSerializer = KotlinxSerializer(json)
     protected val client: HttpClient
 
     init {
Index: modules/openapi-generator/src/main/resources/kotlin-multiplatform-client/common/main/infrastructure/OffsetDateTime.kt.mustache
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/modules/openapi-generator/src/main/resources/kotlin-multiplatform-client/common/main/infrastructure/OffsetDateTime.kt.mustache b/modules/openapi-generator/src/main/resources/kotlin-multiplatform-client/common/main/infrastructure/OffsetDateTime.kt.mustache
new file mode 100644
--- /dev/null	(revision f3f801573bd6ee9d782e97d012b3dba60a481e16)
+++ b/modules/openapi-generator/src/main/resources/kotlin-multiplatform-client/common/main/infrastructure/OffsetDateTime.kt.mustache	(revision f3f801573bd6ee9d782e97d012b3dba60a481e16)
@@ -0,0 +1,89 @@
+package {{packageName}}.infrastructure
+
+import kotlinx.datetime.*
+import kotlinx.serialization.KSerializer
+import kotlinx.serialization.Serializable
+import kotlinx.serialization.descriptors.PrimitiveKind
+import kotlinx.serialization.descriptors.PrimitiveSerialDescriptor
+import kotlinx.serialization.descriptors.SerialDescriptor
+import kotlinx.serialization.encoding.Decoder
+import kotlinx.serialization.encoding.Encoder
+
+/**
+ * Represents a [LocalDateTime] and the respective [TimeZone] of it.
+ */
+@Serializable(with = OffsetDateTime.Companion::class)
+public data class OffsetDateTime(val dateTime: LocalDateTime, val timeZone: TimeZone) {
+    override fun toString(): String {
+        return if (timeZone == TimeZone.UTC) {
+            "${dateTime}Z"
+        } else {
+            "$dateTime$timeZone"
+        }
+    }
+
+    /**
+     * Converts the [OffsetDateTime] to an [Instant]. This looses the [TimeZone] information, because the date and time
+     * is converted to UTC in the process.
+     */
+    public fun toInstant(): Instant = dateTime.toInstant(timeZone)
+
+    /**
+     * Creates an [OffsetDateTime] from an [Instant] in a given [TimeZone] ([TimeZone.UTC] by default).
+     */
+    public fun fromInstant(instant: Instant, timeZone: TimeZone = TimeZone.UTC): OffsetDateTime = OffsetDateTime(
+        instant.toLocalDateTime(timeZone),
+        timeZone,
+    )
+
+    /**
+     * Returns a new [OffsetDateTime] with the given [TimeZone].
+     */
+    public fun inTimeZone(newTimeZone: TimeZone): OffsetDateTime {
+        val instant = dateTime.toInstant(timeZone)
+        val newDateTime = instant.toLocalDateTime(newTimeZone)
+        return OffsetDateTime(newDateTime, newTimeZone)
+    }
+
+    /**
+     * Returns a new [OffsetDateTime] with the time zone [TimeZone.UTC].
+     */
+    public fun utc(): OffsetDateTime = inTimeZone(TimeZone.UTC)
+
+    public companion object : KSerializer<OffsetDateTime> {
+        private val zoneRegex by lazy {
+            Regex("""[+\-][0-9]{2}:[0-9]{2}""")
+        }
+
+        override val descriptor: SerialDescriptor =
+            PrimitiveSerialDescriptor("{{packageName}}.infrastructure.OffsetDateTime", PrimitiveKind.STRING)
+
+        /**
+         * Parses an [OffsetDateTime] from a RFC3339 compatible string.
+         */
+        public fun parse(string: String): OffsetDateTime = when {
+            string.contains('Z') -> OffsetDateTime(
+                LocalDateTime.parse(string.substringBefore('Z')),
+                TimeZone.UTC,
+            )
+            string.contains('z') -> OffsetDateTime(
+                LocalDateTime.parse(string.substringBefore('z')),
+                TimeZone.UTC,
+            )
+            zoneRegex.matches(string) -> OffsetDateTime(
+                LocalDateTime.parse(string.substring(0, string.length - 6)),
+                TimeZone.of(string.substring(string.length - 6)),
+            )
+            else -> throw IllegalArgumentException("Date \"$string\" is not RFC3339 compatible")
+        }
+
+        override fun deserialize(decoder: Decoder): OffsetDateTime {
+            val string = decoder.decodeString()
+            return parse(string)
+        }
+
+        override fun serialize(encoder: Encoder, value: OffsetDateTime) {
+            encoder.encodeString(value.toString())
+        }
+    }
+}
Index: modules/openapi-generator/src/main/resources/kotlin-multiplatform-client/js/main/ApiClientAsync.kt.mustache
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/modules/openapi-generator/src/main/resources/kotlin-multiplatform-client/js/main/ApiClientAsync.kt.mustache b/modules/openapi-generator/src/main/resources/kotlin-multiplatform-client/js/main/ApiClientAsync.kt.mustache
--- a/modules/openapi-generator/src/main/resources/kotlin-multiplatform-client/js/main/ApiClientAsync.kt.mustache	(revision 14bddcdfd9ac20654efc77ff8751eb20ad51009e)
+++ b/modules/openapi-generator/src/main/resources/kotlin-multiplatform-client/js/main/ApiClientAsync.kt.mustache	(revision f3f801573bd6ee9d782e97d012b3dba60a481e16)
@@ -19,7 +19,7 @@
     json: Json = Json {},
     coroutineScope: CoroutineScope = GlobalScope,
 ) {
-    protected val serializer = KotlinxSerializer(json)
+    protected val serializer: KotlinxSerializer = KotlinxSerializer(json)
     protected val client: HttpClient
 
     init {
Index: samples/client/petstore/kotlin-multiplatform-new-async/docs/Pet.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/samples/client/petstore/kotlin-multiplatform-new-async/docs/Pet.md b/samples/client/petstore/kotlin-multiplatform-new-async/docs/Pet.md
--- a/samples/client/petstore/kotlin-multiplatform-new-async/docs/Pet.md	(revision 14bddcdfd9ac20654efc77ff8751eb20ad51009e)
+++ b/samples/client/petstore/kotlin-multiplatform-new-async/docs/Pet.md	(revision f3f801573bd6ee9d782e97d012b3dba60a481e16)
@@ -5,10 +5,10 @@
 Name | Type | Description | Notes
 ------------ | ------------- | ------------- | -------------
 **name** | **kotlin.String** |  | 
-**photoUrls** | **kotlin.Array&lt;kotlin.String&gt;** |  | 
+**photoUrls** | **kotlin.collections.List&lt;kotlin.String&gt;** |  | 
 **id** | **kotlin.Long** |  |  [optional]
 **category** | [**Category**](Category.md) |  |  [optional]
-**tags** | [**kotlin.Array&lt;Tag&gt;**](Tag.md) |  |  [optional]
+**tags** | [**kotlin.collections.List&lt;Tag&gt;**](Tag.md) |  |  [optional]
 **status** | [**inline**](#StatusEnum) | pet status in the store |  [optional]
 
 
Index: samples/client/petstore/kotlin-multiplatform-new-async/docs/PetApi.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/samples/client/petstore/kotlin-multiplatform-new-async/docs/PetApi.md b/samples/client/petstore/kotlin-multiplatform-new-async/docs/PetApi.md
--- a/samples/client/petstore/kotlin-multiplatform-new-async/docs/PetApi.md	(revision 14bddcdfd9ac20654efc77ff8751eb20ad51009e)
+++ b/samples/client/petstore/kotlin-multiplatform-new-async/docs/PetApi.md	(revision f3f801573bd6ee9d782e97d012b3dba60a481e16)
@@ -110,7 +110,7 @@
 
 <a name="findPetsByStatus"></a>
 # **findPetsByStatus**
-> kotlin.Array&lt;Pet&gt; findPetsByStatus(status)
+> kotlin.collections.List&lt;Pet&gt; findPetsByStatus(status)
 
 Finds Pets by status
 
@@ -123,9 +123,9 @@
 //import org.openapitools.client.models.*
 
 val apiInstance = PetApi()
-val status : kotlin.Array<kotlin.String> =  // kotlin.Array<kotlin.String> | Status values that need to be considered for filter
+val status : kotlin.collections.List<kotlin.String> =  // kotlin.collections.List<kotlin.String> | Status values that need to be considered for filter
 try {
-    val result : kotlin.Array<Pet> = apiInstance.findPetsByStatus(status)
+    val result : kotlin.collections.List<Pet> = apiInstance.findPetsByStatus(status)
     println(result)
 } catch (e: ClientException) {
     println("4xx response calling PetApi#findPetsByStatus")
@@ -140,11 +140,11 @@
 
 Name | Type | Description  | Notes
 ------------- | ------------- | ------------- | -------------
- **status** | [**kotlin.Array&lt;kotlin.String&gt;**](kotlin.String.md)| Status values that need to be considered for filter | [enum: available, pending, sold]
+ **status** | [**kotlin.collections.List&lt;kotlin.String&gt;**](kotlin.String.md)| Status values that need to be considered for filter | [enum: available, pending, sold]
 
 ### Return type
 
-[**kotlin.Array&lt;Pet&gt;**](Pet.md)
+[**kotlin.collections.List&lt;Pet&gt;**](Pet.md)
 
 ### Authorization
 
@@ -159,7 +159,7 @@
 
 <a name="findPetsByTags"></a>
 # **findPetsByTags**
-> kotlin.Array&lt;Pet&gt; findPetsByTags(tags)
+> kotlin.collections.List&lt;Pet&gt; findPetsByTags(tags)
 
 Finds Pets by tags
 
@@ -172,9 +172,9 @@
 //import org.openapitools.client.models.*
 
 val apiInstance = PetApi()
-val tags : kotlin.Array<kotlin.String> =  // kotlin.Array<kotlin.String> | Tags to filter by
+val tags : kotlin.collections.List<kotlin.String> =  // kotlin.collections.List<kotlin.String> | Tags to filter by
 try {
-    val result : kotlin.Array<Pet> = apiInstance.findPetsByTags(tags)
+    val result : kotlin.collections.List<Pet> = apiInstance.findPetsByTags(tags)
     println(result)
 } catch (e: ClientException) {
     println("4xx response calling PetApi#findPetsByTags")
@@ -189,11 +189,11 @@
 
 Name | Type | Description  | Notes
 ------------- | ------------- | ------------- | -------------
- **tags** | [**kotlin.Array&lt;kotlin.String&gt;**](kotlin.String.md)| Tags to filter by |
+ **tags** | [**kotlin.collections.List&lt;kotlin.String&gt;**](kotlin.String.md)| Tags to filter by |
 
 ### Return type
 
-[**kotlin.Array&lt;Pet&gt;**](Pet.md)
+[**kotlin.collections.List&lt;Pet&gt;**](Pet.md)
 
 ### Authorization
 
Index: samples/client/petstore/kotlin-multiplatform-new-async/docs/UserApi.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/samples/client/petstore/kotlin-multiplatform-new-async/docs/UserApi.md b/samples/client/petstore/kotlin-multiplatform-new-async/docs/UserApi.md
--- a/samples/client/petstore/kotlin-multiplatform-new-async/docs/UserApi.md	(revision 14bddcdfd9ac20654efc77ff8751eb20ad51009e)
+++ b/samples/client/petstore/kotlin-multiplatform-new-async/docs/UserApi.md	(revision f3f801573bd6ee9d782e97d012b3dba60a481e16)
@@ -73,7 +73,7 @@
 //import org.openapitools.client.models.*
 
 val apiInstance = UserApi()
-val body : kotlin.Array<User> =  // kotlin.Array<User> | List of user object
+val body : kotlin.collections.List<User> =  // kotlin.collections.List<User> | List of user object
 try {
     apiInstance.createUsersWithArrayInput(body)
 } catch (e: ClientException) {
@@ -89,7 +89,7 @@
 
 Name | Type | Description  | Notes
 ------------- | ------------- | ------------- | -------------
- **body** | [**kotlin.Array&lt;User&gt;**](User.md)| List of user object |
+ **body** | [**kotlin.collections.List&lt;User&gt;**](User.md)| List of user object |
 
 ### Return type
 
@@ -117,7 +117,7 @@
 //import org.openapitools.client.models.*
 
 val apiInstance = UserApi()
-val body : kotlin.Array<User> =  // kotlin.Array<User> | List of user object
+val body : kotlin.collections.List<User> =  // kotlin.collections.List<User> | List of user object
 try {
     apiInstance.createUsersWithListInput(body)
 } catch (e: ClientException) {
@@ -133,7 +133,7 @@
 
 Name | Type | Description  | Notes
 ------------- | ------------- | ------------- | -------------
- **body** | [**kotlin.Array&lt;User&gt;**](User.md)| List of user object |
+ **body** | [**kotlin.collections.List&lt;User&gt;**](User.md)| List of user object |
 
 ### Return type
 
Index: samples/client/petstore/kotlin-multiplatform-new-async/src/common/main/org/openapitools/client/ApiClient.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/samples/client/petstore/kotlin-multiplatform-new-async/src/common/main/org/openapitools/client/ApiClient.kt b/samples/client/petstore/kotlin-multiplatform-new-async/src/common/main/org/openapitools/client/ApiClient.kt
--- a/samples/client/petstore/kotlin-multiplatform-new-async/src/common/main/org/openapitools/client/ApiClient.kt	(revision 14bddcdfd9ac20654efc77ff8751eb20ad51009e)
+++ b/samples/client/petstore/kotlin-multiplatform-new-async/src/common/main/org/openapitools/client/ApiClient.kt	(revision f3f801573bd6ee9d782e97d012b3dba60a481e16)
@@ -15,7 +15,7 @@
     httpClientEngine: HttpClientEngine? = null,
     json: Json = Json {}
 ) {
-    protected val serializer = KotlinxSerializer(json)
+    protected val serializer: KotlinxSerializer = KotlinxSerializer(json)
     protected val client: HttpClient
 
     init {
Index: samples/client/petstore/kotlin-multiplatform-new-async/src/common/main/org/openapitools/client/apis/PetApi.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/samples/client/petstore/kotlin-multiplatform-new-async/src/common/main/org/openapitools/client/apis/PetApi.kt b/samples/client/petstore/kotlin-multiplatform-new-async/src/common/main/org/openapitools/client/apis/PetApi.kt
--- a/samples/client/petstore/kotlin-multiplatform-new-async/src/common/main/org/openapitools/client/apis/PetApi.kt	(revision 14bddcdfd9ac20654efc77ff8751eb20ad51009e)
+++ b/samples/client/petstore/kotlin-multiplatform-new-async/src/common/main/org/openapitools/client/apis/PetApi.kt	(revision f3f801573bd6ee9d782e97d012b3dba60a481e16)
@@ -88,7 +88,6 @@
         ).wrap()
     }
 
-
     /**
      * Deletes a pet
      * 
@@ -125,16 +124,17 @@
             authNamesOag
         ).wrap()
     }
+
     /**
      * Finds Pets by status
      * Multiple status values can be provided with comma separated strings
      * @param status Status values that need to be considered for filter 
-     * @return kotlin.Array<Pet>
+     * @return kotlin.collections.List<Pet>
      */
     @Suppress("UNCHECKED_CAST")
     public suspend fun findPetsByStatus(
-        status: kotlin.Array<kotlin.String>,
-    ): HttpResponse<kotlin.Array<Pet>> {
+        status: kotlin.collections.List<kotlin.String>,
+    ): HttpResponse<kotlin.collections.List<Pet>> {
         val authNamesOag = listOf<String>("petstore_auth")
 
         val bodyOag = 
@@ -160,16 +160,17 @@
             authNamesOag
         ).wrap()
     }
+
     /**
      * Finds Pets by tags
      * Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.
      * @param tags Tags to filter by 
-     * @return kotlin.Array<Pet>
+     * @return kotlin.collections.List<Pet>
      */
     @Suppress("UNCHECKED_CAST")
     public suspend fun findPetsByTags(
-        tags: kotlin.Array<kotlin.String>,
-    ): HttpResponse<kotlin.Array<Pet>> {
+        tags: kotlin.collections.List<kotlin.String>,
+    ): HttpResponse<kotlin.collections.List<Pet>> {
         val authNamesOag = listOf<String>("petstore_auth")
 
         val bodyOag = 
@@ -195,6 +196,7 @@
             authNamesOag
         ).wrap()
     }
+
     /**
      * Find pet by ID
      * Returns a single pet
@@ -229,6 +231,7 @@
             authNamesOag
         ).wrap()
     }
+
     /**
      * Update an existing pet
      * 
@@ -262,7 +265,6 @@
         ).wrap()
     }
 
-
     /**
      * Updates a pet in the store with form data
      * 
@@ -303,6 +305,7 @@
             authNamesOag
         ).wrap()
     }
+
     /**
      * uploads an image
      * 
@@ -344,4 +347,5 @@
             authNamesOag
         ).wrap()
     }
+
 }
Index: samples/client/petstore/kotlin-multiplatform-new-async/src/common/main/org/openapitools/client/apis/StoreApi.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/samples/client/petstore/kotlin-multiplatform-new-async/src/common/main/org/openapitools/client/apis/StoreApi.kt b/samples/client/petstore/kotlin-multiplatform-new-async/src/common/main/org/openapitools/client/apis/StoreApi.kt
--- a/samples/client/petstore/kotlin-multiplatform-new-async/src/common/main/org/openapitools/client/apis/StoreApi.kt	(revision 14bddcdfd9ac20654efc77ff8751eb20ad51009e)
+++ b/samples/client/petstore/kotlin-multiplatform-new-async/src/common/main/org/openapitools/client/apis/StoreApi.kt	(revision f3f801573bd6ee9d782e97d012b3dba60a481e16)
@@ -87,6 +87,7 @@
             authNamesOag
         ).wrap()
     }
+
     /**
      * Returns pet inventories by status
      * Returns a map of status codes to quantities
@@ -117,18 +118,9 @@
             configOag,
             bodyOag,
             authNamesOag
-        ).wrap<GetInventoryResponse>().map { value }
+        ).wrap()
     }
-    @Serializable
-    private class GetInventoryResponse(val value: Map<kotlin.String, kotlin.Int>) {
-        @Serializer(GetInventoryResponse::class)
-        companion object : KSerializer<GetInventoryResponse> {
-            private val serializer: KSerializer<Map<kotlin.String, kotlin.Int>> = (kotlin.String.serializer() to kotlin.Int.serializer()).map
-                override val descriptor = PrimitiveDescriptor("GetInventoryResponse", PrimitiveKind.STRING)
-                override fun serialize(encoder: Encoder, value: GetInventoryResponse) = serializer.serialize(encoder, value.value)
-                override fun deserialize(decoder: Decoder) = GetInventoryResponse(serializer.deserialize(decoder))
-        }
-    }
+
     /**
      * Find purchase order by ID
      * For valid response try integer IDs with value &lt;&#x3D; 5 or &gt; 10. Other values will generated exceptions
@@ -163,6 +155,7 @@
             authNamesOag
         ).wrap()
     }
+
     /**
      * Place an order for a pet
      * 
@@ -197,5 +190,4 @@
         ).wrap()
     }
 
-
 }
Index: samples/client/petstore/kotlin-multiplatform-new-async/src/common/main/org/openapitools/client/apis/UserApi.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/samples/client/petstore/kotlin-multiplatform-new-async/src/common/main/org/openapitools/client/apis/UserApi.kt b/samples/client/petstore/kotlin-multiplatform-new-async/src/common/main/org/openapitools/client/apis/UserApi.kt
--- a/samples/client/petstore/kotlin-multiplatform-new-async/src/common/main/org/openapitools/client/apis/UserApi.kt	(revision 14bddcdfd9ac20654efc77ff8751eb20ad51009e)
+++ b/samples/client/petstore/kotlin-multiplatform-new-async/src/common/main/org/openapitools/client/apis/UserApi.kt	(revision f3f801573bd6ee9d782e97d012b3dba60a481e16)
@@ -87,7 +87,6 @@
         ).wrap()
     }
 
-
     /**
      * Creates list of users with given input array
      * 
@@ -95,7 +94,7 @@
      * @return void
      */
     public suspend fun createUsersWithArrayInput(
-        body: kotlin.Array<User>,
+        body: kotlin.collections.List<User>,
     ): HttpResponse<Unit> {
         val authNamesOag = listOf<String>()
 
@@ -121,7 +120,6 @@
         ).wrap()
     }
 
-
     /**
      * Creates list of users with given input array
      * 
@@ -129,7 +127,7 @@
      * @return void
      */
     public suspend fun createUsersWithListInput(
-        body: kotlin.Array<User>,
+        body: kotlin.collections.List<User>,
     ): HttpResponse<Unit> {
         val authNamesOag = listOf<String>()
 
@@ -155,7 +153,6 @@
         ).wrap()
     }
 
-
     /**
      * Delete user
      * This can only be done by the logged in user.
@@ -189,6 +186,7 @@
             authNamesOag
         ).wrap()
     }
+
     /**
      * Get user by user name
      * 
@@ -223,6 +221,7 @@
             authNamesOag
         ).wrap()
     }
+
     /**
      * Logs user into the system
      * 
@@ -261,6 +260,7 @@
             authNamesOag
         ).wrap()
     }
+
     /**
      * Logs out current logged in user session
      * 
@@ -292,6 +292,7 @@
             authNamesOag
         ).wrap()
     }
+
     /**
      * Updated user
      * This can only be done by the logged in user.
@@ -327,5 +328,4 @@
         ).wrap()
     }
 
-
 }
Index: samples/client/petstore/kotlin-multiplatform-new-async/src/common/main/org/openapitools/client/models/Pet.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/samples/client/petstore/kotlin-multiplatform-new-async/src/common/main/org/openapitools/client/models/Pet.kt b/samples/client/petstore/kotlin-multiplatform-new-async/src/common/main/org/openapitools/client/models/Pet.kt
--- a/samples/client/petstore/kotlin-multiplatform-new-async/src/common/main/org/openapitools/client/models/Pet.kt	(revision 14bddcdfd9ac20654efc77ff8751eb20ad51009e)
+++ b/samples/client/petstore/kotlin-multiplatform-new-async/src/common/main/org/openapitools/client/models/Pet.kt	(revision f3f801573bd6ee9d782e97d012b3dba60a481e16)
@@ -39,13 +39,13 @@
     val name: kotlin.String,
     @SerialName(value = "photoUrls")
     @Required
-    val photoUrls: kotlin.Array<kotlin.String>,
+    val photoUrls: kotlin.collections.List<kotlin.String>,
     @SerialName(value = "id")
     val id: kotlin.Long? = null,
     @SerialName(value = "category")
     val category: Category? = null,
     @SerialName(value = "tags")
-    val tags: kotlin.Array<Tag>? = null,
+    val tags: kotlin.collections.List<Tag>? = null,
     /**
      * pet status in the store
      */
Index: samples/client/petstore/kotlin-multiplatform-new-async/src/js/main/org/openapitools/client/ApiClientAsync.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/samples/client/petstore/kotlin-multiplatform-new-async/src/js/main/org/openapitools/client/ApiClientAsync.kt b/samples/client/petstore/kotlin-multiplatform-new-async/src/js/main/org/openapitools/client/ApiClientAsync.kt
--- a/samples/client/petstore/kotlin-multiplatform-new-async/src/js/main/org/openapitools/client/ApiClientAsync.kt	(revision 14bddcdfd9ac20654efc77ff8751eb20ad51009e)
+++ b/samples/client/petstore/kotlin-multiplatform-new-async/src/js/main/org/openapitools/client/ApiClientAsync.kt	(revision f3f801573bd6ee9d782e97d012b3dba60a481e16)
@@ -18,7 +18,7 @@
     json: Json = Json {},
     coroutineScope: CoroutineScope = GlobalScope,
 ) {
-    protected val serializer = KotlinxSerializer(json)
+    protected val serializer: KotlinxSerializer = KotlinxSerializer(json)
     protected val client: HttpClient
 
     init {
Index: samples/client/petstore/kotlin-multiplatform-new-async/src/js/main/org/openapitools/client/apis/PetApiAsync.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/samples/client/petstore/kotlin-multiplatform-new-async/src/js/main/org/openapitools/client/apis/PetApiAsync.kt b/samples/client/petstore/kotlin-multiplatform-new-async/src/js/main/org/openapitools/client/apis/PetApiAsync.kt
--- a/samples/client/petstore/kotlin-multiplatform-new-async/src/js/main/org/openapitools/client/apis/PetApiAsync.kt	(revision 14bddcdfd9ac20654efc77ff8751eb20ad51009e)
+++ b/samples/client/petstore/kotlin-multiplatform-new-async/src/js/main/org/openapitools/client/apis/PetApiAsync.kt	(revision f3f801573bd6ee9d782e97d012b3dba60a481e16)
@@ -88,11 +88,11 @@
      * Finds Pets by status
      * Multiple status values can be provided with comma separated strings
      * @param status Status values that need to be considered for filter 
-     * @return kotlin.Array<Pet>
+     * @return kotlin.collections.List<Pet>
      */
     public fun findPetsByStatusAsync(
-        status: kotlin.Array<kotlin.String>,
-    ): Promise<HttpResponse<kotlin.Array<Pet>>> {
+        status: kotlin.collections.List<kotlin.String>,
+    ): Promise<HttpResponse<kotlin.collections.List<Pet>>> {
         return coroutineScope.promise {
             findPetsByStatus(
                 status = status,
@@ -103,11 +103,11 @@
      * Finds Pets by tags
      * Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.
      * @param tags Tags to filter by 
-     * @return kotlin.Array<Pet>
+     * @return kotlin.collections.List<Pet>
      */
     public fun findPetsByTagsAsync(
-        tags: kotlin.Array<kotlin.String>,
-    ): Promise<HttpResponse<kotlin.Array<Pet>>> {
+        tags: kotlin.collections.List<kotlin.String>,
+    ): Promise<HttpResponse<kotlin.collections.List<Pet>>> {
         return coroutineScope.promise {
             findPetsByTags(
                 tags = tags,
Index: samples/client/petstore/kotlin-multiplatform-new-async/src/js/main/org/openapitools/client/apis/UserApiAsync.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/samples/client/petstore/kotlin-multiplatform-new-async/src/js/main/org/openapitools/client/apis/UserApiAsync.kt b/samples/client/petstore/kotlin-multiplatform-new-async/src/js/main/org/openapitools/client/apis/UserApiAsync.kt
--- a/samples/client/petstore/kotlin-multiplatform-new-async/src/js/main/org/openapitools/client/apis/UserApiAsync.kt	(revision 14bddcdfd9ac20654efc77ff8751eb20ad51009e)
+++ b/samples/client/petstore/kotlin-multiplatform-new-async/src/js/main/org/openapitools/client/apis/UserApiAsync.kt	(revision f3f801573bd6ee9d782e97d012b3dba60a481e16)
@@ -72,7 +72,7 @@
      * @return void
      */
     public fun createUsersWithArrayInputAsync(
-        body: kotlin.Array<User>,
+        body: kotlin.collections.List<User>,
     ): Promise<HttpResponse<Unit>> {
         return coroutineScope.promise {
             createUsersWithArrayInput(
@@ -87,7 +87,7 @@
      * @return void
      */
     public fun createUsersWithListInputAsync(
-        body: kotlin.Array<User>,
+        body: kotlin.collections.List<User>,
     ): Promise<HttpResponse<Unit>> {
         return coroutineScope.promise {
             createUsersWithListInput(
Index: samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/.openapi-generator/FILES
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/.openapi-generator/FILES b/samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/.openapi-generator/FILES
--- a/samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/.openapi-generator/FILES	(revision 14bddcdfd9ac20654efc77ff8751eb20ad51009e)
+++ b/samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/.openapi-generator/FILES	(revision f3f801573bd6ee9d782e97d012b3dba60a481e16)
@@ -30,6 +30,7 @@
 src/common/main/org/openapitools/client/infrastructure/DateTime.kt
 src/common/main/org/openapitools/client/infrastructure/HttpResponse.kt
 src/common/main/org/openapitools/client/infrastructure/OctetByteArray.kt
+src/common/main/org/openapitools/client/infrastructure/OffsetDateTime.kt
 src/common/main/org/openapitools/client/infrastructure/RequestConfig.kt
 src/common/main/org/openapitools/client/infrastructure/RequestMethod.kt
 src/common/main/org/openapitools/client/models/ApiResponse.kt
Index: samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/docs/Pet.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/docs/Pet.md b/samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/docs/Pet.md
--- a/samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/docs/Pet.md	(revision 14bddcdfd9ac20654efc77ff8751eb20ad51009e)
+++ b/samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/docs/Pet.md	(revision f3f801573bd6ee9d782e97d012b3dba60a481e16)
@@ -5,10 +5,10 @@
 Name | Type | Description | Notes
 ------------ | ------------- | ------------- | -------------
 **name** | **kotlin.String** |  | 
-**photoUrls** | **kotlin.Array&lt;kotlin.String&gt;** |  | 
+**photoUrls** | **kotlin.collections.List&lt;kotlin.String&gt;** |  | 
 **id** | **kotlin.Long** |  |  [optional]
 **category** | [**Category**](Category.md) |  |  [optional]
-**tags** | [**kotlin.Array&lt;Tag&gt;**](Tag.md) |  |  [optional]
+**tags** | [**kotlin.collections.List&lt;Tag&gt;**](Tag.md) |  |  [optional]
 **status** | [**inline**](#StatusEnum) | pet status in the store |  [optional]
 
 
Index: samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/docs/PetApi.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/docs/PetApi.md b/samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/docs/PetApi.md
--- a/samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/docs/PetApi.md	(revision 14bddcdfd9ac20654efc77ff8751eb20ad51009e)
+++ b/samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/docs/PetApi.md	(revision f3f801573bd6ee9d782e97d012b3dba60a481e16)
@@ -110,7 +110,7 @@
 
 <a name="findPetsByStatus"></a>
 # **findPetsByStatus**
-> kotlin.Array&lt;Pet&gt; findPetsByStatus(status)
+> kotlin.collections.List&lt;Pet&gt; findPetsByStatus(status)
 
 Finds Pets by status
 
@@ -123,9 +123,9 @@
 //import org.openapitools.client.models.*
 
 val apiInstance = PetApi()
-val status : kotlin.Array<kotlin.String> =  // kotlin.Array<kotlin.String> | Status values that need to be considered for filter
+val status : kotlin.collections.List<kotlin.String> =  // kotlin.collections.List<kotlin.String> | Status values that need to be considered for filter
 try {
-    val result : kotlin.Array<Pet> = apiInstance.findPetsByStatus(status)
+    val result : kotlin.collections.List<Pet> = apiInstance.findPetsByStatus(status)
     println(result)
 } catch (e: ClientException) {
     println("4xx response calling PetApi#findPetsByStatus")
@@ -140,11 +140,11 @@
 
 Name | Type | Description  | Notes
 ------------- | ------------- | ------------- | -------------
- **status** | [**kotlin.Array&lt;kotlin.String&gt;**](kotlin.String.md)| Status values that need to be considered for filter | [enum: available, pending, sold]
+ **status** | [**kotlin.collections.List&lt;kotlin.String&gt;**](kotlin.String.md)| Status values that need to be considered for filter | [enum: available, pending, sold]
 
 ### Return type
 
-[**kotlin.Array&lt;Pet&gt;**](Pet.md)
+[**kotlin.collections.List&lt;Pet&gt;**](Pet.md)
 
 ### Authorization
 
@@ -159,7 +159,7 @@
 
 <a name="findPetsByTags"></a>
 # **findPetsByTags**
-> kotlin.Array&lt;Pet&gt; findPetsByTags(tags)
+> kotlin.collections.List&lt;Pet&gt; findPetsByTags(tags)
 
 Finds Pets by tags
 
@@ -172,9 +172,9 @@
 //import org.openapitools.client.models.*
 
 val apiInstance = PetApi()
-val tags : kotlin.Array<kotlin.String> =  // kotlin.Array<kotlin.String> | Tags to filter by
+val tags : kotlin.collections.List<kotlin.String> =  // kotlin.collections.List<kotlin.String> | Tags to filter by
 try {
-    val result : kotlin.Array<Pet> = apiInstance.findPetsByTags(tags)
+    val result : kotlin.collections.List<Pet> = apiInstance.findPetsByTags(tags)
     println(result)
 } catch (e: ClientException) {
     println("4xx response calling PetApi#findPetsByTags")
@@ -189,11 +189,11 @@
 
 Name | Type | Description  | Notes
 ------------- | ------------- | ------------- | -------------
- **tags** | [**kotlin.Array&lt;kotlin.String&gt;**](kotlin.String.md)| Tags to filter by |
+ **tags** | [**kotlin.collections.List&lt;kotlin.String&gt;**](kotlin.String.md)| Tags to filter by |
 
 ### Return type
 
-[**kotlin.Array&lt;Pet&gt;**](Pet.md)
+[**kotlin.collections.List&lt;Pet&gt;**](Pet.md)
 
 ### Authorization
 
Index: samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/docs/UserApi.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/docs/UserApi.md b/samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/docs/UserApi.md
--- a/samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/docs/UserApi.md	(revision 14bddcdfd9ac20654efc77ff8751eb20ad51009e)
+++ b/samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/docs/UserApi.md	(revision f3f801573bd6ee9d782e97d012b3dba60a481e16)
@@ -73,7 +73,7 @@
 //import org.openapitools.client.models.*
 
 val apiInstance = UserApi()
-val body : kotlin.Array<User> =  // kotlin.Array<User> | List of user object
+val body : kotlin.collections.List<User> =  // kotlin.collections.List<User> | List of user object
 try {
     apiInstance.createUsersWithArrayInput(body)
 } catch (e: ClientException) {
@@ -89,7 +89,7 @@
 
 Name | Type | Description  | Notes
 ------------- | ------------- | ------------- | -------------
- **body** | [**kotlin.Array&lt;User&gt;**](User.md)| List of user object |
+ **body** | [**kotlin.collections.List&lt;User&gt;**](User.md)| List of user object |
 
 ### Return type
 
@@ -117,7 +117,7 @@
 //import org.openapitools.client.models.*
 
 val apiInstance = UserApi()
-val body : kotlin.Array<User> =  // kotlin.Array<User> | List of user object
+val body : kotlin.collections.List<User> =  // kotlin.collections.List<User> | List of user object
 try {
     apiInstance.createUsersWithListInput(body)
 } catch (e: ClientException) {
@@ -133,7 +133,7 @@
 
 Name | Type | Description  | Notes
 ------------- | ------------- | ------------- | -------------
- **body** | [**kotlin.Array&lt;User&gt;**](User.md)| List of user object |
+ **body** | [**kotlin.collections.List&lt;User&gt;**](User.md)| List of user object |
 
 ### Return type
 
Index: samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/src/common/main/org/openapitools/client/ApiClient.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/src/common/main/org/openapitools/client/ApiClient.kt b/samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/src/common/main/org/openapitools/client/ApiClient.kt
--- a/samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/src/common/main/org/openapitools/client/ApiClient.kt	(revision 14bddcdfd9ac20654efc77ff8751eb20ad51009e)
+++ b/samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/src/common/main/org/openapitools/client/ApiClient.kt	(revision f3f801573bd6ee9d782e97d012b3dba60a481e16)
@@ -15,7 +15,7 @@
     httpClientEngine: HttpClientEngine? = null,
     json: Json = Json {}
 ) {
-    protected val serializer = KotlinxSerializer(json)
+    protected val serializer: KotlinxSerializer = KotlinxSerializer(json)
     protected val client: HttpClient
 
     init {
Index: samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/src/common/main/org/openapitools/client/apis/PetApi.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/src/common/main/org/openapitools/client/apis/PetApi.kt b/samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/src/common/main/org/openapitools/client/apis/PetApi.kt
--- a/samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/src/common/main/org/openapitools/client/apis/PetApi.kt	(revision 14bddcdfd9ac20654efc77ff8751eb20ad51009e)
+++ b/samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/src/common/main/org/openapitools/client/apis/PetApi.kt	(revision f3f801573bd6ee9d782e97d012b3dba60a481e16)
@@ -88,7 +88,6 @@
         ).wrap()
     }
 
-
     /**
      * Deletes a pet
      * 
@@ -125,16 +124,17 @@
             authNamesOag
         ).wrap()
     }
+
     /**
      * Finds Pets by status
      * Multiple status values can be provided with comma separated strings
      * @param status Status values that need to be considered for filter 
-     * @return kotlin.Array<Pet>
+     * @return kotlin.collections.List<Pet>
      */
     @Suppress("UNCHECKED_CAST")
     public suspend fun findPetsByStatus(
-        status: kotlin.Array<kotlin.String>,
-    ): HttpResponse<kotlin.Array<Pet>> {
+        status: kotlin.collections.List<kotlin.String>,
+    ): HttpResponse<kotlin.collections.List<Pet>> {
         val authNamesOag = listOf<String>("petstore_auth")
 
         val bodyOag = 
@@ -160,16 +160,17 @@
             authNamesOag
         ).wrap()
     }
+
     /**
      * Finds Pets by tags
      * Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.
      * @param tags Tags to filter by 
-     * @return kotlin.Array<Pet>
+     * @return kotlin.collections.List<Pet>
      */
     @Suppress("UNCHECKED_CAST")
     public suspend fun findPetsByTags(
-        tags: kotlin.Array<kotlin.String>,
-    ): HttpResponse<kotlin.Array<Pet>> {
+        tags: kotlin.collections.List<kotlin.String>,
+    ): HttpResponse<kotlin.collections.List<Pet>> {
         val authNamesOag = listOf<String>("petstore_auth")
 
         val bodyOag = 
@@ -195,6 +196,7 @@
             authNamesOag
         ).wrap()
     }
+
     /**
      * Find pet by ID
      * Returns a single pet
@@ -229,6 +231,7 @@
             authNamesOag
         ).wrap()
     }
+
     /**
      * Update an existing pet
      * 
@@ -262,7 +265,6 @@
         ).wrap()
     }
 
-
     /**
      * Updates a pet in the store with form data
      * 
@@ -303,6 +305,7 @@
             authNamesOag
         ).wrap()
     }
+
     /**
      * uploads an image
      * 
@@ -344,4 +347,5 @@
             authNamesOag
         ).wrap()
     }
+
 }
Index: samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/src/common/main/org/openapitools/client/apis/StoreApi.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/src/common/main/org/openapitools/client/apis/StoreApi.kt b/samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/src/common/main/org/openapitools/client/apis/StoreApi.kt
--- a/samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/src/common/main/org/openapitools/client/apis/StoreApi.kt	(revision 14bddcdfd9ac20654efc77ff8751eb20ad51009e)
+++ b/samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/src/common/main/org/openapitools/client/apis/StoreApi.kt	(revision f3f801573bd6ee9d782e97d012b3dba60a481e16)
@@ -87,6 +87,7 @@
             authNamesOag
         ).wrap()
     }
+
     /**
      * Returns pet inventories by status
      * Returns a map of status codes to quantities
@@ -117,18 +118,9 @@
             configOag,
             bodyOag,
             authNamesOag
-        ).wrap<GetInventoryResponse>().map { value }
+        ).wrap()
     }
-    @Serializable
-    private class GetInventoryResponse(val value: Map<kotlin.String, kotlin.Int>) {
-        @Serializer(GetInventoryResponse::class)
-        companion object : KSerializer<GetInventoryResponse> {
-            private val serializer: KSerializer<Map<kotlin.String, kotlin.Int>> = (kotlin.String.serializer() to kotlin.Int.serializer()).map
-                override val descriptor = PrimitiveDescriptor("GetInventoryResponse", PrimitiveKind.STRING)
-                override fun serialize(encoder: Encoder, value: GetInventoryResponse) = serializer.serialize(encoder, value.value)
-                override fun deserialize(decoder: Decoder) = GetInventoryResponse(serializer.deserialize(decoder))
-        }
-    }
+
     /**
      * Find purchase order by ID
      * For valid response try integer IDs with value &lt;&#x3D; 5 or &gt; 10. Other values will generated exceptions
@@ -163,6 +155,7 @@
             authNamesOag
         ).wrap()
     }
+
     /**
      * Place an order for a pet
      * 
@@ -197,5 +190,4 @@
         ).wrap()
     }
 
-
 }
Index: samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/src/common/main/org/openapitools/client/apis/UserApi.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/src/common/main/org/openapitools/client/apis/UserApi.kt b/samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/src/common/main/org/openapitools/client/apis/UserApi.kt
--- a/samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/src/common/main/org/openapitools/client/apis/UserApi.kt	(revision 14bddcdfd9ac20654efc77ff8751eb20ad51009e)
+++ b/samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/src/common/main/org/openapitools/client/apis/UserApi.kt	(revision f3f801573bd6ee9d782e97d012b3dba60a481e16)
@@ -87,7 +87,6 @@
         ).wrap()
     }
 
-
     /**
      * Creates list of users with given input array
      * 
@@ -95,7 +94,7 @@
      * @return void
      */
     public suspend fun createUsersWithArrayInput(
-        body: kotlin.Array<User>,
+        body: kotlin.collections.List<User>,
     ): HttpResponse<Unit> {
         val authNamesOag = listOf<String>()
 
@@ -121,7 +120,6 @@
         ).wrap()
     }
 
-
     /**
      * Creates list of users with given input array
      * 
@@ -129,7 +127,7 @@
      * @return void
      */
     public suspend fun createUsersWithListInput(
-        body: kotlin.Array<User>,
+        body: kotlin.collections.List<User>,
     ): HttpResponse<Unit> {
         val authNamesOag = listOf<String>()
 
@@ -155,7 +153,6 @@
         ).wrap()
     }
 
-
     /**
      * Delete user
      * This can only be done by the logged in user.
@@ -189,6 +186,7 @@
             authNamesOag
         ).wrap()
     }
+
     /**
      * Get user by user name
      * 
@@ -223,6 +221,7 @@
             authNamesOag
         ).wrap()
     }
+
     /**
      * Logs user into the system
      * 
@@ -261,6 +260,7 @@
             authNamesOag
         ).wrap()
     }
+
     /**
      * Logs out current logged in user session
      * 
@@ -292,6 +292,7 @@
             authNamesOag
         ).wrap()
     }
+
     /**
      * Updated user
      * This can only be done by the logged in user.
@@ -327,5 +328,4 @@
         ).wrap()
     }
 
-
 }
Index: samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/src/common/main/org/openapitools/client/infrastructure/OffsetDateTime.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/src/common/main/org/openapitools/client/infrastructure/OffsetDateTime.kt b/samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/src/common/main/org/openapitools/client/infrastructure/OffsetDateTime.kt
new file mode 100644
--- /dev/null	(revision f3f801573bd6ee9d782e97d012b3dba60a481e16)
+++ b/samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/src/common/main/org/openapitools/client/infrastructure/OffsetDateTime.kt	(revision f3f801573bd6ee9d782e97d012b3dba60a481e16)
@@ -0,0 +1,89 @@
+package org.openapitools.client.infrastructure
+
+import kotlinx.datetime.*
+import kotlinx.serialization.KSerializer
+import kotlinx.serialization.Serializable
+import kotlinx.serialization.descriptors.PrimitiveKind
+import kotlinx.serialization.descriptors.PrimitiveSerialDescriptor
+import kotlinx.serialization.descriptors.SerialDescriptor
+import kotlinx.serialization.encoding.Decoder
+import kotlinx.serialization.encoding.Encoder
+
+/**
+ * Represents a [LocalDateTime] and the respective [TimeZone] of it.
+ */
+@Serializable(with = OffsetDateTime.Companion::class)
+public data class OffsetDateTime(val dateTime: LocalDateTime, val timeZone: TimeZone) {
+    override fun toString(): String {
+        return if (timeZone == TimeZone.UTC) {
+            "${dateTime}Z"
+        } else {
+            "$dateTime$timeZone"
+        }
+    }
+
+    /**
+     * Converts the [OffsetDateTime] to an [Instant]. This looses the [TimeZone] information, because the date and time
+     * is converted to UTC in the process.
+     */
+    public fun toInstant(): Instant = dateTime.toInstant(timeZone)
+
+    /**
+     * Creates an [OffsetDateTime] from an [Instant] in a given [TimeZone] ([TimeZone.UTC] by default).
+     */
+    public fun fromInstant(instant: Instant, timeZone: TimeZone = TimeZone.UTC): OffsetDateTime = OffsetDateTime(
+        instant.toLocalDateTime(timeZone),
+        timeZone,
+    )
+
+    /**
+     * Returns a new [OffsetDateTime] with the given [TimeZone].
+     */
+    public fun inTimeZone(newTimeZone: TimeZone): OffsetDateTime {
+        val instant = dateTime.toInstant(timeZone)
+        val newDateTime = instant.toLocalDateTime(newTimeZone)
+        return OffsetDateTime(newDateTime, newTimeZone)
+    }
+
+    /**
+     * Returns a new [OffsetDateTime] with the time zone [TimeZone.UTC].
+     */
+    public fun utc(): OffsetDateTime = inTimeZone(TimeZone.UTC)
+
+    public companion object : KSerializer<OffsetDateTime> {
+        private val zoneRegex by lazy {
+            Regex("""[+\-][0-9]{2}:[0-9]{2}""")
+        }
+
+        override val descriptor: SerialDescriptor =
+            PrimitiveSerialDescriptor("org.openapitools.client.infrastructure.OffsetDateTime", PrimitiveKind.STRING)
+
+        /**
+         * Parses an [OffsetDateTime] from a RFC3339 compatible string.
+         */
+        public fun parse(string: String): OffsetDateTime = when {
+            string.contains('Z') -> OffsetDateTime(
+                LocalDateTime.parse(string.substringBefore('Z')),
+                TimeZone.UTC,
+            )
+            string.contains('z') -> OffsetDateTime(
+                LocalDateTime.parse(string.substringBefore('z')),
+                TimeZone.UTC,
+            )
+            zoneRegex.matches(string) -> OffsetDateTime(
+                LocalDateTime.parse(string.substring(0, string.length - 6)),
+                TimeZone.of(string.substring(string.length - 6)),
+            )
+            else -> throw IllegalArgumentException("Date \"$string\" is not RFC3339 compatible")
+        }
+
+        override fun deserialize(decoder: Decoder): OffsetDateTime {
+            val string = decoder.decodeString()
+            return parse(string)
+        }
+
+        override fun serialize(encoder: Encoder, value: OffsetDateTime) {
+            encoder.encodeString(value.toString())
+        }
+    }
+}
Index: samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/src/common/main/org/openapitools/client/models/Pet.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/src/common/main/org/openapitools/client/models/Pet.kt b/samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/src/common/main/org/openapitools/client/models/Pet.kt
--- a/samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/src/common/main/org/openapitools/client/models/Pet.kt	(revision 14bddcdfd9ac20654efc77ff8751eb20ad51009e)
+++ b/samples/client/petstore/kotlin-multiplatform-new-kotlinx-datetime/src/common/main/org/openapitools/client/models/Pet.kt	(revision f3f801573bd6ee9d782e97d012b3dba60a481e16)
@@ -43,13 +43,13 @@
     val name: kotlin.String,
     @SerialName(value = "photoUrls")
     @Required
-    val photoUrls: kotlin.Array<kotlin.String>,
+    val photoUrls: kotlin.collections.List<kotlin.String>,
     @SerialName(value = "id")
     val id: kotlin.Long? = null,
     @SerialName(value = "category")
     val category: Category? = null,
     @SerialName(value = "tags")
-    val tags: kotlin.Array<Tag>? = null,
+    val tags: kotlin.collections.List<Tag>? = null,
     /**
      * pet status in the store
      */
Index: samples/client/petstore/kotlin-multiplatform-new/docs/Pet.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/samples/client/petstore/kotlin-multiplatform-new/docs/Pet.md b/samples/client/petstore/kotlin-multiplatform-new/docs/Pet.md
--- a/samples/client/petstore/kotlin-multiplatform-new/docs/Pet.md	(revision 14bddcdfd9ac20654efc77ff8751eb20ad51009e)
+++ b/samples/client/petstore/kotlin-multiplatform-new/docs/Pet.md	(revision f3f801573bd6ee9d782e97d012b3dba60a481e16)
@@ -5,10 +5,10 @@
 Name | Type | Description | Notes
 ------------ | ------------- | ------------- | -------------
 **name** | **kotlin.String** |  | 
-**photoUrls** | **kotlin.Array&lt;kotlin.String&gt;** |  | 
+**photoUrls** | **kotlin.collections.List&lt;kotlin.String&gt;** |  | 
 **id** | **kotlin.Long** |  |  [optional]
 **category** | [**Category**](Category.md) |  |  [optional]
-**tags** | [**kotlin.Array&lt;Tag&gt;**](Tag.md) |  |  [optional]
+**tags** | [**kotlin.collections.List&lt;Tag&gt;**](Tag.md) |  |  [optional]
 **status** | [**inline**](#StatusEnum) | pet status in the store |  [optional]
 
 
Index: samples/client/petstore/kotlin-multiplatform-new/docs/PetApi.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/samples/client/petstore/kotlin-multiplatform-new/docs/PetApi.md b/samples/client/petstore/kotlin-multiplatform-new/docs/PetApi.md
--- a/samples/client/petstore/kotlin-multiplatform-new/docs/PetApi.md	(revision 14bddcdfd9ac20654efc77ff8751eb20ad51009e)
+++ b/samples/client/petstore/kotlin-multiplatform-new/docs/PetApi.md	(revision f3f801573bd6ee9d782e97d012b3dba60a481e16)
@@ -110,7 +110,7 @@
 
 <a name="findPetsByStatus"></a>
 # **findPetsByStatus**
-> kotlin.Array&lt;Pet&gt; findPetsByStatus(status)
+> kotlin.collections.List&lt;Pet&gt; findPetsByStatus(status)
 
 Finds Pets by status
 
@@ -123,9 +123,9 @@
 //import org.openapitools.client.models.*
 
 val apiInstance = PetApi()
-val status : kotlin.Array<kotlin.String> =  // kotlin.Array<kotlin.String> | Status values that need to be considered for filter
+val status : kotlin.collections.List<kotlin.String> =  // kotlin.collections.List<kotlin.String> | Status values that need to be considered for filter
 try {
-    val result : kotlin.Array<Pet> = apiInstance.findPetsByStatus(status)
+    val result : kotlin.collections.List<Pet> = apiInstance.findPetsByStatus(status)
     println(result)
 } catch (e: ClientException) {
     println("4xx response calling PetApi#findPetsByStatus")
@@ -140,11 +140,11 @@
 
 Name | Type | Description  | Notes
 ------------- | ------------- | ------------- | -------------
- **status** | [**kotlin.Array&lt;kotlin.String&gt;**](kotlin.String.md)| Status values that need to be considered for filter | [enum: available, pending, sold]
+ **status** | [**kotlin.collections.List&lt;kotlin.String&gt;**](kotlin.String.md)| Status values that need to be considered for filter | [enum: available, pending, sold]
 
 ### Return type
 
-[**kotlin.Array&lt;Pet&gt;**](Pet.md)
+[**kotlin.collections.List&lt;Pet&gt;**](Pet.md)
 
 ### Authorization
 
@@ -159,7 +159,7 @@
 
 <a name="findPetsByTags"></a>
 # **findPetsByTags**
-> kotlin.Array&lt;Pet&gt; findPetsByTags(tags)
+> kotlin.collections.List&lt;Pet&gt; findPetsByTags(tags)
 
 Finds Pets by tags
 
@@ -172,9 +172,9 @@
 //import org.openapitools.client.models.*
 
 val apiInstance = PetApi()
-val tags : kotlin.Array<kotlin.String> =  // kotlin.Array<kotlin.String> | Tags to filter by
+val tags : kotlin.collections.List<kotlin.String> =  // kotlin.collections.List<kotlin.String> | Tags to filter by
 try {
-    val result : kotlin.Array<Pet> = apiInstance.findPetsByTags(tags)
+    val result : kotlin.collections.List<Pet> = apiInstance.findPetsByTags(tags)
     println(result)
 } catch (e: ClientException) {
     println("4xx response calling PetApi#findPetsByTags")
@@ -189,11 +189,11 @@
 
 Name | Type | Description  | Notes
 ------------- | ------------- | ------------- | -------------
- **tags** | [**kotlin.Array&lt;kotlin.String&gt;**](kotlin.String.md)| Tags to filter by |
+ **tags** | [**kotlin.collections.List&lt;kotlin.String&gt;**](kotlin.String.md)| Tags to filter by |
 
 ### Return type
 
-[**kotlin.Array&lt;Pet&gt;**](Pet.md)
+[**kotlin.collections.List&lt;Pet&gt;**](Pet.md)
 
 ### Authorization
 
Index: samples/client/petstore/kotlin-multiplatform-new/docs/UserApi.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/samples/client/petstore/kotlin-multiplatform-new/docs/UserApi.md b/samples/client/petstore/kotlin-multiplatform-new/docs/UserApi.md
--- a/samples/client/petstore/kotlin-multiplatform-new/docs/UserApi.md	(revision 14bddcdfd9ac20654efc77ff8751eb20ad51009e)
+++ b/samples/client/petstore/kotlin-multiplatform-new/docs/UserApi.md	(revision f3f801573bd6ee9d782e97d012b3dba60a481e16)
@@ -73,7 +73,7 @@
 //import org.openapitools.client.models.*
 
 val apiInstance = UserApi()
-val body : kotlin.Array<User> =  // kotlin.Array<User> | List of user object
+val body : kotlin.collections.List<User> =  // kotlin.collections.List<User> | List of user object
 try {
     apiInstance.createUsersWithArrayInput(body)
 } catch (e: ClientException) {
@@ -89,7 +89,7 @@
 
 Name | Type | Description  | Notes
 ------------- | ------------- | ------------- | -------------
- **body** | [**kotlin.Array&lt;User&gt;**](User.md)| List of user object |
+ **body** | [**kotlin.collections.List&lt;User&gt;**](User.md)| List of user object |
 
 ### Return type
 
@@ -117,7 +117,7 @@
 //import org.openapitools.client.models.*
 
 val apiInstance = UserApi()
-val body : kotlin.Array<User> =  // kotlin.Array<User> | List of user object
+val body : kotlin.collections.List<User> =  // kotlin.collections.List<User> | List of user object
 try {
     apiInstance.createUsersWithListInput(body)
 } catch (e: ClientException) {
@@ -133,7 +133,7 @@
 
 Name | Type | Description  | Notes
 ------------- | ------------- | ------------- | -------------
- **body** | [**kotlin.Array&lt;User&gt;**](User.md)| List of user object |
+ **body** | [**kotlin.collections.List&lt;User&gt;**](User.md)| List of user object |
 
 ### Return type
 
Index: samples/client/petstore/kotlin-multiplatform-new/src/common/main/org/openapitools/client/ApiClient.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/samples/client/petstore/kotlin-multiplatform-new/src/common/main/org/openapitools/client/ApiClient.kt b/samples/client/petstore/kotlin-multiplatform-new/src/common/main/org/openapitools/client/ApiClient.kt
--- a/samples/client/petstore/kotlin-multiplatform-new/src/common/main/org/openapitools/client/ApiClient.kt	(revision 14bddcdfd9ac20654efc77ff8751eb20ad51009e)
+++ b/samples/client/petstore/kotlin-multiplatform-new/src/common/main/org/openapitools/client/ApiClient.kt	(revision f3f801573bd6ee9d782e97d012b3dba60a481e16)
@@ -15,7 +15,7 @@
     httpClientEngine: HttpClientEngine? = null,
     json: Json = Json {}
 ) {
-    protected val serializer = KotlinxSerializer(json)
+    protected val serializer: KotlinxSerializer = KotlinxSerializer(json)
     protected val client: HttpClient
 
     init {
Index: samples/client/petstore/kotlin-multiplatform-new/src/common/main/org/openapitools/client/apis/PetApi.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/samples/client/petstore/kotlin-multiplatform-new/src/common/main/org/openapitools/client/apis/PetApi.kt b/samples/client/petstore/kotlin-multiplatform-new/src/common/main/org/openapitools/client/apis/PetApi.kt
--- a/samples/client/petstore/kotlin-multiplatform-new/src/common/main/org/openapitools/client/apis/PetApi.kt	(revision 14bddcdfd9ac20654efc77ff8751eb20ad51009e)
+++ b/samples/client/petstore/kotlin-multiplatform-new/src/common/main/org/openapitools/client/apis/PetApi.kt	(revision f3f801573bd6ee9d782e97d012b3dba60a481e16)
@@ -88,7 +88,6 @@
         ).wrap()
     }
 
-
     /**
      * Deletes a pet
      * 
@@ -125,16 +124,17 @@
             authNamesOag
         ).wrap()
     }
+
     /**
      * Finds Pets by status
      * Multiple status values can be provided with comma separated strings
      * @param status Status values that need to be considered for filter 
-     * @return kotlin.Array<Pet>
+     * @return kotlin.collections.List<Pet>
      */
     @Suppress("UNCHECKED_CAST")
     public suspend fun findPetsByStatus(
-        status: kotlin.Array<kotlin.String>,
-    ): HttpResponse<kotlin.Array<Pet>> {
+        status: kotlin.collections.List<kotlin.String>,
+    ): HttpResponse<kotlin.collections.List<Pet>> {
         val authNamesOag = listOf<String>("petstore_auth")
 
         val bodyOag = 
@@ -160,16 +160,17 @@
             authNamesOag
         ).wrap()
     }
+
     /**
      * Finds Pets by tags
      * Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.
      * @param tags Tags to filter by 
-     * @return kotlin.Array<Pet>
+     * @return kotlin.collections.List<Pet>
      */
     @Suppress("UNCHECKED_CAST")
     public suspend fun findPetsByTags(
-        tags: kotlin.Array<kotlin.String>,
-    ): HttpResponse<kotlin.Array<Pet>> {
+        tags: kotlin.collections.List<kotlin.String>,
+    ): HttpResponse<kotlin.collections.List<Pet>> {
         val authNamesOag = listOf<String>("petstore_auth")
 
         val bodyOag = 
@@ -195,6 +196,7 @@
             authNamesOag
         ).wrap()
     }
+
     /**
      * Find pet by ID
      * Returns a single pet
@@ -229,6 +231,7 @@
             authNamesOag
         ).wrap()
     }
+
     /**
      * Update an existing pet
      * 
@@ -262,7 +265,6 @@
         ).wrap()
     }
 
-
     /**
      * Updates a pet in the store with form data
      * 
@@ -303,6 +305,7 @@
             authNamesOag
         ).wrap()
     }
+
     /**
      * uploads an image
      * 
@@ -344,4 +347,5 @@
             authNamesOag
         ).wrap()
     }
+
 }
Index: samples/client/petstore/kotlin-multiplatform-new/src/common/main/org/openapitools/client/apis/StoreApi.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/samples/client/petstore/kotlin-multiplatform-new/src/common/main/org/openapitools/client/apis/StoreApi.kt b/samples/client/petstore/kotlin-multiplatform-new/src/common/main/org/openapitools/client/apis/StoreApi.kt
--- a/samples/client/petstore/kotlin-multiplatform-new/src/common/main/org/openapitools/client/apis/StoreApi.kt	(revision 14bddcdfd9ac20654efc77ff8751eb20ad51009e)
+++ b/samples/client/petstore/kotlin-multiplatform-new/src/common/main/org/openapitools/client/apis/StoreApi.kt	(revision f3f801573bd6ee9d782e97d012b3dba60a481e16)
@@ -87,6 +87,7 @@
             authNamesOag
         ).wrap()
     }
+
     /**
      * Returns pet inventories by status
      * Returns a map of status codes to quantities
@@ -117,18 +118,9 @@
             configOag,
             bodyOag,
             authNamesOag
-        ).wrap<GetInventoryResponse>().map { value }
+        ).wrap()
     }
-    @Serializable
-    private class GetInventoryResponse(val value: Map<kotlin.String, kotlin.Int>) {
-        @Serializer(GetInventoryResponse::class)
-        companion object : KSerializer<GetInventoryResponse> {
-            private val serializer: KSerializer<Map<kotlin.String, kotlin.Int>> = (kotlin.String.serializer() to kotlin.Int.serializer()).map
-                override val descriptor = PrimitiveDescriptor("GetInventoryResponse", PrimitiveKind.STRING)
-                override fun serialize(encoder: Encoder, value: GetInventoryResponse) = serializer.serialize(encoder, value.value)
-                override fun deserialize(decoder: Decoder) = GetInventoryResponse(serializer.deserialize(decoder))
-        }
-    }
+
     /**
      * Find purchase order by ID
      * For valid response try integer IDs with value &lt;&#x3D; 5 or &gt; 10. Other values will generated exceptions
@@ -163,6 +155,7 @@
             authNamesOag
         ).wrap()
     }
+
     /**
      * Place an order for a pet
      * 
@@ -197,5 +190,4 @@
         ).wrap()
     }
 
-
 }
Index: samples/client/petstore/kotlin-multiplatform-new/src/common/main/org/openapitools/client/apis/UserApi.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/samples/client/petstore/kotlin-multiplatform-new/src/common/main/org/openapitools/client/apis/UserApi.kt b/samples/client/petstore/kotlin-multiplatform-new/src/common/main/org/openapitools/client/apis/UserApi.kt
--- a/samples/client/petstore/kotlin-multiplatform-new/src/common/main/org/openapitools/client/apis/UserApi.kt	(revision 14bddcdfd9ac20654efc77ff8751eb20ad51009e)
+++ b/samples/client/petstore/kotlin-multiplatform-new/src/common/main/org/openapitools/client/apis/UserApi.kt	(revision f3f801573bd6ee9d782e97d012b3dba60a481e16)
@@ -87,7 +87,6 @@
         ).wrap()
     }
 
-
     /**
      * Creates list of users with given input array
      * 
@@ -95,7 +94,7 @@
      * @return void
      */
     public suspend fun createUsersWithArrayInput(
-        body: kotlin.Array<User>,
+        body: kotlin.collections.List<User>,
     ): HttpResponse<Unit> {
         val authNamesOag = listOf<String>()
 
@@ -121,7 +120,6 @@
         ).wrap()
     }
 
-
     /**
      * Creates list of users with given input array
      * 
@@ -129,7 +127,7 @@
      * @return void
      */
     public suspend fun createUsersWithListInput(
-        body: kotlin.Array<User>,
+        body: kotlin.collections.List<User>,
     ): HttpResponse<Unit> {
         val authNamesOag = listOf<String>()
 
@@ -155,7 +153,6 @@
         ).wrap()
     }
 
-
     /**
      * Delete user
      * This can only be done by the logged in user.
@@ -189,6 +186,7 @@
             authNamesOag
         ).wrap()
     }
+
     /**
      * Get user by user name
      * 
@@ -223,6 +221,7 @@
             authNamesOag
         ).wrap()
     }
+
     /**
      * Logs user into the system
      * 
@@ -261,6 +260,7 @@
             authNamesOag
         ).wrap()
     }
+
     /**
      * Logs out current logged in user session
      * 
@@ -292,6 +292,7 @@
             authNamesOag
         ).wrap()
     }
+
     /**
      * Updated user
      * This can only be done by the logged in user.
@@ -327,5 +328,4 @@
         ).wrap()
     }
 
-
 }
Index: samples/client/petstore/kotlin-multiplatform-new/src/common/main/org/openapitools/client/models/Pet.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/samples/client/petstore/kotlin-multiplatform-new/src/common/main/org/openapitools/client/models/Pet.kt b/samples/client/petstore/kotlin-multiplatform-new/src/common/main/org/openapitools/client/models/Pet.kt
--- a/samples/client/petstore/kotlin-multiplatform-new/src/common/main/org/openapitools/client/models/Pet.kt	(revision 14bddcdfd9ac20654efc77ff8751eb20ad51009e)
+++ b/samples/client/petstore/kotlin-multiplatform-new/src/common/main/org/openapitools/client/models/Pet.kt	(revision f3f801573bd6ee9d782e97d012b3dba60a481e16)
@@ -39,13 +39,13 @@
     val name: kotlin.String,
     @SerialName(value = "photoUrls")
     @Required
-    val photoUrls: kotlin.Array<kotlin.String>,
+    val photoUrls: kotlin.collections.List<kotlin.String>,
     @SerialName(value = "id")
     val id: kotlin.Long? = null,
     @SerialName(value = "category")
     val category: Category? = null,
     @SerialName(value = "tags")
-    val tags: kotlin.Array<Tag>? = null,
+    val tags: kotlin.collections.List<Tag>? = null,
     /**
      * pet status in the store
      */
