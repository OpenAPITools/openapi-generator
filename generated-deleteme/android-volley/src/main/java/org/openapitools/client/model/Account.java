/**
 * Internet Banking
 * Public API for Internet Banking (IB) clients - web, iOS, Android. A combination of specifications from Backbase, as well as home-grown specifications.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@greater.com.au
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Account details
 **/
@ApiModel(description = "Account details")
public class Account {
  
  @SerializedName("accountNumber")
  private String accountNumber = null;
  @SerializedName("bsb")
  private String bsb = null;
  @SerializedName("legalName")
  private String legalName = null;
  @SerializedName("name")
  private String name = null;

  /**
   * Account Number
   **/
  @ApiModelProperty(value = "Account Number")
  public String getAccountNumber() {
    return accountNumber;
  }
  public void setAccountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
  }

  /**
   * BSB
   **/
  @ApiModelProperty(value = "BSB")
  public String getBsb() {
    return bsb;
  }
  public void setBsb(String bsb) {
    this.bsb = bsb;
  }

  /**
   * Full Legal Account Name (FLAN): This field is used when the service overlay dictates that the FLAN must be provided (eg: x2p).
   **/
  @ApiModelProperty(value = "Full Legal Account Name (FLAN): This field is used when the service overlay dictates that the FLAN must be provided (eg: x2p).")
  public String getLegalName() {
    return legalName;
  }
  public void setLegalName(String legalName) {
    this.legalName = legalName;
  }

  /**
   * The account's name
   **/
  @ApiModelProperty(value = "The account's name")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Account account = (Account) o;
    return (this.accountNumber == null ? account.accountNumber == null : this.accountNumber.equals(account.accountNumber)) &&
        (this.bsb == null ? account.bsb == null : this.bsb.equals(account.bsb)) &&
        (this.legalName == null ? account.legalName == null : this.legalName.equals(account.legalName)) &&
        (this.name == null ? account.name == null : this.name.equals(account.name));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.accountNumber == null ? 0: this.accountNumber.hashCode());
    result = 31 * result + (this.bsb == null ? 0: this.bsb.hashCode());
    result = 31 * result + (this.legalName == null ? 0: this.legalName.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Account {\n");
    
    sb.append("  accountNumber: ").append(accountNumber).append("\n");
    sb.append("  bsb: ").append(bsb).append("\n");
    sb.append("  legalName: ").append(legalName).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
