/**
 * Internet Banking
 * Public API for Internet Banking (IB) clients - web, iOS, Android. A combination of specifications from Backbase, as well as home-grown specifications.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@greater.com.au
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.Account;
import org.openapitools.client.model.Alias;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class NppPaymentGetResponse {
  
  @SerializedName("amount")
  private String amount = null;
  @SerializedName("completed")
  private String completed = null;
  @SerializedName("created")
  private String created = null;
  @SerializedName("creditor")
  private Account creditor = null;
  @SerializedName("creditorAlias")
  private Alias creditorAlias = null;
  @SerializedName("creditReceiptNumber")
  private String creditReceiptNumber = null;
  @SerializedName("debitReceiptNumber")
  private String debitReceiptNumber = null;
  @SerializedName("debtor")
  private Account debtor = null;
  @SerializedName("description")
  private String description = null;
  @SerializedName("endToEndId")
  private String endToEndId = null;
  @SerializedName("hasReturns")
  private Boolean hasReturns = null;
  @SerializedName("paymentId")
  private String paymentId = null;
  @SerializedName("status")
  private String status = null;
  @SerializedName("transactionId")
  private String transactionId = null;

  /**
   * Transfer amount
   **/
  @ApiModelProperty(required = true, value = "Transfer amount")
  public String getAmount() {
    return amount;
  }
  public void setAmount(String amount) {
    this.amount = amount;
  }

  /**
   * (UTC) Date/time the payment was completed (Cleared or Rejected). If null, the payment is not yet complete
   **/
  @ApiModelProperty(value = "(UTC) Date/time the payment was completed (Cleared or Rejected). If null, the payment is not yet complete")
  public String getCompleted() {
    return completed;
  }
  public void setCompleted(String completed) {
    this.completed = completed;
  }

  /**
   * (UTC) Date/time the payment was created in the system
   **/
  @ApiModelProperty(required = true, value = "(UTC) Date/time the payment was created in the system")
  public String getCreated() {
    return created;
  }
  public void setCreated(String created) {
    this.created = created;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Account getCreditor() {
    return creditor;
  }
  public void setCreditor(Account creditor) {
    this.creditor = creditor;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Alias getCreditorAlias() {
    return creditorAlias;
  }
  public void setCreditorAlias(Alias creditorAlias) {
    this.creditorAlias = creditorAlias;
  }

  /**
   * Core receipt number to display to creditor (returned from core 'Credit' action)
   **/
  @ApiModelProperty(value = "Core receipt number to display to creditor (returned from core 'Credit' action)")
  public String getCreditReceiptNumber() {
    return creditReceiptNumber;
  }
  public void setCreditReceiptNumber(String creditReceiptNumber) {
    this.creditReceiptNumber = creditReceiptNumber;
  }

  /**
   * Core receipt number to display to debtor (returned from core 'Hold' and/or 'Debit' actions)
   **/
  @ApiModelProperty(value = "Core receipt number to display to debtor (returned from core 'Hold' and/or 'Debit' actions)")
  public String getDebitReceiptNumber() {
    return debitReceiptNumber;
  }
  public void setDebitReceiptNumber(String debitReceiptNumber) {
    this.debitReceiptNumber = debitReceiptNumber;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Account getDebtor() {
    return debtor;
  }
  public void setDebtor(Account debtor) {
    this.debtor = debtor;
  }

  /**
   * Message from debtor to creditor
   **/
  @ApiModelProperty(value = "Message from debtor to creditor")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }

  /**
   * The end-to-end id that was supplied with the payment; debtor provided such as an invoice number.
   **/
  @ApiModelProperty(value = "The end-to-end id that was supplied with the payment; debtor provided such as an invoice number.")
  public String getEndToEndId() {
    return endToEndId;
  }
  public void setEndToEndId(String endToEndId) {
    this.endToEndId = endToEndId;
  }

  /**
   * Indicates if the payment is subject to return payments
   **/
  @ApiModelProperty(value = "Indicates if the payment is subject to return payments")
  public Boolean getHasReturns() {
    return hasReturns;
  }
  public void setHasReturns(Boolean hasReturns) {
    this.hasReturns = hasReturns;
  }

  /**
   * Unique payment identifier - UUID
   **/
  @ApiModelProperty(required = true, value = "Unique payment identifier - UUID")
  public String getPaymentId() {
    return paymentId;
  }
  public void setPaymentId(String paymentId) {
    this.paymentId = paymentId;
  }

  /**
   * Payment status {Pending, Failed, Queued, Initiated, Cleared, Settled, Rejected
   **/
  @ApiModelProperty(required = true, value = "Payment status {Pending, Failed, Queued, Initiated, Cleared, Settled, Rejected")
  public String getStatus() {
    return status;
  }
  public void setStatus(String status) {
    this.status = status;
  }

  /**
   * NPP-style transaction id
   **/
  @ApiModelProperty(value = "NPP-style transaction id")
  public String getTransactionId() {
    return transactionId;
  }
  public void setTransactionId(String transactionId) {
    this.transactionId = transactionId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NppPaymentGetResponse nppPaymentGetResponse = (NppPaymentGetResponse) o;
    return (this.amount == null ? nppPaymentGetResponse.amount == null : this.amount.equals(nppPaymentGetResponse.amount)) &&
        (this.completed == null ? nppPaymentGetResponse.completed == null : this.completed.equals(nppPaymentGetResponse.completed)) &&
        (this.created == null ? nppPaymentGetResponse.created == null : this.created.equals(nppPaymentGetResponse.created)) &&
        (this.creditor == null ? nppPaymentGetResponse.creditor == null : this.creditor.equals(nppPaymentGetResponse.creditor)) &&
        (this.creditorAlias == null ? nppPaymentGetResponse.creditorAlias == null : this.creditorAlias.equals(nppPaymentGetResponse.creditorAlias)) &&
        (this.creditReceiptNumber == null ? nppPaymentGetResponse.creditReceiptNumber == null : this.creditReceiptNumber.equals(nppPaymentGetResponse.creditReceiptNumber)) &&
        (this.debitReceiptNumber == null ? nppPaymentGetResponse.debitReceiptNumber == null : this.debitReceiptNumber.equals(nppPaymentGetResponse.debitReceiptNumber)) &&
        (this.debtor == null ? nppPaymentGetResponse.debtor == null : this.debtor.equals(nppPaymentGetResponse.debtor)) &&
        (this.description == null ? nppPaymentGetResponse.description == null : this.description.equals(nppPaymentGetResponse.description)) &&
        (this.endToEndId == null ? nppPaymentGetResponse.endToEndId == null : this.endToEndId.equals(nppPaymentGetResponse.endToEndId)) &&
        (this.hasReturns == null ? nppPaymentGetResponse.hasReturns == null : this.hasReturns.equals(nppPaymentGetResponse.hasReturns)) &&
        (this.paymentId == null ? nppPaymentGetResponse.paymentId == null : this.paymentId.equals(nppPaymentGetResponse.paymentId)) &&
        (this.status == null ? nppPaymentGetResponse.status == null : this.status.equals(nppPaymentGetResponse.status)) &&
        (this.transactionId == null ? nppPaymentGetResponse.transactionId == null : this.transactionId.equals(nppPaymentGetResponse.transactionId));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.amount == null ? 0: this.amount.hashCode());
    result = 31 * result + (this.completed == null ? 0: this.completed.hashCode());
    result = 31 * result + (this.created == null ? 0: this.created.hashCode());
    result = 31 * result + (this.creditor == null ? 0: this.creditor.hashCode());
    result = 31 * result + (this.creditorAlias == null ? 0: this.creditorAlias.hashCode());
    result = 31 * result + (this.creditReceiptNumber == null ? 0: this.creditReceiptNumber.hashCode());
    result = 31 * result + (this.debitReceiptNumber == null ? 0: this.debitReceiptNumber.hashCode());
    result = 31 * result + (this.debtor == null ? 0: this.debtor.hashCode());
    result = 31 * result + (this.description == null ? 0: this.description.hashCode());
    result = 31 * result + (this.endToEndId == null ? 0: this.endToEndId.hashCode());
    result = 31 * result + (this.hasReturns == null ? 0: this.hasReturns.hashCode());
    result = 31 * result + (this.paymentId == null ? 0: this.paymentId.hashCode());
    result = 31 * result + (this.status == null ? 0: this.status.hashCode());
    result = 31 * result + (this.transactionId == null ? 0: this.transactionId.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class NppPaymentGetResponse {\n");
    
    sb.append("  amount: ").append(amount).append("\n");
    sb.append("  completed: ").append(completed).append("\n");
    sb.append("  created: ").append(created).append("\n");
    sb.append("  creditor: ").append(creditor).append("\n");
    sb.append("  creditorAlias: ").append(creditorAlias).append("\n");
    sb.append("  creditReceiptNumber: ").append(creditReceiptNumber).append("\n");
    sb.append("  debitReceiptNumber: ").append(debitReceiptNumber).append("\n");
    sb.append("  debtor: ").append(debtor).append("\n");
    sb.append("  description: ").append(description).append("\n");
    sb.append("  endToEndId: ").append(endToEndId).append("\n");
    sb.append("  hasReturns: ").append(hasReturns).append("\n");
    sb.append("  paymentId: ").append(paymentId).append("\n");
    sb.append("  status: ").append(status).append("\n");
    sb.append("  transactionId: ").append(transactionId).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
