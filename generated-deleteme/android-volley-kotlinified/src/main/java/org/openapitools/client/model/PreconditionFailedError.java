/**
 * Internet Banking
 * Public API for Internet Banking (IB) clients - web, iOS, Android. A combination of specifications from Backbase, as well as home-grown specifications.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@greater.com.au
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import org.openapitools.client.model.PreconditionFailedErrorAttempts;
import org.openapitools.client.model.PreconditionFailedErrorOtpRecipients;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class PreconditionFailedError {
  
  public enum TypeEnum {
     OTP_REQUIRED,  OTP_FAILED,  OTP_EXPIRED, 
  };
  @SerializedName("type")
  private TypeEnum type = null;
  @SerializedName("otpUuid")
  private String otpUuid = null;
  @SerializedName("otpRecipients")
  private List<PreconditionFailedErrorOtpRecipients> otpRecipients = null;
  @SerializedName("attempts")
  private PreconditionFailedErrorAttempts attempts = null;
  @SerializedName("regenerateAllowed")
  private Boolean regenerateAllowed = null;

  /**
   * The type of precondition (e.g OTP_REQUIRED).
   **/
  @ApiModelProperty(required = true, value = "The type of precondition (e.g OTP_REQUIRED).")
  public TypeEnum getType() {
    return type;
  }
  public void setType(TypeEnum type) {
    this.type = type;
  }

  /**
   * The unique identifier for the OTP that authenticates this request (where required).
   **/
  @ApiModelProperty(required = true, value = "The unique identifier for the OTP that authenticates this request (where required).")
  public String getOtpUuid() {
    return otpUuid;
  }
  public void setOtpUuid(String otpUuid) {
    this.otpUuid = otpUuid;
  }

  /**
   * The recipients of the OTP.
   **/
  @ApiModelProperty(value = "The recipients of the OTP.")
  public List<PreconditionFailedErrorOtpRecipients> getOtpRecipients() {
    return otpRecipients;
  }
  public void setOtpRecipients(List<PreconditionFailedErrorOtpRecipients> otpRecipients) {
    this.otpRecipients = otpRecipients;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public PreconditionFailedErrorAttempts getAttempts() {
    return attempts;
  }
  public void setAttempts(PreconditionFailedErrorAttempts attempts) {
    this.attempts = attempts;
  }

  /**
   * Indicates whether or not an OTP can be regenerated and sent to the user.
   **/
  @ApiModelProperty(required = true, value = "Indicates whether or not an OTP can be regenerated and sent to the user.")
  public Boolean getRegenerateAllowed() {
    return regenerateAllowed;
  }
  public void setRegenerateAllowed(Boolean regenerateAllowed) {
    this.regenerateAllowed = regenerateAllowed;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PreconditionFailedError preconditionFailedError = (PreconditionFailedError) o;
    return (this.type == null ? preconditionFailedError.type == null : this.type.equals(preconditionFailedError.type)) &&
        (this.otpUuid == null ? preconditionFailedError.otpUuid == null : this.otpUuid.equals(preconditionFailedError.otpUuid)) &&
        (this.otpRecipients == null ? preconditionFailedError.otpRecipients == null : this.otpRecipients.equals(preconditionFailedError.otpRecipients)) &&
        (this.attempts == null ? preconditionFailedError.attempts == null : this.attempts.equals(preconditionFailedError.attempts)) &&
        (this.regenerateAllowed == null ? preconditionFailedError.regenerateAllowed == null : this.regenerateAllowed.equals(preconditionFailedError.regenerateAllowed));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.type == null ? 0: this.type.hashCode());
    result = 31 * result + (this.otpUuid == null ? 0: this.otpUuid.hashCode());
    result = 31 * result + (this.otpRecipients == null ? 0: this.otpRecipients.hashCode());
    result = 31 * result + (this.attempts == null ? 0: this.attempts.hashCode());
    result = 31 * result + (this.regenerateAllowed == null ? 0: this.regenerateAllowed.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class PreconditionFailedError {\n");
    
    sb.append("  type: ").append(type).append("\n");
    sb.append("  otpUuid: ").append(otpUuid).append("\n");
    sb.append("  otpRecipients: ").append(otpRecipients).append("\n");
    sb.append("  attempts: ").append(attempts).append("\n");
    sb.append("  regenerateAllowed: ").append(regenerateAllowed).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
