/**
 * Internet Banking
 * Public API for Internet Banking (IB) clients - web, iOS, Android. A combination of specifications from Backbase, as well as home-grown specifications.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@greater.com.au
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.client.request

import com.android.volley.*
import org.apache.http.HttpEntity
import kotlin.Throws
import java.io.ByteArrayOutputStream
import java.io.IOException
import com.android.volley.toolbox.HttpHeaderParser
import java.io.UnsupportedEncodingException
import java.util.HashMap

class PatchRequest(
    url: String?,
    var apiHeaders: Map<String, String>?,
    var contentType: String?,
    var entity: HttpEntity?,
    private val mListener: Response.Listener<String>,
    errorListener: Response.ErrorListener?
) : Request<String>(
    Method.PATCH, url, errorListener
) {
    override fun getBodyContentType(): String {
        return if (entity == null) {
            null
        } else entity!!.contentType.value
    }

    @Throws(AuthFailureError::class)
    override fun getBody(): ByteArray {
        if (entity == null) {
            return null
        }
        val bos = ByteArrayOutputStream()
        try {
            entity!!.writeTo(bos)
        } catch (e: IOException) {
            VolleyLog.e("IOException writing to ByteArrayOutputStream")
        }
        return bos.toByteArray()
    }

    override fun parseNetworkResponse(response: NetworkResponse): Response<String> {
        val parsed: String
        parsed = try {
            String(response.data, HttpHeaderParser.parseCharset(response.headers))
        } catch (e: UnsupportedEncodingException) {
            String(response.data)
        }
        return Response.success(parsed, HttpHeaderParser.parseCacheHeaders(response))
    }

    override fun deliverResponse(response: String) {
        mListener.onResponse(response)
    }

    /* (non-Javadoc)
   * @see com.android.volley.Request#getHeaders()
   */
    @Throws(AuthFailureError::class)
    override fun getHeaders(): Map<String, String> {
        var headers = super.getHeaders()
        if (headers == null || headers == emptyMap<Any, Any>()) {
            headers = HashMap()
        }
        if (apiHeaders != null && apiHeaders != emptyMap<Any, Any>()) {
            headers.putAll(apiHeaders!!)
        }
        if (contentType != null) {
            headers["Content-Type"] = contentType!!
        }
        return headers
    }
}