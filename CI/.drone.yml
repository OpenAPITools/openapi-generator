kind: pipeline
name: default

steps:
# test aspnetcore 3.x
- name: aspnetcore-test
  image: mcr.microsoft.com/dotnet/core/sdk:3.1
  commands:
  - (cd samples/server/petstore/aspnetcore-3.1/ && /bin/sh build.sh)
  - (cd samples/server/petstore/aspnetcore-3.0/ && /bin/sh build.sh)
# test ocaml petstore client
- name: ocaml-test
  image: ocaml/opam2:4.07
  commands:
  - sudo apt-get -y install m4
  - cd samples/client/petstore/ocaml
  - opam install ppx_deriving_yojson cohttp ppx_deriving cohttp-lwt-unix 
  - opam pin add ocaml-migrate-parsetree 1.3.1
  - eval $(opam env)
  - sudo chmod -R 777 .
  - dune build --build-dir=./_build
# test haskell client
- name: haskell-client-test
  image: haskell:8.6.5
  commands:
  - (cd samples/client/petstore/haskell-http-client/ && stack --install-ghc --no-haddock-deps haddock --fast && stack test --fast)
# test Java 11 HTTP client
- name: java11-test
  image: openjdk:11.0
  commands:
  - ./mvnw -quiet clean install -Dorg.slf4j.simpleLogger.defaultLogLevel=error
  - ./mvnw --quiet verify -Psamples.droneio -Dorg.slf4j.simpleLogger.defaultLogLevel=error
  # test java native client
  - ./mvnw clean test -f samples/client/petstore/java/native/pom.xml
  - ./mvnw clean test -f samples/client/petstore/java/native-async/pom.xml
  # test all generators with fake petstore spec (2.0, 3.0)
  - /bin/bash bin/utils/test-fake-petstore-for-all.sh
  # generate test scripts
  - /bin/bash bin/tests/run-all-test
  # generate all petstore samples (client, servers, doc)
  - /bin/bash bin/generate-samples.sh
  # generate all petstore samples (openapi3)
  - /bin/bash bin/generate-samples.sh bin/configs/other/*.yaml
