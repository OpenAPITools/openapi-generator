extends Resource
class_name DemoArrayItemRefTestModel

# THIS FILE WAS AUTOMATICALLY GENERATED by the OpenAPI Generator project.
# For more information on how to customize templates, see:
# https://openapi-generator.tech
# https://github.com/OpenAPITools/openapi-generator/tree/master/modules/openapi-generator/src/main/resources/gdscript
# The OpenAPI Generator Community, Â© Public Domain, 2022

# DemoArrayItemRefTestModel Model
# Test handling of object reference in arrays


# Required: True
# isArray: true
@export var listUnderscorewithUnderscorearrayUnderscoreref: Array:
	set(value):
		__listUnderscorewithUnderscorearrayUnderscoreref__was__set = true
		listUnderscorewithUnderscorearrayUnderscoreref = value
var __listUnderscorewithUnderscorearrayUnderscoreref__was__set := false

# Required: True
# isArray: true
@export var listUnderscorewithUnderscoreobjectUnderscoreref: Array:
	set(value):
		__listUnderscorewithUnderscoreobjectUnderscoreref__was__set = true
		listUnderscorewithUnderscoreobjectUnderscoreref = value
var __listUnderscorewithUnderscoreobjectUnderscoreref__was__set := false


func bzz_collect_missing_properties() -> Array:
	var bzz_missing_properties := Array()
	if not self.__listUnderscorewithUnderscorearrayUnderscoreref__was__set:
		bzz_missing_properties.append("listUnderscorewithUnderscorearrayUnderscoreref")
	if not self.__listUnderscorewithUnderscoreobjectUnderscoreref__was__set:
		bzz_missing_properties.append("listUnderscorewithUnderscoreobjectUnderscoreref")
	return bzz_missing_properties


func bzz_normalize() -> Dictionary:
	var bzz_dictionary := Dictionary()
	if self.__listUnderscorewithUnderscorearrayUnderscoreref__was__set:
		bzz_dictionary["listUnderscorewithUnderscorearrayUnderscoreref"] = self.listUnderscorewithUnderscorearrayUnderscoreref
	if self.__listUnderscorewithUnderscoreobjectUnderscoreref__was__set:
		bzz_dictionary["listUnderscorewithUnderscoreobjectUnderscoreref"] = self.listUnderscorewithUnderscoreobjectUnderscoreref
	return bzz_dictionary


# Won't work for JSON+LD
static func bzz_denormalize_single(from_dict: Dictionary):
	var me := new()
	if from_dict.has("listUnderscorewithUnderscorearrayUnderscoreref"):
		me.listUnderscorewithUnderscorearrayUnderscoreref = from_dict["listUnderscorewithUnderscorearrayUnderscoreref"]
	if from_dict.has("listUnderscorewithUnderscoreobjectUnderscoreref"):
		me.listUnderscorewithUnderscoreobjectUnderscoreref = from_dict["listUnderscorewithUnderscoreobjectUnderscoreref"]
	return me


# Won't work for JSON+LD
static func bzz_denormalize_multiple(from_array: Array):
	var mes := Array()
	for element in from_array:
		if element is Array:
			mes.append(bzz_denormalize_multiple(element))
		elif element is Dictionary:
			# TODO: perhaps check first if it looks like a match or an intermediate container
			mes.append(bzz_denormalize_single(element))
		else:
			mes.append(element)
	return mes

