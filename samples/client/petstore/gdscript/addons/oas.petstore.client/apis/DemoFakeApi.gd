extends DemoApiBee
class_name DemoFakeApi

# THIS FILE WAS AUTOMATICALLY GENERATED by the OpenAPI Generator project.
# For more information on how to customize templates, see:
# https://openapi-generator.tech
# https://github.com/OpenAPITools/openapi-generator/tree/master/modules/openapi-generator/src/main/resources/gdscript
# The OpenAPI Generator Community, © Public Domain, 2022

# API DemoFakeApi
# Instantiate this object and use it to make requests to the API.

func _bzz_get_api_name() -> String:
	return "DemoFakeApi"


# Operation testNullableRequiredParam → GET /fake/user/{username}
# To test nullable required parameters
func test_nullable_required_param(
	# username: String = ""   Eg: username_example
	# The name that needs to be fetched. Use user1 for testing.
	username: String,
	# dummyRequiredNullableParam: String = ""   Eg: dummyRequiredNullableParam_example
	# To test nullable required parameters
	dummyRequiredNullableParam: String,
	# uPPERCASE: String = ""   Eg: uPPERCASE_example
	# To test parameter names in upper case
	uPPERCASE = "",
	on_success: Callable = Callable(),  # func(response: DemoApiResponse)
	on_failure: Callable = Callable(),  # func(error: DemoApiError)
):

	# Convert the String HTTP method to a Constant Godot understands
	var bzz_method := self._bzz_convert_http_method("GET")

	# Compute the URL path to the API resource
	var bzz_path := "/v2/fake/user/{username}".replace("{" + "username" + "}", _bzz_urlize_path_param(username))

	# Collect the headers
	var bzz_headers := Dictionary()
	bzz_headers["dummy_required_nullable_param"] = dummyRequiredNullableParam
	bzz_headers["UPPERCASE"] = uPPERCASE

	# Collect the query parameters
	# Note: we do not support multiple values for a single param (for now), nor arrays
	var bzz_query := Dictionary()

	var bzz_body = null

	self._bzz_request(
		bzz_method, bzz_path, bzz_headers, bzz_query, bzz_body,
		func(bzz_response):
			on_success.call(bzz_response)
			,
		func(bzz_error):
			on_failure.call(bzz_error)
			,  # ざわ‥
	)


func test_nullable_required_param_threaded(
	# username: String = ""   Eg: username_example
	# The name that needs to be fetched. Use user1 for testing.
	username: String,
	# dummyRequiredNullableParam: String = ""   Eg: dummyRequiredNullableParam_example
	# To test nullable required parameters
	dummyRequiredNullableParam: String,
	# uPPERCASE: String = ""   Eg: uPPERCASE_example
	# To test parameter names in upper case
	uPPERCASE = "",
	on_success: Callable = Callable(),  # func(response: DemoApiResponse)
	on_failure: Callable = Callable(),  # func(error: DemoApiError)
) -> Thread:
	var bzz_thread := Thread.new()
	var bzz_callable := Callable(self, "test_nullable_required_param")
	bzz_callable.bind(
		username,
		dummyRequiredNullableParam,
		uPPERCASE,
		on_success,
		on_failure,
	)
	bzz_thread.start(bzz_callable)
	return bzz_thread


