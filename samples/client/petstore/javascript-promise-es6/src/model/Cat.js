/**
 * OpenAPI Petstore
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import Animal from './Animal';





/**
* The Cat model module.
* @module model/Cat
* @version 1.0.0
*/
export default class Cat {
    /**
    * Constructs a new <code>Cat</code>.
    * @alias module:model/Cat
    * @class
    * @extends module:model/Animal
    * @implements module:model/Animal
    * @param className {} 
    */

    constructor(className) {
        

        Animal.call(this, className);
        Animal.call(this, className);

        

        
    }

    /**
    * Constructs a <code>Cat</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/Cat} obj Optional instance to populate.
    * @return {module:model/Cat} The populated <code>Cat</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Cat();

            

            Animal.constructFromObject(data, obj);
            Animal.constructFromObject(data, obj);

            if (data.hasOwnProperty('declawed')) {
                obj['declawed'] = ApiClient.convertToType(data['declawed'], 'Boolean');
            }
        }
        return obj;
    }

    /**
    * @member {Boolean} declawed
    */
    declawed = undefined;


    // Implement Animal interface:
    /**
    * @member {String} className
    */
    className = undefined;
/**
    * @member {String} color
    * @default 'red'
    */
    color = 'red';







}


