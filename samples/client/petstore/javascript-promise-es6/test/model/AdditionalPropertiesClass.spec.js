/**
 * OpenAPI Petstore
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OpenApiPetstore);
  }
}(this, function(expect, OpenApiPetstore) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OpenApiPetstore.AdditionalPropertiesClass();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AdditionalPropertiesClass', function() {
    it('should create an instance of AdditionalPropertiesClass', function() {
      // uncomment below and update the code to test AdditionalPropertiesClass
      //var instane = new OpenApiPetstore.AdditionalPropertiesClass();
      //expect(instance).to.be.a(OpenApiPetstore.AdditionalPropertiesClass);
    });

    it('should have the property mapString (base name: "map_string")', function() {
      // uncomment below and update the code to test the property mapString
      //var instane = new OpenApiPetstore.AdditionalPropertiesClass();
      //expect(instance).to.be();
    });

    it('should have the property mapNumber (base name: "map_number")', function() {
      // uncomment below and update the code to test the property mapNumber
      //var instane = new OpenApiPetstore.AdditionalPropertiesClass();
      //expect(instance).to.be();
    });

    it('should have the property mapInteger (base name: "map_integer")', function() {
      // uncomment below and update the code to test the property mapInteger
      //var instane = new OpenApiPetstore.AdditionalPropertiesClass();
      //expect(instance).to.be();
    });

    it('should have the property mapBoolean (base name: "map_boolean")', function() {
      // uncomment below and update the code to test the property mapBoolean
      //var instane = new OpenApiPetstore.AdditionalPropertiesClass();
      //expect(instance).to.be();
    });

    it('should have the property mapArrayInteger (base name: "map_array_integer")', function() {
      // uncomment below and update the code to test the property mapArrayInteger
      //var instane = new OpenApiPetstore.AdditionalPropertiesClass();
      //expect(instance).to.be();
    });

    it('should have the property mapArrayAnytype (base name: "map_array_anytype")', function() {
      // uncomment below and update the code to test the property mapArrayAnytype
      //var instane = new OpenApiPetstore.AdditionalPropertiesClass();
      //expect(instance).to.be();
    });

    it('should have the property mapMapString (base name: "map_map_string")', function() {
      // uncomment below and update the code to test the property mapMapString
      //var instane = new OpenApiPetstore.AdditionalPropertiesClass();
      //expect(instance).to.be();
    });

    it('should have the property mapMapAnytype (base name: "map_map_anytype")', function() {
      // uncomment below and update the code to test the property mapMapAnytype
      //var instane = new OpenApiPetstore.AdditionalPropertiesClass();
      //expect(instance).to.be();
    });

    it('should have the property anytype1 (base name: "anytype_1")', function() {
      // uncomment below and update the code to test the property anytype1
      //var instane = new OpenApiPetstore.AdditionalPropertiesClass();
      //expect(instance).to.be();
    });

    it('should have the property anytype2 (base name: "anytype_2")', function() {
      // uncomment below and update the code to test the property anytype2
      //var instane = new OpenApiPetstore.AdditionalPropertiesClass();
      //expect(instance).to.be();
    });

    it('should have the property anytype3 (base name: "anytype_3")', function() {
      // uncomment below and update the code to test the property anytype3
      //var instane = new OpenApiPetstore.AdditionalPropertiesClass();
      //expect(instance).to.be();
    });

  });

}));
