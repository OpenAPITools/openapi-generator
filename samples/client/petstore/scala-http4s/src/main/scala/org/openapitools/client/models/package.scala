/** OpenAPI Petstore
  * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
  *
  * The version of the OpenAPI document: 1.0.0
  * Contact: team@openapitools.org
  *
  * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
  * https://openapi-generator.tech
  * Do not edit the class manually.
  */
package org.openapitools.client

import io.circe.{Decoder, Encoder}

package object models {

  given decodeUUID: Decoder[_root_.java.util.UUID] =
    Decoder.decodeString.map(str => _root_.java.util.UUID.fromString(str))

  given encodeUUID: Encoder[_root_.java.util.UUID] =
    Encoder.encodeString.contramap[_root_.java.util.UUID](uuid => uuid.toString)

  given decodeInstant: Decoder[_root_.java.time.Instant] =
    Decoder.decodeString.map(str => _root_.java.time.OffsetDateTime.parse(str).toInstant)

  given encodeInstant: Encoder[_root_.java.time.Instant] =
    Encoder.encodeString.contramap[_root_.java.time.Instant](_.toString)

  given decodeLocalDate: Decoder[_root_.java.time.LocalDate] =
    Decoder.decodeString.map(str => _root_.java.time.LocalDate.parse(str))

  given encodeLocalDate: Encoder[_root_.java.time.LocalDate] =
    Encoder.encodeString.contramap[_root_.java.time.LocalDate](_.toString)

  given decodeJson: Decoder[io.circe.Json] =
    Decoder.decodeString.map(str => io.circe.Json.fromString(str))

  given encodeJson: Encoder[io.circe.Json] =
    Encoder.encodeString.contramap[io.circe.Json](_.toString)

}