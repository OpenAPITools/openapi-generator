/**
 * OpenAPI Petstore
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

@file:Suppress("UnusedImport", "RemoveRedundantQualifierName")

package org.openapitools.client.models


import kotlinx.serialization.Required
import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable

/**
 * An order for a pets from the pet store
 *
 * @param id 
 * @param petId 
 * @param quantity 
 * @param shipDate 
 * @param status Order Status
 * @param complete 
 */
@Suppress("ArrayInDataClass")
@Serializable
public data class Order(
    @SerialName(value = "id")
    val id: kotlin.Long? = null,
    @SerialName(value = "petId")
    val petId: kotlin.Long? = null,
    @SerialName(value = "quantity")
    val quantity: kotlin.Int? = null,
    @SerialName(value = "shipDate")
    val shipDate: kotlin.String? = null,
    /**
     * Order Status
     */
    @SerialName(value = "status")
    val status: Order.Status? = null,
    @SerialName(value = "complete")
    val complete: kotlin.Boolean? = null
) {

    /**
     * Order Status
     *
     * Values: Placed,Approved,Delivered
     */
    @Serializable
    public enum class Status(val value: kotlin.String){
        @SerialName(value = "placed")
        Placed("placed"),
        @SerialName(value = "approved")
        Approved("approved"),
        @SerialName(value = "delivered")
        Delivered("delivered");

        /**
         * This override toString avoids using the enum var name and uses the actual api value instead.
         * In cases the var name and value are different, the client would send incorrect enums to the server.
         */
        override fun toString(): String {
            return value
        }
    }
}
