/**
 * OpenAPI Petstore
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
@file:Suppress("UnusedImport")

package org.openapitools.client.apis

import org.openapitools.client.models.Order

import org.openapitools.client.infrastructure.*
import io.ktor.client.HttpClient
import io.ktor.client.request.forms.formData
import io.ktor.client.engine.HttpClientEngine
import io.ktor.client.features.json.serializer.KotlinxSerializer
import io.ktor.client.request.*
import io.ktor.client.request.forms.FormPart
import io.ktor.client.utils.EmptyContent
import io.ktor.http.*
import kotlinx.serialization.json.Json
import io.ktor.http.ParametersBuilder
import kotlinx.serialization.Serializable
import kotlinx.serialization.KSerializer
import kotlinx.serialization.builtins.ListSerializer
import kotlinx.serialization.builtins.serializer
import kotlinx.serialization.descriptors.PrimitiveKind
import kotlinx.serialization.descriptors.PrimitiveSerialDescriptor
import kotlinx.serialization.encoding.Decoder
import kotlinx.serialization.encoding.Encoder

@Suppress(
    "unused",
    "RemoveRedundantQualifierName",
    "RemoveExplicitTypeArguments",
    "RemoveRedundantCallsOfConversionMethods",
    "DuplicatedCode",
    "UnnecessaryVariable",
)
public open class StoreApi : ApiClientBase {
    public constructor(
        baseUrl: String = "http://petstore.swagger.io/v2",
        httpClientEngine: HttpClientEngine? = null,
        json: Json = Json {}
    ) : super(baseUrl, httpClientEngine, json)

    internal constructor(baseUrl: String, client: HttpClient) : super(
        baseUrl,
        client
    )

    /**
     * Delete purchase order by ID
     * For valid response try integer IDs with value &lt; 1000. Anything above 1000 or nonintegers will generate API errors
     * @param orderId ID of the order that needs to be deleted 
     * @return void
     */
    public suspend fun deleteOrder(
        orderId: kotlin.String,
    ) {
        return this.client.request {
            this.method = HttpMethod.parse("DELETE")
            url {
                this.takeFrom(this@StoreApi.baseUrl)
                appendPath("/store/order/{orderId}".replace("{orderId}", orderId.toString()))
            }
        }
    }

    /**
     * Returns pet inventories by status
     * Returns a map of status codes to quantities
     * @return kotlin.collections.Map<kotlin.String, kotlin.Int>
     */
    public suspend fun getInventory(
    ): kotlin.collections.Map<kotlin.String, kotlin.Int> {
        return this.client.request {
            this.method = HttpMethod.parse("GET")
            url {
                this.takeFrom(this@StoreApi.baseUrl)
                appendPath("/store/inventory")
            }

            //addAuthentication("api_key")
        }
    }

    /**
     * Find purchase order by ID
     * For valid response try integer IDs with value &lt;&#x3D; 5 or &gt; 10. Other values will generated exceptions
     * @param orderId ID of pet that needs to be fetched 
     * @return Order
     */
    public suspend fun getOrderById(
        orderId: kotlin.Long,
    ): Order {
        return this.client.request {
            this.method = HttpMethod.parse("GET")
            url {
                this.takeFrom(this@StoreApi.baseUrl)
                appendPath("/store/order/{orderId}".replace("{orderId}", orderId.toString()))
            }
        }
    }

    /**
     * Place an order for a pet
     * 
     * @param body order placed for purchasing the pet 
     * @return Order
     */
    public suspend fun placeOrder(
        body: Order,
    ): Order {
        return this.client.request {
            this.method = HttpMethod.parse("POST")
            url {
                this.takeFrom(this@StoreApi.baseUrl)
                appendPath("/store/order")
            }

            // Body
            this.body = body
        }
    }
}
