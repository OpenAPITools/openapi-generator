/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.MiscAnyof1
import org.openapitools.client.models.MiscAnyof2
import org.openapitools.client.models.MiscOneof1

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass
import kotlin.properties.Delegates

/**
 * Schema tests
 *
 * @param freeFormObject1 
 * @param freeFormObject2 
 * @param freeFormObject3 
 * @param map1 
 * @param anyof1 
 * @param anyof2 
 * @param oneof1 
 */


class Misc internal constructor(

    @Json(name = "free_form_object_1")
    val freeFormObject1: kotlin.Any? = null,

    @Json(name = "free_form_object_2")
    val freeFormObject2: kotlin.collections.Map<kotlin.String, kotlin.Any>? = null,

    @Json(name = "free_form_object_3")
    val freeFormObject3: kotlin.collections.Map<kotlin.String, kotlin.Any>? = null,

    @Json(name = "map1")
    val map1: kotlin.collections.Map<kotlin.String, kotlin.String>? = null,

    @Json(name = "anyof1")
    val anyof1: MiscAnyof1? = null,

    @Json(name = "anyof2")
    val anyof2: MiscAnyof2? = null,

    @Json(name = "oneof1")
    val oneof1: MiscOneof1? = null

) {

    /**
     * Mutable builder for Misc
     */
    class Builder internal constructor() {
            var freeFormObject1: kotlin.Any? = null
            var freeFormObject2: kotlin.collections.Map<kotlin.String, kotlin.Any>? = null
            var freeFormObject3: kotlin.collections.Map<kotlin.String, kotlin.Any>? = null
            var map1: kotlin.collections.Map<kotlin.String, kotlin.String>? = null
            var anyof1: MiscAnyof1? = null
            var anyof2: MiscAnyof2? = null
            var oneof1: MiscOneof1? = null

        internal fun build(): Misc = Misc(
        freeFormObject1 = freeFormObject1,
        freeFormObject2 = freeFormObject2,
        freeFormObject3 = freeFormObject3,
        map1 = map1,
        anyof1 = anyof1,
        anyof2 = anyof2,
        oneof1 = oneof1
        )
    }


}

/**
 * Kotlin DSL for Misc
 */
fun Misc(block: Misc.Builder.() -> Unit): Misc =
    Misc.Builder().apply(block).build()

