<?php
/**
 *  Copyright 2015 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/**
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
 *
 */

namespace Swagger\Client\Model;

use \ArrayAccess;

class User implements ArrayAccess {
  /** @var string[] Array of property to type mappings. Used for (de)serialization */
  static $swaggerTypes = array(
      'id' => 'int',
      'username' => 'string',
      'first_name' => 'string',
      'last_name' => 'string',
      'email' => 'string',
      'password' => 'string',
      'phone' => 'string',
      'user_status' => 'int'
  );

  /** @var string[] Array of attributes where the key is the local name, and the value is the original name */
  static $attributeMap = array(
      'id' => 'id',
      'username' => 'username',
      'first_name' => 'firstName',
      'last_name' => 'lastName',
      'email' => 'email',
      'password' => 'password',
      'phone' => 'phone',
      'user_status' => 'userStatus'
  );

  /** @var string[] Array of attributes to setter functions (for deserialization of responses) */
  static $setters = array(
    'id' => 'setId',
    'username' => 'setUsername',
    'first_name' => 'setFirstName',
    'last_name' => 'setLastName',
    'email' => 'setEmail',
    'password' => 'setPassword',
    'phone' => 'setPhone',
    'user_status' => 'setUserStatus'
  );

  /** @var string[] Array of attributes to getter functions (for serialization of requests) */
  static $getters = array(
    'id' => 'getId',
    'username' => 'getUsername',
    'first_name' => 'getFirstName',
    'last_name' => 'getLastName',
    'email' => 'getEmail',
    'password' => 'getPassword',
    'phone' => 'getPhone',
    'user_status' => 'getUserStatus'
  );

  
  /** @var int $id */
  protected $id;
  
  /** @var string $username */
  protected $username;
  
  /** @var string $first_name */
  protected $first_name;
  
  /** @var string $last_name */
  protected $last_name;
  
  /** @var string $email */
  protected $email;
  
  /** @var string $password */
  protected $password;
  
  /** @var string $phone */
  protected $phone;
  
  /** @var int $user_status User Status */
  protected $user_status;
  
  public function __construct(array $data = null) {
    if ($data != null) {
      $this->id = $data["id"];
      $this->username = $data["username"];
      $this->first_name = $data["first_name"];
      $this->last_name = $data["last_name"];
      $this->email = $data["email"];
      $this->password = $data["password"];
      $this->phone = $data["phone"];
      $this->user_status = $data["user_status"];
    }
  }
  
  /**
   * get id
   * @return int
   */
  public function getId() {
    return $this->id;
  }

  /**
   * set id
   * @param int $id
   * @return $this
   */
  public function setId($id) {
    $this->id = $id;
    return $this;
  }
  
  /**
   * get username
   * @return string
   */
  public function getUsername() {
    return $this->username;
  }

  /**
   * set username
   * @param string $username
   * @return $this
   */
  public function setUsername($username) {
    $this->username = $username;
    return $this;
  }
  
  /**
   * get first_name
   * @return string
   */
  public function getFirstName() {
    return $this->first_name;
  }

  /**
   * set first_name
   * @param string $first_name
   * @return $this
   */
  public function setFirstName($first_name) {
    $this->first_name = $first_name;
    return $this;
  }
  
  /**
   * get last_name
   * @return string
   */
  public function getLastName() {
    return $this->last_name;
  }

  /**
   * set last_name
   * @param string $last_name
   * @return $this
   */
  public function setLastName($last_name) {
    $this->last_name = $last_name;
    return $this;
  }
  
  /**
   * get email
   * @return string
   */
  public function getEmail() {
    return $this->email;
  }

  /**
   * set email
   * @param string $email
   * @return $this
   */
  public function setEmail($email) {
    $this->email = $email;
    return $this;
  }
  
  /**
   * get password
   * @return string
   */
  public function getPassword() {
    return $this->password;
  }

  /**
   * set password
   * @param string $password
   * @return $this
   */
  public function setPassword($password) {
    $this->password = $password;
    return $this;
  }
  
  /**
   * get phone
   * @return string
   */
  public function getPhone() {
    return $this->phone;
  }

  /**
   * set phone
   * @param string $phone
   * @return $this
   */
  public function setPhone($phone) {
    $this->phone = $phone;
    return $this;
  }
  
  /**
   * get user_status
   * @return int
   */
  public function getUserStatus() {
    return $this->user_status;
  }

  /**
   * set user_status
   * @param int $user_status
   * @return $this
   */
  public function setUserStatus($user_status) {
    $this->user_status = $user_status;
    return $this;
  }
  
  public function offsetExists($offset) {
    return isset($this->$offset);
  }

  public function offsetGet($offset) {
    return $this->$offset;
  }

  public function offsetSet($offset, $value) {
    $this->$offset = $value;
  }

  public function offsetUnset($offset) {
    unset($this->$offset);
  }

  public function __toString() {
    if (defined('JSON_PRETTY_PRINT')) {
      return json_encode($this, JSON_PRETTY_PRINT);
    } else {
      return json_encode($this);
    }
  }
}
