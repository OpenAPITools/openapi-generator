<?php
/**
 *  Copyright 2015 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/**
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
 *
 */

namespace Swagger\Client\Model;

use \ArrayAccess;

class Order implements ArrayAccess {
    /** @var string[] Array of property to type mappings. Used for (de)serialization */
    static $swaggerTypes = array(
        'id' => 'int',
        'pet_id' => 'int',
        'quantity' => 'int',
        'ship_date' => '\DateTime',
        'status' => 'string',
        'complete' => 'bool'
    );
  
    /** @var string[] Array of attributes where the key is the local name, and the value is the original name */
    static $attributeMap = array(
        'id' => 'id',
        'pet_id' => 'petId',
        'quantity' => 'quantity',
        'ship_date' => 'shipDate',
        'status' => 'status',
        'complete' => 'complete'
    );
  
    /** @var string[] Array of attributes to setter functions (for deserialization of responses) */
    static $setters = array(
        'id' => 'setId',
        'pet_id' => 'setPetId',
        'quantity' => 'setQuantity',
        'ship_date' => 'setShipDate',
        'status' => 'setStatus',
        'complete' => 'setComplete'
    );
  
    /** @var string[] Array of attributes to getter functions (for serialization of requests) */
    static $getters = array(
        'id' => 'getId',
        'pet_id' => 'getPetId',
        'quantity' => 'getQuantity',
        'ship_date' => 'getShipDate',
        'status' => 'getStatus',
        'complete' => 'getComplete'
    );
  
    
    /** @var int $id */
    protected $id;
    
    /** @var int $pet_id */
    protected $pet_id;
    
    /** @var int $quantity */
    protected $quantity;
    
    /** @var \DateTime $ship_date */
    protected $ship_date;
    
    /** @var string $status Order Status */
    protected $status;
    
    /** @var bool $complete */
    protected $complete;
    
    public function __construct(array $data = null) {
        if ($data != null) {
            $this->id = $data["id"];
            $this->pet_id = $data["pet_id"];
            $this->quantity = $data["quantity"];
            $this->ship_date = $data["ship_date"];
            $this->status = $data["status"];
            $this->complete = $data["complete"];
        }
    }
    
    /**
     * get id
     * @return int
     */
    public function getId() {
        return $this->id;
    }
  
    /**
     * set id
     * @param int $id
     * @return $this
     */
    public function setId($id) {
        
        $this->id = $id;
        return $this;
    }
    
    /**
     * get pet_id
     * @return int
     */
    public function getPetId() {
        return $this->pet_id;
    }
  
    /**
     * set pet_id
     * @param int $pet_id
     * @return $this
     */
    public function setPetId($pet_id) {
        
        $this->pet_id = $pet_id;
        return $this;
    }
    
    /**
     * get quantity
     * @return int
     */
    public function getQuantity() {
        return $this->quantity;
    }
  
    /**
     * set quantity
     * @param int $quantity
     * @return $this
     */
    public function setQuantity($quantity) {
        
        $this->quantity = $quantity;
        return $this;
    }
    
    /**
     * get ship_date
     * @return \DateTime
     */
    public function getShipDate() {
        return $this->ship_date;
    }
  
    /**
     * set ship_date
     * @param \DateTime $ship_date
     * @return $this
     */
    public function setShipDate($ship_date) {
        
        $this->ship_date = $ship_date;
        return $this;
    }
    
    /**
     * get status
     * @return string
     */
    public function getStatus() {
        return $this->status;
    }
  
    /**
     * set status
     * @param string $status
     * @return $this
     */
    public function setStatus($status) {
        $allowed_values = array("placed", "approved", "delivered");
        if (!in_array($status, $allowed_values)) {
            throw new \InvalidArgumentException("Invalid value for 'status', must be one of 'placed', 'approved', 'delivered'");
        }
        $this->status = $status;
        return $this;
    }
    
    /**
     * get complete
     * @return bool
     */
    public function getComplete() {
        return $this->complete;
    }
  
    /**
     * set complete
     * @param bool $complete
     * @return $this
     */
    public function setComplete($complete) {
        
        $this->complete = $complete;
        return $this;
    }
    
    public function offsetExists($offset) {
        return isset($this->$offset);
    }
  
    public function offsetGet($offset) {
        return $this->$offset;
    }
  
    public function offsetSet($offset, $value) {
        $this->$offset = $value;
    }
  
    public function offsetUnset($offset) {
        unset($this->$offset);
    }
  
    public function __toString() {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(get_object_vars($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(get_object_vars($this));
        }
    }
}
