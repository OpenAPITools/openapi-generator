<?php
/**
 *  Copyright 2015 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/**
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
 *
 */

namespace Swagger\Client\Model;

use \ArrayAccess;

class Pet implements ArrayAccess {
  /** @var string[] Array of property to type mappings. Used for (de)serialization */
  static $swaggerTypes = array(
      'id' => 'int',
      'category' => '\Swagger\Client\Model\Category',
      'name' => 'string',
      'photo_urls' => 'string[]',
      'tags' => '\Swagger\Client\Model\Tag[]',
      'status' => 'string'
  );

  /** @var string[] Array of attributes where the key is the local name, and the value is the original name */
  static $attributeMap = array(
      'id' => 'id',
      'category' => 'category',
      'name' => 'name',
      'photo_urls' => 'photoUrls',
      'tags' => 'tags',
      'status' => 'status'
  );
  
  /** @var int $id */
  public $id;
  
  /** @var \Swagger\Client\Model\Category $category */
  public $category;
  
  /** @var string $name */
  public $name;
  
  /** @var string[] $photo_urls */
  public $photo_urls;
  
  /** @var \Swagger\Client\Model\Tag[] $tags */
  public $tags;
  
  /** @var string $status pet status in the store */
  public $status;
  
  /**
   * @param mixed[] Array of parameters to initialize the object with
   */
  public function __construct(array $data = null) {
    $this->id = @$data["id"];
    $this->category = @$data["category"];
    $this->name = @$data["name"];
    $this->photo_urls = @$data["photo_urls"];
    $this->tags = @$data["tags"];
    $this->status = @$data["status"];
  }

  public function offsetExists($offset) {
    return isset($this->$offset);
  }

  public function offsetGet($offset) {
    return $this->$offset;
  }

  public function offsetSet($offset, $value) {
    $this->$offset = $value;
  }

  public function offsetUnset($offset) {
    unset($this->$offset);
  }

  public function __toString() {
    if (defined('JSON_PRETTY_PRINT')) {
      return json_encode($this, JSON_PRETTY_PRINT);
    } else {
      return json_encode($this);
    }
  }
}
