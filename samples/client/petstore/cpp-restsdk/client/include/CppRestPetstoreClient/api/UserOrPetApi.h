/**
 * OpenAPI Petstore
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.7.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * UserOrPetApi.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_API_UserOrPetApi_H_
#define ORG_OPENAPITOOLS_CLIENT_API_UserOrPetApi_H_



#include "CppRestPetstoreClient/ApiClient.h"

#include "CppRestPetstoreClient/model/CreateUserOrPet_request.h"
#include <boost/optional.hpp>

namespace org {
namespace openapitools {
namespace client {
namespace api {

using namespace org::openapitools::client::model;



class  UserOrPetApi 
{
public:

    explicit UserOrPetApi( std::shared_ptr<const ApiClient> apiClient );

    virtual ~UserOrPetApi();

    /// <summary>
    /// Create user or pet
    /// </summary>
    /// <remarks>
    /// This can only be done by the logged in user or pet.
    /// </remarks>
    /// <param name="createUserOrPetRequest">Created user or pet object</param>
    pplx::task<void> createUserOrPet(
        std::shared_ptr<CreateUserOrPet_request> createUserOrPetRequest
    ) const;

protected:
    std::shared_ptr<const ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_API_UserOrPetApi_H_ */

