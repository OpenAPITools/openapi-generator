/**
 * OpenAPI Petstore
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.14.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Page.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_Page_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_Page_H_


#include "CppRestPetstoreClient/ModelBase.h"

#include <cpprest/details/basic_types.h>
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {



class  Page
    : public ModelBase
{
public:
    Page();
    virtual ~Page();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;


    /////////////////////////////////////////////
    /// Page members


    int32_t getPage() const;
    bool pageIsSet() const;
    void unsetPage();
    void setPage(int32_t value);

    int32_t getPerPage() const;
    bool perPageIsSet() const;
    void unsetPerPage();
    void setPerPage(int32_t value);

    std::vector<utility::string_t> getReferenceTest() const;
    bool referenceTestIsSet() const;
    void unsetReference_test();
    void setReferenceTest(const std::vector<utility::string_t>& value);


protected:
    int32_t m_Page;
    bool m_PageIsSet;

    int32_t m_PerPage;
    bool m_PerPageIsSet;

    std::vector<utility::string_t> m_Reference_test;
    bool m_Reference_testIsSet;

};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_Page_H_ */
