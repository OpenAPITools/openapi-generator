//> using scala "3.4.0"
//> using lib "com.lihaoyi::cask:0.9.2"
//> using lib "com.lihaoyi::scalatags:0.8.2"
//> using lib "com.softwaremill.sttp.client3::core:4.0.0-M9"
/**
 * OpenAPI Petstore
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 */


package io.swagger

import _root_.io.swagger.server.model.*
import _root_.io.swagger.server.api.*


trait AppRoutes {
  def appPetService = PetService()
  def routeForPet = PetRoutes(appPetService)
  def appStoreService = StoreService()
  def routeForStore = StoreRoutes(appStoreService)
  def appUserService = UserService()
  def routeForUser = UserRoutes(appUserService)

   def appRoutes = Seq(
      routeForPet ,
      routeForStore ,
      routeForUser 
    )
}


object App extends cask.MainRoutes with AppRoutes {

  override def allRoutes = appRoutes

  override def host: String = "0.0.0.0"

  override def port = sys.env.get("PORT").map(_.toInt).getOrElse(8070)

  locally {
    initialize()
    println(box(
      s""" ðŸš€ browse to localhost:$port ðŸš€
         |      host : $host
         |      port : $port
         |   verbose : $verbose
         | debugMode : $debugMode
         |""".stripMargin))
    java.awt.Desktop.getDesktop.browse(new java.net.URI(s"http://localhost:${port}"))
  }
}
