// Code generated by moshi-kotlin-codegen. Do not edit.
package org.openapitools.client.models

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.internal.Util
import java.lang.NullPointerException
import java.lang.reflect.Constructor
import java.time.OffsetDateTime
import kotlin.Boolean
import kotlin.Int
import kotlin.Long
import kotlin.String
import kotlin.Suppress
import kotlin.collections.emptySet
import kotlin.jvm.Volatile
import kotlin.text.buildString

@Suppress("DEPRECATION", "unused", "ClassName", "REDUNDANT_PROJECTION")
class OrderJsonAdapter(
  moshi: Moshi
) : JsonAdapter<Order>() {
  private val options: JsonReader.Options = JsonReader.Options.of("id", "petId", "quantity",
      "shipDate", "status", "complete")

  private val nullableLongAdapter: JsonAdapter<Long?> = moshi.adapter(Long::class.javaObjectType,
      emptySet(), "id")

  private val nullableIntAdapter: JsonAdapter<Int?> = moshi.adapter(Int::class.javaObjectType,
      emptySet(), "quantity")

  private val nullableOffsetDateTimeAdapter: JsonAdapter<OffsetDateTime?> =
      moshi.adapter(OffsetDateTime::class.java, emptySet(), "shipDate")

  private val nullableStatusAdapter: JsonAdapter<Order.Status?> =
      moshi.adapter(Order.Status::class.java, emptySet(), "status")

  private val nullableBooleanAdapter: JsonAdapter<Boolean?> =
      moshi.adapter(Boolean::class.javaObjectType, emptySet(), "complete")

  @Volatile
  private var constructorRef: Constructor<Order>? = null

  override fun toString(): String = buildString(27) {
      append("GeneratedJsonAdapter(").append("Order").append(')') }

  override fun fromJson(reader: JsonReader): Order {
    var id: Long? = null
    var petId: Long? = null
    var quantity: Int? = null
    var shipDate: OffsetDateTime? = null
    var status: Order.Status? = null
    var complete: Boolean? = null
    var mask0 = -1
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> {
          id = nullableLongAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 0).inv()
          mask0 = mask0 and 0xfffffffe.toInt()
        }
        1 -> {
          petId = nullableLongAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 1).inv()
          mask0 = mask0 and 0xfffffffd.toInt()
        }
        2 -> {
          quantity = nullableIntAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 2).inv()
          mask0 = mask0 and 0xfffffffb.toInt()
        }
        3 -> {
          shipDate = nullableOffsetDateTimeAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 3).inv()
          mask0 = mask0 and 0xfffffff7.toInt()
        }
        4 -> {
          status = nullableStatusAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 4).inv()
          mask0 = mask0 and 0xffffffef.toInt()
        }
        5 -> {
          complete = nullableBooleanAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 5).inv()
          mask0 = mask0 and 0xffffffdf.toInt()
        }
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    @Suppress("UNCHECKED_CAST")
    val localConstructor: Constructor<Order> = this.constructorRef ?:
        Order::class.java.getDeclaredConstructor(Long::class.javaObjectType,
        Long::class.javaObjectType, Int::class.javaObjectType, OffsetDateTime::class.java,
        Order.Status::class.java, Boolean::class.javaObjectType, Int::class.javaPrimitiveType,
        Util.DEFAULT_CONSTRUCTOR_MARKER).also { this.constructorRef = it }
    return localConstructor.newInstance(
        id,
        petId,
        quantity,
        shipDate,
        status,
        complete,
        mask0,
        null
    )
  }

  override fun toJson(writer: JsonWriter, value: Order?) {
    if (value == null) {
      throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("id")
    nullableLongAdapter.toJson(writer, value.id)
    writer.name("petId")
    nullableLongAdapter.toJson(writer, value.petId)
    writer.name("quantity")
    nullableIntAdapter.toJson(writer, value.quantity)
    writer.name("shipDate")
    nullableOffsetDateTimeAdapter.toJson(writer, value.shipDate)
    writer.name("status")
    nullableStatusAdapter.toJson(writer, value.status)
    writer.name("complete")
    nullableBooleanAdapter.toJson(writer, value.complete)
    writer.endObject()
  }
}
