/**
 * OpenAPI Petstore
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 5.0.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.OpenApiPetstore) {
      root.OpenApiPetstore = {};
    }
    root.OpenApiPetstore.TestEnumParametersBody = factory(root.OpenApiPetstore.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';



  /**
   * The TestEnumParametersBody model module.
   * @module model/TestEnumParametersBody
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>TestEnumParametersBody</code>.
   * @alias module:model/TestEnumParametersBody
   * @class
   */
  var exports = function() {
    var _this = this;

  };

  /**
   * Constructs a <code>TestEnumParametersBody</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TestEnumParametersBody} obj Optional instance to populate.
   * @return {module:model/TestEnumParametersBody} The populated <code>TestEnumParametersBody</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('enum_form_string_array')) {
        obj['enum_form_string_array'] = ApiClient.convertToType(data['enum_form_string_array'], ['String']);
      }
      if (data.hasOwnProperty('enum_form_string')) {
        obj['enum_form_string'] = ApiClient.convertToType(data['enum_form_string'], 'String');
      }
    }
    return obj;
  }

  /**
   * Form parameter enum test (string array)
   * @member {Array.<module:model/TestEnumParametersBody.EnumFormStringArrayEnum>} enum_form_string_array
   */
  exports.prototype['enum_form_string_array'] = undefined;
  /**
   * Form parameter enum test (string)
   * @member {module:model/TestEnumParametersBody.EnumFormStringEnum} enum_form_string
   * @default '-efg'
   */
  exports.prototype['enum_form_string'] = '-efg';


  /**
   * Allowed values for the <code>enumFormStringArray</code> property.
   * @enum {String}
   * @readonly
   */
  exports.EnumFormStringArrayEnum = {
    /**
     * value: ">"
     * @const
     */
    "GREATER_THAN": ">",
    /**
     * value: "$"
     * @const
     */
    "DOLLAR": "$"  };

  /**
   * Allowed values for the <code>enum_form_string</code> property.
   * @enum {String}
   * @readonly
   */
  exports.EnumFormStringEnum = {
    /**
     * value: "_abc"
     * @const
     */
    "_abc": "_abc",
    /**
     * value: "-efg"
     * @const
     */
    "-efg": "-efg",
    /**
     * value: "(xyz)"
     * @const
     */
    "(xyz)": "(xyz)"  };


  return exports;
}));


