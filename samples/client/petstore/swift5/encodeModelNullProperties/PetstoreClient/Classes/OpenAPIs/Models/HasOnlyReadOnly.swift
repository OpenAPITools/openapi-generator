//
// HasOnlyReadOnly.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct HasOnlyReadOnly: Codable, Hashable {

    public var bar: String?
    public var foo: String?

    public init(bar: String? = nil, foo: String? = nil) {
        self.bar = bar
        self.foo = foo
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case bar
        case foo
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        if let bar = bar {
            try container.encode(bar, forKey: .bar)
        } else {
            try container.encodeNil(forKey: .bar)
        }
        if let foo = foo {
            try container.encode(foo, forKey: .foo)
        } else {
            try container.encodeNil(forKey: .foo)
        }
    }
}

