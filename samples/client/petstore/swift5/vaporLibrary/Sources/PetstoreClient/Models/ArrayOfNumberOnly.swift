//
// ArrayOfNumberOnly.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif
import Vapor

public final class ArrayOfNumberOnly: Content, Hashable {

    public var arrayNumber: [Double]?

    public init(arrayNumber: [Double]? = nil) {
        self.arrayNumber = arrayNumber
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case arrayNumber = "ArrayNumber"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(arrayNumber, forKey: .arrayNumber)
    }

    public static func == (lhs: ArrayOfNumberOnly, rhs: ArrayOfNumberOnly) -> Bool {
        lhs.arrayNumber == rhs.arrayNumber
        
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(arrayNumber?.hashValue)
        
    }
}

