//
// PropertyNameMapping.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

internal struct PropertyNameMapping: Codable, JSONEncodable, Hashable {

    internal var httpDebugOperation: String?
    internal var type: String?
    internal var type: String?
    internal var type: String?
    internal var type: String?

    internal init(httpDebugOperation: String? = nil, type: String? = nil, type: String? = nil, type: String? = nil, type: String? = nil) {
        self.httpDebugOperation = httpDebugOperation
        self.type = type
        self.type = type
        self.type = type
        self.type = type
    }

    internal enum CodingKeys: String, CodingKey, CaseIterable {
        case httpDebugOperation = "http_debug_operation"
        case type = "_type"
        case type
        case type = "type_"
        case type = "-type"
    }

    // Encodable protocol methods

    internal func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(httpDebugOperation, forKey: .httpDebugOperation)
        try container.encodeIfPresent(type, forKey: .type)
        try container.encodeIfPresent(type, forKey: .type)
        try container.encodeIfPresent(type, forKey: .type)
        try container.encodeIfPresent(type, forKey: .type)
    }
}

