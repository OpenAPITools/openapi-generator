/**
 * Swagger Petstore
 * This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGBody_1.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {

SWGBody_1::SWGBody_1(QString json) {
    init();
    this->fromJson(json);
}

SWGBody_1::SWGBody_1() {
    init();
}

SWGBody_1::~SWGBody_1() {
    this->cleanup();
}

void
SWGBody_1::init() {
    additional_metadata = new QString("");
    m_additional_metadata_isSet = false;
    file = NULL;
    m_file_isSet = false;
}

void
SWGBody_1::cleanup() {
    if(additional_metadata != nullptr) { 
        delete additional_metadata;
    }
    if(file != nullptr) { 
        delete file;
    }
}

SWGBody_1*
SWGBody_1::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGBody_1::fromJsonObject(QJsonObject pJson) {
    ::Swagger::setValue(&additional_metadata, pJson["additionalMetadata"], "QString", "QString");
    
    ::Swagger::setValue(&file, pJson["file"], "SWGHttpRequestInputFileElement", "SWGHttpRequestInputFileElement");
    
}

QString
SWGBody_1::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
SWGBody_1::asJsonObject() {
    QJsonObject obj;
    if(additional_metadata != nullptr && *additional_metadata != QString("")){
        toJsonValue(QString("additionalMetadata"), additional_metadata, obj, QString("QString"));
    }
    if((file != nullptr) && (file->isSet())){
        toJsonValue(QString("file"), file, obj, QString("SWGHttpRequestInputFileElement"));
    }

    return obj;
}

QString*
SWGBody_1::getAdditionalMetadata() {
    return additional_metadata;
}
void
SWGBody_1::setAdditionalMetadata(QString* additional_metadata) {
    this->additional_metadata = additional_metadata;
    this->m_additional_metadata_isSet = true;
}

SWGHttpRequestInputFileElement*
SWGBody_1::getFile() {
    return file;
}
void
SWGBody_1::setFile(SWGHttpRequestInputFileElement* file) {
    this->file = file;
    this->m_file_isSet = true;
}


bool
SWGBody_1::isSet(){
    bool isObjectUpdated = false;
    do{
        if(additional_metadata != nullptr && *additional_metadata != QString("")){ isObjectUpdated = true; break;}
        if(file != nullptr && file->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

