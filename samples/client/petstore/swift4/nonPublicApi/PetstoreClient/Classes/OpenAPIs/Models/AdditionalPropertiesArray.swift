//
// AdditionalPropertiesArray.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

internal struct AdditionalPropertiesArray: Codable {

    internal var name: String?

    internal init(name: String?) {
        self.name = name
    }
    internal var additionalProperties: [String: Array] = [:]

    internal subscript(key: String) -> Array? {
        get {
            if let value = additionalProperties[key] {
                return value
            }
            return nil
        }

        set {
            additionalProperties[key] = newValue
        }
    }

    // Encodable protocol methods

    internal func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(name, forKey: "name")
        try container.encodeMap(additionalProperties)
    }

    // Decodable protocol methods

    internal init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        name = try container.decodeIfPresent(String.self, forKey: "name")
        var nonAdditionalPropertyKeys = Set<String>()
        nonAdditionalPropertyKeys.insert("name")
        additionalProperties = try container.decodeMap(Array.self, excludedKeys: nonAdditionalPropertyKeys)
    }

}
