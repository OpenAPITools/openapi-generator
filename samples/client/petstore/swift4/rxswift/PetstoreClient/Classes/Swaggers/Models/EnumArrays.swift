//
// EnumArrays.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class EnumArrays: Codable {

    public enum JustSymbol: String, Codable { 
        case greaterThanOrEqualTo = ">="
        case dollar = "$"
    }
    public enum ArrayEnum: String, Codable { 
        case fish = "fish"
        case crab = "crab"
    }
    public var justSymbol: JustSymbol?
    public var arrayEnum: [ArrayEnum]?


    public init(justSymbol: JustSymbol?, arrayEnum: [ArrayEnum]?) {
        self.justSymbol = justSymbol
        self.arrayEnum = arrayEnum
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(justSymbol, forKey: "just_symbol")
        try container.encodeArrayIfPresent(arrayEnum, forKey: "array_enum")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        justSymbol = try container.decodeIfPresent(String.self, forKey: "just_symbol")
        arrayEnum = try container.decodeArrayIfPresent(String.self, forKey: "array_enum")
    }
}

