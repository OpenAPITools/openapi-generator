/*
 * OpenAPI Petstore
 *
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class DefaultApiController : ControllerBase
    { 
        /// <summary>
        /// 
        /// </summary>
        /// <response code="0">response</response>
        [HttpGet]
        [Route("/v2/foo")]
        [ValidateModelState]
        [SwaggerOperation("FooGet")]
        [SwaggerResponse(statusCode: 0, type: typeof(FooGetDefaultResponse), description: "response")]
        public virtual IActionResult FooGet()
        {

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(FooGetDefaultResponse));
            string exampleJson = null;
            exampleJson = "{\n  \"string\" : {\n    \"bar\" : \"bar\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<FooGetDefaultResponse>(exampleJson)
            : default(FooGetDefaultResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="country"></param>
        /// <response code="200">OK</response>
        [HttpPost]
        [Route("/v2/country")]
        [Consumes("application/x-www-form-urlencoded")]
        [ValidateModelState]
        [SwaggerOperation("GetCountry")]
        public virtual IActionResult GetCountry([FromForm (Name = "country")][Required()]string country)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Hello
        /// </summary>
        /// <remarks>Hello</remarks>
        /// <response code="200">UUIDs</response>
        [HttpGet]
        [Route("/v2/hello")]
        [ValidateModelState]
        [SwaggerOperation("Hello")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Guid>), description: "UUIDs")]
        public virtual IActionResult Hello()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Guid>));
            string exampleJson = null;
            exampleJson = "[ \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\" ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<Guid>>(exampleJson)
            : default(List<Guid>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
