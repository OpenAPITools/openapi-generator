#
# OpenAPI Petstore
# This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
# Version: 1.0.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'PSOpenAPITools' -name 'UserApi' {
    Context 'CreateUser' {
        It 'Invoke-UserApiCreateUser' {
            #$TestResult = Invoke-PetApiGetPetById -body "TEST_VALUE"
            #$TestResult | Should BeOfType TODO
            #$TestResult.property | Should Be 0
        }
    }

    Context 'CreateUsersWithArrayInput' {
        It 'Invoke-UserApiCreateUsersWithArrayInput' {
            #$TestResult = Invoke-PetApiGetPetById -body "TEST_VALUE"
            #$TestResult | Should BeOfType TODO
            #$TestResult.property | Should Be 0
        }
    }

    Context 'CreateUsersWithListInput' {
        It 'Invoke-UserApiCreateUsersWithListInput' {
            #$TestResult = Invoke-PetApiGetPetById -body "TEST_VALUE"
            #$TestResult | Should BeOfType TODO
            #$TestResult.property | Should Be 0
        }
    }

    Context 'DeleteUser' {
        It 'Invoke-UserApiDeleteUser' {
            #$TestResult = Invoke-PetApiGetPetById -username "TEST_VALUE"
            #$TestResult | Should BeOfType TODO
            #$TestResult.property | Should Be 0
        }
    }

    Context 'GetUserByName' {
        It 'Invoke-UserApiGetUserByName' {
            #$TestResult = Invoke-PetApiGetPetById -username "TEST_VALUE"
            #$TestResult | Should BeOfType TODO
            #$TestResult.property | Should Be 0
        }
    }

    Context 'LoginUser' {
        It 'Invoke-UserApiLoginUser' {
            #$TestResult = Invoke-PetApiGetPetById -username "TEST_VALUE" -password "TEST_VALUE"
            #$TestResult | Should BeOfType TODO
            #$TestResult.property | Should Be 0
        }
    }

    Context 'LogoutUser' {
        It 'Invoke-UserApiLogoutUser' {
            #$TestResult = Invoke-PetApiGetPetById
            #$TestResult | Should BeOfType TODO
            #$TestResult.property | Should Be 0
        }
    }

    Context 'UpdateUser' {
        It 'Invoke-UserApiUpdateUser' {
            #$TestResult = Invoke-PetApiGetPetById -username "TEST_VALUE" -body "TEST_VALUE"
            #$TestResult | Should BeOfType TODO
            #$TestResult.property | Should Be 0
        }
    }

}
