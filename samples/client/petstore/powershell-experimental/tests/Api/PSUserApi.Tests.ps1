#
# OpenAPI Petstore
# This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
# Version: 1.0.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'PSPetstore' -name 'PSUserApi' {
    Context 'Invoke-PSCreateUser' {
        It 'Test Invoke-PSCreateUser' {
            #$TestResult = Invoke-PetApiGetPetById -User "TEST_VALUE"
            #$TestResult | Should BeOfType TODO
            #$TestResult.property | Should Be 0
        }
    }

    Context 'Invoke-PSCreateUsersWithArrayInput' {
        It 'Test Invoke-PSCreateUsersWithArrayInput' {
            #$TestResult = Invoke-PetApiGetPetById -User "TEST_VALUE"
            #$TestResult | Should BeOfType TODO
            #$TestResult.property | Should Be 0
        }
    }

    Context 'Invoke-PSCreateUsersWithListInput' {
        It 'Test Invoke-PSCreateUsersWithListInput' {
            #$TestResult = Invoke-PetApiGetPetById -User "TEST_VALUE"
            #$TestResult | Should BeOfType TODO
            #$TestResult.property | Should Be 0
        }
    }

    Context 'Invoke-PSDeleteUser' {
        It 'Test Invoke-PSDeleteUser' {
            #$TestResult = Invoke-PetApiGetPetById -Username "TEST_VALUE"
            #$TestResult | Should BeOfType TODO
            #$TestResult.property | Should Be 0
        }
    }

    Context 'Get-PSUserByName' {
        It 'Test Get-PSUserByName' {
            #$TestResult = Invoke-PetApiGetPetById -Username "TEST_VALUE"
            #$TestResult | Should BeOfType TODO
            #$TestResult.property | Should Be 0
        }
    }

    Context 'Invoke-PSLoginUser' {
        It 'Test Invoke-PSLoginUser' {
            #$TestResult = Invoke-PetApiGetPetById -Username "TEST_VALUE" -Password "TEST_VALUE"
            #$TestResult | Should BeOfType TODO
            #$TestResult.property | Should Be 0
        }
    }

    Context 'Invoke-PSLogoutUser' {
        It 'Test Invoke-PSLogoutUser' {
            #$TestResult = Invoke-PetApiGetPetById
            #$TestResult | Should BeOfType TODO
            #$TestResult.property | Should Be 0
        }
    }

    Context 'Update-PSUser' {
        It 'Test Update-PSUser' {
            #$TestResult = Invoke-PetApiGetPetById -Username "TEST_VALUE" -User "TEST_VALUE"
            #$TestResult | Should BeOfType TODO
            #$TestResult.property | Should Be 0
        }
    }

}
