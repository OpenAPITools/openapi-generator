#
# OpenAPI Petstore
# This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
# Version: 1.0.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

An order for a pets from the pet store

.PARAMETER Id
No description available.

.PARAMETER PetId
No description available.

.PARAMETER Quantity
No description available.

.PARAMETER ShipDate
No description available.

.PARAMETER Status
Order Status

.PARAMETER Complete
No description available.

.OUTPUTS

Order<PSCustomObject>
#>

function Initialize-PSOrder {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${Id},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${PetId},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${Quantity},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${ShipDate},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("placed", "approved", "delivered")]
        [String]
        ${Status},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${Complete}
    )

    Process {
        'Creating PSCustomObject: PSPetstore => PSOrder' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "petId" = ${PetId}
            "quantity" = ${Quantity}
            "shipDate" = ${ShipDate}
            "status" = ${Status}
            "complete" = ${Complete}
        }

        return $PSO
    }
}
