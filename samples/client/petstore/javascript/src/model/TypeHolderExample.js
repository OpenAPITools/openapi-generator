/**
 * OpenAPI Petstore
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.0.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.OpenApiPetstore) {
      root.OpenApiPetstore = {};
    }
    root.OpenApiPetstore.TypeHolderExample = factory(root.OpenApiPetstore.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';



  /**
   * The TypeHolderExample model module.
   * @module model/TypeHolderExample
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>TypeHolderExample</code>.
   * a model to test required properties with an example and length one enum
   * @alias module:model/TypeHolderExample
   * @class
   * @param stringItem {module:model/TypeHolderExample.StringItemEnum} 
   * @param numberItem {module:model/TypeHolderExample.NumberItemEnum} 
   * @param integerItem {module:model/TypeHolderExample.IntegerItemEnum} 
   * @param boolItem {Boolean} 
   * @param dateItem {module:model/TypeHolderExample.DateItemEnum} 
   * @param datetimeItem {module:model/TypeHolderExample.DatetimeItemEnum} 
   * @param arrayItem {Array.<Number>} 
   */
  var exports = function(stringItem, numberItem, integerItem, boolItem, dateItem, datetimeItem, arrayItem) {
    var _this = this;

    _this['string_item'] = stringItem;
    _this['number_item'] = numberItem;
    _this['integer_item'] = integerItem;
    _this['bool_item'] = boolItem;
    _this['date_item'] = dateItem;
    _this['datetime_item'] = datetimeItem;
    _this['array_item'] = arrayItem;
  };

  /**
   * Constructs a <code>TypeHolderExample</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TypeHolderExample} obj Optional instance to populate.
   * @return {module:model/TypeHolderExample} The populated <code>TypeHolderExample</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('string_item')) {
        obj['string_item'] = ApiClient.convertToType(data['string_item'], 'String');
      }
      if (data.hasOwnProperty('number_item')) {
        obj['number_item'] = ApiClient.convertToType(data['number_item'], 'Number');
      }
      if (data.hasOwnProperty('integer_item')) {
        obj['integer_item'] = ApiClient.convertToType(data['integer_item'], 'Number');
      }
      if (data.hasOwnProperty('bool_item')) {
        obj['bool_item'] = ApiClient.convertToType(data['bool_item'], 'Boolean');
      }
      if (data.hasOwnProperty('date_item')) {
        obj['date_item'] = ApiClient.convertToType(data['date_item'], 'Date');
      }
      if (data.hasOwnProperty('datetime_item')) {
        obj['datetime_item'] = ApiClient.convertToType(data['datetime_item'], 'Date');
      }
      if (data.hasOwnProperty('array_item')) {
        obj['array_item'] = ApiClient.convertToType(data['array_item'], ['Number']);
      }
    }
    return obj;
  }

  /**
   * @member {module:model/TypeHolderExample.StringItemEnum} string_item
   */
  exports.prototype['string_item'] = undefined;
  /**
   * @member {module:model/TypeHolderExample.NumberItemEnum} number_item
   */
  exports.prototype['number_item'] = undefined;
  /**
   * @member {module:model/TypeHolderExample.IntegerItemEnum} integer_item
   */
  exports.prototype['integer_item'] = undefined;
  /**
   * @member {Boolean} bool_item
   */
  exports.prototype['bool_item'] = undefined;
  /**
   * @member {module:model/TypeHolderExample.DateItemEnum} date_item
   */
  exports.prototype['date_item'] = undefined;
  /**
   * @member {module:model/TypeHolderExample.DatetimeItemEnum} datetime_item
   */
  exports.prototype['datetime_item'] = undefined;
  /**
   * @member {Array.<Number>} array_item
   */
  exports.prototype['array_item'] = undefined;


  /**
   * Allowed values for the <code>string_item</code> property.
   * @enum {String}
   * @readonly
   */
  exports.StringItemEnum = {
    /**
     * value: "what"
     * @const
     */
    "what": "what"  };

  /**
   * Allowed values for the <code>number_item</code> property.
   * @enum {Number}
   * @readonly
   */
  exports.NumberItemEnum = {
    /**
     * value: 1.2339999675750732
     * @const
     */
    "1.2339999675750732": 1.2339999675750732  };

  /**
   * Allowed values for the <code>integer_item</code> property.
   * @enum {Number}
   * @readonly
   */
  exports.IntegerItemEnum = {
    /**
     * value: -2
     * @const
     */
    "-2": -2  };

  /**
   * Allowed values for the <code>date_item</code> property.
   * @enum {Date}
   * @readonly
   */
  exports.DateItemEnum = {
    /**
     * value: "Thu Jul 20 17:00:00 PDT 2017"
     * @const
     */
    "Thu Jul 20 17:00:00 PDT 2017": "Thu Jul 20 17:00:00 PDT 2017"  };

  /**
   * Allowed values for the <code>datetime_item</code> property.
   * @enum {Date}
   * @readonly
   */
  exports.DatetimeItemEnum = {
    /**
     * value: "Fri Jul 21 10:32:28 PDT 2017"
     * @const
     */
    "Fri Jul 21 10:32:28 PDT 2017": "Fri Jul 21 10:32:28 PDT 2017"  };


  return exports;
}));


