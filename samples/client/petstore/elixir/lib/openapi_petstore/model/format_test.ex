# NOTE: This file is auto generated by OpenAPI Generator 7.14.0-SNAPSHOT (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule OpenapiPetstore.Model.FormatTest do
  @moduledoc """
  
  """
  use Ecto.Schema

  @type t :: %__MODULE__{
    :integer => integer() | nil,
    :int32 => integer() | nil,
    :int64 => integer() | nil,
    :number => number(),
    :float => float() | nil,
    :double => float() | nil,
    :decimal => float() | nil,
    :string => String.t | nil,
    :byte => binary(),
    :binary => String.t | nil,
    :date => Date.t,
    :dateTime => DateTime.t | nil,
    :uuid => String.t | nil,
    :password => String.t,
    :pattern_with_digits => String.t | nil,
    :pattern_with_digits_and_delimiter => String.t | nil
  }

  @derive {JSON.Encoder, only: [:integer, :int32, :int64, :number, :float, :double, :decimal, :string, :byte, :binary, :date, :dateTime, :uuid, :password, :pattern_with_digits, :pattern_with_digits_and_delimiter]}
  @primary_key false
  embedded_schema do
    field :integer, :integer
    field :int32, :integer
    field :int64, :integer
    field :number, :float
    field :float, :float
    field :double, :float
    field :decimal, :float
    field :string, :string
    field :byte, :binary
    field :binary, :string
    field :date, :date
    field :dateTime, :utc_datetime
    field :uuid, :string
    field :password, :string
    field :pattern_with_digits, :string
    field :pattern_with_digits_and_delimiter, :string
  end

  @spec from_params(map()) :: {:ok, t()} | {:error, Ecto.Changeset.t()}
  def from_params(params) do
    %__MODULE__{}
    |> changeset(params)
    |> Ecto.Changeset.apply_action(:insert)
  end

  @spec changeset(t(), map()) :: Ecto.Changeset.t()
  def changeset(%__MODULE__{} = struct, params) do
    struct
    |> Ecto.Changeset.cast(params, [:integer, :int32, :int64, :number, :float, :double, :decimal, :string, :byte, :binary, :date, :dateTime, :uuid, :password, :pattern_with_digits, :pattern_with_digits_and_delimiter])
    |> Ecto.Changeset.validate_required([:number, :byte, :date, :password])
  end
end

