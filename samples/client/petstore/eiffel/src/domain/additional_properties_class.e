note
 description:"[
		OpenAPI Petstore
 		This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
  		OpenAPI spec version: 1.0.0
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class ADDITIONAL_PROPERTIES_CLASS 

inherit

  ANY
      redefine
          out 
      end


feature --Access

    map_property: detachable STRING_TABLE[STRING_32] 
      
    map_of_map_property: detachable STRING_TABLE[STRING_TABLE[STRING_32]] 
      

feature -- Change Element  
 
    set_map_property (a_name: like map_property)
        -- Set 'map_property' with 'a_name'.
      do
        map_property := a_name
      ensure
        map_property_set: map_property = a_name		
      end

    set_map_of_map_property (a_name: like map_of_map_property)
        -- Set 'map_of_map_property' with 'a_name'.
      do
        map_of_map_property := a_name
      ensure
        map_of_map_property_set: map_of_map_property = a_name		
      end


 feature -- Status Report

    out: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass ADDITIONAL_PROPERTIES_CLASS%N")
        if attached map_property as l_map_property then
          Result.append ("%Nmap_property:")
          across l_map_property as ic loop
            Result.append ("%N")
            Result.append ("key:")
            Result.append (ic.key.out)
            Result.append (" - ")
            Result.append ("val:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end        
        if attached map_of_map_property as l_map_of_map_property then
          Result.append ("%Nmap_of_map_property:")
          across l_map_of_map_property as ic loop
            Result.append ("%N")
            Result.append ("key:")
            Result.append (ic.key.out)
            Result.append (" - ")
            Result.append ("val:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end        
      end
end


