

#import "OAIOrderManagedObjectBuilder.h"

/**
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

@implementation OAIOrderManagedObjectBuilder

-(instancetype)init {
    self = [super init];
    if (self != nil) {
    }
    return self;
}

-(OAIOrderManagedObject*)createNewOAIOrderManagedObjectInContext:(NSManagedObjectContext*)context {
    OAIOrderManagedObject *managedObject = [NSEntityDescription insertNewObjectForEntityForName:NSStringFromClass([OAIOrderManagedObject class]) inManagedObjectContext:context];
    return managedObject;
}

-(OAIOrderManagedObject*)OAIOrderManagedObjectFromOAIOrder:(OAIOrder*)object context:(NSManagedObjectContext*)context {
    OAIOrderManagedObject* newOAIOrder = [self createNewOAIOrderManagedObjectInContext:context];
    [self updateOAIOrderManagedObject:newOAIOrder withOAIOrder:object];
    return newOAIOrder;
}

-(void)updateOAIOrderManagedObject:(OAIOrderManagedObject*)managedObject withOAIOrder:(OAIOrder*)object {
    if(!managedObject || !object) {
        return;
    }
    NSManagedObjectContext* context = managedObject.managedObjectContext;
    managedObject._id = [object._id copy];
    managedObject.petId = [object.petId copy];
    managedObject.quantity = [object.quantity copy];
    managedObject.shipDate = [object.shipDate copy];
    managedObject.status = [object.status copy];
    managedObject.complete = [object.complete copy];

}

-(OAIOrder*)OAIOrderFromOAIOrderManagedObject:(OAIOrderManagedObject*)obj {
    if(!obj) {
        return nil;
    }
    OAIOrder* newOAIOrder = [[OAIOrder alloc] init];
    [self updateOAIOrder:newOAIOrder withOAIOrderManagedObject:obj];
    return newOAIOrder;
}

-(void)updateOAIOrder:(OAIOrder*)newOAIOrder withOAIOrderManagedObject:(OAIOrderManagedObject*)obj {
    newOAIOrder._id = [obj._id copy];
    newOAIOrder.petId = [obj.petId copy];
    newOAIOrder.quantity = [obj.quantity copy];
    newOAIOrder.shipDate = [obj.shipDate copy];
    newOAIOrder.status = [obj.status copy];
    newOAIOrder.complete = [obj.complete copy];
}

@end
