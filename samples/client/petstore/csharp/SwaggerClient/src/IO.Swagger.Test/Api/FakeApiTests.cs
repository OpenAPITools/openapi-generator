using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing FakeApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class FakeApiTests
    {
        private FakeApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
           instance = new FakeApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of FakeApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            Assert.IsInstanceOf<FakeApi> (instance, "instance is a FakeApi");
        }

        
        /// <summary>
        /// Test TestEndpointParameters
        /// </summary>
        [Test]
        public void TestEndpointParametersTest()
        {
            // TODO: add unit test for the method 'TestEndpointParameters'
            string number = null; // TODO: replace null with proper value
            double? _double = null; // TODO: replace null with proper value
            string _string = null; // TODO: replace null with proper value
            byte[] _byte = null; // TODO: replace null with proper value
            int? integer = null; // TODO: replace null with proper value
            int? int32 = null; // TODO: replace null with proper value
            long? int64 = null; // TODO: replace null with proper value
            float? _float = null; // TODO: replace null with proper value
            byte[] binary = null; // TODO: replace null with proper value
            DateTime? date = null; // TODO: replace null with proper value
            DateTime? dateTime = null; // TODO: replace null with proper value
            string password = null; // TODO: replace null with proper value
            instance.TestEndpointParameters(number, _double, _string, _byte, integer, int32, int64, _float, binary, date, dateTime, password);
            
        }
        
    }

}
