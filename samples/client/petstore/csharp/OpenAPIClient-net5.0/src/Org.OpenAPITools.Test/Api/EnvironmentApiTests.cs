/*
 * OpenAPI Petstore
 *
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing EnvironmentApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class EnvironmentApiTests : IDisposable
    {
        private EnvironmentApi instance;

        public EnvironmentApiTests()
        {
            instance = new EnvironmentApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of EnvironmentApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' EnvironmentApi
            //Assert.IsType<EnvironmentApi>(instance);
        }

        /// <summary>
        /// Test ApiV1EnvironmentsGet
        /// </summary>
        [Fact]
        public void ApiV1EnvironmentsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ApiV1EnvironmentsGet();
            //Assert.IsType<List<Environment>>(response);
        }

        /// <summary>
        /// Test ApiV1EnvironmentsIdDelete
        /// </summary>
        [Fact]
        public void ApiV1EnvironmentsIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //instance.ApiV1EnvironmentsIdDelete(id);
        }

        /// <summary>
        /// Test ApiV1EnvironmentsIdGet
        /// </summary>
        [Fact]
        public void ApiV1EnvironmentsIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.ApiV1EnvironmentsIdGet(id);
            //Assert.IsType<Environment>(response);
        }

        /// <summary>
        /// Test ApiV1EnvironmentsIdPut
        /// </summary>
        [Fact]
        public void ApiV1EnvironmentsIdPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //Environment? environment = null;
            //instance.ApiV1EnvironmentsIdPut(id, environment);
        }

        /// <summary>
        /// Test ApiV1EnvironmentsPost
        /// </summary>
        [Fact]
        public void ApiV1EnvironmentsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Environment? environment = null;
            //var response = instance.ApiV1EnvironmentsPost(environment);
            //Assert.IsType<Environment>(response);
        }
    }
}
