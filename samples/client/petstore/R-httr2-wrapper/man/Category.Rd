% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/category.R
\docType{class}
\name{Category}
\alias{Category}
\title{Category}
\format{
An \code{R6Class} generator object
}
\description{
A category for a pet

Category Class
}
\details{
Create a new Category
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{id}}{integer [optional]}

\item{\code{name}}{character [optional]}

\item{\code{_field_list}}{a list of fields list(character)}

\item{\code{additional_properties}}{additional properties list(character) [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Category-new}{\code{Category$new()}}
\item \href{#method-Category-toJSON}{\code{Category$toJSON()}}
\item \href{#method-Category-fromJSON}{\code{Category$fromJSON()}}
\item \href{#method-Category-toJSONString}{\code{Category$toJSONString()}}
\item \href{#method-Category-fromJSONString}{\code{Category$fromJSONString()}}
\item \href{#method-Category-validateJSON}{\code{Category$validateJSON()}}
\item \href{#method-Category-toString}{\code{Category$toString()}}
\item \href{#method-Category-isValid}{\code{Category$isValid()}}
\item \href{#method-Category-getInvalidFields}{\code{Category$getInvalidFields()}}
\item \href{#method-Category-print}{\code{Category$print()}}
\item \href{#method-Category-clone}{\code{Category$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Category-new"></a>}}
\if{latex}{\out{\hypertarget{method-Category-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new Category class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Category$new(id = NULL, name = NULL, additional_properties = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{id}

\item{\code{name}}{name}

\item{\code{additional_properties}}{additonal properties (optional)}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Category-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Category-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Category$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Category in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Category-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Category-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of Category
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Category$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Category
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Category-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Category-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Category$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Category in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Category-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Category-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of Category
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Category$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Category
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Category-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Category-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to Category and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Category$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Category-toString"></a>}}
\if{latex}{\out{\hypertarget{method-Category-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Category$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of Category
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Category-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-Category-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Category$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Category-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-Category-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Category$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Category-print"></a>}}
\if{latex}{\out{\hypertarget{method-Category-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Category$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Category-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Category-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Category$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
