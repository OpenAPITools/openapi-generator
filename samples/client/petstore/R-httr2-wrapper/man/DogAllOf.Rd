% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dog_all_of.R
\docType{class}
\name{DogAllOf}
\alias{DogAllOf}
\title{DogAllOf}
\format{
An \code{R6Class} generator object
}
\description{
DogAllOf Class

DogAllOf Class
}
\details{
Create a new DogAllOf
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{breed}}{character [optional]}

\item{\code{_field_list}}{a list of fields list(character)}

\item{\code{additional_properties}}{additional properties list(character) [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-DogAllOf-new}{\code{DogAllOf$new()}}
\item \href{#method-DogAllOf-toJSON}{\code{DogAllOf$toJSON()}}
\item \href{#method-DogAllOf-fromJSON}{\code{DogAllOf$fromJSON()}}
\item \href{#method-DogAllOf-toJSONString}{\code{DogAllOf$toJSONString()}}
\item \href{#method-DogAllOf-fromJSONString}{\code{DogAllOf$fromJSONString()}}
\item \href{#method-DogAllOf-validateJSON}{\code{DogAllOf$validateJSON()}}
\item \href{#method-DogAllOf-toString}{\code{DogAllOf$toString()}}
\item \href{#method-DogAllOf-isValid}{\code{DogAllOf$isValid()}}
\item \href{#method-DogAllOf-getInvalidFields}{\code{DogAllOf$getInvalidFields()}}
\item \href{#method-DogAllOf-print}{\code{DogAllOf$print()}}
\item \href{#method-DogAllOf-clone}{\code{DogAllOf$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DogAllOf-new"></a>}}
\if{latex}{\out{\hypertarget{method-DogAllOf-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new DogAllOf class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DogAllOf$new(breed = NULL, additional_properties = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{breed}}{breed}

\item{\code{additional_properties}}{additonal properties (optional)}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DogAllOf-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-DogAllOf-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DogAllOf$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
DogAllOf in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DogAllOf-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-DogAllOf-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of DogAllOf
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DogAllOf$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of DogAllOf
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DogAllOf-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-DogAllOf-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DogAllOf$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
DogAllOf in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DogAllOf-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-DogAllOf-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of DogAllOf
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DogAllOf$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of DogAllOf
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DogAllOf-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-DogAllOf-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to DogAllOf and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DogAllOf$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DogAllOf-toString"></a>}}
\if{latex}{\out{\hypertarget{method-DogAllOf-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DogAllOf$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of DogAllOf
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DogAllOf-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-DogAllOf-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DogAllOf$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DogAllOf-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-DogAllOf-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DogAllOf$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DogAllOf-print"></a>}}
\if{latex}{\out{\hypertarget{method-DogAllOf-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DogAllOf$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DogAllOf-clone"></a>}}
\if{latex}{\out{\hypertarget{method-DogAllOf-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DogAllOf$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
