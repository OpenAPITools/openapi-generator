% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/whale.R
\docType{class}
\name{Whale}
\alias{Whale}
\title{Whale}
\format{
An \code{R6Class} generator object
}
\description{
Whale Class

Whale Class
}
\details{
Create a new Whale
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{hasBaleen}}{character [optional]}

\item{\code{hasTeeth}}{character [optional]}

\item{\code{className}}{character}

\item{\code{_field_list}}{a list of fields list(character)}

\item{\code{additional_properties}}{additional properties list(character) [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Whale-new}{\code{Whale$new()}}
\item \href{#method-Whale-toJSON}{\code{Whale$toJSON()}}
\item \href{#method-Whale-fromJSON}{\code{Whale$fromJSON()}}
\item \href{#method-Whale-toJSONString}{\code{Whale$toJSONString()}}
\item \href{#method-Whale-fromJSONString}{\code{Whale$fromJSONString()}}
\item \href{#method-Whale-validateJSON}{\code{Whale$validateJSON()}}
\item \href{#method-Whale-toString}{\code{Whale$toString()}}
\item \href{#method-Whale-isValid}{\code{Whale$isValid()}}
\item \href{#method-Whale-getInvalidFields}{\code{Whale$getInvalidFields()}}
\item \href{#method-Whale-print}{\code{Whale$print()}}
\item \href{#method-Whale-clone}{\code{Whale$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Whale-new"></a>}}
\if{latex}{\out{\hypertarget{method-Whale-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new Whale class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Whale$new(
  className,
  hasBaleen = NULL,
  hasTeeth = NULL,
  additional_properties = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{className}}{className}

\item{\code{hasBaleen}}{hasBaleen}

\item{\code{hasTeeth}}{hasTeeth}

\item{\code{additional_properties}}{additonal properties (optional)}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Whale-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Whale-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Whale$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Whale in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Whale-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Whale-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of Whale
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Whale$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Whale
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Whale-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Whale-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Whale$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Whale in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Whale-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Whale-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of Whale
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Whale$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Whale
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Whale-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Whale-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to Whale and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Whale$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Whale-toString"></a>}}
\if{latex}{\out{\hypertarget{method-Whale-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Whale$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of Whale
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Whale-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-Whale-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Whale$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Whale-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-Whale-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Whale$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Whale-print"></a>}}
\if{latex}{\out{\hypertarget{method-Whale-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Whale$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Whale-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Whale-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Whale$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
