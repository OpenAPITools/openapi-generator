% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dog.R
\docType{class}
\name{Dog}
\alias{Dog}
\title{Dog}
\format{
An \code{R6Class} generator object
}
\description{
Dog Class

Dog Class
}
\details{
Create a new Dog
}
\section{Super class}{
\code{\link[petstore:Animal]{petstore::Animal}} -> \code{Dog}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{className}}{character}

\item{\code{color}}{character [optional]}

\item{\code{breed}}{character [optional]}

\item{\code{_field_list}}{a list of fields list(character)}

\item{\code{additional_properties}}{additional properties list(character) [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Dog-new}{\code{Dog$new()}}
\item \href{#method-Dog-toJSON}{\code{Dog$toJSON()}}
\item \href{#method-Dog-fromJSON}{\code{Dog$fromJSON()}}
\item \href{#method-Dog-toJSONString}{\code{Dog$toJSONString()}}
\item \href{#method-Dog-fromJSONString}{\code{Dog$fromJSONString()}}
\item \href{#method-Dog-validateJSON}{\code{Dog$validateJSON()}}
\item \href{#method-Dog-toString}{\code{Dog$toString()}}
\item \href{#method-Dog-isValid}{\code{Dog$isValid()}}
\item \href{#method-Dog-getInvalidFields}{\code{Dog$getInvalidFields()}}
\item \href{#method-Dog-print}{\code{Dog$print()}}
\item \href{#method-Dog-clone}{\code{Dog$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Dog-new"></a>}}
\if{latex}{\out{\hypertarget{method-Dog-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new Dog class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dog$new(
  className,
  color = "red",
  breed = NULL,
  additional_properties = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{className}}{className}

\item{\code{color}}{color. Default to "red".}

\item{\code{breed}}{breed}

\item{\code{additional_properties}}{additonal properties (optional)}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Dog-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Dog-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dog$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Dog in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Dog-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Dog-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of Dog
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dog$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Dog
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Dog-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Dog-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dog$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Dog in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Dog-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Dog-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of Dog
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dog$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Dog
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Dog-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Dog-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to Dog and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dog$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Dog-toString"></a>}}
\if{latex}{\out{\hypertarget{method-Dog-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dog$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of Dog
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Dog-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-Dog-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dog$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Dog-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-Dog-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dog$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Dog-print"></a>}}
\if{latex}{\out{\hypertarget{method-Dog-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dog$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Dog-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Dog-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Dog$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
