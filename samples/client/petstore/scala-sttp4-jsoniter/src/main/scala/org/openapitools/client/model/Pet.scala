/**
 * OpenAPI Petstore
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.client.model

import com.github.plokhotnyuk.jsoniter_scala.macros.named

  /**
   * a Pet
   * A pet for sale in the pet store
   */
case class Pet(
  @named("id") id: Option[Long] = scala.None,
  @named("category") category: Option[Category] = scala.None,
  @named("name") name: String,
  @named("photoUrls") photoUrls: Seq[String],
  @named("tags") tags: Option[Seq[Tag]] = scala.None,
  /* pet status in the store */
  @named("status") status: Option[PetEnums.Status] = scala.None
)

object PetEnums:
  enum Status:
    case `available`
    case `pending`
    case `sold`

  object Status:
    import com.github.plokhotnyuk.jsoniter_scala.macros.*
    import com.github.plokhotnyuk.jsoniter_scala.core.*
    given statusCodec: JsonValueCodec[Status] = JsonCodecMaker.make {
      CodecMakerConfig
        .withAdtLeafClassNameMapper { x =>
          JsonCodecMaker.simpleClassName(x) match
            case "available" => "available"
            case "pending" => "pending"
            case "sold" => "sold"
        }
        .withDiscriminatorFieldName(scala.None)
    }
end PetEnums
