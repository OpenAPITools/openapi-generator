apply plugin: 'idea'
apply plugin: 'eclipse'

group = 'org.openapitools'
version = '1.0.0'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.5.+'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'
    }
}

repositories {
    mavenCentral()
}


if(hasProperty('target') && target == 'android') {

    apply plugin: 'com.android.library'
    apply plugin: 'com.github.dcendents.android-maven'

    android {
        compileSdkVersion 23
        buildToolsVersion '23.0.2'
        defaultConfig {
            minSdkVersion 14
            targetSdkVersion 23
        }
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_7
            targetCompatibility JavaVersion.VERSION_1_7
        }

        // Rename the aar correctly
        libraryVariants.all { variant ->
            variant.outputs.each { output ->
                def outputFile = output.outputFile
                if (outputFile != null && outputFile.name.endsWith('.aar')) {
                    def fileName = "${project.name}-${variant.baseName}-${version}.aar"
                    output.outputFile = new File(outputFile.parent, fileName)
                }
            }
        }

        dependencies {
            provided 'javax.annotation:jsr250-api:1.0'
        }
    }

    afterEvaluate {
        android.libraryVariants.all { variant ->
            def task = project.tasks.create "jar${variant.name.capitalize()}", Jar
            task.description = "Create jar artifact for ${variant.name}"
            task.dependsOn variant.javaCompile
            task.from variant.javaCompile.destinationDir
            task.destinationDir = project.file("${project.buildDir}/outputs/jar")
            task.archiveName = "${project.name}-${variant.baseName}-${version}.jar"
            artifacts.add('archives', task);
        }
    }

    task sourcesJar(type: Jar) {
        from android.sourceSets.main.java.srcDirs
        classifier = 'sources'
    }

    artifacts {
        archives sourcesJar
    }

} else {

    apply plugin: 'scala'
    apply plugin: 'java'
    apply plugin: 'maven-publish'

    sourceCompatibility = JavaVersion.VERSION_1_7
    targetCompatibility = JavaVersion.VERSION_1_7

    publishing {
        publications {
            maven(MavenPublication) {
               artifactId = 'openapi-scala-client'
               from components.java
            }
        }
    }

    task execute(type:JavaExec) {
       main = System.getProperty('mainClass')
       classpath = sourceSets.main.runtimeClasspath
    }
}

ext {
    scala_version = "2.10.4"
    joda_version = "1.2"
    jodatime_version = "2.2"
    jersey_version = "1.19"
    swagger_core_version = "1.5.8"
    jersey_async_version = "1.0.5"
    jackson_version = "2.4.2"
    junit_version = "4.8.1"
    scala_test_version = "2.2.4"
    swagger_async_httpclient_version = "0.3.5"
}

repositories {
    mavenLocal()
    maven { url "https://repo1.maven.org/maven2" }
}

dependencies {
    compileOnly "com.fasterxml.jackson.module:jackson-module-scala_2.10:$jackson_version"
    compileOnly "com.sun.jersey:jersey-client:$jersey_version"
    compileOnly "com.sun.jersey.contribs:jersey-multipart:$jersey_version"
    compileOnly "org.jfarcand:jersey-ahc-client:$jersey_async_version"
    compileOnly "org.scala-lang:scala-library:$scala_version"
    compileOnly "io.swagger:swagger-core:$swagger_core_version"
    testCompileOnly "org.scalatest:scalatest_2.10:$scala_test_version"
    testCompileOnly "junit:junit:$junit_version"
    compileOnly "joda-time:joda-time:$jodatime_version"
    compileOnly "org.joda:joda-convert:$joda_version"
    compileOnly "com.wordnik.swagger:swagger-async-httpclient_2.10:$swagger_async_httpclient_version"
}
