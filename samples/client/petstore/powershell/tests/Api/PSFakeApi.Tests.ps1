#
# OpenAPI Petstore
# This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: "" \
# Version: 1.0.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'PSPetstore' -name 'PSPSFakeApi' {
    Context 'Invoke-PSFakeHealthGet' {
        It 'Test Invoke-PSFakeHealthGet' {
            #$TestResult = Invoke-PSFakeHealthGet
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-PSFakeOuterBooleanSerialize' {
        It 'Test Invoke-PSFakeOuterBooleanSerialize' {
            #$TestResult = Invoke-PSFakeOuterBooleanSerialize -Body "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-PSFakeOuterCompositeSerialize' {
        It 'Test Invoke-PSFakeOuterCompositeSerialize' {
            #$TestResult = Invoke-PSFakeOuterCompositeSerialize -OuterComposite "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-PSFakeOuterNumberSerialize' {
        It 'Test Invoke-PSFakeOuterNumberSerialize' {
            #$TestResult = Invoke-PSFakeOuterNumberSerialize -Body "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-PSFakeOuterStringSerialize' {
        It 'Test Invoke-PSFakeOuterStringSerialize' {
            #$TestResult = Invoke-PSFakeOuterStringSerialize -Body "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PSArrayOfEnums' {
        It 'Test Get-PSArrayOfEnums' {
            #$TestResult = Get-PSArrayOfEnums
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Test-PSBodyWithFileSchema' {
        It 'Test Test-PSBodyWithFileSchema' {
            #$TestResult = Test-PSBodyWithFileSchema -FileSchemaTestClass "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Test-PSBodyWithQueryParams' {
        It 'Test Test-PSBodyWithQueryParams' {
            #$TestResult = Test-PSBodyWithQueryParams -Query "TEST_VALUE" -User "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Test-PSClientModel' {
        It 'Test Test-PSClientModel' {
            #$TestResult = Test-PSClientModel -Client "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Test-PSEndpointParameters' {
        It 'Test Test-PSEndpointParameters' {
            #$TestResult = Test-PSEndpointParameters -Number "TEST_VALUE" -Double "TEST_VALUE" -PatternWithoutDelimiter "TEST_VALUE" -Byte "TEST_VALUE" -Integer "TEST_VALUE" -Int32 "TEST_VALUE" -Int64 "TEST_VALUE" -Float "TEST_VALUE" -String "TEST_VALUE" -Binary "TEST_VALUE" -Date "TEST_VALUE" -DateTime "TEST_VALUE" -Password "TEST_VALUE" -Callback "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Test-PSEnumParameters' {
        It 'Test Test-PSEnumParameters' {
            #$TestResult = Test-PSEnumParameters -EnumHeaderStringArray "TEST_VALUE" -EnumHeaderString "TEST_VALUE" -EnumQueryStringArray "TEST_VALUE" -EnumQueryString "TEST_VALUE" -EnumQueryInteger "TEST_VALUE" -EnumQueryDouble "TEST_VALUE" -EnumFormStringArray "TEST_VALUE" -EnumFormString "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Test-PSGroupParameters' {
        It 'Test Test-PSGroupParameters' {
            #$TestResult = Test-PSGroupParameters -RequiredStringGroup "TEST_VALUE" -RequiredBooleanGroup "TEST_VALUE" -RequiredInt64Group "TEST_VALUE" -StringGroup "TEST_VALUE" -BooleanGroup "TEST_VALUE" -Int64Group "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Test-PSInlineAdditionalProperties' {
        It 'Test Test-PSInlineAdditionalProperties' {
            #$TestResult = Test-PSInlineAdditionalProperties -RequestBody "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Test-PSJsonFormData' {
        It 'Test Test-PSJsonFormData' {
            #$TestResult = Test-PSJsonFormData -Param "TEST_VALUE" -Param2 "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Test-PSQueryParameterCollectionFormat' {
        It 'Test Test-PSQueryParameterCollectionFormat' {
            #$TestResult = Test-PSQueryParameterCollectionFormat -Pipe "TEST_VALUE" -Ioutil "TEST_VALUE" -Http "TEST_VALUE" -Url "TEST_VALUE" -Context "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
