#
# OpenAPI Petstore
# This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: "" \
# Version: 1.0.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER SpecialPropertyName
No description available.
.PARAMETER SpecialModelName
No description available.
.OUTPUTS

SpecialModelName<PSCustomObject>
#>

function Initialize-PSSpecialModelName {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${SpecialPropertyName},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SpecialModelName}
    )

    Process {
        'Creating PSCustomObject: PSPetstore => PSSpecialModelName' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "$special[property.name]" = ${SpecialPropertyName}
            "_special_model.name_" = ${SpecialModelName}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to SpecialModelName<PSCustomObject>

.DESCRIPTION

Convert from JSON to SpecialModelName<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

SpecialModelName<PSCustomObject>
#>
function ConvertFrom-PSJsonToSpecialModelName {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSPetstore => PSSpecialModelName' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in PSSpecialModelName
        $AllProperties = ("$special[property.name]", "_special_model.name_")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "$special[property.name]"))) { #optional property not found
            $SpecialPropertyName = $null
        } else {
            $SpecialPropertyName = $JsonParameters.PSobject.Properties["$special[property.name]"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "_special_model.name_"))) { #optional property not found
            $SpecialModelName = $null
        } else {
            $SpecialModelName = $JsonParameters.PSobject.Properties["_special_model.name_"].value
        }

        $PSO = [PSCustomObject]@{
            "$special[property.name]" = ${SpecialPropertyName}
            "_special_model.name_" = ${SpecialModelName}
        }

        return $PSO
    }

}

