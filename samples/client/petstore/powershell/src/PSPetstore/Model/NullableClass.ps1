#
# OpenAPI Petstore
# This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: "" \
# Version: 1.0.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER IntegerProp
No description available.
.PARAMETER NumberProp
No description available.
.PARAMETER BooleanProp
No description available.
.PARAMETER StringProp
No description available.
.PARAMETER DateProp
No description available.
.PARAMETER DatetimeProp
No description available.
.PARAMETER ArrayNullableProp
No description available.
.PARAMETER ArrayAndItemsNullableProp
No description available.
.PARAMETER ArrayItemsNullable
No description available.
.PARAMETER ObjectNullableProp
No description available.
.PARAMETER ObjectAndItemsNullableProp
No description available.
.PARAMETER ObjectItemsNullable
No description available.
.OUTPUTS

NullableClass<PSCustomObject>
#>

function Initialize-PSNullableClass {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${IntegerProp},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${NumberProp},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${BooleanProp},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${StringProp},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${DateProp},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${DatetimeProp},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${ArrayNullableProp},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${ArrayAndItemsNullableProp},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${ArrayItemsNullable},
        [Parameter(Position = 9, ValueFromPipelineByPropertyName = $true)]
        [System.Collections.Hashtable]
        ${ObjectNullableProp},
        [Parameter(Position = 10, ValueFromPipelineByPropertyName = $true)]
        [System.Collections.Hashtable]
        ${ObjectAndItemsNullableProp},
        [Parameter(Position = 11, ValueFromPipelineByPropertyName = $true)]
        [System.Collections.Hashtable]
        ${ObjectItemsNullable}
    )

    Process {
        'Creating PSCustomObject: PSPetstore => PSNullableClass' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "integer_prop" = ${IntegerProp}
            "number_prop" = ${NumberProp}
            "boolean_prop" = ${BooleanProp}
            "string_prop" = ${StringProp}
            "date_prop" = ${DateProp}
            "datetime_prop" = ${DatetimeProp}
            "array_nullable_prop" = ${ArrayNullableProp}
            "array_and_items_nullable_prop" = ${ArrayAndItemsNullableProp}
            "array_items_nullable" = ${ArrayItemsNullable}
            "object_nullable_prop" = ${ObjectNullableProp}
            "object_and_items_nullable_prop" = ${ObjectAndItemsNullableProp}
            "object_items_nullable" = ${ObjectItemsNullable}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to NullableClass<PSCustomObject>

.DESCRIPTION

Convert from JSON to NullableClass<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

NullableClass<PSCustomObject>
#>
function ConvertFrom-PSJsonToNullableClass {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSPetstore => PSNullableClass' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in PSNullableClass
        $AllProperties = ("integer_prop", "number_prop", "boolean_prop", "string_prop", "date_prop", "datetime_prop", "array_nullable_prop", "array_and_items_nullable_prop", "array_items_nullable", "object_nullable_prop", "object_and_items_nullable_prop", "object_items_nullable")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "integer_prop"))) { #optional property not found
            $IntegerProp = $null
        } else {
            $IntegerProp = $JsonParameters.PSobject.Properties["integer_prop"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "number_prop"))) { #optional property not found
            $NumberProp = $null
        } else {
            $NumberProp = $JsonParameters.PSobject.Properties["number_prop"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "boolean_prop"))) { #optional property not found
            $BooleanProp = $null
        } else {
            $BooleanProp = $JsonParameters.PSobject.Properties["boolean_prop"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "string_prop"))) { #optional property not found
            $StringProp = $null
        } else {
            $StringProp = $JsonParameters.PSobject.Properties["string_prop"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "date_prop"))) { #optional property not found
            $DateProp = $null
        } else {
            $DateProp = $JsonParameters.PSobject.Properties["date_prop"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "datetime_prop"))) { #optional property not found
            $DatetimeProp = $null
        } else {
            $DatetimeProp = $JsonParameters.PSobject.Properties["datetime_prop"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "array_nullable_prop"))) { #optional property not found
            $ArrayNullableProp = $null
        } else {
            $ArrayNullableProp = $JsonParameters.PSobject.Properties["array_nullable_prop"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "array_and_items_nullable_prop"))) { #optional property not found
            $ArrayAndItemsNullableProp = $null
        } else {
            $ArrayAndItemsNullableProp = $JsonParameters.PSobject.Properties["array_and_items_nullable_prop"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "array_items_nullable"))) { #optional property not found
            $ArrayItemsNullable = $null
        } else {
            $ArrayItemsNullable = $JsonParameters.PSobject.Properties["array_items_nullable"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "object_nullable_prop"))) { #optional property not found
            $ObjectNullableProp = $null
        } else {
            $ObjectNullableProp = $JsonParameters.PSobject.Properties["object_nullable_prop"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "object_and_items_nullable_prop"))) { #optional property not found
            $ObjectAndItemsNullableProp = $null
        } else {
            $ObjectAndItemsNullableProp = $JsonParameters.PSobject.Properties["object_and_items_nullable_prop"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "object_items_nullable"))) { #optional property not found
            $ObjectItemsNullable = $null
        } else {
            $ObjectItemsNullable = $JsonParameters.PSobject.Properties["object_items_nullable"].value
        }

        $PSO = [PSCustomObject]@{
            "integer_prop" = ${IntegerProp}
            "number_prop" = ${NumberProp}
            "boolean_prop" = ${BooleanProp}
            "string_prop" = ${StringProp}
            "date_prop" = ${DateProp}
            "datetime_prop" = ${DatetimeProp}
            "array_nullable_prop" = ${ArrayNullableProp}
            "array_and_items_nullable_prop" = ${ArrayAndItemsNullableProp}
            "array_items_nullable" = ${ArrayItemsNullable}
            "object_nullable_prop" = ${ObjectNullableProp}
            "object_and_items_nullable_prop" = ${ObjectAndItemsNullableProp}
            "object_items_nullable" = ${ObjectItemsNullable}
        }

        return $PSO
    }

}

