# coding: utf-8

"""
    OpenAPI Petstore

    This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\  # noqa: E501

    OpenAPI spec version: 1.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest

import petstore_api
from petstore_api.models import Pet, Category, Tag, Dog
from petstore_api.exceptions import ApiTypeError


class TestPet(unittest.TestCase):
    """Pet unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def testPet_valid_inputs(self):
        """Test Pet with valid arguments"""
        keyword_args = dict(
            id=3,
            category=Category(id=0, name='poodle'),
            name='Samantha',
            photo_urls=['http://www.example.com/image.jpg'],
            tags=[Tag(id=3, name='black')],
            status='available',
            _check_type=True
        )
        pet = Pet(**keyword_args)
        assert True

    def testPet_invalid_inputs(self):
        """Test Pet where we pass an invalid class in"""
        keyword_args = dict(
            id=3,
            category=Dog(class_name='large dogs', color='black',
                         breed='poodle'),
            name='Samantha',
            photo_urls=['http://www.example.com/image.jpg'],
            tags=[Tag(id=3, name='black')],
            status='available',
            _check_type=True
        )
        with self.assertRaises(ApiTypeError) as exc:
            pet = Pet(**keyword_args)

        self.assertEqual(
            str(exc.exception),
            ("Invalid type for variable 'category'. Required value type is "
            "Category and passed type was Dog at ['category']")
        )

if __name__ == '__main__':
    unittest.main()
