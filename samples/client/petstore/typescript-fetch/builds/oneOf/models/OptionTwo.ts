/* tslint:disable */
/* eslint-disable */
/**
 * testing oneOf without discriminator
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OptionTwo
 */
export interface OptionTwo {
    /**
     * 
     * @type {string}
     * @memberof OptionTwo
     */
    discriminatorField: OptionTwoDiscriminatorFieldEnum;
}


/**
 * @export
 */
export const OptionTwoDiscriminatorFieldEnum = {
    OptionTwo: 'optionTwo'
} as const;
export type OptionTwoDiscriminatorFieldEnum = typeof OptionTwoDiscriminatorFieldEnum[keyof typeof OptionTwoDiscriminatorFieldEnum];


/**
 * Check if a given object implements the OptionTwo interface.
 */
export function instanceOfOptionTwo(value: object): value is OptionTwo {
    if (!('discriminatorField' in value) || value['discriminatorField'] === undefined) return false;
    return true;
}

export function OptionTwoFromJSON(json: any): OptionTwo {
    return OptionTwoFromJSONTyped(json, false);
}

export function OptionTwoFromJSONTyped(json: any, ignoreDiscriminator: boolean): OptionTwo {
    if (json == null) {
        return json;
    }
    return {
        
        'discriminatorField': json['discriminatorField'],
    };
}

export function OptionTwoToJSON(json: any): OptionTwo {
    return OptionTwoToJSONTyped(json, false);
}

export function OptionTwoToJSONTyped(value?: OptionTwo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'discriminatorField': value['discriminatorField'],
    };
}

