/* tslint:disable */
/* eslint-disable */
/**
 * testing oneOf without discriminator
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OptionOne
 */
export interface OptionOne {
    /**
     * 
     * @type {string}
     * @memberof OptionOne
     */
    discriminatorField: OptionOneDiscriminatorFieldEnum;
}


/**
 * @export
 */
export const OptionOneDiscriminatorFieldEnum = {
    OptionOne: 'optionOne'
} as const;
export type OptionOneDiscriminatorFieldEnum = typeof OptionOneDiscriminatorFieldEnum[keyof typeof OptionOneDiscriminatorFieldEnum];


/**
 * Check if a given object implements the OptionOne interface.
 */
export function instanceOfOptionOne(value: object): value is OptionOne {
    if (!('discriminatorField' in value) || value['discriminatorField'] === undefined) return false;
    return true;
}

export function OptionOneFromJSON(json: any): OptionOne {
    return OptionOneFromJSONTyped(json, false);
}

export function OptionOneFromJSONTyped(json: any, ignoreDiscriminator: boolean): OptionOne {
    if (json == null) {
        return json;
    }
    return {
        
        'discriminatorField': json['discriminatorField'],
    };
}

export function OptionOneToJSON(json: any): OptionOne {
    return OptionOneToJSONTyped(json, false);
}

export function OptionOneToJSONTyped(value?: OptionOne | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'discriminatorField': value['discriminatorField'],
    };
}

