/* tslint:disable */
/* eslint-disable */
/**
 * Title
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    OtherPropertyType,
    OtherPropertyTypeFromJSON,
    OtherPropertyTypeFromJSONTyped,
    OtherPropertyTypeToJSON,
    PropertyType,
    PropertyTypeFromJSON,
    PropertyTypeFromJSONTyped,
    PropertyTypeToJSON,
} from './';

/**
 * 
 * @export
 * @interface ModelWithNullableObjectProperty
 */
export interface ModelWithNullableObjectProperty {
    /**
     * 
     * @type {PropertyType}
     * @memberof ModelWithNullableObjectProperty
     */
    propertyName30?: PropertyType | null;
    /**
     * 
     * @type {PropertyType}
     * @memberof ModelWithNullableObjectProperty
     */
    propertyName31?: PropertyType | null;
    /**
     * 
     * @type {string | number}
     * @memberof ModelWithNullableObjectProperty
     */
    nonNullableProperty?: string | number | null;
    /**
     * 
     * @type {PropertyType | OtherPropertyType}
     * @memberof ModelWithNullableObjectProperty
     */
    propertyWithNullAndTwoTypes?: PropertyType | OtherPropertyType | null;
}

export function ModelWithNullableObjectPropertyFromJSON(json: any): ModelWithNullableObjectProperty {
    return ModelWithNullableObjectPropertyFromJSONTyped(json, false);
}

export function ModelWithNullableObjectPropertyFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelWithNullableObjectProperty {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'propertyName30': !exists(json, 'propertyName30') ? undefined : PropertyTypeFromJSON(json['propertyName30']),
        'propertyName31': !exists(json, 'propertyName31') ? undefined : PropertyTypeFromJSON(json['propertyName31']),
        'nonNullableProperty': !exists(json, 'nonNullableProperty') ? undefined : string | numberFromJSON(json['nonNullableProperty']),
        'propertyWithNullAndTwoTypes': !exists(json, 'propertyWithNullAndTwoTypes') ? undefined : PropertyType | OtherPropertyTypeFromJSON(json['propertyWithNullAndTwoTypes']),
    };
}

export function ModelWithNullableObjectPropertyToJSON(value?: ModelWithNullableObjectProperty | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'propertyName30': PropertyTypeToJSON(value.propertyName30),
        'propertyName31': PropertyTypeToJSON(value.propertyName31),
        'nonNullableProperty': string | numberToJSON(value.nonNullableProperty),
        'propertyWithNullAndTwoTypes': PropertyType | OtherPropertyTypeToJSON(value.propertyWithNullAndTwoTypes),
    };
}

