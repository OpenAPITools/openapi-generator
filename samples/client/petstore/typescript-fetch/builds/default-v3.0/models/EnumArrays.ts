/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI Petstore
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EnumArrays
 */
export interface EnumArrays {
    /**
     * 
     * @type {string}
     * @memberof EnumArrays
     */
    justSymbol?: EnumArraysJustSymbolEnum;
    /**
     * 
     * @type {Array<string>}
     * @memberof EnumArrays
     */
    arrayEnum?: Array<EnumArraysArrayEnumEnum>;
}


/**
 * @export
 */
export const EnumArraysJustSymbolEnum = {
    GreaterThanOrEqualTo: '>=',
    Dollar: '$'
} as const;
export type EnumArraysJustSymbolEnum = typeof EnumArraysJustSymbolEnum[keyof typeof EnumArraysJustSymbolEnum];

/**
 * @export
 */
export const EnumArraysArrayEnumEnum = {
    Fish: 'fish',
    Crab: 'crab'
} as const;
export type EnumArraysArrayEnumEnum = typeof EnumArraysArrayEnumEnum[keyof typeof EnumArraysArrayEnumEnum];


/**
 * Check if a given object implements the EnumArrays interface.
 */
export function instanceOfEnumArrays(value: object): value is EnumArrays {
    return true;
}

export function EnumArraysFromJSON(json: any): EnumArrays {
    return EnumArraysFromJSONTyped(json, false);
}

export function EnumArraysFromJSONTyped(json: any, ignoreDiscriminator: boolean): EnumArrays {
    if (json == null) {
        return json;
    }
    return {
        
        'justSymbol': json['just_symbol'] == null ? undefined : json['just_symbol'],
        'arrayEnum': json['array_enum'] == null ? undefined : json['array_enum'],
    };
}

export function EnumArraysToJSON(value?: EnumArrays | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'just_symbol': value['justSymbol'],
        'array_enum': value['arrayEnum'],
    };
}

