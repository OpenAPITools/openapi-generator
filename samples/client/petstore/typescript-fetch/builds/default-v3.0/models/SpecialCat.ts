/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI Petstore
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Cat } from './Cat';
import {
    CatFromJSON,
    CatFromJSONTyped,
    CatToJSON,
} from './Cat';

/**
 * 
 * @export
 * @interface SpecialCat
 */
export interface SpecialCat extends Cat {
    /**
     * 
     * @type {string}
     * @memberof SpecialCat
     */
    kind?: SpecialCatKindEnum;
}


/**
 * @export
 */
export const SpecialCatKindEnum = {
    Lions: 'lions',
    Tigers: 'tigers',
    Leopards: 'leopards',
    Jaguars: 'jaguars'
} as const;
export type SpecialCatKindEnum = typeof SpecialCatKindEnum[keyof typeof SpecialCatKindEnum];


/**
 * Check if a given object implements the SpecialCat interface.
 */
export function instanceOfSpecialCat(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SpecialCatFromJSON(json: any): SpecialCat {
    return SpecialCatFromJSONTyped(json, false);
}

export function SpecialCatFromJSONTyped(json: any, ignoreDiscriminator: boolean): SpecialCat {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        ...CatFromJSONTyped(json, ignoreDiscriminator),
        'kind': !exists(json, 'kind') ? undefined : json['kind'],
    };
}

export function SpecialCatToJSON(value?: SpecialCat | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        ...CatToJSON(value),
        'kind': value.kind,
    };
}

