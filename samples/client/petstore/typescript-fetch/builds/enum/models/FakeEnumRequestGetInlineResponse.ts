/* tslint:disable */
/* eslint-disable */
/**
 * Enum test
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    NullableNumberEnum1,
    NullableNumberEnum1FromJSON,
    NullableNumberEnum1FromJSONTyped,
    NullableNumberEnum1ToJSON,
    NullableStringEnum1,
    NullableStringEnum1FromJSON,
    NullableStringEnum1FromJSONTyped,
    NullableStringEnum1ToJSON,
} from './';

/**
 * 
 * @export
 * @interface FakeEnumRequestGetInlineResponse
 */
export interface FakeEnumRequestGetInlineResponse {
    /**
     * 
     * @type {string}
     * @memberof FakeEnumRequestGetInlineResponse
     */
    stringEnum?: FakeEnumRequestGetInlineResponseStringEnumEnum;
    /**
     * 
     * @type {NullableStringEnum1}
     * @memberof FakeEnumRequestGetInlineResponse
     */
    nullableStringEnum?: NullableStringEnum1 | null;
    /**
     * 
     * @type {number}
     * @memberof FakeEnumRequestGetInlineResponse
     */
    numberEnum?: FakeEnumRequestGetInlineResponseNumberEnumEnum;
    /**
     * 
     * @type {NullableNumberEnum1}
     * @memberof FakeEnumRequestGetInlineResponse
     */
    nullableNumberEnum?: NullableNumberEnum1 | null;
}

/**
* @export
* @enum {string}
*/
export enum FakeEnumRequestGetInlineResponseStringEnumEnum {
    One = 'one',
    Two = 'two',
    Three = 'three'
}/**
* @export
* @enum {string}
*/
export enum FakeEnumRequestGetInlineResponseNumberEnumEnum {
    NUMBER_1 = 1,
    NUMBER_2 = 2,
    NUMBER_3 = 3
}

export function FakeEnumRequestGetInlineResponseFromJSON(json: any): FakeEnumRequestGetInlineResponse {
    return FakeEnumRequestGetInlineResponseFromJSONTyped(json, false);
}

export function FakeEnumRequestGetInlineResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): FakeEnumRequestGetInlineResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'stringEnum': !exists(json, 'string-enum') ? undefined : json['string-enum'],
        'nullableStringEnum': !exists(json, 'nullable-string-enum') ? undefined : NullableStringEnum1FromJSON(json['nullable-string-enum']),
        'numberEnum': !exists(json, 'number-enum') ? undefined : json['number-enum'],
        'nullableNumberEnum': !exists(json, 'nullable-number-enum') ? undefined : NullableNumberEnum1FromJSON(json['nullable-number-enum']),
    };
}

export function FakeEnumRequestGetInlineResponseToJSON(value?: FakeEnumRequestGetInlineResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'string-enum': value.stringEnum,
        'nullable-string-enum': NullableStringEnum1ToJSON(value.nullableStringEnum),
        'number-enum': value.numberEnum,
        'nullable-number-enum': NullableNumberEnum1ToJSON(value.nullableNumberEnum),
    };
}


