/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI Petstore
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {ApiRecordUtils, knownRecordFactories} from "../runtimeSagasAndRecords";
import {getApiEntitiesState} from "../ApiEntitiesSelectors"
import {List, Record, RecordOf, Map} from 'immutable';
import {Schema, schema, NormalizedSchema} from "normalizr";
import {select, call} from "redux-saga/effects";

import {
    ModelApiResponse,
} from './ModelApiResponse';



export const ModelApiResponseRecordProps = {
    recType: "ModelApiResponseApiRecord" as "ModelApiResponseApiRecord",
    code: null as number | null,
    type: null as string | null,
    message: null as string | null,
};

export type ModelApiResponseRecordPropsType = typeof ModelApiResponseRecordProps;
export const ModelApiResponseRecord = Record(ModelApiResponseRecordProps, ModelApiResponseRecordProps.recType);
export type ModelApiResponseRecord = RecordOf<ModelApiResponseRecordPropsType>;

knownRecordFactories.set(ModelApiResponseRecordProps.recType, ModelApiResponseRecord);


class ModelApiResponseRecordUtils extends ApiRecordUtils<ModelApiResponse, ModelApiResponseRecord> {
    public normalize(apiObject: ModelApiResponse, asEntity?: boolean): ModelApiResponse {
        (apiObject as any).recType = ModelApiResponseRecordProps.recType;
        return apiObject;
    }

    public toApi(record: ModelApiResponseRecord): ModelApiResponse {
        const apiObject = super.toApi(record);
        return apiObject;
    }
}

export const modelApiResponseRecordUtils = new ModelApiResponseRecordUtils();


