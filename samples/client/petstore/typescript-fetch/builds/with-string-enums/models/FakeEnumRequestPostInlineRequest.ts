/* tslint:disable */
/* eslint-disable */
/**
 * Enum test
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FakeEnumRequestPostInlineRequest
 */
export interface FakeEnumRequestPostInlineRequest {
    /**
     * 
     * @type {string}
     * @memberof FakeEnumRequestPostInlineRequest
     */
    stringEnum?: FakeEnumRequestPostInlineRequestStringEnumEnum;
    /**
     * 
     * @type {string}
     * @memberof FakeEnumRequestPostInlineRequest
     */
    nullableStringEnum?: FakeEnumRequestPostInlineRequestNullableStringEnumEnum;
    /**
     * 
     * @type {number}
     * @memberof FakeEnumRequestPostInlineRequest
     */
    numberEnum?: FakeEnumRequestPostInlineRequestNumberEnumEnum;
    /**
     * 
     * @type {number}
     * @memberof FakeEnumRequestPostInlineRequest
     */
    nullableNumberEnum?: FakeEnumRequestPostInlineRequestNullableNumberEnumEnum;
}

/**
* @export
* @enum {string}
*/
export enum FakeEnumRequestPostInlineRequestStringEnumEnum {
    One = 'one',
    Two = 'two',
    Three = 'three'
}
/**
* @export
* @enum {string}
*/
export enum FakeEnumRequestPostInlineRequestNullableStringEnumEnum {
    One = 'one',
    Two = 'two',
    Three = 'three'
}
/**
* @export
* @enum {string}
*/
export enum FakeEnumRequestPostInlineRequestNumberEnumEnum {
    NUMBER_1 = 1,
    NUMBER_2 = 2,
    NUMBER_3 = 3
}
/**
* @export
* @enum {string}
*/
export enum FakeEnumRequestPostInlineRequestNullableNumberEnumEnum {
    NUMBER_1 = 1,
    NUMBER_2 = 2,
    NUMBER_3 = 3
}


export function FakeEnumRequestPostInlineRequestFromJSON(json: any): FakeEnumRequestPostInlineRequest {
    return FakeEnumRequestPostInlineRequestFromJSONTyped(json, false);
}

export function FakeEnumRequestPostInlineRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): FakeEnumRequestPostInlineRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'stringEnum': !exists(json, 'string-enum') ? undefined : json['string-enum'],
        'nullableStringEnum': !exists(json, 'nullable-string-enum') ? undefined : json['nullable-string-enum'],
        'numberEnum': !exists(json, 'number-enum') ? undefined : json['number-enum'],
        'nullableNumberEnum': !exists(json, 'nullable-number-enum') ? undefined : json['nullable-number-enum'],
    };
}

export function FakeEnumRequestPostInlineRequestToJSON(value?: FakeEnumRequestPostInlineRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'string-enum': value.stringEnum,
        'nullable-string-enum': value.nullableStringEnum,
        'number-enum': value.numberEnum,
        'nullable-number-enum': value.nullableNumberEnum,
    };
}

