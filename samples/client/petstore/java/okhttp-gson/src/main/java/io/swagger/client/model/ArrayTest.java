/**
 * Swagger Petstore
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\ 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.model;

import java.util.Objects;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.annotations.SerializedName;


/**
 * ArrayTest
 */
public class ArrayTest   {
    @SerializedName("array_of_string")
    private List<String> arrayOfString = new ArrayList<String>();
    @SerializedName("array_array_of_integer")
    private List<List<Long>> arrayArrayOfInteger = new ArrayList<List<Long>>();
    @SerializedName("array_array_of_model")
    private List<List<ReadOnlyFirst>> arrayArrayOfModel = new ArrayList<List<ReadOnlyFirst>>();

    /**
     * Get arrayOfString
     * @return arrayOfString
     **/
    @ApiModelProperty(value = "")
    public List<String> getArrayOfString() {
        return arrayOfString;
    }

    /**
     * Set arrayOfString
     *
     * @param arrayOfString arrayOfString
     */
    public void setArrayOfString(List<String> arrayOfString) {
        this.arrayOfString = arrayOfString;
    }

    /**
     * Get arrayArrayOfInteger
     * @return arrayArrayOfInteger
     **/
    @ApiModelProperty(value = "")
    public List<List<Long>> getArrayArrayOfInteger() {
        return arrayArrayOfInteger;
    }

    /**
     * Set arrayArrayOfInteger
     *
     * @param arrayArrayOfInteger arrayArrayOfInteger
     */
    public void setArrayArrayOfInteger(List<List<Long>> arrayArrayOfInteger) {
        this.arrayArrayOfInteger = arrayArrayOfInteger;
    }

    /**
     * Get arrayArrayOfModel
     * @return arrayArrayOfModel
     **/
    @ApiModelProperty(value = "")
    public List<List<ReadOnlyFirst>> getArrayArrayOfModel() {
        return arrayArrayOfModel;
    }

    /**
     * Set arrayArrayOfModel
     *
     * @param arrayArrayOfModel arrayArrayOfModel
     */
    public void setArrayArrayOfModel(List<List<ReadOnlyFirst>> arrayArrayOfModel) {
        this.arrayArrayOfModel = arrayArrayOfModel;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ArrayTest arrayTest = (ArrayTest) o;
        return Objects.equals(this.arrayOfString, arrayTest.arrayOfString) &&
        Objects.equals(this.arrayArrayOfInteger, arrayTest.arrayArrayOfInteger) &&
        Objects.equals(this.arrayArrayOfModel, arrayTest.arrayArrayOfModel);
    }

    @Override
    public int hashCode() {
        return Objects.hash(arrayOfString, arrayArrayOfInteger, arrayArrayOfModel);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ArrayTest {\n");
        
        sb.append("    arrayOfString: ").append(toIndentedString(arrayOfString)).append("\n");
        sb.append("    arrayArrayOfInteger: ").append(toIndentedString(arrayArrayOfInteger)).append("\n");
        sb.append("    arrayArrayOfModel: ").append(toIndentedString(arrayArrayOfModel)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     *
     * @param o Object to be converted to indented string
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}

