/*
 * generateAliasAsModel
 * This spec is mainly for testing generateAliasAsModel and
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.AdditionalPropertiesClass;
import org.openapitools.client.model.AdditionalPropertiesClassRef;
import org.openapitools.client.model.MixedPropertiesAndAdditionalPropertiesClass;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * AdditionalProperties
 */
@JsonPropertyOrder({
  AdditionalProperties.JSON_PROPERTY_ADDITIONAL_PROPERTIES_CLASS_REF,
  AdditionalProperties.JSON_PROPERTY_ADDITIONAL_PROPERTIES_CLASS,
  AdditionalProperties.JSON_PROPERTY_MIXED
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0-SNAPSHOT")
public class AdditionalProperties {
  public static final String JSON_PROPERTY_ADDITIONAL_PROPERTIES_CLASS_REF = "additionalPropertiesClassRef";
  @jakarta.annotation.Nullable
  private AdditionalPropertiesClassRef additionalPropertiesClassRef;

  public static final String JSON_PROPERTY_ADDITIONAL_PROPERTIES_CLASS = "additionalPropertiesClass";
  @jakarta.annotation.Nullable
  private AdditionalPropertiesClass additionalPropertiesClass;

  public static final String JSON_PROPERTY_MIXED = "mixed";
  @jakarta.annotation.Nullable
  private MixedPropertiesAndAdditionalPropertiesClass mixed;

  public AdditionalProperties() {
  }

  /**
   * Constructor with all args parameters
   */
  public AdditionalProperties(@JsonProperty(JSON_PROPERTY_ADDITIONAL_PROPERTIES_CLASS_REF) AdditionalPropertiesClassRef additionalPropertiesClassRef, @JsonProperty(JSON_PROPERTY_ADDITIONAL_PROPERTIES_CLASS) AdditionalPropertiesClass additionalPropertiesClass, @JsonProperty(JSON_PROPERTY_MIXED) MixedPropertiesAndAdditionalPropertiesClass mixed) {
    this.additionalPropertiesClassRef = additionalPropertiesClassRef;
    this.additionalPropertiesClass = additionalPropertiesClass;
    this.mixed = mixed;
  }

  public AdditionalProperties additionalPropertiesClassRef(@jakarta.annotation.Nullable AdditionalPropertiesClassRef additionalPropertiesClassRef) {
    
    this.additionalPropertiesClassRef = additionalPropertiesClassRef;
    return this;
  }

  /**
   * Get additionalPropertiesClassRef
   * @return additionalPropertiesClassRef
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDITIONAL_PROPERTIES_CLASS_REF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AdditionalPropertiesClassRef getAdditionalPropertiesClassRef() {
    return additionalPropertiesClassRef;
  }


  @JsonProperty(JSON_PROPERTY_ADDITIONAL_PROPERTIES_CLASS_REF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdditionalPropertiesClassRef(@jakarta.annotation.Nullable AdditionalPropertiesClassRef additionalPropertiesClassRef) {
    this.additionalPropertiesClassRef = additionalPropertiesClassRef;
  }

  public AdditionalProperties additionalPropertiesClass(@jakarta.annotation.Nullable AdditionalPropertiesClass additionalPropertiesClass) {
    
    this.additionalPropertiesClass = additionalPropertiesClass;
    return this;
  }

  /**
   * Get additionalPropertiesClass
   * @return additionalPropertiesClass
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDITIONAL_PROPERTIES_CLASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AdditionalPropertiesClass getAdditionalPropertiesClass() {
    return additionalPropertiesClass;
  }


  @JsonProperty(JSON_PROPERTY_ADDITIONAL_PROPERTIES_CLASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdditionalPropertiesClass(@jakarta.annotation.Nullable AdditionalPropertiesClass additionalPropertiesClass) {
    this.additionalPropertiesClass = additionalPropertiesClass;
  }

  public AdditionalProperties mixed(@jakarta.annotation.Nullable MixedPropertiesAndAdditionalPropertiesClass mixed) {
    
    this.mixed = mixed;
    return this;
  }

  /**
   * Get mixed
   * @return mixed
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MIXED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MixedPropertiesAndAdditionalPropertiesClass getMixed() {
    return mixed;
  }


  @JsonProperty(JSON_PROPERTY_MIXED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMixed(@jakarta.annotation.Nullable MixedPropertiesAndAdditionalPropertiesClass mixed) {
    this.mixed = mixed;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdditionalProperties additionalProperties = (AdditionalProperties) o;
    return Objects.equals(this.additionalPropertiesClassRef, additionalProperties.additionalPropertiesClassRef) &&
        Objects.equals(this.additionalPropertiesClass, additionalProperties.additionalPropertiesClass) &&
        Objects.equals(this.mixed, additionalProperties.mixed);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalPropertiesClassRef, additionalPropertiesClass, mixed);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdditionalProperties {\n");
    sb.append("    additionalPropertiesClassRef: ").append(toIndentedString(additionalPropertiesClassRef)).append("\n");
    sb.append("    additionalPropertiesClass: ").append(toIndentedString(additionalPropertiesClass)).append("\n");
    sb.append("    mixed: ").append(toIndentedString(mixed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

