/*
 * OpenAPI Petstore
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.LocalDate;
import org.threeten.bp.OffsetDateTime;
import com.fasterxml.jackson.dataformat.xml.annotation.*;
import javax.xml.bind.annotation.*;

/**
 * a model to test optional properties with server defaults
 */
@ApiModel(description = "a model to test optional properties with server defaults")

@XmlRootElement(name = "TypeHolderDefault")
@XmlAccessorType(XmlAccessType.FIELD)
@JacksonXmlRootElement(localName = "TypeHolderDefault")
public class TypeHolderDefault {
  @JsonProperty("string_item")
  @JacksonXmlProperty(localName = "string_item")
  @XmlElement(name = "string_item")
  private String stringItem = "what";

  @JsonProperty("number_item")
  @JacksonXmlProperty(localName = "number_item")
  @XmlElement(name = "number_item")
  private Float numberItem = 1.234f;

  @JsonProperty("integer_item")
  @JacksonXmlProperty(localName = "integer_item")
  @XmlElement(name = "integer_item")
  private Integer integerItem = -2;

  @JsonProperty("bool_item")
  @JacksonXmlProperty(localName = "bool_item")
  @XmlElement(name = "bool_item")
  private Boolean boolItem = true;

  @JsonProperty("date_item")
  @JacksonXmlProperty(localName = "date_item")
  @XmlElement(name = "date_item")
  private LocalDate dateItem;

  @JsonProperty("datetime_item")
  @JacksonXmlProperty(localName = "datetime_item")
  @XmlElement(name = "datetime_item")
  private OffsetDateTime datetimeItem;

  @JsonProperty("array_item")
  // Is a container wrapped=false
  // items.name=arrayItem items.baseName=arrayItem items.xmlName= items.xmlNamespace=
  // items.example= items.type=Integer
  @XmlElement(name = "arrayItem")
  private List<Integer> arrayItem = new ArrayList<Integer>();

  public TypeHolderDefault stringItem(String stringItem) {
    this.stringItem = stringItem;
    return this;
  }

   /**
   * Get stringItem
   * @return stringItem
  **/
  @ApiModelProperty(value = "")
  public String getStringItem() {
    return stringItem;
  }

  public void setStringItem(String stringItem) {
    this.stringItem = stringItem;
  }

  public TypeHolderDefault numberItem(Float numberItem) {
    this.numberItem = numberItem;
    return this;
  }

   /**
   * Get numberItem
   * @return numberItem
  **/
  @ApiModelProperty(value = "")
  public Float getNumberItem() {
    return numberItem;
  }

  public void setNumberItem(Float numberItem) {
    this.numberItem = numberItem;
  }

  public TypeHolderDefault integerItem(Integer integerItem) {
    this.integerItem = integerItem;
    return this;
  }

   /**
   * Get integerItem
   * @return integerItem
  **/
  @ApiModelProperty(value = "")
  public Integer getIntegerItem() {
    return integerItem;
  }

  public void setIntegerItem(Integer integerItem) {
    this.integerItem = integerItem;
  }

  public TypeHolderDefault boolItem(Boolean boolItem) {
    this.boolItem = boolItem;
    return this;
  }

   /**
   * Get boolItem
   * @return boolItem
  **/
  @ApiModelProperty(value = "")
  public Boolean getBoolItem() {
    return boolItem;
  }

  public void setBoolItem(Boolean boolItem) {
    this.boolItem = boolItem;
  }

  public TypeHolderDefault dateItem(LocalDate dateItem) {
    this.dateItem = dateItem;
    return this;
  }

   /**
   * Get dateItem
   * @return dateItem
  **/
  @ApiModelProperty(value = "")
  public LocalDate getDateItem() {
    return dateItem;
  }

  public void setDateItem(LocalDate dateItem) {
    this.dateItem = dateItem;
  }

  public TypeHolderDefault datetimeItem(OffsetDateTime datetimeItem) {
    this.datetimeItem = datetimeItem;
    return this;
  }

   /**
   * Get datetimeItem
   * @return datetimeItem
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getDatetimeItem() {
    return datetimeItem;
  }

  public void setDatetimeItem(OffsetDateTime datetimeItem) {
    this.datetimeItem = datetimeItem;
  }

  public TypeHolderDefault arrayItem(List<Integer> arrayItem) {
    this.arrayItem = arrayItem;
    return this;
  }

  public TypeHolderDefault addArrayItemItem(Integer arrayItemItem) {
    if (this.arrayItem == null) {
      this.arrayItem = new ArrayList<Integer>();
    }
    this.arrayItem.add(arrayItemItem);
    return this;
  }

   /**
   * Get arrayItem
   * @return arrayItem
  **/
  @ApiModelProperty(value = "")
  public List<Integer> getArrayItem() {
    return arrayItem;
  }

  public void setArrayItem(List<Integer> arrayItem) {
    this.arrayItem = arrayItem;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TypeHolderDefault typeHolderDefault = (TypeHolderDefault) o;
    return Objects.equals(this.stringItem, typeHolderDefault.stringItem) &&
        Objects.equals(this.numberItem, typeHolderDefault.numberItem) &&
        Objects.equals(this.integerItem, typeHolderDefault.integerItem) &&
        Objects.equals(this.boolItem, typeHolderDefault.boolItem) &&
        Objects.equals(this.dateItem, typeHolderDefault.dateItem) &&
        Objects.equals(this.datetimeItem, typeHolderDefault.datetimeItem) &&
        Objects.equals(this.arrayItem, typeHolderDefault.arrayItem);
  }

  @Override
  public int hashCode() {
    return Objects.hash(stringItem, numberItem, integerItem, boolItem, dateItem, datetimeItem, arrayItem);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TypeHolderDefault {\n");
    sb.append("    stringItem: ").append(toIndentedString(stringItem)).append("\n");
    sb.append("    numberItem: ").append(toIndentedString(numberItem)).append("\n");
    sb.append("    integerItem: ").append(toIndentedString(integerItem)).append("\n");
    sb.append("    boolItem: ").append(toIndentedString(boolItem)).append("\n");
    sb.append("    dateItem: ").append(toIndentedString(dateItem)).append("\n");
    sb.append("    datetimeItem: ").append(toIndentedString(datetimeItem)).append("\n");
    sb.append("    arrayItem: ").append(toIndentedString(arrayItem)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

