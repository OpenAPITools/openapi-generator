/*
 * OpenAPI Petstore
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client;

import java.util.Optional;
import java.util.List;

public class Context {

    private Optional<List<Tag>> tags = Optional.empty();
    private Optional<String> summary = Optional.empty();
    private Optional<String> notes = Optional.empty();
    private Optional<Boolean> isDeprecated = Optional.empty();

    public Optional<List<Tag>> getTags() {
        return tags;
    }

    public Context withTags(List<Tag> tags) {
        this.tags = Optional.ofNullable(tags);
        return this;
    }

    public Optional<String> getSummary() {
        return summary;
    }

    public Context withSummary(String summary) {
        this.summary = Optional.ofNullable(summary);
        return this;
    }

    public Optional<String> getNotes() {
        return notes;
    }

    public Context withNotes(String notes) {
        this.notes = Optional.ofNullable(notes);
        return this;
    }

    public Optional<Boolean> getIsDeprecated() {
        return isDeprecated;
    }

    public Context withIsDeprecated(boolean isDeprecated) {
        this.isDeprecated = Optional.of(isDeprecated);
        return this;
    }

    public static class Tag {
        private Optional<String> name = Optional.empty();
        private Optional<String> description = Optional.empty();


        public Optional<String> getName() {
            return name;
        }

        public Tag withName(String name) {
            this.name = Optional.ofNullable(name);
            return this;
        }

        public Optional<String> getDescription() {
            return description;
        }

        public Tag withDescription(String description) {
            this.description = Optional.ofNullable(description);
            return this;
        }
    }
}