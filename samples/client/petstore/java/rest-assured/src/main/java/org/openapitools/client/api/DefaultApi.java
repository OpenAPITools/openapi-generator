/*
 * OpenAPI Petstore
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import com.google.gson.reflect.TypeToken;
import org.openapitools.client.model.XmlItem;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import io.restassured.RestAssured;
import io.restassured.builder.RequestSpecBuilder;
import io.restassured.builder.ResponseSpecBuilder;
import io.restassured.http.Method;
import io.restassured.response.Response;
import io.swagger.annotations.*;

import java.lang.reflect.Type;
import java.util.function.Consumer;
import java.util.function.Function;
import java.util.function.Supplier;
import org.openapitools.client.JSON;

import static io.restassured.http.Method.*;

@Api(value = "Default")
public class DefaultApi {

    private RequestSpecBuilder reqSpec;

    private DefaultApi(RequestSpecBuilder reqSpec) {
        this.reqSpec = reqSpec;
    }

    public static DefaultApi default(RequestSpecBuilder reqSpec) {
        return new DefaultApi(reqSpec);
    }


    @ApiOperation(value = "creates an XmlItem",
            notes = "this route creates an XmlItem",
            nickname = "createXmlItem",
            tags = { "default" })
    @ApiResponses(value = { 
            @ApiResponse(code = 200, message = "successful operation")  })
    public CreateXmlItemOper createXmlItem() {
        return new CreateXmlItemOper(reqSpec);
    }

    /**
     * Customise request specification
     * @param consumer consumer
     * @return api
     */
    public DefaultApi reqSpec(Consumer<RequestSpecBuilder> consumer) {
        consumer.accept(reqSpec);
        return this;
    }

    /**
     * creates an XmlItem
     * this route creates an XmlItem
     *
     * @see #body XmlItem Body (required)
     */
    public static class CreateXmlItemOper {

        public static final Method REQ_METHOD = POST;
        public static final String REQ_URI = "/fake/create_xml_item";

        private RequestSpecBuilder reqSpec;
        private ResponseSpecBuilder respSpec;

        public CreateXmlItemOper(RequestSpecBuilder reqSpec) {
            this.reqSpec = reqSpec;
            reqSpec.setContentType("application/xml");
            reqSpec.setAccept("application/json");
            this.respSpec = new ResponseSpecBuilder();
        }

        /**
         * POST /fake/create_xml_item
         * @param handler handler
         * @param <T> type
         * @return type
         */
        public <T> T execute(Function<Response, T> handler) {
            return handler.apply(RestAssured.given().spec(reqSpec.build()).expect().spec(respSpec.build()).when().request(REQ_METHOD, REQ_URI));
        }

         /**
         * @param xmlItem (XmlItem) XmlItem Body (required)
         * @return operation
         */
        public CreateXmlItemOper body(XmlItem xmlItem) {
            reqSpec.setBody(xmlItem);
            return this;
        }

        /**
         * Customise request specification
         * @param consumer consumer
         * @return operation
         */
        public CreateXmlItemOper reqSpec(Consumer<RequestSpecBuilder> consumer) {
            consumer.accept(reqSpec);
            return this;
        }

        /**
         * Customise response specification
         * @param consumer consumer
         * @return operation
         */
        public CreateXmlItemOper respSpec(Consumer<ResponseSpecBuilder> consumer) {
            consumer.accept(respSpec);
            return this;
        }
    }
}
