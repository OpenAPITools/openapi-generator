# coding=utf-8

"""
    OpenAPI Petstore

    This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.  # noqa: E501

    OpenAPI spec version: 1.0.0
    Generated by: https://openapi-generator.tech
"""

from __future__ import (absolute_import, division, print_function)
__metaclass__ = type

from marshmallow import Schema, INCLUDE

__all__ = ['SchemaBase']


class SchemaBase(Schema):
    """
    Marshmallow schema settings

    NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech
    Do not edit the class manually.

    '__' suffix used on methods to prevent collissions with field names (which may end with _)
    """

    @property
    def __model__(self):
        """The Model Object that this Schema deserializes to."""
        raise NotImplementedError

    @post_load
    def make_object__(self, data):
        return self.__model__(**data)

    @post_dump
    def validate_on_serialize__(self, data):
        """
        :param dict data: dictionary of serialized data (uplink converts this to a json string)
        :return:
        """
        # NOTE: validate, unfortunately, does an entire load/serialize to run the validators
        # So, every dump will dump and then load (discarding the loaded value)
        self.validate(data)  # raises ValidationError
        return data

    class Meta:
        # Client models must be tolerant to the server adding new fields. The Zalando specs do a good job of explaining
        # why this is important in API extensibility: https://opensource.zalando.com/restful-api-guidelines/#108
        # So, tell marshmallow to silently include unknown fields.
        # https://marshmallow.readthedocs.io/en/3.0/quickstart.html#handling-unknown-fields
        unknown = INCLUDE
