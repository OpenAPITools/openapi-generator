# coding: utf-8

"""
    OpenAPI Petstore

    This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.  # noqa: E501

    OpenAPI spec version: 1.0.0
    Generated by: https://openapi-generator.tech
"""

from __future__ import (absolute_import, division, print_function)
__metaclass__ = type

# noinspection PyUnresolvedReferences
import re
# noinspection PyUnresolvedReferences
import six

import uplink
from uplink import returns  # decorators to declare return type
from uplink.arguments import *  # type hints for arguments
from uplink.decorators import *  # request decorators
from uplink.types import *  # type hints for return types

from petstore_api.api.consumer import BaseApiConsumer
from petstore_api.decorators import *  # http methods, security, media_type
from petstore_api.models.order import Order  # TODO: fix Schema import

__all__ = ['StoreApi']


class StoreApi(BaseApiConsumer):
    """
    Operations that work with store tag

    NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech
    Do not edit the class manually.
    """

    @security()
    @mime_type(
    )
    @returns
    @DELETE('/store/order/{orderId}', args={
    })
    def delete_order(
            self,
            order_id
    ):
        """
        Delete purchase order by ID  # noqa: E501

        For valid response try integer IDs with value < 1000. Anything above 1000 or nonintegers will generate API errors  # noqa: E501

        :param str order_id: ID of the order that needs to be deleted (required)
        :return: None
        """


    @security('api_key')
    @mime_type(
        accept=['application/json'],
    )
    @returns(dict(str, int))
    @GET('/store/inventory', args={
    })
    def get_inventory(
            self,
    ):
        """
        Returns pet inventories by status  # noqa: E501

        Returns a map of status codes to quantities  # noqa: E501

        :return: dict(str, int)
        """


    @security()
    @mime_type(
        accept=['application/xml', 'application/json'],
    )
    @returns(Order)
    @GET('/store/order/{orderId}', args={
    })
    def get_order_by_id(
            self,
            order_id
    ):
        """
        Find purchase order by ID  # noqa: E501

        For valid response try integer IDs with value <= 5 or > 10. Other values will generated exceptions  # noqa: E501

        :param int order_id: ID of pet that needs to be fetched (required)
        :return: Order
        """


    @security()
    @mime_type(
        accept=['application/xml', 'application/json'],
    )
    @returns(Order)
    @POST('/store/order', args={
        'body': Body
    })
    def place_order(
            self,
            body
    ):
        """
        Place an order for a pet  # noqa: E501


        :param Order body: order placed for purchasing the pet (required)
        :return: Order
        """

