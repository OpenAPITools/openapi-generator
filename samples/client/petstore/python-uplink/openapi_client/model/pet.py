# coding: utf-8

from __future__ import annotations

from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional, Union, Literal  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, validator, Field, Extra # noqa: F401
from openapi_client.model.category import Category
from openapi_client.model.tag import Tag


class Pet(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    Pet - a model defined in OpenAPI
        name: The name of this Pet. 
        photo_urls: The photo_urls of this Pet. 
        id: The id of this Pet [Optional].
        category: The category of this Pet [Optional].
        tags: The tags of this Pet [Optional].
        status: pet status in the store [Optional].
    """

    name: str
    photo_urls: List[str] = Field(..., alias="photoUrls")
    id: Optional[int] = None
    category: Optional[Category] = None
    tags: Optional[List[Tag]] = None
    status: Optional[Literal["available", "pending", "sold"]] = None

    def __init__(
        self,
        *,
        name: str,
        photo_urls: List[str],
        id: Optional[int] = None,
        category: Optional[Category] = None,
        tags: Optional[List[Tag]] = None,
        status: Optional[Literal["available", "pending", "sold"]] = None,
        **kwargs,
    ):
        super().__init__(
            id=id,
            category=category,
            name=name,
            photo_urls=photo_urls,
            tags=tags,
            status=status,
            **kwargs,
        ) 

Pet.update_forward_refs()