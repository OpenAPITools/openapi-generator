/**
 * OpenAPI Petstore
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.SingleRefType;




public class AllOfWithSingleRef  {
  
  private String username;

  private SingleRefType singleRefType;

 /**
   * Get username
   * @return username
  **/
  public String getUsername() {
    return username;
  }

  /**
    * Set username
  **/
  public void setUsername(String username) {
    this.username = username;
  }

  public AllOfWithSingleRef username(String username) {
    this.username = username;
    return this;
  }

 /**
   * Get singleRefType
   * @return singleRefType
  **/
  public SingleRefType getSingleRefType() {
    return singleRefType;
  }

  /**
    * Set singleRefType
  **/
  public void setSingleRefType(SingleRefType singleRefType) {
    this.singleRefType = singleRefType;
  }

  public AllOfWithSingleRef singleRefType(SingleRefType singleRefType) {
    this.singleRefType = singleRefType;
    return this;
  }


  /**
    * Create a string representation of this pojo.
  **/
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AllOfWithSingleRef {\n");
    
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    singleRefType: ").append(toIndentedString(singleRefType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

