/*
 * OpenAPI Petstore
 *
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing StoreApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class StoreApiTests : IDisposable
    {
        private StoreApi instance;

        public StoreApiTests()
        {
            instance = new StoreApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of StoreApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' StoreApi
            //Assert.IsType<StoreApi>(instance);
        }

        /// <summary>
        /// Test DeleteOrder
        /// </summary>
        [Fact]
        public void DeleteOrderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string orderId = null;
            //instance.DeleteOrder(orderId);
        }

        /// <summary>
        /// Test GetInventory
        /// </summary>
        [Fact]
        public void GetInventoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetInventory();
            //Assert.IsType<Dictionary<string, int>>(response);
        }

        /// <summary>
        /// Test GetOrderById
        /// </summary>
        [Fact]
        public void GetOrderByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long orderId = null;
            //var response = instance.GetOrderById(orderId);
            //Assert.IsType<Order>(response);
        }

        /// <summary>
        /// Test PlaceOrder
        /// </summary>
        [Fact]
        public void PlaceOrderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Order order = null;
            //var response = instance.PlaceOrder(order);
            //Assert.IsType<Order>(response);
        }
    }
}
