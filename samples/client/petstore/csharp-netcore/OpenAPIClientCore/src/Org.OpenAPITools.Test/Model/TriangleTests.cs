/*
 * OpenAPI Petstore
 *
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing Triangle
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class TriangleTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Triangle
        //private Triangle instance;

        public TriangleTests()
        {
            // TODO uncomment below to create an instance of Triangle
            //instance = new Triangle();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Triangle
        /// </summary>
        [Fact]
        public void TriangleInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" Triangle
            //Assert.IsInstanceOfType<Triangle> (instance, "variable 'instance' is a Triangle");
        }


        /// <summary>
        /// Test the property 'ShapeType'
        /// </summary>
        [Fact]
        public void ShapeTypeTest()
        {
            // TODO unit test for the property 'ShapeType'
        }
        /// <summary>
        /// Test the property 'TriangleType'
        /// </summary>
        [Fact]
        public void TriangleTypeTest()
        {
            // TODO unit test for the property 'TriangleType'
        }

    }

}
