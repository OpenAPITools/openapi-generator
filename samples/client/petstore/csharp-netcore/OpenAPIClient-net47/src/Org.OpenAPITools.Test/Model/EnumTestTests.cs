/*
 * OpenAPI Petstore
 *
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing EnumTest
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class EnumTestTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for EnumTest
        //private EnumTest instance;

        public EnumTestTests()
        {
            // TODO uncomment below to create an instance of EnumTest
            //instance = new EnumTest();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of EnumTest
        /// </summary>
        [Fact]
        public void EnumTestInstanceTest()
        {
            // TODO uncomment below to test "IsType" EnumTest
            //Assert.IsType<EnumTest>(instance);
        }


        /// <summary>
        /// Test the property 'EnumString'
        /// </summary>
        [Fact]
        public void EnumStringTest()
        {
            // TODO unit test for the property 'EnumString'
        }
        /// <summary>
        /// Test the property 'EnumStringRequired'
        /// </summary>
        [Fact]
        public void EnumStringRequiredTest()
        {
            // TODO unit test for the property 'EnumStringRequired'
        }
        /// <summary>
        /// Test the property 'EnumInteger'
        /// </summary>
        [Fact]
        public void EnumIntegerTest()
        {
            // TODO unit test for the property 'EnumInteger'
        }
        /// <summary>
        /// Test the property 'EnumNumber'
        /// </summary>
        [Fact]
        public void EnumNumberTest()
        {
            // TODO unit test for the property 'EnumNumber'
        }
        /// <summary>
        /// Test the property 'OuterEnum'
        /// </summary>
        [Fact]
        public void OuterEnumTest()
        {
            // TODO unit test for the property 'OuterEnum'
        }
        /// <summary>
        /// Test the property 'OuterEnumInteger'
        /// </summary>
        [Fact]
        public void OuterEnumIntegerTest()
        {
            // TODO unit test for the property 'OuterEnumInteger'
        }
        /// <summary>
        /// Test the property 'OuterEnumDefaultValue'
        /// </summary>
        [Fact]
        public void OuterEnumDefaultValueTest()
        {
            // TODO unit test for the property 'OuterEnumDefaultValue'
        }
        /// <summary>
        /// Test the property 'OuterEnumIntegerDefaultValue'
        /// </summary>
        [Fact]
        public void OuterEnumIntegerDefaultValueTest()
        {
            // TODO unit test for the property 'OuterEnumIntegerDefaultValue'
        }

    }

}
