/*
 * OpenAPI Petstore
 *
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// UniqueItemArrayTesting : Test handling of enum array with unique items
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UniqueItemArrayTesting {
    /// Helper object for the unique item array test
    #[serde(rename = "unique_item_array")]
    pub unique_item_array: std::collections::HashSet<UniqueItemArray>,
}

impl UniqueItemArrayTesting {
    /// Test handling of enum array with unique items
    pub fn new(unique_item_array: std::collections::HashSet<UniqueItemArray>) -> UniqueItemArrayTesting {
        UniqueItemArrayTesting {
            unique_item_array,
        }
    }
}
/// Helper object for the unique item array test
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum UniqueItemArray {
    #[serde(rename = "unique_item_1")]
    Variant1,
    #[serde(rename = "unique_item_2")]
    Variant2,
    #[serde(rename = "unique_item_3")]
    Variant3,
}

impl Default for UniqueItemArray {
    fn default() -> UniqueItemArray {
        Self::Variant1
    }
}

