/*
 * File Response Test
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use async_trait::async_trait;
#[allow(unused_imports)]
use std::option::Option;
use std::sync::Arc;

use hyper;
use serde_json;

use super::{Error, configuration};
use super::request as __internal_request;

pub struct DefaultApiClient<C: hyper::client::connect::Connect> {
    configuration: Arc<configuration::Configuration<C>>,
}

impl<C: hyper::client::connect::Connect + 'static> DefaultApiClient<C> {
    pub fn new(configuration: Arc<configuration::Configuration<C>>) -> DefaultApiClient<C> {
        DefaultApiClient {
            configuration,
        }
    }
}

#[async_trait]
pub trait DefaultApi {
    async fn fileresponsetest(&self, ) -> Result<std::path::PathBuf, Error<serde_json::Value>>;
}

#[async_trait]
impl<C: hyper::client::connect::Connect + Clone + Send + Sync + 'static> DefaultApi for DefaultApiClient<C> {
    async fn fileresponsetest(&self, ) -> Result<std::path::PathBuf, Error<serde_json::Value>> {
        let mut req = __internal_request::Request::new(hyper::Method::GET, "/tests/fileResponse".to_string())
        ;

        req.execute(Arc::clone(&self.configuration)).await
    }

}
