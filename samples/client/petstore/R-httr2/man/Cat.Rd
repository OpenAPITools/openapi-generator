% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cat.R
\docType{class}
\name{Cat}
\alias{Cat}
\title{Cat}
\format{
An \code{R6Class} generator object
}
\description{
Cat Class
}
\details{
OpenAPI Petstore

This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.

The version of the OpenAPI document: 1.0.0
Generated by: https://openapi-generator.tech
}
\section{Super class}{
\code{\link[petstore:Animal]{petstore::Animal}} -> \code{Cat}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{className}}{character}

\item{\code{color}}{character [optional]}

\item{\code{declawed}}{character [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Cat-new}{\code{Cat$new()}}
\item \href{#method-Cat-toJSON}{\code{Cat$toJSON()}}
\item \href{#method-Cat-fromJSON}{\code{Cat$fromJSON()}}
\item \href{#method-Cat-toJSONString}{\code{Cat$toJSONString()}}
\item \href{#method-Cat-fromJSONString}{\code{Cat$fromJSONString()}}
\item \href{#method-Cat-validateJSON}{\code{Cat$validateJSON()}}
\item \href{#method-Cat-toString}{\code{Cat$toString()}}
\item \href{#method-Cat-clone}{\code{Cat$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Cat-new"></a>}}
\if{latex}{\out{\hypertarget{method-Cat-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new Cat class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Cat$new(className, color = "red", declawed = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{className}}{className}

\item{\code{color}}{color. Default to 'red'.}

\item{\code{declawed}}{declawed}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Cat-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Cat-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Cat$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Cat in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Cat-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Cat-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of Cat
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Cat$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Cat
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Cat-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Cat-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Cat$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Cat in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Cat-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Cat-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of Cat
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Cat$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Cat
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Cat-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Cat-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to Cat and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Cat$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Cat-toString"></a>}}
\if{latex}{\out{\hypertarget{method-Cat-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Cat$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of Cat
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Cat-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Cat-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Cat$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
