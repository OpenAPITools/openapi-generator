% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pet.R
\docType{class}
\name{Pet}
\alias{Pet}
\title{Pet}
\format{
An \code{R6Class} generator object
}
\description{
Pet Class
}
\details{
OpenAPI Petstore

This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.

The version of the OpenAPI document: 1.0.0
Generated by: https://openapi-generator.tech
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{id}}{integer [optional]}

\item{\code{category}}{\link{Category} [optional]}

\item{\code{name}}{character}

\item{\code{photoUrls}}{list( character )}

\item{\code{tags}}{list( \link{Tag} ) [optional]}

\item{\code{status}}{character [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Pet-new}{\code{Pet$new()}}
\item \href{#method-Pet-toJSON}{\code{Pet$toJSON()}}
\item \href{#method-Pet-fromJSON}{\code{Pet$fromJSON()}}
\item \href{#method-Pet-toJSONString}{\code{Pet$toJSONString()}}
\item \href{#method-Pet-fromJSONString}{\code{Pet$fromJSONString()}}
\item \href{#method-Pet-validateJSON}{\code{Pet$validateJSON()}}
\item \href{#method-Pet-toString}{\code{Pet$toString()}}
\item \href{#method-Pet-clone}{\code{Pet$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Pet-new"></a>}}
\if{latex}{\out{\hypertarget{method-Pet-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new Pet class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Pet$new(
  name,
  photoUrls,
  id = NULL,
  category = NULL,
  tags = NULL,
  status = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{name}

\item{\code{photoUrls}}{photoUrls}

\item{\code{id}}{id}

\item{\code{category}}{category}

\item{\code{tags}}{tags}

\item{\code{status}}{pet status in the store}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Pet-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Pet-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Pet$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Pet in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Pet-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Pet-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of Pet
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Pet$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Pet
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Pet-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Pet-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Pet$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Pet in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Pet-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Pet-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of Pet
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Pet$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Pet
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Pet-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Pet-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to Pet and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Pet$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Pet-toString"></a>}}
\if{latex}{\out{\hypertarget{method-Pet-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Pet$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of Pet
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Pet-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Pet-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Pet$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
