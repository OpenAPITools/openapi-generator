=begin comment

OpenAPI Petstore

This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech

=end comment

=cut

#
# NOTE: This class is auto generated by OpenAPI Generator
# Please update the test cases below to test the API endpoints.
# Ref: https://openapi-generator.tech
#
use Test::More tests => 1; #TODO update number of test cases
use Test::Exception;

use lib 'lib';
use strict;
use warnings;

use_ok('WWW::OpenAPIClient::FakeApi');

my $api = WWW::OpenAPIClient::FakeApi->new();
isa_ok($api, 'WWW::OpenAPIClient::FakeApi');

#
# fake_health_get test
#
# uncomment below and update the test
#my $fake_health_get_result = $api->fake_health_get();

#
# fake_http_signature_test test
#
# uncomment below and update the test
#my $fake_http_signature_test_pet = undef; # replace NULL with a proper value
#my $fake_http_signature_test_query_1 = undef; # replace NULL with a proper value
#my $fake_http_signature_test_header_1 = undef; # replace NULL with a proper value
#my $fake_http_signature_test_result = $api->fake_http_signature_test(pet => $fake_http_signature_test_pet, query_1 => $fake_http_signature_test_query_1, header_1 => $fake_http_signature_test_header_1);

#
# fake_outer_boolean_serialize test
#
# uncomment below and update the test
#my $fake_outer_boolean_serialize_body = undef; # replace NULL with a proper value
#my $fake_outer_boolean_serialize_result = $api->fake_outer_boolean_serialize(body => $fake_outer_boolean_serialize_body);

#
# fake_outer_composite_serialize test
#
# uncomment below and update the test
#my $fake_outer_composite_serialize_outer_composite = undef; # replace NULL with a proper value
#my $fake_outer_composite_serialize_result = $api->fake_outer_composite_serialize(outer_composite => $fake_outer_composite_serialize_outer_composite);

#
# fake_outer_number_serialize test
#
# uncomment below and update the test
#my $fake_outer_number_serialize_body = undef; # replace NULL with a proper value
#my $fake_outer_number_serialize_result = $api->fake_outer_number_serialize(body => $fake_outer_number_serialize_body);

#
# fake_outer_string_serialize test
#
# uncomment below and update the test
#my $fake_outer_string_serialize_body = undef; # replace NULL with a proper value
#my $fake_outer_string_serialize_result = $api->fake_outer_string_serialize(body => $fake_outer_string_serialize_body);

#
# fake_property_enum_integer_serialize test
#
# uncomment below and update the test
#my $fake_property_enum_integer_serialize_outer_object_with_enum_property = undef; # replace NULL with a proper value
#my $fake_property_enum_integer_serialize_result = $api->fake_property_enum_integer_serialize(outer_object_with_enum_property => $fake_property_enum_integer_serialize_outer_object_with_enum_property);

#
# test_body_with_file_schema test
#
# uncomment below and update the test
#my $test_body_with_file_schema_file_schema_test_class = undef; # replace NULL with a proper value
#my $test_body_with_file_schema_result = $api->test_body_with_file_schema(file_schema_test_class => $test_body_with_file_schema_file_schema_test_class);

#
# test_body_with_query_params test
#
# uncomment below and update the test
#my $test_body_with_query_params_query = undef; # replace NULL with a proper value
#my $test_body_with_query_params_user = undef; # replace NULL with a proper value
#my $test_body_with_query_params_result = $api->test_body_with_query_params(query => $test_body_with_query_params_query, user => $test_body_with_query_params_user);

#
# test_client_model test
#
# uncomment below and update the test
#my $test_client_model_client = undef; # replace NULL with a proper value
#my $test_client_model_result = $api->test_client_model(client => $test_client_model_client);

#
# test_endpoint_parameters test
#
# uncomment below and update the test
#my $test_endpoint_parameters_number = undef; # replace NULL with a proper value
#my $test_endpoint_parameters_double = undef; # replace NULL with a proper value
#my $test_endpoint_parameters_pattern_without_delimiter = undef; # replace NULL with a proper value
#my $test_endpoint_parameters_byte = undef; # replace NULL with a proper value
#my $test_endpoint_parameters_integer = undef; # replace NULL with a proper value
#my $test_endpoint_parameters_int32 = undef; # replace NULL with a proper value
#my $test_endpoint_parameters_int64 = undef; # replace NULL with a proper value
#my $test_endpoint_parameters_float = undef; # replace NULL with a proper value
#my $test_endpoint_parameters_string = undef; # replace NULL with a proper value
#my $test_endpoint_parameters_binary = undef; # replace NULL with a proper value
#my $test_endpoint_parameters_date = undef; # replace NULL with a proper value
#my $test_endpoint_parameters_date_time = undef; # replace NULL with a proper value
#my $test_endpoint_parameters_password = undef; # replace NULL with a proper value
#my $test_endpoint_parameters_callback = undef; # replace NULL with a proper value
#my $test_endpoint_parameters_result = $api->test_endpoint_parameters(number => $test_endpoint_parameters_number, double => $test_endpoint_parameters_double, pattern_without_delimiter => $test_endpoint_parameters_pattern_without_delimiter, byte => $test_endpoint_parameters_byte, integer => $test_endpoint_parameters_integer, int32 => $test_endpoint_parameters_int32, int64 => $test_endpoint_parameters_int64, float => $test_endpoint_parameters_float, string => $test_endpoint_parameters_string, binary => $test_endpoint_parameters_binary, date => $test_endpoint_parameters_date, date_time => $test_endpoint_parameters_date_time, password => $test_endpoint_parameters_password, callback => $test_endpoint_parameters_callback);

#
# test_enum_parameters test
#
# uncomment below and update the test
#my $test_enum_parameters_enum_header_string_array = undef; # replace NULL with a proper value
#my $test_enum_parameters_enum_header_string = undef; # replace NULL with a proper value
#my $test_enum_parameters_enum_query_string_array = undef; # replace NULL with a proper value
#my $test_enum_parameters_enum_query_string = undef; # replace NULL with a proper value
#my $test_enum_parameters_enum_query_integer = undef; # replace NULL with a proper value
#my $test_enum_parameters_enum_query_double = undef; # replace NULL with a proper value
#my $test_enum_parameters_enum_form_string_array = undef; # replace NULL with a proper value
#my $test_enum_parameters_enum_form_string = undef; # replace NULL with a proper value
#my $test_enum_parameters_result = $api->test_enum_parameters(enum_header_string_array => $test_enum_parameters_enum_header_string_array, enum_header_string => $test_enum_parameters_enum_header_string, enum_query_string_array => $test_enum_parameters_enum_query_string_array, enum_query_string => $test_enum_parameters_enum_query_string, enum_query_integer => $test_enum_parameters_enum_query_integer, enum_query_double => $test_enum_parameters_enum_query_double, enum_form_string_array => $test_enum_parameters_enum_form_string_array, enum_form_string => $test_enum_parameters_enum_form_string);

#
# test_group_parameters test
#
# uncomment below and update the test
#my $test_group_parameters_required_string_group = undef; # replace NULL with a proper value
#my $test_group_parameters_required_boolean_group = undef; # replace NULL with a proper value
#my $test_group_parameters_required_int64_group = undef; # replace NULL with a proper value
#my $test_group_parameters_string_group = undef; # replace NULL with a proper value
#my $test_group_parameters_boolean_group = undef; # replace NULL with a proper value
#my $test_group_parameters_int64_group = undef; # replace NULL with a proper value
#my $test_group_parameters_result = $api->test_group_parameters(required_string_group => $test_group_parameters_required_string_group, required_boolean_group => $test_group_parameters_required_boolean_group, required_int64_group => $test_group_parameters_required_int64_group, string_group => $test_group_parameters_string_group, boolean_group => $test_group_parameters_boolean_group, int64_group => $test_group_parameters_int64_group);

#
# test_inline_additional_properties test
#
# uncomment below and update the test
#my $test_inline_additional_properties_request_body = undef; # replace NULL with a proper value
#my $test_inline_additional_properties_result = $api->test_inline_additional_properties(request_body => $test_inline_additional_properties_request_body);

#
# test_json_form_data test
#
# uncomment below and update the test
#my $test_json_form_data_param = undef; # replace NULL with a proper value
#my $test_json_form_data_param2 = undef; # replace NULL with a proper value
#my $test_json_form_data_result = $api->test_json_form_data(param => $test_json_form_data_param, param2 => $test_json_form_data_param2);

#
# test_query_parameter_collection_format test
#
# uncomment below and update the test
#my $test_query_parameter_collection_format_pipe = undef; # replace NULL with a proper value
#my $test_query_parameter_collection_format_ioutil = undef; # replace NULL with a proper value
#my $test_query_parameter_collection_format_http = undef; # replace NULL with a proper value
#my $test_query_parameter_collection_format_url = undef; # replace NULL with a proper value
#my $test_query_parameter_collection_format_context = undef; # replace NULL with a proper value
#my $test_query_parameter_collection_format_result = $api->test_query_parameter_collection_format(pipe => $test_query_parameter_collection_format_pipe, ioutil => $test_query_parameter_collection_format_ioutil, http => $test_query_parameter_collection_format_http, url => $test_query_parameter_collection_format_url, context => $test_query_parameter_collection_format_context);

