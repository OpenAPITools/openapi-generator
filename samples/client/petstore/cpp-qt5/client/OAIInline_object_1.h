/**
 * OpenAPI Petstore
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInline_object_1.h
 *
 * 
 */

#ifndef OAIInline_object_1_H
#define OAIInline_object_1_H

#include <QJsonObject>


#include "OAIHttpRequest.h"
#include <QString>

#include "OAIObject.h"
#include "OAIEnum.h"

namespace OpenAPI {

class OAIInline_object_1: public OAIObject {
public:
    OAIInline_object_1();
    OAIInline_object_1(QString json);
    ~OAIInline_object_1() override;

    QString asJson () const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    
    QString getAdditionalMetadata() const;
    void setAdditionalMetadata(const QString &additional_metadata);

    
    OAIHttpRequestInputFileElement* getFile() const;
    void setFile(const OAIHttpRequestInputFileElement* &file);

    

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void init();
    
    QString additional_metadata;
    bool m_additional_metadata_isSet;
    bool m_additional_metadata_isValid;
    
    OAIHttpRequestInputFileElement* file;
    bool m_file_isSet;
    bool m_file_isValid;
    
    };

}

Q_DECLARE_METATYPE(OpenAPI::OAIInline_object_1)

#endif // OAIInline_object_1_H
