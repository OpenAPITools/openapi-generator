/**
 * OpenAPI Petstore
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIInline_object_1.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIInline_object_1::OAIInline_object_1(QString json) {
    this->init();
    this->fromJson(json);
}

OAIInline_object_1::OAIInline_object_1() {
    this->init();
}

OAIInline_object_1::~OAIInline_object_1() {

}

void
OAIInline_object_1::init() {
    
    m_additional_metadata_isSet = false;
    m_additional_metadata_isValid = false;
    
    m_file_isSet = false;
    m_file_isValid = false;
    }

void
OAIInline_object_1::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIInline_object_1::fromJsonObject(QJsonObject json) {
    
    m_additional_metadata_isValid = ::OpenAPI::fromJsonValue(additional_metadata, json[QString("additionalMetadata")]);
    
    
    m_file_isValid = ::OpenAPI::fromJsonValue(file, json[QString("file")]);
    
    
}

QString
OAIInline_object_1::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIInline_object_1::asJsonObject() const {
    QJsonObject obj;
	if(m_additional_metadata_isSet){
        obj.insert(QString("additionalMetadata"), ::OpenAPI::toJsonValue(additional_metadata));
    }
	if(file.isSet()){
        obj.insert(QString("file"), ::OpenAPI::toJsonValue(file));
    }
    return obj;
}


QString
OAIInline_object_1::getAdditionalMetadata() const {
    return additional_metadata;
}
void
OAIInline_object_1::setAdditionalMetadata(const QString &additional_metadata) {
    this->additional_metadata = additional_metadata;
    this->m_additional_metadata_isSet = true;
}


OAIHttpRequestInputFileElement*
OAIInline_object_1::getFile() const {
    return file;
}
void
OAIInline_object_1::setFile(const OAIHttpRequestInputFileElement* &file) {
    this->file = file;
    this->m_file_isSet = true;
}

bool
OAIInline_object_1::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(m_additional_metadata_isSet){ isObjectUpdated = true; break;}
    
        if(file.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

bool
OAIInline_object_1::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

}

