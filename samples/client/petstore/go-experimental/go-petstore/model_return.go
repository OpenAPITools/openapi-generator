/*
 * OpenAPI Petstore
 *
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package petstore

import (
	"bytes"
	"encoding/json"
)

// Return Model for testing reserved words
type Return struct {
	Return *int32 `json:"return,omitempty"`
}

// NewReturn instantiates a new Return object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReturn() *Return {
    this := Return{}
    return &this
}

// NewReturnWithDefaults instantiates a new Return object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReturnWithDefaults() *Return {
    this := Return{}
    return &this
}

// GetReturn returns the Return field value if set, zero value otherwise.
func (o *Return) GetReturn() int32 {
	if o == nil || o.Return == nil {
		var ret int32
		return ret
	}
	return *o.Return
}

// GetReturnOk returns a tuple with the Return field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Return) GetReturnOk() (int32, bool) {
	if o == nil || o.Return == nil {
		var ret int32
		return ret, false
	}
	return *o.Return, true
}

// HasReturn returns a boolean if a field has been set.
func (o *Return) HasReturn() bool {
	if o != nil && o.Return != nil {
		return true
	}

	return false
}

// SetReturn gets a reference to the given int32 and assigns it to the Return field.
func (o *Return) SetReturn(v int32) {
	o.Return = &v
}

type NullableReturn struct {
	Value Return
	ExplicitNull bool
}

func (v NullableReturn) MarshalJSON() ([]byte, error) {
    switch {
    case v.ExplicitNull:
        return []byte("null"), nil
    default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableReturn) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
