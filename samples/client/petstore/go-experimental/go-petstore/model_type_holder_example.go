/*
 * OpenAPI Petstore
 *
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package petstore

import (
	"encoding/json"
)

// TypeHolderExample struct for TypeHolderExample
type TypeHolderExample struct {
	StringItem string `json:"string_item"`
	NumberItem float32 `json:"number_item"`
	FloatItem float32 `json:"float_item"`
	IntegerItem int32 `json:"integer_item"`
	BoolItem bool `json:"bool_item"`
	ArrayItem []int32 `json:"array_item"`
}

// NewTypeHolderExample instantiates a new TypeHolderExample object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTypeHolderExample(stringItem string, numberItem float32, floatItem float32, integerItem int32, boolItem bool, arrayItem []int32, ) *TypeHolderExample {
    this := TypeHolderExample{}
    this.StringItem = stringItem
    this.NumberItem = numberItem
    this.FloatItem = floatItem
    this.IntegerItem = integerItem
    this.BoolItem = boolItem
    this.ArrayItem = arrayItem
    return &this
}

// NewTypeHolderExampleWithDefaults instantiates a new TypeHolderExample object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTypeHolderExampleWithDefaults() *TypeHolderExample {
    this := TypeHolderExample{}
    return &this
}

// GetStringItem returns the StringItem field value
func (o *TypeHolderExample) GetStringItem() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StringItem
}

// SetStringItem sets field value
func (o *TypeHolderExample) SetStringItem(v string) {
	o.StringItem = v
}

// GetNumberItem returns the NumberItem field value
func (o *TypeHolderExample) GetNumberItem() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.NumberItem
}

// SetNumberItem sets field value
func (o *TypeHolderExample) SetNumberItem(v float32) {
	o.NumberItem = v
}

// GetFloatItem returns the FloatItem field value
func (o *TypeHolderExample) GetFloatItem() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.FloatItem
}

// SetFloatItem sets field value
func (o *TypeHolderExample) SetFloatItem(v float32) {
	o.FloatItem = v
}

// GetIntegerItem returns the IntegerItem field value
func (o *TypeHolderExample) GetIntegerItem() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IntegerItem
}

// SetIntegerItem sets field value
func (o *TypeHolderExample) SetIntegerItem(v int32) {
	o.IntegerItem = v
}

// GetBoolItem returns the BoolItem field value
func (o *TypeHolderExample) GetBoolItem() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BoolItem
}

// SetBoolItem sets field value
func (o *TypeHolderExample) SetBoolItem(v bool) {
	o.BoolItem = v
}

// GetArrayItem returns the ArrayItem field value
func (o *TypeHolderExample) GetArrayItem() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.ArrayItem
}

// SetArrayItem sets field value
func (o *TypeHolderExample) SetArrayItem(v []int32) {
	o.ArrayItem = v
}

func (o TypeHolderExample) MarshalJSON() ([]byte, error) {
    toSerialize := map[string]interface{}{}
    if true {
        toSerialize["string_item"] = o.StringItem
    }
    if true {
        toSerialize["number_item"] = o.NumberItem
    }
    if true {
        toSerialize["float_item"] = o.FloatItem
    }
    if true {
        toSerialize["integer_item"] = o.IntegerItem
    }
    if true {
        toSerialize["bool_item"] = o.BoolItem
    }
    if true {
        toSerialize["array_item"] = o.ArrayItem
    }
    return json.Marshal(toSerialize)
}

type NullableTypeHolderExample struct {
	value *TypeHolderExample
	isSet bool
}

func (v NullableTypeHolderExample) Get() *TypeHolderExample {
    return v.value
}

func (v NullableTypeHolderExample) Set(val *TypeHolderExample) {
    v.value = val
    v.isSet = true
}

func (v NullableTypeHolderExample) IsSet() bool {
    return v.isSet
}

func (v NullableTypeHolderExample) Unset() {
    v.value = nil
    v.isSet = false
}

func NewNullableTypeHolderExample(val *TypeHolderExample) *NullableTypeHolderExample {
    return &NullableTypeHolderExample{value: val, isSet: true}
}

func (v NullableTypeHolderExample) MarshalJSON() ([]byte, error) {
    return json.Marshal(v.value)
}

func (v *NullableTypeHolderExample) UnmarshalJSON(src []byte) error {
    v.isSet = true
	return json.Unmarshal(src, &v.value)
}
