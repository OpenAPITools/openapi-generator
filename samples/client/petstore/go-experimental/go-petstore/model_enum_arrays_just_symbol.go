/*
 * OpenAPI Petstore
 *
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package petstore

import (
	"encoding/json"
	"fmt"
)

// EnumArraysJustSymbol the model 'EnumArraysJustSymbol'
type EnumArraysJustSymbol string

// List of EnumArraysJustSymbol
const (
	ENUM_ARRAYS_JUST_SYMBOL_GREATER_THAN_OR_EQUAL_TO EnumArraysJustSymbol = ">="
	ENUM_ARRAYS_JUST_SYMBOL_DOLLAR EnumArraysJustSymbol = "$"
)

func (v *EnumArraysJustSymbol) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumArraysJustSymbol(value)
	for _, existing := range []EnumArraysJustSymbol{ ">=", "$",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumArraysJustSymbol", *v)
}

// Ptr returns reference to EnumArraysJustSymbol value
func (v EnumArraysJustSymbol) Ptr() *EnumArraysJustSymbol {
	return &v
}

type NullableEnumArraysJustSymbol struct {
	value *EnumArraysJustSymbol
	isSet bool
}

func (v NullableEnumArraysJustSymbol) Get() *EnumArraysJustSymbol {
	return v.value
}

func (v *NullableEnumArraysJustSymbol) Set(val *EnumArraysJustSymbol) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumArraysJustSymbol) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumArraysJustSymbol) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumArraysJustSymbol(val *EnumArraysJustSymbol) *NullableEnumArraysJustSymbol {
	return &NullableEnumArraysJustSymbol{value: val, isSet: true}
}

func (v NullableEnumArraysJustSymbol) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumArraysJustSymbol) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

