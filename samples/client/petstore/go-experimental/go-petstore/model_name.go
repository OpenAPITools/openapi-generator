/*
 * OpenAPI Petstore
 *
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package petstore
// Name Model for testing model name same as property name
type Name struct {
	Name int32 `json:"name"`
	SnakeCase *int32 `json:"snake_case,omitempty"`
	Property *string `json:"property,omitempty"`
	Var123Number *int32 `json:"123Number,omitempty"`
}

// GetSnakeCase returns the SnakeCase field if non-nil, zero value otherwise.
func (o *Name) GetSnakeCase() int32 {
	if o == nil || o.SnakeCase == nil {
		var ret int32
		return ret
	}
	return *o.SnakeCase
}

// GetSnakeCaseOk returns a tuple with the SnakeCase field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Name) GetSnakeCaseOk() (int32, bool) {
	if o == nil || o.SnakeCase == nil {
		var ret int32
		return ret, false
	}
	return *o.SnakeCase, true
}

// HasSnakeCase returns a boolean if a field has been set.
func (o *Name) HasSnakeCase() bool {
	if o != nil && o.SnakeCase != nil {
		return true
	}

	return false
}

// SetSnakeCase gets a reference to the given int32 and assigns it to the SnakeCase field.
func (o *Name) SetSnakeCase(v int32) {
	o.SnakeCase = &v
}
// GetProperty returns the Property field if non-nil, zero value otherwise.
func (o *Name) GetProperty() string {
	if o == nil || o.Property == nil {
		var ret string
		return ret
	}
	return *o.Property
}

// GetPropertyOk returns a tuple with the Property field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Name) GetPropertyOk() (string, bool) {
	if o == nil || o.Property == nil {
		var ret string
		return ret, false
	}
	return *o.Property, true
}

// HasProperty returns a boolean if a field has been set.
func (o *Name) HasProperty() bool {
	if o != nil && o.Property != nil {
		return true
	}

	return false
}

// SetProperty gets a reference to the given string and assigns it to the Property field.
func (o *Name) SetProperty(v string) {
	o.Property = &v
}
// GetVar123Number returns the Var123Number field if non-nil, zero value otherwise.
func (o *Name) GetVar123Number() int32 {
	if o == nil || o.Var123Number == nil {
		var ret int32
		return ret
	}
	return *o.Var123Number
}

// GetVar123NumberOk returns a tuple with the Var123Number field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Name) GetVar123NumberOk() (int32, bool) {
	if o == nil || o.Var123Number == nil {
		var ret int32
		return ret, false
	}
	return *o.Var123Number, true
}

// HasVar123Number returns a boolean if a field has been set.
func (o *Name) HasVar123Number() bool {
	if o != nil && o.Var123Number != nil {
		return true
	}

	return false
}

// SetVar123Number gets a reference to the given int32 and assigns it to the Var123Number field.
func (o *Name) SetVar123Number(v int32) {
	o.Var123Number = &v
}

