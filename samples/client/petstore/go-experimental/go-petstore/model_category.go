/*
 * OpenAPI Petstore
 *
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package petstore

import (
	"bytes"
	"encoding/json"
)

// Category struct for Category
type Category struct {
	ID *int64 `json:"id,omitempty"`
	Name string `json:"name"`
}

// GetID returns the ID field value if set, zero value otherwise.
func (o *Category) GetID() int64 {
	if o == nil || o.ID == nil {
		var ret int64
		return ret
	}
	return *o.ID
}

// GetIDOk returns a tuple with the ID field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Category) GetIDOk() (int64, bool) {
	if o == nil || o.ID == nil {
		var ret int64
		return ret, false
	}
	return *o.ID, true
}

// HasID returns a boolean if a field has been set.
func (o *Category) HasID() bool {
	if o != nil && o.ID != nil {
		return true
	}

	return false
}

// SetID gets a reference to the given int64 and assigns it to the ID field.
func (o *Category) SetID(v int64) {
	o.ID = &v
}

// GetName returns the Name field value
func (o *Category) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// SetName sets field value
func (o *Category) SetName(v string) {
	o.Name = v
}

type NullableCategory struct {
	Value Category
	ExplicitNull bool
}

func (v NullableCategory) MarshalJSON() ([]byte, error) {
    switch {
    case v.ExplicitNull:
        return []byte("null"), nil
    default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableCategory) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
