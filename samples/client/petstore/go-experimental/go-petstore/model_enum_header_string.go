/*
 * OpenAPI Petstore
 *
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package petstore

import (
	"encoding/json"
	"fmt"
)

// EnumHeaderString the model 'EnumHeaderString'
type EnumHeaderString string

// List of enum_header_string
const (
	ENUM_HEADER_STRING_ABC EnumHeaderString = "_abc"
	ENUM_HEADER_STRING_EFG EnumHeaderString = "-efg"
	ENUM_HEADER_STRING_XYZ EnumHeaderString = "(xyz)"
)

func (v *EnumHeaderString) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumHeaderString(value)
	for _, existing := range []EnumHeaderString{ "_abc", "-efg", "(xyz)",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumHeaderString", *v)
}

// Ptr returns reference to enum_header_string value
func (v EnumHeaderString) Ptr() *EnumHeaderString {
	return &v
}

type NullableEnumHeaderString struct {
	value *EnumHeaderString
	isSet bool
}

func (v NullableEnumHeaderString) Get() *EnumHeaderString {
	return v.value
}

func (v *NullableEnumHeaderString) Set(val *EnumHeaderString) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumHeaderString) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumHeaderString) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumHeaderString(val *EnumHeaderString) *NullableEnumHeaderString {
	return &NullableEnumHeaderString{value: val, isSet: true}
}

func (v NullableEnumHeaderString) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumHeaderString) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

