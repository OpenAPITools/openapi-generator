## EnterpriseAdminApi

### Add an authorized SSH key
## Add an authorized SSH key
POST http://HOSTNAME/api/v3/setup/api/settings/authorized-keys
Content-Type: application/x-www-form-urlencoded




### Add custom labels to a self-hosted runner for an enterprise
## Add custom labels to a self-hosted runner for an enterprise
POST http://HOSTNAME/api/v3/enterprises/{{enterprise}}/actions/runners/{{runner_id}}/labels
Content-Type: application/json

{
  "labels" : [ "gpu", "accelerated" ]
}


### Add organization access to a self-hosted runner group in an enterprise
## Add organization access to a self-hosted runner group in an enterprise
PUT http://HOSTNAME/api/v3/enterprises/{{enterprise}}/actions/runner-groups/{{runner_group_id}}/organizations/{{org_id}}




### Add a self-hosted runner to a group for an enterprise
## Add a self-hosted runner to a group for an enterprise
PUT http://HOSTNAME/api/v3/enterprises/{{enterprise}}/actions/runner-groups/{{runner_group_id}}/runners/{{runner_id}}




### Create a GitHub license
## Create a GitHub license
POST http://HOSTNAME/api/v3/setup/api/start
Content-Type: multipart/form-data




### Create a global webhook
## Create a global webhook
POST http://HOSTNAME/api/v3/admin/hooks
Content-Type: application/json

{
  "name" : "web",
  "events" : [ "organization", "user" ],
  "config" : {
    "url" : "https://example.com/webhook",
    "content_type" : "json",
    "secret" : "secret"
  }
}


### Create an impersonation OAuth token
## Create an impersonation OAuth token
POST http://HOSTNAME/api/v3/admin/users/{{username}}/authorizations
Content-Type: application/json

{
  "scopes" : [ "public_repo" ]
}


### Create an organization
## Create an organization
POST http://HOSTNAME/api/v3/admin/organizations
Content-Type: application/json

{
  "login" : "github",
  "profile_name" : "GitHub, Inc.",
  "admin" : "monalisaoctocat"
}


### Create a pre-receive environment
## Create a pre-receive environment
POST http://HOSTNAME/api/v3/admin/pre-receive-environments
Content-Type: application/json

{
  "name" : "DevTools Hook Env",
  "image_url" : "https://my_file_server/path/to/devtools_env.tar.gz"
}


### Create a pre-receive hook
## Create a pre-receive hook
POST http://HOSTNAME/api/v3/admin/pre-receive-hooks
Content-Type: application/json

{
  "name" : "Check Commits",
  "script" : "scripts/commit_check.sh",
  "enforcement" : "disabled",
  "allow_downstream_configuration" : false,
  "script_repository" : {
    "full_name" : "DevIT/hooks"
  },
  "environment" : {
    "id" : 2
  }
}


### Create a registration token for an enterprise
## Create a registration token for an enterprise
POST http://HOSTNAME/api/v3/enterprises/{{enterprise}}/actions/runners/registration-token




### Create a remove token for an enterprise
## Create a remove token for an enterprise
POST http://HOSTNAME/api/v3/enterprises/{{enterprise}}/actions/runners/remove-token




### Create a self-hosted runner group for an enterprise
## Create a self-hosted runner group for an enterprise
POST http://HOSTNAME/api/v3/enterprises/{{enterprise}}/actions/runner-groups
Content-Type: application/json

{
  "name" : "Expensive hardware runners",
  "visibility" : "selected",
  "selected_organization_ids" : [ 32, 91 ],
  "runners" : [ 9, 2 ]
}


### Create a user
## Create a user
POST http://HOSTNAME/api/v3/admin/users
Content-Type: application/json

{
  "login" : "monalisa",
  "email" : "octocat@github.com"
}


### Delete a global webhook
## Delete a global webhook
DELETE http://HOSTNAME/api/v3/admin/hooks/{{hook_id}}




### Delete an impersonation OAuth token
## Delete an impersonation OAuth token
DELETE http://HOSTNAME/api/v3/admin/users/{{username}}/authorizations




### Delete a SSH key
## Delete a SSH key
DELETE http://HOSTNAME/api/v3/manage/v1/access/ssh
Content-Type: application/json

{
  "key" : "ssh-rsa AAAAB3NzaC1yc2EAAAADCIABAAAAgQCY/ZiDDOFWcZnYXPwMbvwQDofXPdHxLfxPK+HWGVPd1DLcDncYBUSB0bmCU2g9Sc+oHKLoHhXp0ivau9h+EpmQJ7V8vqsRdD9pc4aL/WAnUyF4o3Y7xL94rlRpVbVo/tNjzcvqxxyzBiYyy3GciCMpYQh/uKt56B94/5PNyIGEEw=="
}


### Delete a personal access token
## Delete a personal access token
DELETE http://HOSTNAME/api/v3/admin/tokens/{{token_id}}




### Delete a pre-receive environment
## Delete a pre-receive environment
DELETE http://HOSTNAME/api/v3/admin/pre-receive-environments/{{pre_receive_environment_id}}




### Delete a pre-receive hook
## Delete a pre-receive hook
DELETE http://HOSTNAME/api/v3/admin/pre-receive-hooks/{{pre_receive_hook_id}}




### Delete a public key
## Delete a public key
DELETE http://HOSTNAME/api/v3/admin/keys/{{key_ids}}




### Delete a SCIM group from an enterprise
## Delete a SCIM group from an enterprise
DELETE http://HOSTNAME/api/v3/scim/v2/Groups/{{scim_group_id}}




### Delete a self-hosted runner from an enterprise
## Delete a self-hosted runner from an enterprise
DELETE http://HOSTNAME/api/v3/enterprises/{{enterprise}}/actions/runners/{{runner_id}}




### Delete a self-hosted runner group from an enterprise
## Delete a self-hosted runner group from an enterprise
DELETE http://HOSTNAME/api/v3/enterprises/{{enterprise}}/actions/runner-groups/{{runner_group_id}}




### Delete a user
## Delete a user
DELETE http://HOSTNAME/api/v3/admin/users/{{username}}




### Delete a SCIM user from an enterprise
## Delete a SCIM user from an enterprise
DELETE http://HOSTNAME/api/v3/scim/v2/Users/{{scim_user_id}}




### Demote a site administrator
## Demote a site administrator
DELETE http://HOSTNAME/api/v3/users/{{username}}/site_admin




### Disable a selected organization for GitHub Actions in an enterprise
## Disable a selected organization for GitHub Actions in an enterprise
DELETE http://HOSTNAME/api/v3/enterprises/{{enterprise}}/actions/permissions/organizations/{{org_id}}




### Enable or disable maintenance mode
## Enable or disable maintenance mode
POST http://HOSTNAME/api/v3/setup/api/maintenance
Content-Type: application/x-www-form-urlencoded




### Enable a selected organization for GitHub Actions in an enterprise
## Enable a selected organization for GitHub Actions in an enterprise
PUT http://HOSTNAME/api/v3/enterprises/{{enterprise}}/actions/permissions/organizations/{{org_id}}




### Get all authorized SSH keys
## Get all authorized SSH keys
GET http://HOSTNAME/api/v3/setup/api/settings/authorized-keys




### Get all statistics
## Get all statistics
GET http://HOSTNAME/api/v3/enterprise/stats/all




### Get allowed actions for an enterprise
## Get allowed actions for an enterprise
GET http://HOSTNAME/api/v3/enterprises/{{enterprise}}/actions/permissions/selected-actions




### Get the global announcement banner
## Get the global announcement banner
GET http://HOSTNAME/api/v3/enterprise/announcement




### Get the audit log for an enterprise
## Get the audit log for an enterprise
GET http://HOSTNAME/api/v3/enterprises/{{enterprise}}/audit-log




### Get the system requirement check results for configured cluster nodes
## Get the system requirement check results for configured cluster nodes
GET http://HOSTNAME/api/v3/manage/v1/checks/system-requirements




### Get comment statistics
## Get comment statistics
GET http://HOSTNAME/api/v3/enterprise/stats/comments




### Get GHES node metadata for all nodes
## Get GHES node metadata for all nodes
GET http://HOSTNAME/api/v3/manage/v1/config/nodes




### Get the configuration status
## Get the configuration status
GET http://HOSTNAME/api/v3/setup/api/configcheck




### Get the download status for a pre-receive environment
## Get the download status for a pre-receive environment
GET http://HOSTNAME/api/v3/admin/pre-receive-environments/{{pre_receive_environment_id}}/downloads/latest




### Get gist statistics
## Get gist statistics
GET http://HOSTNAME/api/v3/enterprise/stats/gists




### Get GitHub Actions permissions for an enterprise
## Get GitHub Actions permissions for an enterprise
GET http://HOSTNAME/api/v3/enterprises/{{enterprise}}/actions/permissions




### Get a global webhook
## Get a global webhook
GET http://HOSTNAME/api/v3/admin/hooks/{{hook_id}}




### Get hooks statistics
## Get hooks statistics
GET http://HOSTNAME/api/v3/enterprise/stats/hooks




### Get issue statistics
## Get issue statistics
GET http://HOSTNAME/api/v3/enterprise/stats/issues




### Get license information
## Get license information
GET http://HOSTNAME/api/v3/enterprise/settings/license




### Get the maintenance status
## Get the maintenance status
GET http://HOSTNAME/api/v3/setup/api/maintenance




### Get the status of maintenance mode
## Get the status of maintenance mode
GET http://HOSTNAME/api/v3/manage/v1/maintenance




### Get the GHES settings
## Get the GHES settings
GET http://HOSTNAME/api/v3/manage/v1/config/settings




### Get the configured SSH keys
## Get the configured SSH keys
GET http://HOSTNAME/api/v3/manage/v1/access/ssh




### Get milestone statistics
## Get milestone statistics
GET http://HOSTNAME/api/v3/enterprise/stats/milestones




### Get organization statistics
## Get organization statistics
GET http://HOSTNAME/api/v3/enterprise/stats/orgs




### Get pages statistics
## Get pages statistics
GET http://HOSTNAME/api/v3/enterprise/stats/pages




### Get a pre-receive environment
## Get a pre-receive environment
GET http://HOSTNAME/api/v3/admin/pre-receive-environments/{{pre_receive_environment_id}}




### Get a pre-receive hook
## Get a pre-receive hook
GET http://HOSTNAME/api/v3/admin/pre-receive-hooks/{{pre_receive_hook_id}}




### Get a pre-receive hook for an organization
## Get a pre-receive hook for an organization
GET http://HOSTNAME/api/v3/orgs/{{org}}/pre-receive-hooks/{{pre_receive_hook_id}}




### Get a pre-receive hook for a repository
## Get a pre-receive hook for a repository
GET http://HOSTNAME/api/v3/repos/{{owner}}/{{repo}}/pre-receive-hooks/{{pre_receive_hook_id}}




### Get SCIM provisioning information for an enterprise group
## Get SCIM provisioning information for an enterprise group
GET http://HOSTNAME/api/v3/scim/v2/Groups/{{scim_group_id}}




### Get SCIM provisioning information for an enterprise user
## Get SCIM provisioning information for an enterprise user
GET http://HOSTNAME/api/v3/scim/v2/Users/{{scim_user_id}}




### Get pull request statistics
## Get pull request statistics
GET http://HOSTNAME/api/v3/enterprise/stats/pulls




### Get the status of services running on all replica nodes
## Get the status of services running on all replica nodes
GET http://HOSTNAME/api/v3/manage/v1/replication/status




### Get repository statistics
## Get repository statistics
GET http://HOSTNAME/api/v3/enterprise/stats/repos




### Get security products statistics
## Get security products statistics
GET http://HOSTNAME/api/v3/enterprise/stats/security-products




### Get a self-hosted runner for an enterprise
## Get a self-hosted runner for an enterprise
GET http://HOSTNAME/api/v3/enterprises/{{enterprise}}/actions/runners/{{runner_id}}




### Get a self-hosted runner group for an enterprise
## Get a self-hosted runner group for an enterprise
GET http://HOSTNAME/api/v3/enterprises/{{enterprise}}/actions/runner-groups/{{runner_group_id}}




### Get settings
## Get settings
GET http://HOSTNAME/api/v3/setup/api/settings




### Get users statistics
## Get users statistics
GET http://HOSTNAME/api/v3/enterprise/stats/users




### Get all GHES release versions for all nodes
## Get all GHES release versions for all nodes
GET http://HOSTNAME/api/v3/manage/v1/version




### Initialize instance configuration with license upload
## Initialize instance configuration with license upload
POST http://HOSTNAME/api/v3/manage/v1/config/init
Content-Type: multipart/form-data




### Check a license
## Check a license
GET http://HOSTNAME/api/v3/manage/v1/config/license/check




### Get the enterprise license information
## Get the enterprise license information
GET http://HOSTNAME/api/v3/manage/v1/config/license




### Upload an enterprise license
## Upload an enterprise license
PUT http://HOSTNAME/api/v3/manage/v1/config/license
Content-Type: application/octet-stream




### List global webhooks
## List global webhooks
GET http://HOSTNAME/api/v3/admin/hooks




### List labels for a self-hosted runner for an enterprise
## List labels for a self-hosted runner for an enterprise
GET http://HOSTNAME/api/v3/enterprises/{{enterprise}}/actions/runners/{{runner_id}}/labels




### List organization access to a self-hosted runner group in an enterprise
## List organization access to a self-hosted runner group in an enterprise
GET http://HOSTNAME/api/v3/enterprises/{{enterprise}}/actions/runner-groups/{{runner_group_id}}/organizations




### List personal access tokens
## List personal access tokens
GET http://HOSTNAME/api/v3/admin/tokens




### List pre-receive environments
## List pre-receive environments
GET http://HOSTNAME/api/v3/admin/pre-receive-environments




### List pre-receive hooks
## List pre-receive hooks
GET http://HOSTNAME/api/v3/admin/pre-receive-hooks




### List pre-receive hooks for an organization
## List pre-receive hooks for an organization
GET http://HOSTNAME/api/v3/orgs/{{org}}/pre-receive-hooks




### List pre-receive hooks for a repository
## List pre-receive hooks for a repository
GET http://HOSTNAME/api/v3/repos/{{owner}}/{{repo}}/pre-receive-hooks




### List provisioned SCIM groups for an enterprise
## List provisioned SCIM groups for an enterprise
GET http://HOSTNAME/api/v3/scim/v2/Groups




### List SCIM provisioned identities for an enterprise
## List SCIM provisioned identities for an enterprise
GET http://HOSTNAME/api/v3/scim/v2/Users




### List public keys
## List public keys
GET http://HOSTNAME/api/v3/admin/keys




### List runner applications for an enterprise
## List runner applications for an enterprise
GET http://HOSTNAME/api/v3/enterprises/{{enterprise}}/actions/runners/downloads




### List selected organizations enabled for GitHub Actions in an enterprise
## List selected organizations enabled for GitHub Actions in an enterprise
GET http://HOSTNAME/api/v3/enterprises/{{enterprise}}/actions/permissions/organizations




### List self-hosted runner groups for an enterprise
## List self-hosted runner groups for an enterprise
GET http://HOSTNAME/api/v3/enterprises/{{enterprise}}/actions/runner-groups




### List self-hosted runners for an enterprise
## List self-hosted runners for an enterprise
GET http://HOSTNAME/api/v3/enterprises/{{enterprise}}/actions/runners




### List self-hosted runners in a group for an enterprise
## List self-hosted runners in a group for an enterprise
GET http://HOSTNAME/api/v3/enterprises/{{enterprise}}/actions/runner-groups/{{runner_group_id}}/runners




### Ping a global webhook
## Ping a global webhook
POST http://HOSTNAME/api/v3/admin/hooks/{{hook_id}}/pings




### Promote a user to be a site administrator
## Promote a user to be a site administrator
PUT http://HOSTNAME/api/v3/users/{{username}}/site_admin




### Provision a SCIM enterprise group
## Provision a SCIM enterprise group
POST http://HOSTNAME/api/v3/scim/v2/Groups
Content-Type: application/json

{
  "schemas" : [ "urn:ietf:params:scim:schemas:core:2.0:Group" ],
  "externalId" : "8aa1a0c0-c4c3-4bc0-b4a5-2ef676900159",
  "displayName" : "Engineering"
}


### Provision a SCIM enterprise user
## User
POST http://HOSTNAME/api/v3/scim/v2/Users
Content-Type: application/json

{
  "schemas" : [ "urn:ietf:params:scim:schemas:core:2.0:User" ],
  "externalId" : "E012345",
  "active" : true,
  "userName" : "E012345",
  "name" : {
    "formatted" : "Ms. Mona Lisa Octocat",
    "familyName" : "Octocat",
    "givenName" : "Mona",
    "middleName" : "Lisa"
  },
  "displayName" : "Mona Lisa",
  "emails" : [ {
    "value" : "mlisa@example.com",
    "type" : "work",
    "primary" : true
  } ],
  "roles" : [ {
    "value" : "User",
    "primary" : false
  } ]
}

### Provision a SCIM enterprise user
## Enterprise Owner
POST http://HOSTNAME/api/v3/scim/v2/Users
Content-Type: application/json

{
  "schemas" : [ "urn:ietf:params:scim:schemas:core:2.0:User" ],
  "externalId" : "E012345",
  "active" : true,
  "userName" : "E012345",
  "name" : {
    "formatted" : "Ms. Mona Lisa Octocat",
    "familyName" : "Octocat",
    "givenName" : "Mona",
    "middleName" : "Lisa"
  },
  "displayName" : "Mona Lisa",
  "emails" : [ {
    "value" : "mlisa@example.com",
    "type" : "work",
    "primary" : true
  } ],
  "roles" : [ {
    "value" : "Enterprise Owner",
    "primary" : false
  } ]
}


### Remove all custom labels from a self-hosted runner for an enterprise
## Remove all custom labels from a self-hosted runner for an enterprise
DELETE http://HOSTNAME/api/v3/enterprises/{{enterprise}}/actions/runners/{{runner_id}}/labels




### Remove the global announcement banner
## Remove the global announcement banner
DELETE http://HOSTNAME/api/v3/enterprise/announcement




### Remove an authorized SSH key
## Remove an authorized SSH key
DELETE http://HOSTNAME/api/v3/setup/api/settings/authorized-keys
Content-Type: application/x-www-form-urlencoded




### Remove a custom label from a self-hosted runner for an enterprise
## Remove a custom label from a self-hosted runner for an enterprise
DELETE http://HOSTNAME/api/v3/enterprises/{{enterprise}}/actions/runners/{{runner_id}}/labels/{{name}}




### Remove organization access to a self-hosted runner group in an enterprise
## Remove organization access to a self-hosted runner group in an enterprise
DELETE http://HOSTNAME/api/v3/enterprises/{{enterprise}}/actions/runner-groups/{{runner_group_id}}/organizations/{{org_id}}




### Remove pre-receive hook enforcement for an organization
## Remove pre-receive hook enforcement for an organization
DELETE http://HOSTNAME/api/v3/orgs/{{org}}/pre-receive-hooks/{{pre_receive_hook_id}}




### Remove pre-receive hook enforcement for a repository
## Remove pre-receive hook enforcement for a repository
DELETE http://HOSTNAME/api/v3/repos/{{owner}}/{{repo}}/pre-receive-hooks/{{pre_receive_hook_id}}




### Remove a self-hosted runner from a group for an enterprise
## Remove a self-hosted runner from a group for an enterprise
DELETE http://HOSTNAME/api/v3/enterprises/{{enterprise}}/actions/runner-groups/{{runner_group_id}}/runners/{{runner_id}}




### Set allowed actions for an enterprise
## 
PUT http://HOSTNAME/api/v3/enterprises/{{enterprise}}/actions/permissions/selected-actions
Content-Type: application/json

{
  "github_owned_allowed" : true,
  "verified_allowed" : false,
  "patterns_allowed" : [ "monalisa/octocat@*", "docker/*" ]
}


### Set the global announcement banner
## Set the global announcement banner
PATCH http://HOSTNAME/api/v3/enterprise/announcement
Content-Type: application/json

{
  "announcement" : "Very **important** announcement about _something_.",
  "expires_at" : "2021-01-01T00:00:00.000+00:00"
}


### Set custom labels for a self-hosted runner for an enterprise
## Set custom labels for a self-hosted runner for an enterprise
PUT http://HOSTNAME/api/v3/enterprises/{{enterprise}}/actions/runners/{{runner_id}}/labels
Content-Type: application/json

{
  "labels" : [ "gpu", "accelerated" ]
}


### Set GitHub Actions permissions for an enterprise
## Set GitHub Actions permissions for an enterprise
PUT http://HOSTNAME/api/v3/enterprises/{{enterprise}}/actions/permissions
Content-Type: application/json

{
  "enabled_organizations" : "all",
  "allowed_actions" : "selected"
}


### Set SCIM information for a provisioned enterprise group
## Set SCIM information for a provisioned enterprise group
PUT http://HOSTNAME/api/v3/scim/v2/Groups/{{scim_group_id}}
Content-Type: application/json

{
  "schemas" : [ "urn:ietf:params:scim:schemas:core:2.0:Group" ],
  "externalId" : "8aa1a0c0-c4c3-4bc0-b4a5-2ef676900159",
  "displayName" : "Engineering"
}


### Set SCIM information for a provisioned enterprise user
## User
PUT http://HOSTNAME/api/v3/scim/v2/Users/{{scim_user_id}}
Content-Type: application/json

{
  "schemas" : [ "urn:ietf:params:scim:schemas:core:2.0:User" ],
  "externalId" : "E012345",
  "active" : true,
  "userName" : "E012345",
  "name" : {
    "formatted" : "Ms. Mona Lisa Octocat",
    "familyName" : "Octocat",
    "givenName" : "Mona",
    "middleName" : "Lisa"
  },
  "displayName" : "Mona Lisa",
  "emails" : [ {
    "value" : "mlisa@example.com",
    "type" : "work",
    "primary" : true
  } ],
  "roles" : [ {
    "value" : "User",
    "primary" : false
  } ]
}


### Set the status of maintenance mode
## Set the status of maintenance mode
POST http://HOSTNAME/api/v3/manage/v1/maintenance
Content-Type: application/json

{
  "enabled" : true,
  "when" : "2006-01-02T15:04:05+00:00",
  "ip_exception_list" : [ "192.168.1.0/24", "1.1.1.1" ]
}


### Set settings
## Set settings
PUT http://HOSTNAME/api/v3/manage/v1/config/settings
Content-Type: application/json

{
  "public_pages" : true
}


### Set a new SSH key
## Set a new SSH key
POST http://HOSTNAME/api/v3/manage/v1/access/ssh
Content-Type: application/json

{
  "key" : "ssh-rsa AAAAB3NzaC1yc2EAAAADCIABAAAAgQCY/ZiDDOFWcZnYXPwMbvwQDofXPdHxLfxPK+HWGVPd1DLcDncYBUSB0bmCU2g9Sc+oHKLoHhXp0ivau9h+EpmQJ7V8vqsRdD9pc4aL/WAnUyF4o3Y7xL94rlRpVbVo/tNjzcvqxxyzBiYyy3GciCMpYQh/uKt56B94/5PNyIGEEw=="
}


### Set organization access for a self-hosted runner group in an enterprise
## Set organization access for a self-hosted runner group in an enterprise
PUT http://HOSTNAME/api/v3/enterprises/{{enterprise}}/actions/runner-groups/{{runner_group_id}}/organizations
Content-Type: application/json

{
  "selected_organization_ids" : [ 32, 91 ]
}


### Set selected organizations enabled for GitHub Actions in an enterprise
## Set selected organizations enabled for GitHub Actions in an enterprise
PUT http://HOSTNAME/api/v3/enterprises/{{enterprise}}/actions/permissions/organizations
Content-Type: application/json

{
  "selected_organization_ids" : [ 32, 91 ]
}


### Set self-hosted runners in a group for an enterprise
## Set self-hosted runners in a group for an enterprise
PUT http://HOSTNAME/api/v3/enterprises/{{enterprise}}/actions/runner-groups/{{runner_group_id}}/runners
Content-Type: application/json

{
  "runners" : [ 9, 2 ]
}


### Set settings
## Set settings
PUT http://HOSTNAME/api/v3/setup/api/settings
Content-Type: application/x-www-form-urlencoded




### Start a configuration process
## Start a configuration process
POST http://HOSTNAME/api/v3/setup/api/configure




### Start a pre-receive environment download
## Start a pre-receive environment download
POST http://HOSTNAME/api/v3/admin/pre-receive-environments/{{pre_receive_environment_id}}/downloads




### Suspend a user
## Suspend a user
PUT http://HOSTNAME/api/v3/users/{{username}}/suspended
Content-Type: application/json

{
  "reason" : "Suspended during leave of absence."
}


### Sync LDAP mapping for a team
## Sync LDAP mapping for a team
POST http://HOSTNAME/api/v3/admin/ldap/teams/{{team_id}}/sync




### Sync LDAP mapping for a user
## Sync LDAP mapping for a user
POST http://HOSTNAME/api/v3/admin/ldap/users/{{username}}/sync




### Unsuspend a user
## Unsuspend a user
DELETE http://HOSTNAME/api/v3/users/{{username}}/suspended
Content-Type: application/json

{
  "reason" : "Unsuspended after leave of absence."
}


### Update an attribute for a SCIM enterprise group
## Update an attribute for a SCIM enterprise group
PATCH http://HOSTNAME/api/v3/scim/v2/Groups/{{scim_group_id}}
Content-Type: application/json

{
  "schemas" : [ "urn:ietf:params:scim:api:messages:2.0:PatchOp" ],
  "Operations" : [ {
    "op" : "replace",
    "path" : "displayName",
    "value" : "Employees"
  } ]
}


### Update an attribute for a SCIM enterprise user
## Update an attribute for a SCIM enterprise user
PATCH http://HOSTNAME/api/v3/scim/v2/Users/{{scim_user_id}}
Content-Type: application/json

{
  "schemas" : [ "urn:ietf:params:scim:api:messages:2.0:PatchOp" ],
  "Operations" : [ {
    "op" : "replace",
    "path" : "emails[type eq 'work'].value",
    "value" : "updatedEmail@microsoft.com"
  }, {
    "op" : "replace",
    "path" : "name.familyName",
    "value" : "updatedFamilyName"
  } ]
}


### Update a global webhook
## Update a global webhook
PATCH http://HOSTNAME/api/v3/admin/hooks/{{hook_id}}
Content-Type: application/json

{
  "events" : [ "organization" ],
  "config" : {
    "url" : "https://example.com/webhook"
  }
}


### Update LDAP mapping for a team
## Update LDAP mapping for a team
PATCH http://HOSTNAME/api/v3/admin/ldap/teams/{{team_id}}/mapping
Content-Type: application/json

{
  "ldap_dn" : "cn=Enterprise Ops,ou=teams,dc=github,dc=com"
}


### Update LDAP mapping for a user
## Update LDAP mapping for a user
PATCH http://HOSTNAME/api/v3/admin/ldap/users/{{username}}/mapping
Content-Type: application/json

{
  "ldap_dn" : "uid=asdf,ou=users,dc=github,dc=com"
}


### Update an organization name
## Update an organization name
PATCH http://HOSTNAME/api/v3/admin/organizations/{{org}}
Content-Type: application/json

{
  "login" : "the-new-octocats"
}


### Update a pre-receive environment
## Update a pre-receive environment
PATCH http://HOSTNAME/api/v3/admin/pre-receive-environments/{{pre_receive_environment_id}}
Content-Type: application/json

{
  "name" : "DevTools Hook Env",
  "image_url" : "https://my_file_server/path/to/devtools_env.tar.gz"
}


### Update a pre-receive hook
## Update a pre-receive hook
PATCH http://HOSTNAME/api/v3/admin/pre-receive-hooks/{{pre_receive_hook_id}}
Content-Type: application/json

{
  "name" : "Check Commits",
  "environment" : {
    "id" : 1
  },
  "allow_downstream_configuration" : true
}


### Update pre-receive hook enforcement for an organization
## Update pre-receive hook enforcement for an organization
PATCH http://HOSTNAME/api/v3/orgs/{{org}}/pre-receive-hooks/{{pre_receive_hook_id}}
Content-Type: application/json

{
  "enforcement" : "enabled",
  "allow_downstream_configuration" : false
}


### Update pre-receive hook enforcement for a repository
## Update pre-receive hook enforcement for a repository
PATCH http://HOSTNAME/api/v3/repos/{{owner}}/{{repo}}/pre-receive-hooks/{{pre_receive_hook_id}}
Content-Type: application/json

{
  "enforcement" : "enabled"
}


### Update a self-hosted runner group for an enterprise
## Update a self-hosted runner group for an enterprise
PATCH http://HOSTNAME/api/v3/enterprises/{{enterprise}}/actions/runner-groups/{{runner_group_id}}
Content-Type: application/json

{
  "name" : "Expensive hardware runners",
  "visibility" : "selected"
}


### Update the username for a user
## Update the username for a user
PATCH http://HOSTNAME/api/v3/admin/users/{{username}}
Content-Type: application/json

{
  "login" : "thenewmonalisa"
}


### Upgrade a license
## Upgrade a license
POST http://HOSTNAME/api/v3/setup/api/upgrade
Content-Type: multipart/form-data




### Get code security and analysis features for an enterprise
## Get code security and analysis features for an enterprise
GET http://HOSTNAME/api/v3/enterprises/{{enterprise}}/code_security_and_analysis




### Update code security and analysis features for an enterprise
## Update code security and analysis features for an enterprise
PATCH http://HOSTNAME/api/v3/enterprises/{{enterprise}}/code_security_and_analysis
Content-Type: application/json

{
  "advanced_security_enabled_for_new_repositories" : true,
  "advanced_security_enabled_new_user_namespace_repos" : true,
  "dependabot_alerts_enabled_for_new_repositories" : true,
  "secret_scanning_enabled_for_new_repositories" : true,
  "secret_scanning_push_protection_enabled_for_new_repositories" : true,
  "secret_scanning_push_protection_custom_link" : "https://github.com/test-org/test-repo/blob/main/README.md"
}


### Enable or disable a security feature
## Enable or disable a security feature
POST http://HOSTNAME/api/v3/enterprises/{{enterprise}}/{{security_product}}/{{enablement}}



