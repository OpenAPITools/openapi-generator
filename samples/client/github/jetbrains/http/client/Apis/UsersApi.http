## UsersApi

### Add an email address for the authenticated user
## Add an email address for the authenticated user
POST https://api.github.com/user/emails
Content-Type: application/json
Accept: application/json

{
  "emails" : [ "octocat@github.com", "mona@github.com", "octocat@octocat.org" ]
}


### Add social accounts for the authenticated user
## Add social accounts for the authenticated user
POST https://api.github.com/user/social_accounts
Content-Type: application/json
Accept: application/json

{
  "account_urls" : [ "https://facebook.com/GitHub", "https://www.youtube.com/@GitHub" ]
}


### Block a user
## Block a user
PUT https://api.github.com/user/blocks/{{username}}
Accept: application/json

### Check if a user is blocked by the authenticated user
## Check if a user is blocked by the authenticated user
GET https://api.github.com/user/blocks/{{username}}
Accept: application/json

### Check if a user follows another user
## Check if a user follows another user
GET https://api.github.com/users/{{username}}/following/{{target_user}}

### Check if a person is followed by the authenticated user
## Check if a person is followed by the authenticated user
GET https://api.github.com/user/following/{{username}}
Accept: application/json

### Create a GPG key for the authenticated user
## Create a GPG key for the authenticated user
POST https://api.github.com/user/gpg_keys
Content-Type: application/json
Accept: application/json

{
  "name" : "Octocat's GPG Key",
  "armored_public_key" : "-----BEGIN PGP PUBLIC KEY BLOCK-----\nVersion: GnuPG v1\n\nmQINBFnZ2ZIBEADQ2Z7Z7\n-----END PGP PUBLIC KEY BLOCK-----"
}


### Create a public SSH key for the authenticated user
## Create a public SSH key for the authenticated user
POST https://api.github.com/user/keys
Content-Type: application/json
Accept: application/json

{
  "title" : "ssh-rsa AAAAB3NzaC1yc2EAAA",
  "key" : "2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234"
}


### Create a SSH signing key for the authenticated user
## Create a SSH signing key for the authenticated user
POST https://api.github.com/user/ssh_signing_keys
Content-Type: application/json
Accept: application/json

{
  "key" : "2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234",
  "title" : "ssh-rsa AAAAB3NzaC1yc2EAAA"
}


### Delete an email address for the authenticated user
## Delete an email address for the authenticated user
DELETE https://api.github.com/user/emails
Content-Type: application/json
Accept: application/json

{
  "emails" : [ "octocat@github.com", "mona@github.com" ]
}


### Delete a GPG key for the authenticated user
## Delete a GPG key for the authenticated user
DELETE https://api.github.com/user/gpg_keys/{{gpg_key_id}}
Accept: application/json

### Delete a public SSH key for the authenticated user
## Delete a public SSH key for the authenticated user
DELETE https://api.github.com/user/keys/{{key_id}}
Accept: application/json

### Delete social accounts for the authenticated user
## Delete social accounts for the authenticated user
DELETE https://api.github.com/user/social_accounts
Content-Type: application/json
Accept: application/json

{
  "account_urls" : [ "https://facebook.com/GitHub", "https://www.youtube.com/@GitHub" ]
}


### Delete an SSH signing key for the authenticated user
## Delete an SSH signing key for the authenticated user
DELETE https://api.github.com/user/ssh_signing_keys/{{ssh_signing_key_id}}
Accept: application/json

### Follow a user
## Follow a user
PUT https://api.github.com/user/following/{{username}}
Accept: application/json

### Get the authenticated user
## Get the authenticated user
GET https://api.github.com/user
Accept: application/json

### Get a user
## Get a user
GET https://api.github.com/users/{{username}}
Accept: application/json

### Get contextual information for a user
## Get contextual information for a user
GET https://api.github.com/users/{{username}}/hovercard
Accept: application/json

### Get a GPG key for the authenticated user
## Get a GPG key for the authenticated user
GET https://api.github.com/user/gpg_keys/{{gpg_key_id}}
Accept: application/json

### Get a public SSH key for the authenticated user
## Get a public SSH key for the authenticated user
GET https://api.github.com/user/keys/{{key_id}}
Accept: application/json

### Get an SSH signing key for the authenticated user
## Get an SSH signing key for the authenticated user
GET https://api.github.com/user/ssh_signing_keys/{{ssh_signing_key_id}}
Accept: application/json

### List users
## List users
GET https://api.github.com/users
Accept: application/json

### List users blocked by the authenticated user
## List users blocked by the authenticated user
GET https://api.github.com/user/blocks
Accept: application/json

### List email addresses for the authenticated user
## List email addresses for the authenticated user
GET https://api.github.com/user/emails
Accept: application/json

### List the people the authenticated user follows
## List the people the authenticated user follows
GET https://api.github.com/user/following
Accept: application/json

### List followers of the authenticated user
## List followers of the authenticated user
GET https://api.github.com/user/followers
Accept: application/json

### List followers of a user
## List followers of a user
GET https://api.github.com/users/{{username}}/followers
Accept: application/json

### List the people a user follows
## List the people a user follows
GET https://api.github.com/users/{{username}}/following
Accept: application/json

### List GPG keys for the authenticated user
## List GPG keys for the authenticated user
GET https://api.github.com/user/gpg_keys
Accept: application/json

### List GPG keys for a user
## List GPG keys for a user
GET https://api.github.com/users/{{username}}/gpg_keys
Accept: application/json

### List public email addresses for the authenticated user
## List public email addresses for the authenticated user
GET https://api.github.com/user/public_emails
Accept: application/json

### List public keys for a user
## List public keys for a user
GET https://api.github.com/users/{{username}}/keys
Accept: application/json

### List public SSH keys for the authenticated user
## List public SSH keys for the authenticated user
GET https://api.github.com/user/keys
Accept: application/json

### List social accounts for the authenticated user
## List social accounts for the authenticated user
GET https://api.github.com/user/social_accounts
Accept: application/json

### List social accounts for a user
## List social accounts for a user
GET https://api.github.com/users/{{username}}/social_accounts
Accept: application/json

### List SSH signing keys for the authenticated user
## List SSH signing keys for the authenticated user
GET https://api.github.com/user/ssh_signing_keys
Accept: application/json

### List SSH signing keys for a user
## List SSH signing keys for a user
GET https://api.github.com/users/{{username}}/ssh_signing_keys
Accept: application/json

### Set primary email visibility for the authenticated user
## Set primary email visibility for the authenticated user
PATCH https://api.github.com/user/email/visibility
Content-Type: application/json
Accept: application/json

{
  "visibility" : "private"
}


### Unblock a user
## Unblock a user
DELETE https://api.github.com/user/blocks/{{username}}
Accept: application/json

### Unfollow a user
## Unfollow a user
DELETE https://api.github.com/user/following/{{username}}
Accept: application/json

### Update the authenticated user
## Update the authenticated user
PATCH https://api.github.com/user
Content-Type: application/json
Accept: application/json

{
  "blog" : "https://github.com/blog",
  "name" : "monalisa octocat"
}

