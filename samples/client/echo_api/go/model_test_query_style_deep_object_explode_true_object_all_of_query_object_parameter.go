/*
Echo Server API

Echo Server API

API version: 0.1.0
Contact: team@openapitools.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter{}

// TestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter struct for TestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter
type TestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter struct {
	Size *string `json:"size,omitempty"`
	Color *string `json:"color,omitempty"`
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewTestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter instantiates a new TestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter() *TestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter {
	this := TestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter{}
	return &this
}

// NewTestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameterWithDefaults instantiates a new TestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameterWithDefaults() *TestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter {
	this := TestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter{}
	return &this
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *TestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter) GetSize() string {
	if o == nil || IsNil(o.Size) {
		var ret string
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter) GetSizeOk() (*string, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *TestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given string and assigns it to the Size field.
func (o *TestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter) SetSize(v string) {
	o.Size = &v
}

// GetColor returns the Color field value if set, zero value otherwise.
func (o *TestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter) GetColor() string {
	if o == nil || IsNil(o.Color) {
		var ret string
		return ret
	}
	return *o.Color
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter) GetColorOk() (*string, bool) {
	if o == nil || IsNil(o.Color) {
		return nil, false
	}
	return o.Color, true
}

// HasColor returns a boolean if a field has been set.
func (o *TestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter) HasColor() bool {
	if o != nil && !IsNil(o.Color) {
		return true
	}

	return false
}

// SetColor gets a reference to the given string and assigns it to the Color field.
func (o *TestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter) SetColor(v string) {
	o.Color = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *TestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *TestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter) SetName(v string) {
	o.Name = &v
}

func (o TestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.Color) {
		toSerialize["color"] = o.Color
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableTestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter struct {
	value *TestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter
	isSet bool
}

func (v NullableTestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter) Get() *TestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter {
	return v.value
}

func (v *NullableTestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter) Set(val *TestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter) {
	v.value = val
	v.isSet = true
}

func (v NullableTestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter) IsSet() bool {
	return v.isSet
}

func (v *NullableTestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter(val *TestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter) *NullableTestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter {
	return &NullableTestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter{value: val, isSet: true}
}

func (v NullableTestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


