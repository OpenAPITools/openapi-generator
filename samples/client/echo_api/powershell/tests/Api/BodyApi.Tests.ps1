#
# Echo Server API
# Echo Server API
# Version: 0.1.0
# Contact: team@openapitools.org
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'PSOpenAPITools' -name 'BodyApi' {
    Context 'Test-BinaryGif' {
        It 'Test Test-BinaryGif' {
            #$TestResult = Test-BinaryGif
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Test-BodyApplicationOctetstreamBinary' {
        It 'Test Test-BodyApplicationOctetstreamBinary' {
            #$TestResult = Test-BodyApplicationOctetstreamBinary -Body "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Test-BodyMultipartFormdataArrayOfBinary' {
        It 'Test Test-BodyMultipartFormdataArrayOfBinary' {
            #$TestResult = Test-BodyMultipartFormdataArrayOfBinary -Files "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Test-EchoBodyFreeFormObjectResponseString' {
        It 'Test Test-EchoBodyFreeFormObjectResponseString' {
            #$TestResult = Test-EchoBodyFreeFormObjectResponseString -Body "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Test-EchoBodyPet' {
        It 'Test Test-EchoBodyPet' {
            #$TestResult = Test-EchoBodyPet -Pet "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Test-EchoBodyPetResponseString' {
        It 'Test Test-EchoBodyPetResponseString' {
            #$TestResult = Test-EchoBodyPetResponseString -Pet "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Test-EchoBodyTagResponseString' {
        It 'Test Test-EchoBodyTagResponseString' {
            #$TestResult = Test-EchoBodyTagResponseString -Tag "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Test-EchoBodyAllOfPet' {
        It 'Test Test-EchoBodyAllOfPet' {
            #$TestResult = Test-EchoBodyAllOfPet -Pet "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
