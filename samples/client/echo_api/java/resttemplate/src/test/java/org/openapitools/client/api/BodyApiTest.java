/*
 * Echo Server API
 * Echo Server API
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: team@openapitools.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import java.io.File;
import org.openapitools.client.model.Pet;
import org.openapitools.client.model.Tag;
import org.junit.Test;
import org.junit.Ignore;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BodyApi
 */
@Ignore
public class BodyApiTest {

    private final BodyApi api = new BodyApi();

    
    /**
     * Test binary (gif) response body
     *
     * Test binary (gif) response body
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void testBinaryGifTest() {

        File response = api.testBinaryGif();

        // TODO: test validations
    }
    
    /**
     * Test body parameter(s)
     *
     * Test body parameter(s)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void testBodyApplicationOctetstreamBinaryTest() {
        File body = null;

        String response = api.testBodyApplicationOctetstreamBinary(body);

        // TODO: test validations
    }
    
    /**
     * Test array of binary in multipart mime
     *
     * Test array of binary in multipart mime
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void testBodyMultipartFormdataArrayOfBinaryTest() {
        List<File> files = null;

        String response = api.testBodyMultipartFormdataArrayOfBinary(files);

        // TODO: test validations
    }
    
    /**
     * Test body parameter(s)
     *
     * Test body parameter(s)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void testEchoBodyAllOfPetTest() {
        Pet pet = null;

        Pet response = api.testEchoBodyAllOfPet(pet);

        // TODO: test validations
    }
    
    /**
     * Test free form object
     *
     * Test free form object
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void testEchoBodyFreeFormObjectResponseStringTest() {
        Object body = null;

        String response = api.testEchoBodyFreeFormObjectResponseString(body);

        // TODO: test validations
    }
    
    /**
     * Test body parameter(s)
     *
     * Test body parameter(s)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void testEchoBodyPetTest() {
        Pet pet = null;

        Pet response = api.testEchoBodyPet(pet);

        // TODO: test validations
    }
    
    /**
     * Test empty response body
     *
     * Test empty response body
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void testEchoBodyPetResponseStringTest() {
        Pet pet = null;

        String response = api.testEchoBodyPetResponseString(pet);

        // TODO: test validations
    }
    
    /**
     * Test empty json (request body)
     *
     * Test empty json (request body)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void testEchoBodyTagResponseStringTest() {
        Tag tag = null;

        String response = api.testEchoBodyTagResponseString(tag);

        // TODO: test validations
    }
    
}
