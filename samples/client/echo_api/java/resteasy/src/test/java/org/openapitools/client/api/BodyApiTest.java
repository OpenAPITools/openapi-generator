/*
 * Echo Server API
 * Echo Server API
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: team@openapitools.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.junit.jupiter.api.Test;
import org.openapitools.client.ApiException;
import org.openapitools.client.api.EchoServerResponseParser;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;

import static org.assertj.core.api.Assertions.assertThat;
import static org.junit.jupiter.api.Assertions.assertTrue;

/**
 * API tests for BodyApi
 */
public class BodyApiTest {

    private final BodyApi api = new BodyApi();

    /**
     * Test binary (gif) response body
     *
     * Test binary (gif) response body
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void testBinaryGifTest() throws ApiException {
        //
        //File response = api.testBinaryGif();

        // TODO: test validations
    }
    /**
     * Test body parameter(s)
     *
     * Test body parameter(s)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void testBodyApplicationOctetstreamBinaryTest() throws ApiException {
        //
        //File body = null;
        //
        //String response = api.testBodyApplicationOctetstreamBinary(body);

        // TODO: test validations
    }
    /**
     * Test array of binary in multipart mime
     *
     * Test array of binary in multipart mime
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void testBodyMultipartFormdataArrayOfBinaryTest() throws ApiException {
        //
        //List<File> files = null;
        //
        //String response = api.testBodyMultipartFormdataArrayOfBinary(files);

        // TODO: test validations
    }

    /**
     * Test single binary in multipart mime
     *
     * @see
     * <a href="https://github.com/OpenAPITools/openapi-generator/issues/17367">#17367</a>
     */
    @Test
    public void testBodyMultipartFormdataSingleBinaryTest()
    throws ApiException, IOException {
        File myFile = new File("test.txt");
        if (!myFile.exists()){
            assertTrue(myFile.createNewFile());
        }
        FileWriter fw = new FileWriter(myFile);
        fw.write("testing only");
        fw.close();
        myFile.deleteOnExit();

        String response =
                api.testBodyMultipartFormdataSingleBinary(myFile);

        EchoServerResponseParser parser =
                new EchoServerResponseParser(response);

        String contentDisposition = parser.headers.get("Content-Disposition");

        assertThat(contentDisposition).contains(
                "form-data; name=\"my-file\"; filename=\"test.txt\""
        );
    }

    /**
     * Test body parameter(s)
     *
     * Test body parameter(s)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void testEchoBodyAllOfPetTest() throws ApiException {
        //
        //Pet pet = null;
        //
        //Pet response = api.testEchoBodyAllOfPet(pet);

        // TODO: test validations
    }
    /**
     * Test free form object
     *
     * Test free form object
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void testEchoBodyFreeFormObjectResponseStringTest() throws ApiException {
        //
        //Object body = null;
        //
        //String response = api.testEchoBodyFreeFormObjectResponseString(body);

        // TODO: test validations
    }
    /**
     * Test body parameter(s)
     *
     * Test body parameter(s)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void testEchoBodyPetTest() throws ApiException {
        //
        //Pet pet = null;
        //
        //Pet response = api.testEchoBodyPet(pet);

        // TODO: test validations
    }
    /**
     * Test empty response body
     *
     * Test empty response body
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void testEchoBodyPetResponseStringTest() throws ApiException {
        //
        //Pet pet = null;
        //
        //String response = api.testEchoBodyPetResponseString(pet);

        // TODO: test validations
    }
    /**
     * Test empty json (request body)
     *
     * Test empty json (request body)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void testEchoBodyTagResponseStringTest() throws ApiException {
        //
        //Tag tag = null;
        //
        //String response = api.testEchoBodyTagResponseString(tag);

        // TODO: test validations
    }
}
