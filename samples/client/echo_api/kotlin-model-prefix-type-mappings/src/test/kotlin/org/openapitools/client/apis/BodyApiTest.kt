/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.apis.BodyApi
import org.openapitools.client.models.ApiPet
import org.openapitools.client.models.ApiTag

class BodyApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of BodyApi
        //val apiInstance = BodyApi()

        // to test testBinaryGif
        should("test testBinaryGif") {
            // uncomment below to test testBinaryGif
            //val result : RequestBody = apiInstance.testBinaryGif()
            //result shouldBe ("TODO")
        }

        // to test testBodyApplicationOctetstreamBinary
        should("test testBodyApplicationOctetstreamBinary") {
            // uncomment below to test testBodyApplicationOctetstreamBinary
            //val body : RequestBody = BINARY_DATA_HERE // RequestBody | 
            //val result : kotlin.String = apiInstance.testBodyApplicationOctetstreamBinary(body)
            //result shouldBe ("TODO")
        }

        // to test testBodyMultipartFormdataArrayOfBinary
        should("test testBodyMultipartFormdataArrayOfBinary") {
            // uncomment below to test testBodyMultipartFormdataArrayOfBinary
            //val files : kotlin.collections.List<RequestBody> = /path/to/file.txt // kotlin.collections.List<RequestBody> | 
            //val result : kotlin.String = apiInstance.testBodyMultipartFormdataArrayOfBinary(files)
            //result shouldBe ("TODO")
        }

        // to test testBodyMultipartFormdataSingleBinary
        should("test testBodyMultipartFormdataSingleBinary") {
            // uncomment below to test testBodyMultipartFormdataSingleBinary
            //val myFile : RequestBody = BINARY_DATA_HERE // RequestBody | 
            //val result : kotlin.String = apiInstance.testBodyMultipartFormdataSingleBinary(myFile)
            //result shouldBe ("TODO")
        }

        // to test testEchoBodyFreeFormObjectResponseString
        should("test testEchoBodyFreeFormObjectResponseString") {
            // uncomment below to test testEchoBodyFreeFormObjectResponseString
            //val body : kotlin.Any = Object // kotlin.Any | Free form object
            //val result : kotlin.String = apiInstance.testEchoBodyFreeFormObjectResponseString(body)
            //result shouldBe ("TODO")
        }

        // to test testEchoBodyPet
        should("test testEchoBodyPet") {
            // uncomment below to test testEchoBodyPet
            //val apiPet : ApiPet =  // ApiPet | Pet object that needs to be added to the store
            //val result : ApiPet = apiInstance.testEchoBodyPet(apiPet)
            //result shouldBe ("TODO")
        }

        // to test testEchoBodyPetResponseString
        should("test testEchoBodyPetResponseString") {
            // uncomment below to test testEchoBodyPetResponseString
            //val apiPet : ApiPet =  // ApiPet | Pet object that needs to be added to the store
            //val result : kotlin.String = apiInstance.testEchoBodyPetResponseString(apiPet)
            //result shouldBe ("TODO")
        }

        // to test testEchoBodyTagResponseString
        should("test testEchoBodyTagResponseString") {
            // uncomment below to test testEchoBodyTagResponseString
            //val apiTag : ApiTag =  // ApiTag | Tag object
            //val result : kotlin.String = apiInstance.testEchoBodyTagResponseString(apiTag)
            //result shouldBe ("TODO")
        }

    }
}
