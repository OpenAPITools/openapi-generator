/* 
 * Swagger Petstore *_/ ' \" =end - - \\r\\n \\n \\r
 *
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\  *_/ ' \" =end - -       
 *
 * OpenAPI spec version: 1.0.0 *_/ ' \" =end - - \\r\\n \\n \\r
 * Contact: apiteam@swagger.io *_/ ' \" =end - - \\r\\n \\n \\r
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing FakeApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class FakeApiTests
    {
        private FakeApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new FakeApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of FakeApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' FakeApi
            //Assert.IsInstanceOfType(typeof(FakeApi), instance, "instance is a FakeApi");
        }

        
        /// <summary>
        /// Test TestCodeInjectEndRnNR
        /// </summary>
        [Test]
        public void TestCodeInjectEndRnNRTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string testCodeInjectEndRnNR = null;
            //instance.TestCodeInjectEndRnNR(testCodeInjectEndRnNR);
            
        }
        
    }

}
