//
// FakeAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Alamofire



public class FakeAPI: APIBase {
    /**
     To test code injection *_/ ' \" =end -- \\r\\n \\n \\r
     
     - parameter UNKNOWN_BASE_TYPE: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func testCodeInjectEndRnNR(UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE: AnyObject? = nil, completion: ((error: ErrorType?) -> Void)) {
        testCodeInjectEndRnNRWithRequestBuilder(UNKNOWN_BASE_TYPE: UNKNOWN_BASE_TYPE).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     To test code injection *_/ ' \" =end -- \\r\\n \\n \\r
     - PUT /fake     - parameter UNKNOWN_BASE_TYPE: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    public class func testCodeInjectEndRnNRWithRequestBuilder(UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE: AnyObject? = nil) -> RequestBuilder<Void> {
        let path = "/fake"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters = UNKNOWN_BASE_TYPE?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
