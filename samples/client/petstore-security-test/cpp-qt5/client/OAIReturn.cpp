/**
 * OpenAPI Petstore *_/ ' \" =end -- \\r\\n \\n \\r
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\  *_/ ' \" =end --       
 *
 * OpenAPI spec version: 1.0.0 *_/ ' \" =end -- \\r\\n \\n \\r
 * Contact: something@something.abc *_/ ' \" =end -- \\r\\n \\n \\r
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIReturn.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIReturn::OAIReturn(QString json) {
    init();
    this->fromJson(json);
}

OAIReturn::OAIReturn() {
    init();
}

OAIReturn::~OAIReturn() {
    this->cleanup();
}

void
OAIReturn::init() {
    _return = 0;
    m__return_isSet = false;
}

void
OAIReturn::cleanup() {

}

OAIReturn*
OAIReturn::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIReturn::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&_return, pJson["return"], "qint32", "");
    
}

QString
OAIReturn::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIReturn::asJsonObject() {
    QJsonObject obj;
    if(m__return_isSet){
        obj.insert("return", QJsonValue(_return));
    }

    return obj;
}

qint32
OAIReturn::getReturn() {
    return _return;
}
void
OAIReturn::setReturn(qint32 _return) {
    this->_return = _return;
    this->m__return_isSet = true;
}


bool
OAIReturn::isSet(){
    bool isObjectUpdated = false;
    do{
        if(m__return_isSet){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

