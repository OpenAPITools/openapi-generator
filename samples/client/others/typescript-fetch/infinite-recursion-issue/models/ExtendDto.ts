/* tslint:disable */
/* eslint-disable */
/**
 * Minimal
 * Api to reproduce bug
 *
 * The version of the OpenAPI document: 0.5.1-SNAPSHOT.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TestBaseDto } from './TestBaseDto';
import {
    TestBaseDtoFromJSON,
    TestBaseDtoFromJSONTyped,
    TestBaseDtoToJSON,
    TestBaseDtoToJSONTyped,
} from './TestBaseDto';
import type { TestObjectType } from './TestObjectType';
import {
    TestObjectTypeFromJSON,
    TestObjectTypeFromJSONTyped,
    TestObjectTypeToJSON,
    TestObjectTypeToJSONTyped,
} from './TestObjectType';

/**
 * 
 * @export
 * @interface ExtendDto
 */
export interface ExtendDto extends TestBaseDto {
    /**
     * 
     * @type {Array<TestBaseDto>}
     * @memberof ExtendDto
     */
    someItems?: Array<TestBaseDto> | undefined;
}



/**
 * Check if a given object implements the ExtendDto interface.
 */
export function instanceOfExtendDto(value: object): value is ExtendDto {
    return true;
}

export function ExtendDtoFromJSON(json: any): ExtendDto {
    return ExtendDtoFromJSONTyped(json, false);
}

export function ExtendDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExtendDto {
    if (json == null) {
        return json;
    }
    return {
        ...TestBaseDtoFromJSONTyped(json, true),
        'someItems': json['someItems'] == null ? undefined : ((json['someItems'] as Array<any>).map(TestBaseDtoFromJSON)),
    };
}

export function ExtendDtoToJSON(json: any): ExtendDto {
    return ExtendDtoToJSONTyped(json, false);
}

export function ExtendDtoToJSONTyped(value?: ExtendDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        ...TestBaseDtoToJSONTyped(value, true),
        'someItems': value['someItems'] == null ? undefined : ((value['someItems'] as Array<any>).map(TestBaseDtoToJSON)),
    };
}

