/*
 * oneOf test
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
#[serde(tag = "realtype")]
pub enum GetState200Response {
    #[serde(rename="one_of_0")]
    one_of_0(Box<crate::models::ObjA>),
    #[serde(rename="one_of_1")]
    one_of_1(Box<crate::models::ObjB>),
    #[serde(rename="one_of_2")]
    one_of_2(Box<crate::models::ObjD>),
}

impl Default for GetState200Response {
    fn default() -> Self {
        Self::one_of_0(Default::default())
    }
}


