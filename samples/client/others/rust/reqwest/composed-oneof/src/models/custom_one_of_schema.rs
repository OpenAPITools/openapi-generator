/*
 * oneOf test
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use super::ObjA;
use super::ObjB;


#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
#[serde(tag = "realtype")]
pub enum CustomOneOfSchema {
    ObjA(Box<ObjA>),
    ObjB(Box<ObjB>),
}

impl Default for CustomOneOfSchema {
    fn default() -> Self {
        Self::ObjA(Box::default())
    }
}

impl From<ObjA> for CustomOneOfSchema {
    fn from(model: ObjA) -> Self {
        Self::ObjA(Box::new(model))
    }
}

impl From<ObjB> for CustomOneOfSchema {
    fn from(model: ObjB) -> Self {
        Self::ObjB(Box::new(model))
    }
}




