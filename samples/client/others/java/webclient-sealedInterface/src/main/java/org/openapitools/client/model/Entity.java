/*
 * ByRefOrValue
 * This tests for a oneOf interface representation 
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Entity
 */
@JsonPropertyOrder({
  Entity.JSON_PROPERTY_HREF,
  Entity.JSON_PROPERTY_ID,
  Entity.JSON_PROPERTY_AT_SCHEMA_LOCATION,
  Entity.JSON_PROPERTY_AT_BASE_TYPE,
  Entity.JSON_PROPERTY_AT_TYPE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.15.0-SNAPSHOT")
@JsonIgnoreProperties(
  value = "@type", // ignore manually set @type, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the @type to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "@type", visible = true)
@JsonSubTypes({
  @JsonSubTypes.Type(value = Bar.class, name = "Bar"),
  @JsonSubTypes.Type(value = BarCreate.class, name = "Bar_Create"),
  @JsonSubTypes.Type(value = Foo.class, name = "Foo"),
  @JsonSubTypes.Type(value = Pasta.class, name = "Pasta"),
  @JsonSubTypes.Type(value = Pizza.class, name = "Pizza"),
  @JsonSubTypes.Type(value = PizzaSpeziale.class, name = "PizzaSpeziale"),
})

public class Entity {
  public static final String JSON_PROPERTY_HREF = "href";
  @javax.annotation.Nullable
  protected String href;

  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nullable
  protected String id;

  public static final String JSON_PROPERTY_AT_SCHEMA_LOCATION = "@schemaLocation";
  @javax.annotation.Nullable
  protected String atSchemaLocation;

  public static final String JSON_PROPERTY_AT_BASE_TYPE = "@baseType";
  @javax.annotation.Nullable
  protected String atBaseType;

  public static final String JSON_PROPERTY_AT_TYPE = "@type";
  @javax.annotation.Nonnull
  protected String atType;

  public Entity() {
  }

  public Entity href(@javax.annotation.Nullable String href) {
    
    this.href = href;
    return this;
  }

  /**
   * Hyperlink reference
   * @return href
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HREF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHref() {
    return href;
  }


  @JsonProperty(JSON_PROPERTY_HREF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHref(@javax.annotation.Nullable String href) {
    this.href = href;
  }

  public Entity id(@javax.annotation.Nullable String id) {
    
    this.id = id;
    return this;
  }

  /**
   * unique identifier
   * @return id
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(@javax.annotation.Nullable String id) {
    this.id = id;
  }

  public Entity atSchemaLocation(@javax.annotation.Nullable String atSchemaLocation) {
    
    this.atSchemaLocation = atSchemaLocation;
    return this;
  }

  /**
   * A URI to a JSON-Schema file that defines additional attributes and relationships
   * @return atSchemaLocation
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AT_SCHEMA_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAtSchemaLocation() {
    return atSchemaLocation;
  }


  @JsonProperty(JSON_PROPERTY_AT_SCHEMA_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAtSchemaLocation(@javax.annotation.Nullable String atSchemaLocation) {
    this.atSchemaLocation = atSchemaLocation;
  }

  public Entity atBaseType(@javax.annotation.Nullable String atBaseType) {
    
    this.atBaseType = atBaseType;
    return this;
  }

  /**
   * When sub-classing, this defines the super-class
   * @return atBaseType
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AT_BASE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAtBaseType() {
    return atBaseType;
  }


  @JsonProperty(JSON_PROPERTY_AT_BASE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAtBaseType(@javax.annotation.Nullable String atBaseType) {
    this.atBaseType = atBaseType;
  }

  public Entity atType(@javax.annotation.Nonnull String atType) {
    
    this.atType = atType;
    return this;
  }

  /**
   * When sub-classing, this defines the sub-class Extensible name
   * @return atType
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAtType() {
    return atType;
  }


  @JsonProperty(JSON_PROPERTY_AT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAtType(@javax.annotation.Nonnull String atType) {
    this.atType = atType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Entity entity = (Entity) o;
    return Objects.equals(this.href, entity.href) &&
        Objects.equals(this.id, entity.id) &&
        Objects.equals(this.atSchemaLocation, entity.atSchemaLocation) &&
        Objects.equals(this.atBaseType, entity.atBaseType) &&
        Objects.equals(this.atType, entity.atType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(href, id, atSchemaLocation, atBaseType, atType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Entity {\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    atSchemaLocation: ").append(toIndentedString(atSchemaLocation)).append("\n");
    sb.append("    atBaseType: ").append(toIndentedString(atBaseType)).append("\n");
    sb.append("    atType: ").append(toIndentedString(atType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

