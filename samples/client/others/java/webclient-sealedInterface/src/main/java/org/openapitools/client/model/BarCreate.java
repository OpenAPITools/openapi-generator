/*
 * ByRefOrValue
 * This tests for a oneOf interface representation 
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.Entity;
import org.openapitools.client.model.FooRefOrValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * BarCreate
 */
@JsonPropertyOrder({
  BarCreate.JSON_PROPERTY_BAR_PROP_A,
  BarCreate.JSON_PROPERTY_FOO_PROP_B,
  BarCreate.JSON_PROPERTY_FOO
})
@JsonTypeName("Bar_Create")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.16.0-SNAPSHOT")
@JsonIgnoreProperties(
  value = "@type", // ignore manually set @type, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the @type to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "@type", visible = true)

public class BarCreate extends Entity {
  public static final String JSON_PROPERTY_BAR_PROP_A = "barPropA";
  @javax.annotation.Nullable
  private String barPropA;

  public static final String JSON_PROPERTY_FOO_PROP_B = "fooPropB";
  @javax.annotation.Nullable
  private String fooPropB;

  public static final String JSON_PROPERTY_FOO = "foo";
  @javax.annotation.Nullable
  private FooRefOrValue foo;

  public BarCreate() {

  }

  public BarCreate barPropA(@javax.annotation.Nullable String barPropA) {
    
    this.barPropA = barPropA;
    return this;
  }

  /**
   * Get barPropA
   * @return barPropA
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BAR_PROP_A)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBarPropA() {
    return barPropA;
  }


  @JsonProperty(JSON_PROPERTY_BAR_PROP_A)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBarPropA(@javax.annotation.Nullable String barPropA) {
    this.barPropA = barPropA;
  }

  public BarCreate fooPropB(@javax.annotation.Nullable String fooPropB) {
    
    this.fooPropB = fooPropB;
    return this;
  }

  /**
   * Get fooPropB
   * @return fooPropB
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FOO_PROP_B)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFooPropB() {
    return fooPropB;
  }


  @JsonProperty(JSON_PROPERTY_FOO_PROP_B)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFooPropB(@javax.annotation.Nullable String fooPropB) {
    this.fooPropB = fooPropB;
  }

  public BarCreate foo(@javax.annotation.Nullable FooRefOrValue foo) {
    
    this.foo = foo;
    return this;
  }

  /**
   * Get foo
   * @return foo
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FOO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FooRefOrValue getFoo() {
    return foo;
  }


  @JsonProperty(JSON_PROPERTY_FOO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFoo(@javax.annotation.Nullable FooRefOrValue foo) {
    this.foo = foo;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BarCreate barCreate = (BarCreate) o;
    return Objects.equals(this.barPropA, barCreate.barPropA) &&
        Objects.equals(this.fooPropB, barCreate.fooPropB) &&
        Objects.equals(this.foo, barCreate.foo) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(barPropA, fooPropB, foo, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BarCreate {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    barPropA: ").append(toIndentedString(barPropA)).append("\n");
    sb.append("    fooPropB: ").append(toIndentedString(fooPropB)).append("\n");
    sb.append("    foo: ").append(toIndentedString(foo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

