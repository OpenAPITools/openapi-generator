/*
  OpenAPI Petstore

  This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.

  The version of the OpenAPI document: 1.0.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package petstore.services.storeservice;

import "google/protobuf/empty.proto";
import public "models/order.proto";

service StoreService {
  rpc DeleteOrder (DeleteOrderRequest) returns (DeleteOrderResponse);

  rpc GetInventory (google.protobuf.Empty) returns (GetInventoryResponse);

  rpc GetOrderById (GetOrderByIdRequest) returns (GetOrderByIdResponse);

  rpc PlaceOrder (PlaceOrderRequest) returns (PlaceOrderResponse);

}

message DeleteOrderRequest {
  // ID of the order that needs to be deleted
  string order_id = 1;

}

message DeleteOrderResponse {
    oneof response {
        google.protobuf.Empty empty_400 = 1;
        google.protobuf.Empty empty_404 = 2;
    }
}
message GetInventoryResponse {
    oneof response {
        int32 int32_200 = 1;
    }
}
message GetOrderByIdRequest {
  // ID of pet that needs to be fetched
  int64 order_id = 1;

}

message GetOrderByIdResponse {
    oneof response {
        Order order_200 = 1;
        google.protobuf.Empty empty_400 = 2;
        google.protobuf.Empty empty_404 = 3;
    }
}
message PlaceOrderRequest {
  // order placed for purchasing the pet
  Order order = 1;

}

message PlaceOrderResponse {
    oneof response {
        Order order_200 = 1;
        google.protobuf.Empty empty_400 = 2;
    }
}
