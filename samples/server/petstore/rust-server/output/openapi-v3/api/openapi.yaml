openapi: 3.0.1
info:
  description: API under test
  title: My title
  version: 1.0.7
servers:
- url: /
paths:
  /xml:
    post:
      requestBody:
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/xml_array'
      responses:
        "201":
          description: OK
        "400":
          description: Bad Request
      summary: Post an array
    put:
      requestBody:
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/xml_object'
      responses:
        "201":
          description: OK
        "400":
          description: Bad Request
  /multiget:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/anotherXmlObject'
          description: JSON rsp
        "201":
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/inline_response_201'
          description: XML rsp
        "202":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: octet rsp
        "203":
          content:
            text/plain:
              schema:
                type: string
          description: string rsp
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/anotherXmlObject'
          description: Duplicate Response long text. One.
        "205":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/anotherXmlObject'
          description: Duplicate Response long text. Two.
        "206":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/anotherXmlObject'
          description: Duplicate Response long text. Three.
      summary: Get some stuff.
  /xml_other:
    post:
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/anotherXmlObject'
      responses:
        "201":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/anotherXmlObject'
          description: OK
        "400":
          description: Bad Request
    put:
      requestBody:
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/anotherXmlArray'
      responses:
        "201":
          description: OK
        "400":
          description: Bad Request
  /xml_extra:
    post:
      requestBody:
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/duplicate_xml_object'
      responses:
        "201":
          description: OK
        "400":
          description: Bad Request
  /uuid:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UuidObject'
          description: Duplicate Response long text. One.
  /required_octet_stream:
    put:
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: byte
              type: string
        required: true
      responses:
        "200":
          description: OK
  /readonly_auth_scheme:
    get:
      responses:
        "200":
          description: Check that limiting to a single required auth scheme works
      security:
      - authScheme:
        - test.read
  /multiple_auth_scheme:
    get:
      responses:
        "200":
          description: Check that limiting to multiple required auth schemes works
      security:
      - authScheme:
        - test.read
        - test.write
  /responses_with_headers:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                type: String
          description: Success
          headers:
            Success-Info:
              explode: false
              schema:
                type: String
              style: simple
        "412":
          description: Precondition Failed
          headers:
            Further-Info:
              explode: false
              schema:
                type: String
              style: simple
            Failure-Info:
              explode: false
              schema:
                type: String
              style: simple
components:
  schemas:
    UuidObject:
      description: Test a model containing a UUID
      format: uuid
      type: string
    xml_array:
      items:
        $ref: '#/components/schemas/xml_inner'
      type: array
      xml:
        name: CamelXmlArray
        wrapped: true
    xml_inner:
      type: string
      xml:
        name: camelXmlInner
    xml_object:
      description: An XML object
      properties:
        innerString:
          type: string
        other_inner_rename:
          type: integer
      title: an XML object
      type: object
      xml:
        name: camelXmlObject
        namespace: http://foo.bar
    duplicate_xml_object:
      description: An XML object
      properties:
        inner_string:
          type: string
        inner_array:
          $ref: '#/components/schemas/xml_array'
      required:
      - inner_array
      type: object
      xml:
        name: camelDuplicateXmlObject
        namespace: http://different.bar
    anotherXmlArray:
      items:
        $ref: '#/components/schemas/anotherXmlInner'
      type: array
      xml:
        name: snake_another_xml_array
        wrapped: true
    anotherXmlInner:
      type: string
      xml:
        name: snake_another_xml_inner
    anotherXmlObject:
      description: An XML object
      example:
        inner_string: inner_string
      properties:
        inner_string:
          type: string
      type: object
      xml:
        name: snake_another_xml_object
        namespace: http://foo.bar
    inline_response_201:
      properties:
        foo:
          type: string
  securitySchemes:
    authScheme:
      flows:
        authorizationCode:
          authorizationUrl: http://example.org
          scopes:
            test.read: Allowed to read state.
            test.write: Allowed to change state.
          tokenUrl: http://example.org
      type: oauth2

