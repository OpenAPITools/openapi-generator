/**
 * OpenAPI Petstore
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: contact@kindservices.co.uk
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 */


package org.openapitools.server.api

enum ServiceResponse[+A]:
    case Ok[T](result: T, headers : Map[String, String] = Map.empty)                              extends ServiceResponse[T]
    case Other(code: Int, description: Option[String], headers : Map[String, String] = Map.empty) extends ServiceResponse[Nothing]
    case NotFound(headers : Map[String, String] = Map.empty)                                      extends ServiceResponse[Nothing]

    def asJsonResponse = withHeader("Content-Type", "application/json")
    def withHeader(key : String, value :String) = withHeaders(Map(key -> value))
    def withHeaders(newHeaders : Map[String, String]) = this match {
        case Ok(value, headers) => Ok(value, headers ++ newHeaders)
        case Other(code, description, headers) => Other(code, description, headers ++ newHeaders)
        case NotFound(headers) => NotFound(headers)
    }

object ServiceResponse {
  def apply[A](value: A) = Ok(value)
  def apply[A](code: Int, description: String = ""): ServiceResponse[A] = Other(code, Option(description.trim).filterNot(_.isEmpty))
  def notFound[A]: ServiceResponse[A] = NotFound()
  def notImplemented[A]: ServiceResponse[A] = apply(500, "not implemented")
}
