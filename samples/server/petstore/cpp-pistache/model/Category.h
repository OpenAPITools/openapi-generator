/**
* OpenAPI Petstore
* This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
*
* OpenAPI spec version: 1.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * Category.h
 *
 * A category for a pet
 */

#ifndef Category_H_
#define Category_H_


#include "ModelBase.h"

#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// A category for a pet
/// </summary>
class  Category
    : public ModelBase
{
public:
    Category();
    virtual ~Category();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// Category members

    /// <summary>
    /// 
    /// </summary>
    int64_t getId() const;
    void setId(int64_t const  value);
    bool idIsSet() const;
    void unsetId();
    /// <summary>
    /// 
    /// </summary>
    std::string getName() const;
    void setName(std::string const & value);
    bool nameIsSet() const;
    void unsetName();

protected:
    int64_t m_Id;
    bool m_IdIsSet;
    std::string m_Name;
    bool m_NameIsSet;
};

}
}
}
}

#endif /* Category_H_ */
