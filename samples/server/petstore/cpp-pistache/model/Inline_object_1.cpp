/**
* OpenAPI Petstore
* This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
*
* The version of the OpenAPI document: 1.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "Inline_object_1.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

Inline_object_1::Inline_object_1()
{
    m_AdditionalMetadata = "";
    m_AdditionalMetadataIsSet = false;
    m_fileIsSet = false;
    
}

Inline_object_1::~Inline_object_1()
{
}

void Inline_object_1::validate()
{
    // TODO: implement validation
}

void to_json(nlohmann::json& j, const Inline_object_1& o)
{
    j = nlohmann::json();
    if(o.additionalMetadataIsSet())
        j["additionalMetadata"] = o.m_AdditionalMetadata;
    if(o.fileIsSet())
        j["file"] = o.m_file;
}

void from_json(const nlohmann::json& j, Inline_object_1& o)
{
    if(j.find("additionalMetadata") != j.end())
    {
        j.at("additionalMetadata").get_to(o.m_AdditionalMetadata);
        o.m_AdditionalMetadataIsSet = true;
    } 
    if(j.find("file") != j.end())
    {
        j.at("file").get_to(o.m_file);
        o.m_fileIsSet = true;
    } 
}

std::string Inline_object_1::getAdditionalMetadata() const
{
    return m_AdditionalMetadata;
}
void Inline_object_1::setAdditionalMetadata(std::string const& value)
{
    m_AdditionalMetadata = value;
    m_AdditionalMetadataIsSet = true;
}
bool Inline_object_1::additionalMetadataIsSet() const
{
    return m_AdditionalMetadataIsSet;
}
void Inline_object_1::unsetAdditionalMetadata()
{
    m_AdditionalMetadataIsSet = false;
}
std::string Inline_object_1::getFile() const
{
    return m_file;
}
void Inline_object_1::setFile(std::string const& value)
{
    m_file = value;
    m_fileIsSet = true;
}
bool Inline_object_1::fileIsSet() const
{
    return m_fileIsSet;
}
void Inline_object_1::unsetfile()
{
    m_fileIsSet = false;
}

}
}
}
}

