# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.outer_enum_integer import OuterEnumInteger
from openapi_server import util

from openapi_server.models.outer_enum_integer import OuterEnumInteger  # noqa: E501

class OuterObjectWithEnumProperty(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, value=None):  # noqa: E501
        """OuterObjectWithEnumProperty - a model defined in OpenAPI

        :param value: The value of this OuterObjectWithEnumProperty.  # noqa: E501
        :type value: OuterEnumInteger
        """
        self.openapi_types = {
            'value': OuterEnumInteger
        }

        self.attribute_map = {
            'value': 'value'
        }

        self._value = value

    @classmethod
    def from_dict(cls, dikt) -> 'OuterObjectWithEnumProperty':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The OuterObjectWithEnumProperty of this OuterObjectWithEnumProperty.  # noqa: E501
        :rtype: OuterObjectWithEnumProperty
        """
        return util.deserialize_model(dikt, cls)

    @property
    def value(self):
        """Gets the value of this OuterObjectWithEnumProperty.


        :return: The value of this OuterObjectWithEnumProperty.
        :rtype: OuterEnumInteger
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this OuterObjectWithEnumProperty.


        :param value: The value of this OuterObjectWithEnumProperty.
        :type value: OuterEnumInteger
        """
        if value is None:
            raise ValueError("Invalid value for `value`, must not be `None`")  # noqa: E501
        # assert that this is a valid OuterEnumInteger enum value
        value = OuterEnumInteger.of(value)

        self._value = value
