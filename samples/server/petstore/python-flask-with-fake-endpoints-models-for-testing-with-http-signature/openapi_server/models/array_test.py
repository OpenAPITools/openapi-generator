# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.read_only_first import ReadOnlyFirst
from openapi_server import util

from openapi_server.models.read_only_first import ReadOnlyFirst  # noqa: E501

class ArrayTest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, array_of_string=None, array_array_of_integer=None, array_array_of_model=None):  # noqa: E501
        """ArrayTest - a model defined in OpenAPI

        :param array_of_string: The array_of_string of this ArrayTest.  # noqa: E501
        :type array_of_string: List[str]
        :param array_array_of_integer: The array_array_of_integer of this ArrayTest.  # noqa: E501
        :type array_array_of_integer: List[List[int]]
        :param array_array_of_model: The array_array_of_model of this ArrayTest.  # noqa: E501
        :type array_array_of_model: List[List[ReadOnlyFirst]]
        """
        self.openapi_types = {
            'array_of_string': List[str],
            'array_array_of_integer': List[List[int]],
            'array_array_of_model': List[List[ReadOnlyFirst]]
        }

        self.attribute_map = {
            'array_of_string': 'array_of_string',
            'array_array_of_integer': 'array_array_of_integer',
            'array_array_of_model': 'array_array_of_model'
        }

        self._array_of_string = array_of_string
        self._array_array_of_integer = array_array_of_integer
        self._array_array_of_model = array_array_of_model

    @classmethod
    def from_dict(cls, dikt) -> 'ArrayTest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ArrayTest of this ArrayTest.  # noqa: E501
        :rtype: ArrayTest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def array_of_string(self):
        """Gets the array_of_string of this ArrayTest.


        :return: The array_of_string of this ArrayTest.
        :rtype: List[str]
        """
        return self._array_of_string

    @array_of_string.setter
    def array_of_string(self, array_of_string):
        """Sets the array_of_string of this ArrayTest.


        :param array_of_string: The array_of_string of this ArrayTest.
        :type array_of_string: List[str]
        """
        if array_of_string is not None and len(array_of_string) > 3:
            raise ValueError("Invalid value for `array_of_string`, number of items must be less than or equal to `3`")  # noqa: E501
        if array_of_string is not None and len(array_of_string) < 0:
            raise ValueError("Invalid value for `array_of_string`, number of items must be greater than or equal to `0`")  # noqa: E501

        self._array_of_string = array_of_string

    @property
    def array_array_of_integer(self):
        """Gets the array_array_of_integer of this ArrayTest.


        :return: The array_array_of_integer of this ArrayTest.
        :rtype: List[List[int]]
        """
        return self._array_array_of_integer

    @array_array_of_integer.setter
    def array_array_of_integer(self, array_array_of_integer):
        """Sets the array_array_of_integer of this ArrayTest.


        :param array_array_of_integer: The array_array_of_integer of this ArrayTest.
        :type array_array_of_integer: List[List[int]]
        """

        self._array_array_of_integer = array_array_of_integer

    @property
    def array_array_of_model(self):
        """Gets the array_array_of_model of this ArrayTest.


        :return: The array_array_of_model of this ArrayTest.
        :rtype: List[List[ReadOnlyFirst]]
        """
        return self._array_array_of_model

    @array_array_of_model.setter
    def array_array_of_model(self, array_array_of_model):
        """Sets the array_array_of_model of this ArrayTest.


        :param array_array_of_model: The array_array_of_model of this ArrayTest.
        :type array_array_of_model: List[List[ReadOnlyFirst]]
        """

        self._array_array_of_model = array_array_of_model
