# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class CatAllOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, declawed=None):  # noqa: E501
        """CatAllOf - a model defined in OpenAPI

        :param declawed: The declawed of this CatAllOf.  # noqa: E501
        :type declawed: bool
        """
        self.openapi_types = {
            'declawed': bool
        }

        self.attribute_map = {
            'declawed': 'declawed'
        }

        self._declawed = declawed

    @classmethod
    def from_dict(cls, dikt) -> 'CatAllOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Cat_allOf of this CatAllOf.  # noqa: E501
        :rtype: CatAllOf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def declawed(self):
        """Gets the declawed of this CatAllOf.


        :return: The declawed of this CatAllOf.
        :rtype: bool
        """
        return self._declawed

    @declawed.setter
    def declawed(self, declawed):
        """Sets the declawed of this CatAllOf.


        :param declawed: The declawed of this CatAllOf.
        :type declawed: bool
        """

        self._declawed = declawed
