# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.deprecated_object import DeprecatedObject
from openapi_server import util

from openapi_server.models.deprecated_object import DeprecatedObject  # noqa: E501

class ObjectWithDeprecatedFields(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, uuid=None, id=None, deprecated_ref=None, bars=None):  # noqa: E501
        """ObjectWithDeprecatedFields - a model defined in OpenAPI

        :param uuid: The uuid of this ObjectWithDeprecatedFields.  # noqa: E501
        :type uuid: str
        :param id: The id of this ObjectWithDeprecatedFields.  # noqa: E501
        :type id: float
        :param deprecated_ref: The deprecated_ref of this ObjectWithDeprecatedFields.  # noqa: E501
        :type deprecated_ref: DeprecatedObject
        :param bars: The bars of this ObjectWithDeprecatedFields.  # noqa: E501
        :type bars: List[str]
        """
        self.openapi_types = {
            'uuid': str,
            'id': float,
            'deprecated_ref': DeprecatedObject,
            'bars': List[str]
        }

        self.attribute_map = {
            'uuid': 'uuid',
            'id': 'id',
            'deprecated_ref': 'deprecatedRef',
            'bars': 'bars'
        }

        self._uuid = uuid
        self._id = id
        self._deprecated_ref = deprecated_ref
        self._bars = bars

    @classmethod
    def from_dict(cls, dikt) -> 'ObjectWithDeprecatedFields':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ObjectWithDeprecatedFields of this ObjectWithDeprecatedFields.  # noqa: E501
        :rtype: ObjectWithDeprecatedFields
        """
        return util.deserialize_model(dikt, cls)

    @property
    def uuid(self):
        """Gets the uuid of this ObjectWithDeprecatedFields.


        :return: The uuid of this ObjectWithDeprecatedFields.
        :rtype: str
        """
        return self._uuid

    @uuid.setter
    def uuid(self, uuid):
        """Sets the uuid of this ObjectWithDeprecatedFields.


        :param uuid: The uuid of this ObjectWithDeprecatedFields.
        :type uuid: str
        """

        self._uuid = uuid

    @property
    def id(self):
        """Gets the id of this ObjectWithDeprecatedFields.


        :return: The id of this ObjectWithDeprecatedFields.
        :rtype: float
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ObjectWithDeprecatedFields.


        :param id: The id of this ObjectWithDeprecatedFields.
        :type id: float
        """

        self._id = id

    @property
    def deprecated_ref(self):
        """Gets the deprecated_ref of this ObjectWithDeprecatedFields.


        :return: The deprecated_ref of this ObjectWithDeprecatedFields.
        :rtype: DeprecatedObject
        """
        return self._deprecated_ref

    @deprecated_ref.setter
    def deprecated_ref(self, deprecated_ref):
        """Sets the deprecated_ref of this ObjectWithDeprecatedFields.


        :param deprecated_ref: The deprecated_ref of this ObjectWithDeprecatedFields.
        :type deprecated_ref: DeprecatedObject
        """

        self._deprecated_ref = deprecated_ref

    @property
    def bars(self):
        """Gets the bars of this ObjectWithDeprecatedFields.


        :return: The bars of this ObjectWithDeprecatedFields.
        :rtype: List[str]
        """
        return self._bars

    @bars.setter
    def bars(self, bars):
        """Sets the bars of this ObjectWithDeprecatedFields.


        :param bars: The bars of this ObjectWithDeprecatedFields.
        :type bars: List[str]
        """

        self._bars = bars
