# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.file import File
from openapi_server import util

from openapi_server.models.file import File  # noqa: E501

class FileSchemaTestClass(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, file=None, files=None):  # noqa: E501
        """FileSchemaTestClass - a model defined in OpenAPI

        :param file: The file of this FileSchemaTestClass.  # noqa: E501
        :type file: File
        :param files: The files of this FileSchemaTestClass.  # noqa: E501
        :type files: List[File]
        """
        self.openapi_types = {
            'file': File,
            'files': List[File]
        }

        self.attribute_map = {
            'file': 'file',
            'files': 'files'
        }

        self._file = file
        self._files = files

    @classmethod
    def from_dict(cls, dikt) -> 'FileSchemaTestClass':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The FileSchemaTestClass of this FileSchemaTestClass.  # noqa: E501
        :rtype: FileSchemaTestClass
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file(self):
        """Gets the file of this FileSchemaTestClass.


        :return: The file of this FileSchemaTestClass.
        :rtype: File
        """
        return self._file

    @file.setter
    def file(self, file):
        """Sets the file of this FileSchemaTestClass.


        :param file: The file of this FileSchemaTestClass.
        :type file: File
        """

        self._file = file

    @property
    def files(self):
        """Gets the files of this FileSchemaTestClass.


        :return: The files of this FileSchemaTestClass.
        :rtype: List[File]
        """
        return self._files

    @files.setter
    def files(self, files):
        """Sets the files of this FileSchemaTestClass.


        :param files: The files of this FileSchemaTestClass.
        :type files: List[File]
        """

        self._files = files
