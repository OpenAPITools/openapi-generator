# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.animal import Animal
from openapi_server import util

from openapi_server.models.animal import Animal  # noqa: E501

class MixedPropertiesAndAdditionalPropertiesClass(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, uuid=None, date_time=None, map=None):  # noqa: E501
        """MixedPropertiesAndAdditionalPropertiesClass - a model defined in OpenAPI

        :param uuid: The uuid of this MixedPropertiesAndAdditionalPropertiesClass.  # noqa: E501
        :type uuid: str
        :param date_time: The date_time of this MixedPropertiesAndAdditionalPropertiesClass.  # noqa: E501
        :type date_time: datetime
        :param map: The map of this MixedPropertiesAndAdditionalPropertiesClass.  # noqa: E501
        :type map: Dict[str, Animal]
        """
        self.openapi_types = {
            'uuid': str,
            'date_time': datetime,
            'map': Dict[str, Animal]
        }

        self.attribute_map = {
            'uuid': 'uuid',
            'date_time': 'dateTime',
            'map': 'map'
        }

        self._uuid = uuid
        self._date_time = date_time
        self._map = map

    @classmethod
    def from_dict(cls, dikt) -> 'MixedPropertiesAndAdditionalPropertiesClass':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The MixedPropertiesAndAdditionalPropertiesClass of this MixedPropertiesAndAdditionalPropertiesClass.  # noqa: E501
        :rtype: MixedPropertiesAndAdditionalPropertiesClass
        """
        return util.deserialize_model(dikt, cls)

    @property
    def uuid(self):
        """Gets the uuid of this MixedPropertiesAndAdditionalPropertiesClass.


        :return: The uuid of this MixedPropertiesAndAdditionalPropertiesClass.
        :rtype: str
        """
        return self._uuid

    @uuid.setter
    def uuid(self, uuid):
        """Sets the uuid of this MixedPropertiesAndAdditionalPropertiesClass.


        :param uuid: The uuid of this MixedPropertiesAndAdditionalPropertiesClass.
        :type uuid: str
        """

        self._uuid = uuid

    @property
    def date_time(self):
        """Gets the date_time of this MixedPropertiesAndAdditionalPropertiesClass.


        :return: The date_time of this MixedPropertiesAndAdditionalPropertiesClass.
        :rtype: datetime
        """
        return self._date_time

    @date_time.setter
    def date_time(self, date_time):
        """Sets the date_time of this MixedPropertiesAndAdditionalPropertiesClass.


        :param date_time: The date_time of this MixedPropertiesAndAdditionalPropertiesClass.
        :type date_time: datetime
        """

        self._date_time = date_time

    @property
    def map(self):
        """Gets the map of this MixedPropertiesAndAdditionalPropertiesClass.


        :return: The map of this MixedPropertiesAndAdditionalPropertiesClass.
        :rtype: Dict[str, Animal]
        """
        return self._map

    @map.setter
    def map(self, map):
        """Sets the map of this MixedPropertiesAndAdditionalPropertiesClass.


        :param map: The map of this MixedPropertiesAndAdditionalPropertiesClass.
        :type map: Dict[str, Animal]
        """

        self._map = map
