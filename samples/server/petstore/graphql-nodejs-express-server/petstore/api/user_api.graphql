# 
# OpenAPI Petstore
# 
# 
# This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
# 
# Version: 1.0.0
# 
# Generated by OpenAPI Generator: https://openapi-generator.tech

# package petstore

# user_api



input CreateUserInput {
    # Created user object
    body: UserInput
}

input CreateUsersWithArrayInputInput {
    # List of user object
    body: [UserInput]
}

input CreateUsersWithListInputInput {
    # List of user object
    body: [UserInput]
}

input DeleteUserInput {
    # The name that needs to be deleted
    username: String!
}

input UpdateUserInput {
    # name that need to be deleted
    username: String!, 
    # Updated user object
    body: UserInput
}

type Mutation {
  # Create user
  # This can only be done by the logged in user.
  # @param User body Created user object
  # @return [Boolean]
  CreateUser(input: CreateUserInput!): Boolean
  # Creates list of users with given input array
  # @param User body List of user object
  # @return [Boolean]
  CreateUsersWithArrayInput(input: CreateUsersWithArrayInputInput!): Boolean
  # Creates list of users with given input array
  # @param User body List of user object
  # @return [Boolean]
  CreateUsersWithListInput(input: CreateUsersWithListInputInput!): Boolean
  # Delete user
  # This can only be done by the logged in user.
  # @param String! username The name that needs to be deleted
  # @return [Boolean]
  DeleteUser(input: DeleteUserInput!): Boolean
  # Updated user
  # This can only be done by the logged in user.
  # @param String! username name that need to be deleted
  # @param User body Updated user object
  # @return [Boolean]
  UpdateUser(input: UpdateUserInput!): Boolean
}

type Query {
  # Get user by user name
  # @param String! username The name that needs to be fetched. Use user1 for testing.
  # @return [User]
  GetUserByName(username: String!): User
  # Logs user into the system
  # @param String! username The user name for login
  # @param String! password The password for login in clear text
  # @return [String!]
  LoginUser(username: String!, password: String!): String!
  # Logs out current logged in user session
  # @return [Boolean]
  LogoutUser: Boolean
}

