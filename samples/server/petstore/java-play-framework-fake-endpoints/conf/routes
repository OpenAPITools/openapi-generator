# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

GET     /api                        controllers.ApiDocController.api


#Functions for AnotherFake API
PATCH     /v2/another-fake/dummy                     controllers.AnotherFakeApiController.call123testSpecialTags(request: Request)

#Functions for Fake API
POST     /v2/fake/create_xml_item                     controllers.FakeApiController.createXmlItem(request: Request)
POST     /v2/fake/outer/boolean                     controllers.FakeApiController.fakeOuterBooleanSerialize(request: Request)
POST     /v2/fake/outer/composite                     controllers.FakeApiController.fakeOuterCompositeSerialize(request: Request)
POST     /v2/fake/outer/number                     controllers.FakeApiController.fakeOuterNumberSerialize(request: Request)
POST     /v2/fake/outer/string                     controllers.FakeApiController.fakeOuterStringSerialize(request: Request)
PUT     /v2/fake/body-with-file-schema                     controllers.FakeApiController.testBodyWithFileSchema(request: Request)
PUT     /v2/fake/body-with-query-params                     controllers.FakeApiController.testBodyWithQueryParams(request: Request)
PATCH     /v2/fake                     controllers.FakeApiController.testClientModel(request: Request)
POST     /v2/fake                     controllers.FakeApiController.testEndpointParameters(request: Request)
GET     /v2/fake                     controllers.FakeApiController.testEnumParameters(request: Request)
DELETE     /v2/fake                     controllers.FakeApiController.testGroupParameters(request: Request)
POST     /v2/fake/inline-additionalProperties                     controllers.FakeApiController.testInlineAdditionalProperties(request: Request)
GET     /v2/fake/jsonFormData                     controllers.FakeApiController.testJsonFormData(request: Request)
PUT     /v2/fake/test-query-paramters                     controllers.FakeApiController.testQueryParameterCollectionFormat(request: Request)

#Functions for FakeClassnameTags123 API
PATCH     /v2/fake_classname_test                     controllers.FakeClassnameTags123ApiController.testClassname(request: Request)

#Functions for Pet API
POST     /v2/pet                     controllers.PetApiController.addPet(request: Request)
DELETE     /v2/pet/:petId                     controllers.PetApiController.deletePet(request: Request, petId: Long)
GET     /v2/pet/findByStatus                     controllers.PetApiController.findPetsByStatus(request: Request)
GET     /v2/pet/findByTags                     controllers.PetApiController.findPetsByTags(request: Request)
GET     /v2/pet/:petId                     controllers.PetApiController.getPetById(request: Request, petId: Long)
PUT     /v2/pet                     controllers.PetApiController.updatePet(request: Request)
POST     /v2/pet/:petId                     controllers.PetApiController.updatePetWithForm(request: Request, petId: Long)
POST     /v2/pet/:petId/uploadImage                     controllers.PetApiController.uploadFile(request: Request, petId: Long)
POST     /v2/fake/:petId/uploadImageWithRequiredFile                     controllers.PetApiController.uploadFileWithRequiredFile(request: Request, petId: Long)

#Functions for Store API
DELETE     /v2/store/order/:orderId                     controllers.StoreApiController.deleteOrder(request: Request, orderId: String)
GET     /v2/store/inventory                     controllers.StoreApiController.getInventory(request: Request)
GET     /v2/store/order/:orderId                     controllers.StoreApiController.getOrderById(request: Request, orderId: Long)
POST     /v2/store/order                     controllers.StoreApiController.placeOrder(request: Request)

#Functions for User API
POST     /v2/user                     controllers.UserApiController.createUser(request: Request)
POST     /v2/user/createWithArray                     controllers.UserApiController.createUsersWithArrayInput(request: Request)
POST     /v2/user/createWithList                     controllers.UserApiController.createUsersWithListInput(request: Request)
DELETE     /v2/user/:username                     controllers.UserApiController.deleteUser(request: Request, username: String)
GET     /v2/user/:username                     controllers.UserApiController.getUserByName(request: Request, username: String)
GET     /v2/user/login                     controllers.UserApiController.loginUser(request: Request)
GET     /v2/user/logout                     controllers.UserApiController.logoutUser(request: Request)
PUT     /v2/user/:username                     controllers.UserApiController.updateUser(request: Request, username: String)

# Map static resources from the /public folder to the /assets URL path
GET /assets/*file           controllers.Assets.at(file)
GET /versionedAssets/*file  controllers.Assets.versioned(file)