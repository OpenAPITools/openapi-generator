<?php

/**
 * OpenAPI Petstore
 * PHP version 7.2
 *
 * @package OpenAPIServer
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Please update the test case below to test the endpoint.
 */
namespace OpenAPIServer\Api;

use PHPUnit\Framework\TestCase;
use OpenAPIServer\Api\FakeApi;

/**
 * FakeApiTest Class Doc Comment
 *
 * @package OpenAPIServer\Api
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 *
 * @coversDefaultClass \OpenAPIServer\Api\FakeApi
 */
class FakeApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for createXmlItem
     *
     * creates an XmlItem.
     *
     * @covers ::createXmlItem
     */
    public function testCreateXmlItem()
    {
        $this->markTestIncomplete(
            'Test of "createXmlItem" method has not been implemented yet.'
        );
    }

    /**
     * Test case for fakeOuterBooleanSerialize
     *
     * .
     *
     * @covers ::fakeOuterBooleanSerialize
     */
    public function testFakeOuterBooleanSerialize()
    {
        $this->markTestIncomplete(
            'Test of "fakeOuterBooleanSerialize" method has not been implemented yet.'
        );
    }

    /**
     * Test case for fakeOuterCompositeSerialize
     *
     * .
     *
     * @covers ::fakeOuterCompositeSerialize
     */
    public function testFakeOuterCompositeSerialize()
    {
        $this->markTestIncomplete(
            'Test of "fakeOuterCompositeSerialize" method has not been implemented yet.'
        );
    }

    /**
     * Test case for fakeOuterNumberSerialize
     *
     * .
     *
     * @covers ::fakeOuterNumberSerialize
     */
    public function testFakeOuterNumberSerialize()
    {
        $this->markTestIncomplete(
            'Test of "fakeOuterNumberSerialize" method has not been implemented yet.'
        );
    }

    /**
     * Test case for fakeOuterStringSerialize
     *
     * .
     *
     * @covers ::fakeOuterStringSerialize
     */
    public function testFakeOuterStringSerialize()
    {
        $this->markTestIncomplete(
            'Test of "fakeOuterStringSerialize" method has not been implemented yet.'
        );
    }

    /**
     * Test case for testBodyWithFileSchema
     *
     * .
     *
     * @covers ::testBodyWithFileSchema
     */
    public function testTestBodyWithFileSchema()
    {
        $this->markTestIncomplete(
            'Test of "testBodyWithFileSchema" method has not been implemented yet.'
        );
    }

    /**
     * Test case for testBodyWithQueryParams
     *
     * .
     *
     * @covers ::testBodyWithQueryParams
     */
    public function testTestBodyWithQueryParams()
    {
        $this->markTestIncomplete(
            'Test of "testBodyWithQueryParams" method has not been implemented yet.'
        );
    }

    /**
     * Test case for testClientModel
     *
     * To test \"client\" model.
     *
     * @covers ::testClientModel
     */
    public function testTestClientModel()
    {
        $this->markTestIncomplete(
            'Test of "testClientModel" method has not been implemented yet.'
        );
    }

    /**
     * Test case for testEndpointParameters
     *
     * Fake endpoint for testing various parameters  假端點  偽のエンドポイント  가짜 엔드 포인트.
     *
     * @covers ::testEndpointParameters
     */
    public function testTestEndpointParameters()
    {
        $this->markTestIncomplete(
            'Test of "testEndpointParameters" method has not been implemented yet.'
        );
    }

    /**
     * Test case for testEnumParameters
     *
     * To test enum parameters.
     *
     * @covers ::testEnumParameters
     */
    public function testTestEnumParameters()
    {
        $this->markTestIncomplete(
            'Test of "testEnumParameters" method has not been implemented yet.'
        );
    }

    /**
     * Test case for testGroupParameters
     *
     * Fake endpoint to test group parameters (optional).
     *
     * @covers ::testGroupParameters
     */
    public function testTestGroupParameters()
    {
        $this->markTestIncomplete(
            'Test of "testGroupParameters" method has not been implemented yet.'
        );
    }

    /**
     * Test case for testInlineAdditionalProperties
     *
     * test inline additionalProperties.
     *
     * @covers ::testInlineAdditionalProperties
     */
    public function testTestInlineAdditionalProperties()
    {
        $this->markTestIncomplete(
            'Test of "testInlineAdditionalProperties" method has not been implemented yet.'
        );
    }

    /**
     * Test case for testJsonFormData
     *
     * test json serialization of form data.
     *
     * @covers ::testJsonFormData
     */
    public function testTestJsonFormData()
    {
        $this->markTestIncomplete(
            'Test of "testJsonFormData" method has not been implemented yet.'
        );
    }

    /**
     * Test case for testQueryParameterCollectionFormat
     *
     * .
     *
     * @covers ::testQueryParameterCollectionFormat
     */
    public function testTestQueryParameterCollectionFormat()
    {
        $this->markTestIncomplete(
            'Test of "testQueryParameterCollectionFormat" method has not been implemented yet.'
        );
    }
}
