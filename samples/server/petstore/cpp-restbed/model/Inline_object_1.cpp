/**
 * OpenAPI Petstore
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.0.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "Inline_object_1.h"

#include <string>
#include <sstream>
#include <boost/property_tree/ptree.hpp>
#include <boost/property_tree/json_parser.hpp>

using boost::property_tree::ptree;
using boost::property_tree::read_json;
using boost::property_tree::write_json;

namespace org {
namespace openapitools {
namespace server {
namespace model {

Inline_object_1::Inline_object_1()
{
	m_AdditionalMetadata = "";
}

Inline_object_1::~Inline_object_1()
{
}

std::string Inline_object_1::toJsonString(bool prettyJson)
{
	std::stringstream ss;
	write_json(ss, this->toPropertyTree(), prettyJson);
	return ss.str();
}

void Inline_object_1::fromJsonString(std::string const& jsonString)
{
	std::stringstream ss(jsonString);
	ptree pt;
	read_json(ss,pt);
	this->fromPropertyTree(pt);
}

ptree Inline_object_1::toPropertyTree()
{
	ptree pt;
	ptree tmp_node;
	pt.put("additionalMetadata", m_AdditionalMetadata);
	return pt;
}

void Inline_object_1::fromPropertyTree(ptree const &pt)
{
	ptree tmp_node;
	m_AdditionalMetadata = pt.get("additionalMetadata", "");
}

std::string Inline_object_1::getAdditionalMetadata() const
{
    return m_AdditionalMetadata;
}
void Inline_object_1::setAdditionalMetadata(std::string value)
{
	m_AdditionalMetadata = value;
}
std::string Inline_object_1::getFile() const
{
    return m_file;
}
void Inline_object_1::setFile(std::string value)
{
	m_file = value;
}

}
}
}
}

