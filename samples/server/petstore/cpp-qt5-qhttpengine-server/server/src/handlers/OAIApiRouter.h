/**
 * OpenAPI Petstore
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef OAI_APIROUTER_H
#define OAI_APIROUTER_H

#include <QObject>
#include <QStringList>
#include <QSharedPointer>
#include <QList>
#include <QMultiMap>

#include <qhttpengine/socket.h>
#include <qhttpengine/handler.h>
#include <qhttpengine/qobjecthandler.h>

#include "OAIPetApiHandler.h"
#include "OAIStoreApiHandler.h"
#include "OAIUserApiHandler.h"


namespace OpenAPI {

class RequestHandler : public  QHttpEngine::QObjectHandler
{
    Q_OBJECT
signals:
    void requestReceived(QHttpEngine::Socket *socket);

protected:
    virtual void process(QHttpEngine::Socket *socket, const QString &path){
        Q_UNUSED(path);
        emit requestReceived(socket);
    }
};

class ApiRouter : public QObject
{
    Q_OBJECT
public:
    ApiRouter();
    virtual ~ApiRouter();

    void setUpRoutes();
    void processRequest(QHttpEngine::Socket *socket);
private:
    QMultiMap<QString, std::function<void(QHttpEngine::Socket *)>> Routes;  
    
    OAIPetApiHandler *OAIPetApiApiHandler;
    OAIStoreApiHandler *OAIStoreApiApiHandler;
    OAIUserApiHandler *OAIUserApiApiHandler; 
};


}

#endif // OAI_APIROUTER_H