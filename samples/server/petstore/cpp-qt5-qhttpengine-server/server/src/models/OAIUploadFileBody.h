/**
 * OpenAPI Petstore
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUploadFileBody.h
 *
 * 
 */

#ifndef OAIUploadFileBody_H
#define OAIUploadFileBody_H

#include <QJsonObject>

#include "OAIHttpFileElement.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUploadFileBody : public OAIObject {
public:
    OAIUploadFileBody();
    OAIUploadFileBody(QString json);
    ~OAIUploadFileBody() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAdditionalMetadata() const;
    void setAdditionalMetadata(const QString &additional_metadata);
    bool is_additional_metadata_Set() const;
    bool is_additional_metadata_Valid() const;

    OAIHttpFileElement getFile() const;
    void setFile(const OAIHttpFileElement &file);
    bool is_file_Set() const;
    bool is_file_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString additional_metadata;
    bool m_additional_metadata_isSet;
    bool m_additional_metadata_isValid;

    OAIHttpFileElement file;
    bool m_file_isSet;
    bool m_file_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUploadFileBody)

#endif // OAIUploadFileBody_H
