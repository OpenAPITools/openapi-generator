/**
 * OpenAPI Petstore
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdatePetWithFormBody.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdatePetWithFormBody::OAIUpdatePetWithFormBody(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdatePetWithFormBody::OAIUpdatePetWithFormBody() {
    this->initializeModel();
}

OAIUpdatePetWithFormBody::~OAIUpdatePetWithFormBody() {}

void OAIUpdatePetWithFormBody::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIUpdatePetWithFormBody::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdatePetWithFormBody::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIUpdatePetWithFormBody::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdatePetWithFormBody::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(name));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(status));
    }
    return obj;
}

QString OAIUpdatePetWithFormBody::getName() const {
    return name;
}
void OAIUpdatePetWithFormBody::setName(const QString &name) {
    this->name = name;
    this->m_name_isSet = true;
}

bool OAIUpdatePetWithFormBody::is_name_Set() const{
    return m_name_isSet;
}

bool OAIUpdatePetWithFormBody::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIUpdatePetWithFormBody::getStatus() const {
    return status;
}
void OAIUpdatePetWithFormBody::setStatus(const QString &status) {
    this->status = status;
    this->m_status_isSet = true;
}

bool OAIUpdatePetWithFormBody::is_status_Set() const{
    return m_status_isSet;
}

bool OAIUpdatePetWithFormBody::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIUpdatePetWithFormBody::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdatePetWithFormBody::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
