/**
 * OpenAPI Petstore
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Copyright (c) 2017 Nathan Osman
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */

#ifndef _OAI_OAIStoreApiHandler_H_
#define _OAI_OAIStoreApiHandler_H_

#include <QObject>
#include <QStringList>

#include <qhttpengine/socket.h>

namespace OpenAPI {

class OAIStoreApiHandler : public QObject
{
    Q_OBJECT
    
public slots:
    void deleteOrder(QHttpEngine::Socket *socket);
    void getInventory(QHttpEngine::Socket *socket);
    void getOrderById(QHttpEngine::Socket *socket);
    void placeOrder(QHttpEngine::Socket *socket);
    
public:
    virtual void deleteOrderCallback();
    virtual void getInventoryCallback();
    virtual void getOrderByIdCallback();
    virtual void placeOrderCallback();
    
};

}

#endif // _OAI_OAIStoreApiHandler_H_
