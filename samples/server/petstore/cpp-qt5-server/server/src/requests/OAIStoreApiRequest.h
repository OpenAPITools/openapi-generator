/**
 * OpenAPI Petstore
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef _OAI_OAIStoreApiRequest_H_
#define _OAI_OAIStoreApiRequest_H_

#include <QObject>
#include <QStringList>
#include <QNetworkReply>
#include <QSharedPointer>

#include <qhttpengine/socket.h>
#include "OAIOrder.h"
#include <QMap>
#include <QString>
#include "OAIStoreApiHandler.h"

namespace OpenAPI {

class OAIStoreApiRequest : public QObject
{
    Q_OBJECT
    
public:
    OAIStoreApiRequest(QHttpEngine::Socket *s, OAIStoreApiHandler* handler);
    virtual ~OAIStoreApiRequest();

    void deleteOrderRequest(QString order_id);
    void getInventoryRequest();
    void getOrderByIdRequest(QString order_id);
    void placeOrderRequest();
    

    void deleteOrderResponse();
    void getInventoryResponse(QMap<QString, qint32> res);
    void getOrderByIdResponse(OAIOrder res);
    void placeOrderResponse(OAIOrder res);
    

    void deleteOrderError(QNetworkReply::NetworkError error_type, QString& error_str);
    void getInventoryError(QMap<QString, qint32> res, QNetworkReply::NetworkError error_type, QString& error_str);
    void getOrderByIdError(OAIOrder res, QNetworkReply::NetworkError error_type, QString& error_str);
    void placeOrderError(OAIOrder res, QNetworkReply::NetworkError error_type, QString& error_str);
    

    QMap<QString, QString> getDefaultHeaders();
    QHttpEngine::Socket* getRawSocket();

signals:
    void deleteOrder(QString order_id);
    void getInventory();
    void getOrderById(qint64 order_id);
    void placeOrder(OAIOrder oai_order);
    

private:
    QMap<QString, QString> defaultHeaders;
    QHttpEngine::Socket  *socket;
    OAIStoreApiHandler *handler;
};

}

#endif // _OAI_OAIStoreApiRequest_H_
