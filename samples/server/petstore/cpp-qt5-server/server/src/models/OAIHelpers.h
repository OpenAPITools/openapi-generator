/**
 * OpenAPI Petstore
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef OAI_HELPERS_H
#define OAI_HELPERS_H

#include <QJsonObject>
#include <QJsonValue>
#include <QList>
#include <QMap>
#include <QDateTime>
#include <QByteArray>
#include <QDate>

namespace OpenAPI {

    void setValue(void* value, QJsonValue obj, QString type, QString complexType);
    void toJsonArray(QList<void*>* value, QJsonObject& output, QString innerName, QString innerType);
    void toJsonValue(QString name, void* value, QJsonObject& output, QString type);
    void toJsonMap(QMap<QString, void*>* value, QJsonObject& output, QString innerName, QString innerType);
    bool isCompatibleJsonValue(QString type);

    QString stringValue(QString* value);
    QString stringValue(QDateTime* value);
    QString stringValue(QByteArray* value);
    QString stringValue(QDate* value);

    QString stringValue(qint32 value);
    QString stringValue(qint64 value);
    QString stringValue(bool value);
    QString stringValue(float value);
    QString stringValue(double value);


    bool toValue(QString inStr, QString *value);
    bool toValue(QString inStr, QDateTime *value);
    bool toValue(QString inStr, QByteArray *value);
    bool toValue(QString inStr, QDate *value);

    bool toValue(QString inStr, qint32 *value);
    bool toValue(QString inStr, qint64 *value);
    bool toValue(QString inStr, bool *value);
    bool toValue(QString inStr, float *value);
    bool toValue(QString inStr, double *value);

}

#endif // OAI_HELPERS_H
