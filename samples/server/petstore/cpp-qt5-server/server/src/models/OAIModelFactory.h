/**
 * OpenAPI Petstore
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef ModelFactory_H_
#define ModelFactory_H_

#include "OAIObject.h"

#include "OAIApiResponse.h"
#include "OAICategory.h"
#include "OAIOrder.h"
#include "OAIPet.h"
#include "OAITag.h"
#include "OAIUser.h"

namespace OpenAPI {

  inline void* create(QString type) {
    if(QString("OAIApiResponse").compare(type) == 0) {
      return new OAIApiResponse();
    }
    if(QString("OAICategory").compare(type) == 0) {
      return new OAICategory();
    }
    if(QString("OAIOrder").compare(type) == 0) {
      return new OAIOrder();
    }
    if(QString("OAIPet").compare(type) == 0) {
      return new OAIPet();
    }
    if(QString("OAITag").compare(type) == 0) {
      return new OAITag();
    }
    if(QString("OAIUser").compare(type) == 0) {
      return new OAIUser();
    }
    
    return nullptr;
  }

  inline void* create(QString json, QString type) {
    if(type.startsWith("QString")) {
      return new QString();
    }    
    auto val = static_cast<OAIObject*>(create(type));
    if(val != nullptr) {
      return val->fromJson(json);
    }
    return nullptr;
  }

}

#endif /* ModelFactory_H_ */
