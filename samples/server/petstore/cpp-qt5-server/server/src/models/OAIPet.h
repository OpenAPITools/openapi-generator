/**
 * OpenAPI Petstore
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPet.h
 *
 * A pet for sale in the pet store
 */

#ifndef OAIPet_H_
#define OAIPet_H_

#include <QJsonObject>


#include "OAICategory.h"
#include "OAITag.h"
#include <QList>
#include <QString>

#include "OAIObject.h"

namespace OpenAPI {

class OAIPet: public OAIObject {
public:
    OAIPet();
    OAIPet(QString json);
    ~OAIPet();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIPet* fromJson(QString jsonString) override;

    qint64 getId();
    void setId(qint64 id);

    OAICategory* getCategory();
    void setCategory(OAICategory* category);

    QString* getName();
    void setName(QString* name);

    QList<QString*>* getPhotoUrls();
    void setPhotoUrls(QList<QString*>* photo_urls);

    QList<OAITag*>* getTags();
    void setTags(QList<OAITag*>* tags);

    QString* getStatus();
    void setStatus(QString* status);


    virtual bool isSet() override;

private:
    qint64 id;
    bool m_id_isSet;

    OAICategory* category;
    bool m_category_isSet;

    QString* name;
    bool m_name_isSet;

    QList<QString*>* photo_urls;
    bool m_photo_urls_isSet;

    QList<OAITag*>* tags;
    bool m_tags_isSet;

    QString* status;
    bool m_status_isSet;

};

}

#endif /* OAIPet_H_ */
