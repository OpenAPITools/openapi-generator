/**
* This file is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

#pragma once
#include <httplib.h>
#include <variant>
#include <optional>
#include "models/Order.h"

namespace api {

class Store {
public:
    Store() = default;
    virtual ~Store() = default;
    void registerRoutes(httplib::Server& svr);

    /**
     * @brief Response type for handleDeleteForStoreOrder{orderId}.
     */
    using StoreOrder{orderId}Response = std::variant<
    /**
     * @brief Handler function for processing API requests.
     *
     * handleDeleteForStoreOrder{orderId} is a pure virtual function that must be implemented by derived classes to handle.
     */
    virtual void handleDeleteForStoreOrder{orderId}()=0;


    /**
     * @brief Response type for handleGetForStoreInventory.
     */
    using StoreInventoryResponse = std::variant<
                        int>;//success type
    /**
     * @brief Handler function for processing API requests.
     *
     * handleGetForStoreInventory is a pure virtual function that must be implemented by derived classes to handle.
     * @return StoreInventoryResponse The response type returned by the handler.
     */
    virtual StoreInventoryResponse handleGetForStoreInventory()=0;


    /**
     * @brief Response type for handleGetForStoreOrder{orderId}.
     */
    using StoreOrder{orderId}Response = std::variant<
                        models::Order>;//success type
    /**
     * @brief Handler function for processing API requests.
     *
     * handleGetForStoreOrder{orderId} is a pure virtual function that must be implemented by derived classes to handle.
     * @return StoreOrder{orderId}Response The response type returned by the handler.
     */
    virtual StoreOrder{orderId}Response handleGetForStoreOrder{orderId}()=0;


    /**
     * @brief Response type for handlePostForStoreOrder.
     */
    using StoreOrderResponse = std::variant<
                        models::Order>;//success type
    struct StoreOrderRequestParams
    {
        std::optional<models::Order> m_request;
    };
    /**
     * @brief Handler function for processing API requests.
     *
     * handlePostForStoreOrder is a pure virtual function that must be implemented by derived classes to handle.
     * StoreOrderRequestParams - struct containing all the query parameters and headers and schemas as available.
     * @return StoreOrderResponse The response type returned by the handler.
     */
    virtual StoreOrderResponse handlePostForStoreOrder(const StoreOrderRequestParams& params)=0;

private:
    // --- Helper function declarations ---
    static void handleStoreInventoryResponse(const StoreInventoryResponse& result, httplib::Response& res);
    static void handleStoreOrder{orderId}Response(const StoreOrder{orderId}Response& result, httplib::Response& res);
    static StoreOrderRequestParams parseStoreOrderParams(const httplib::Request& req);
    static void handleStoreOrderResponse(const StoreOrderResponse& result, httplib::Response& res);
};

} // namespace api