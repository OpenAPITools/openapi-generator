/**
* This file is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

#include "Pet.h"

namespace models {

Pet::Pet()
: m_id(0),
 m_category(std::make_shared<Category>()),
 m_name(""),
 m_photoUrls(std::vector<std::string>()),
 m_tags(std::vector<Tag>()),
 m_status("")
{
}

nlohmann::json Pet::toJson(const Pet& obj)
{
    nlohmann::json json;
    json["id"] = obj.getId();
    json["category"] = obj.getCategory();
    json["name"] = obj.getName();
    json["photoUrls"] = obj.getPhotoUrls();
    json["tags"] = obj.getTags();
    json["status"] = obj.getStatus();
    return json;
}

Pet Pet::fromJson(const nlohmann::json& json)
{
    Pet obj;
    if (json.contains("id"))
    {
        obj.setId(json.at("id").get<long>());
    }
    if (json.contains("category"))
    {
        obj.setCategory(json.at("category"));
    }
    if (json.contains("name"))
    {
        obj.setName(json.at("name"));
    }
    if (json.contains("photoUrls"))
    {
        obj.setPhotoUrls(json.at("photoUrls"));
    }
    if (json.contains("tags"))
    {
        obj.setTags(json.at("tags"));
    }
    if (json.contains("status"))
    {
        obj.setStatus(json.at("status"));
    }
    return obj;
}


long Pet::getId() const
{
    return m_id;
}

void Pet::setId(const long& id)
{
    m_id = id;
}
Category Pet::getCategory() const
{
    return m_category;
}

void Pet::setCategory(const Category& category)
{
    m_category = category;
}
std::string Pet::getName() const
{
    return m_name;
}

void Pet::setName(const std::string& name)
{
    m_name = name;
}
std::vector<std::string> Pet::getPhotoUrls() const
{
    return m_photoUrls;
}

void Pet::setPhotoUrls(const std::vector<std::string>& photoUrls)
{
    m_photoUrls = photoUrls;
}
std::vector<Tag> Pet::getTags() const
{
    return m_tags;
}

void Pet::setTags(const std::vector<Tag>& tags)
{
    m_tags = tags;
}
StatusEnum Pet::getStatus() const
{
    return m_status;
}

void Pet::setStatus(const StatusEnum& status)
{
    m_status = status;
}

} // namespace models
