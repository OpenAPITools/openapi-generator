/**
 * OpenAPI Petstore
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 1.0.0
 *
 * Contact: team@openapitools.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 *
 * https://openapi-generator.tech
 */

// this model was generated using model.mustache
package sample.cask.model

import scala.util.control.NonFatal

// see https://com-lihaoyi.github.io/upickle/
import upickle.default.{ReadWriter => RW, macroRW}
import upickle.default.*


        
case class SomeResponse1(
    status: String,
    message: String


) {

def asJsonString: String = asData.asJsonString
def asJson: ujson.Value = asData.asJson

def asData : SomeResponse1Data = {
SomeResponse1Data(
    status = status /* 2 */,
    message = message /* 2 */

)
}
}

object SomeResponse1 {
given RW[SomeResponse1] = summon[RW[ujson.Value]].bimap[SomeResponse1](_.asJson, json => read[SomeResponse1Data](json).asModel)

enum Fields(val fieldName : String) extends Field(fieldName) {
    case status extends Fields("status")
    case message extends Fields("message")
}


}


