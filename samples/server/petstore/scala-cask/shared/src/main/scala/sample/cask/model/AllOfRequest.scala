/**
 * OpenAPI Petstore
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 1.0.0
 *
 * Contact: team@openapitools.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 *
 * https://openapi-generator.tech
 */

// this model was generated using model.mustache
package sample.cask.model

import scala.util.control.NonFatal

// see https://com-lihaoyi.github.io/upickle/
import upickle.default.{ReadWriter => RW, macroRW}
import upickle.default.*


        
case class AllOfRequest(
    name: String,
    age: Int,
    details: Option[AllOfRequestDetails] = None 


) {

def asJsonString: String = asData.asJsonString
def asJson: ujson.Value = asData.asJson

def asData : AllOfRequestData = {
AllOfRequestData(
    name = name /* 2 */,
    age = age /* 2 */,
    details = details.map(_.asData).getOrElse(null) /* 4 */

)
}
}

object AllOfRequest {
given RW[AllOfRequest] = summon[RW[ujson.Value]].bimap[AllOfRequest](_.asJson, json => read[AllOfRequestData](json).asModel)

enum Fields(val fieldName : String) extends Field(fieldName) {
    case name extends Fields("name")
    case age extends Fields("age")
    case details extends Fields("details")
}


}


