/**
 * OpenAPI Petstore
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 1.0.0
 *
 * Contact: team@openapitools.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 *
 * https://openapi-generator.tech
 */

// this model was generated using model.mustache
package sample.cask.model

import scala.util.control.NonFatal

// see https://com-lihaoyi.github.io/upickle/
import upickle.default.{ReadWriter => RW, macroRW}
import upickle.default.*


        
case class SomeResponse2Details(
    description: Option[String] = None ,
    status: Option[String] = None 


) {

def asJsonString: String = asData.asJsonString
def asJson: ujson.Value = asData.asJson

def asData : SomeResponse2DetailsData = {
SomeResponse2DetailsData(
    description = description.getOrElse("") /*  1 */,
    status = status.getOrElse("") /*  1 */

)
}
}

object SomeResponse2Details {
given RW[SomeResponse2Details] = summon[RW[ujson.Value]].bimap[SomeResponse2Details](_.asJson, json => read[SomeResponse2DetailsData](json).asModel)

enum Fields(val fieldName : String) extends Field(fieldName) {
    case description extends Fields("description")
    case status extends Fields("status")
}


}


