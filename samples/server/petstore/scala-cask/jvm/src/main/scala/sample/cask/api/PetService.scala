//> using scala "3.3.1"
//> using lib "com.lihaoyi::cask:0.8.3"
//> using lib "com.lihaoyi::scalatags:0.12.0"
/**
 * OpenAPI Petstore
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 1.0.0
 *
 * Contact: team@openapitools.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 *
 * https://openapi-generator.tech
 */


// generated from apiService.mustache
package sample.cask.api

import _root_.sample.cask.model.ApiResponse
import _root_.java.io.File
import _root_.sample.cask.model.Pet

import _root_.sample.cask.model.*

object PetService {
  def apply() : PetService = new PetService {
        override def addPet(pet : Pet) : Pet = ???
        override def deletePet(petId : Long, apiKey : Option[String]) : Unit = ???
        override def findPetsByStatus(status : Seq[String]) : List[Pet] = ???
        override def findPetsByTags(tags : Seq[String]) : List[Pet] = ???
        override def getPetById(petId : Long) : Pet = ???
        override def updatePet(pet : Pet) : Pet = ???
        override def updatePetWithForm(petId : Long, name : Option[String], status : Option[String]) : Unit = ???
        override def uploadFile(petId : Long, additionalMetadata : Option[String], file : Option[File]) : ApiResponse = ???
  }
}

/**
 * The Pet business-logic
 */
trait PetService {
  /** Add a new pet to the store
   * 
   * @return Pet
   */
  def addPet(pet : Pet) : Pet
  /** Deletes a pet
   * 
   * @return 
   */
  def deletePet(petId : Long, apiKey : Option[String]) : Unit
  /** Finds Pets by status
   * 
   * @return List[Pet]
   */
  def findPetsByStatus(status : Seq[String]) : List[Pet]
  /** Finds Pets by tags
   * 
   * @return List[Pet]
   */
  def findPetsByTags(tags : Seq[String]) : List[Pet]
  /** Find pet by ID
   * 
   * @return Pet
   */
  def getPetById(petId : Long) : Pet
  /** Update an existing pet
   * 
   * @return Pet
   */
  def updatePet(pet : Pet) : Pet
  /** Updates a pet in the store with form data
   * 
   * @return 
   */
  def updatePetWithForm(petId : Long, name : Option[String], status : Option[String]) : Unit
  /** uploads an image
   * 
   * @return ApiResponse
   */
  def uploadFile(petId : Long, additionalMetadata : Option[String], file : Option[File]) : ApiResponse
}
