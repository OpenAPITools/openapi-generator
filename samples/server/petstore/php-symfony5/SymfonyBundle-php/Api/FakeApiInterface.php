<?php
/**
 * FakeApiInterface
 * PHP version 7.1.3
 *
 * @category Class
 * @package  OpenAPI\Server
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * OpenAPI Petstore
 *
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Api;

use Symfony\Component\HttpFoundation\File\UploadedFile;
use OpenAPI\Server\Model\Client;
use OpenAPI\Server\Model\Date;
use OpenAPI\Server\Model\FileSchemaTestClass;
use OpenAPI\Server\Model\HealthCheckResult;
use OpenAPI\Server\Model\OuterComposite;
use OpenAPI\Server\Model\Pet;
use OpenAPI\Server\Model\User;

/**
 * FakeApiInterface Interface Doc Comment
 *
 * @category Interface
 * @package  OpenAPI\Server\Api
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */
interface FakeApiInterface
{

    /**
     * Sets authentication method http_signature_test
     *
     * @param string $value Value of the http_signature_test authentication method.
     *
     * @return void
     */
    public function sethttp_signature_test($value);

    /**
     * Sets authentication method http_basic_test
     *
     * @param string $value Value of the http_basic_test authentication method.
     *
     * @return void
     */
    public function sethttp_basic_test($value);

    /**
     * Sets authentication method bearer_test
     *
     * @param string $value Value of the bearer_test authentication method.
     *
     * @return void
     */
    public function setbearer_test($value);

    /**
     * Operation fakeHealthGet
     *
     * Health check endpoint
     *
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return OpenAPI\Server\Model\HealthCheckResult
     *
     */
    public function fakeHealthGet(&$responseCode, array &$responseHeaders);

    /**
     * Operation fakeHttpSignatureTest
     *
     * test http signature authentication
     *
     * @param  OpenAPI\Server\Model\Pet $pet  Pet object that needs to be added to the store (required)
     * @param  string $query1  query parameter (optional)
     * @param  string $header1  header parameter (optional)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     *
     */
    public function fakeHttpSignatureTest(Pet $pet, $query1 = null, $header1 = null, &$responseCode, array &$responseHeaders);

    /**
     * Operation fakeOuterBooleanSerialize
     *
     * @param  bool $body  Input boolean as post body (optional)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return bool
     *
     */
    public function fakeOuterBooleanSerialize($body = null, &$responseCode, array &$responseHeaders);

    /**
     * Operation fakeOuterCompositeSerialize
     *
     * @param  OpenAPI\Server\Model\OuterComposite $outerComposite  Input composite as post body (optional)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return OpenAPI\Server\Model\OuterComposite
     *
     */
    public function fakeOuterCompositeSerialize(OuterComposite $outerComposite = null, &$responseCode, array &$responseHeaders);

    /**
     * Operation fakeOuterNumberSerialize
     *
     * @param  float $body  Input number as post body (optional)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return float
     *
     */
    public function fakeOuterNumberSerialize($body = null, &$responseCode, array &$responseHeaders);

    /**
     * Operation fakeOuterStringSerialize
     *
     * @param  string $body  Input string as post body (optional)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return string
     *
     */
    public function fakeOuterStringSerialize($body = null, &$responseCode, array &$responseHeaders);

    /**
     * Operation testBodyWithFileSchema
     *
     * @param  OpenAPI\Server\Model\FileSchemaTestClass $fileSchemaTestClass   (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     *
     */
    public function testBodyWithFileSchema(FileSchemaTestClass $fileSchemaTestClass, &$responseCode, array &$responseHeaders);

    /**
     * Operation testBodyWithQueryParams
     *
     * @param  string $query   (required)
     * @param  OpenAPI\Server\Model\User $user   (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     *
     */
    public function testBodyWithQueryParams($query, User $user, &$responseCode, array &$responseHeaders);

    /**
     * Operation testClientModel
     *
     * To test \"client\" model
     *
     * @param  OpenAPI\Server\Model\Client $client  client model (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return OpenAPI\Server\Model\Client
     *
     */
    public function testClientModel(Client $client, &$responseCode, array &$responseHeaders);

    /**
     * Operation testEndpointParameters
     *
     * Fake endpoint for testing various parameters 假端點 偽のエンドポイント 가짜 엔드 포인트
     *
     * @param  float $number  None (required)
     * @param  double $double  None (required)
     * @param  string $patternWithoutDelimiter  None (required)
     * @param  string $byte  None (required)
     * @param  int $integer  None (optional)
     * @param  int $int32  None (optional)
     * @param  int $int64  None (optional)
     * @param  float $float  None (optional)
     * @param  string $string  None (optional)
     * @param  UploadedFile $binary  None (optional)
     * @param  \DateTime $date  None (optional)
     * @param  \DateTime $dateTime  None (optional)
     * @param  string $password  None (optional)
     * @param  string $callback  None (optional)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     *
     */
    public function testEndpointParameters($number, $double, $patternWithoutDelimiter, $byte, $integer = null, $int32 = null, $int64 = null, $float = null, $string = null, UploadedFile $binary = null, \DateTime $date = null, \DateTime $dateTime = null, $password = null, $callback = null, &$responseCode, array &$responseHeaders);

    /**
     * Operation testEnumParameters
     *
     * To test enum parameters
     *
     * @param  string[] $enumHeaderStringArray  Header parameter enum test (string array) (optional)
     * @param  string $enumHeaderString  Header parameter enum test (string) (optional, default to ''-efg'')
     * @param  string[] $enumQueryStringArray  Query parameter enum test (string array) (optional)
     * @param  string $enumQueryString  Query parameter enum test (string) (optional, default to ''-efg'')
     * @param  int $enumQueryInteger  Query parameter enum test (double) (optional)
     * @param  double $enumQueryDouble  Query parameter enum test (double) (optional)
     * @param  string[] $enumFormStringArray  Form parameter enum test (string array) (optional, default to ''$'')
     * @param  string $enumFormString  Form parameter enum test (string) (optional, default to ''-efg'')
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     *
     */
    public function testEnumParameters(array $enumHeaderStringArray = null, $enumHeaderString = ''-efg'', array $enumQueryStringArray = null, $enumQueryString = ''-efg'', $enumQueryInteger = null, $enumQueryDouble = null, array $enumFormStringArray = ''$'', $enumFormString = ''-efg'', &$responseCode, array &$responseHeaders);

    /**
     * Operation testGroupParameters
     *
     * Fake endpoint to test group parameters (optional)
     *
     * @param  int $requiredStringGroup  Required String in group parameters (required)
     * @param  bool $requiredBooleanGroup  Required Boolean in group parameters (required)
     * @param  int $requiredInt64Group  Required Integer in group parameters (required)
     * @param  int $stringGroup  String in group parameters (optional)
     * @param  bool $booleanGroup  Boolean in group parameters (optional)
     * @param  int $int64Group  Integer in group parameters (optional)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     *
     */
    public function testGroupParameters($requiredStringGroup, $requiredBooleanGroup, $requiredInt64Group, $stringGroup = null, $booleanGroup = null, $int64Group = null, &$responseCode, array &$responseHeaders);

    /**
     * Operation testInlineAdditionalProperties
     *
     * test inline additionalProperties
     *
     * @param  string[] $requestBody  request body (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     *
     */
    public function testInlineAdditionalProperties(array $requestBody, &$responseCode, array &$responseHeaders);

    /**
     * Operation testJsonFormData
     *
     * test json serialization of form data
     *
     * @param  string $param  field1 (required)
     * @param  string $param2  field2 (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     *
     */
    public function testJsonFormData($param, $param2, &$responseCode, array &$responseHeaders);

    /**
     * Operation testQueryParameterCollectionFormat
     *
     * @param  string[] $pipe   (required)
     * @param  string[] $ioutil   (required)
     * @param  string[] $http   (required)
     * @param  string[] $url   (required)
     * @param  string[] $context   (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     *
     */
    public function testQueryParameterCollectionFormat(array $pipe, array $ioutil, array $http, array $url, array $context, &$responseCode, array &$responseHeaders);
}
