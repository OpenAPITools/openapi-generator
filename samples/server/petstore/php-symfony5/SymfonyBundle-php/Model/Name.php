<?php
/**
 * Name
 *
 * PHP version 7.1.3
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * OpenAPI Petstore
 *
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the Name model.
 *
 * Model for testing model name same as property name
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class Name 
{
        /**
     * @var int
     * @SerializedName("name")
     * @Assert\NotNull()
     * @Assert\Type("int")
     * @Type("int")
     */
    protected $name;

    /**
     * @var int|null
     * @SerializedName("snake_case")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected $snakeCase;

    /**
     * @var string|null
     * @SerializedName("property")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $property;

    /**
     * @var int|null
     * @SerializedName("123Number")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected $_123number;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->name = isset($data['name']) ? $data['name'] : null;
        $this->snakeCase = isset($data['snakeCase']) ? $data['snakeCase'] : null;
        $this->property = isset($data['property']) ? $data['property'] : null;
        $this->_123number = isset($data['_123number']) ? $data['_123number'] : null;
    }

    /**
     * Gets name.
     *
     * @return int
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Sets name.
     *
     * @param int $name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Gets snakeCase.
     *
     * @return int|null
     */
    public function getSnakeCase()
    {
        return $this->snakeCase;
    }

    /**
     * Sets snakeCase.
     *
     * @param int|null $snakeCase
     *
     * @return $this
     */
    public function setSnakeCase($snakeCase = null)
    {
        $this->snakeCase = $snakeCase;

        return $this;
    }

    /**
     * Gets property.
     *
     * @return string|null
     */
    public function getProperty()
    {
        return $this->property;
    }

    /**
     * Sets property.
     *
     * @param string|null $property
     *
     * @return $this
     */
    public function setProperty($property = null)
    {
        $this->property = $property;

        return $this;
    }

    /**
     * Gets _123number.
     *
     * @return int|null
     */
    public function get123number()
    {
        return $this->_123number;
    }

    /**
     * Sets _123number.
     *
     * @param int|null $_123number
     *
     * @return $this
     */
    public function set123number($_123number = null)
    {
        $this->_123number = $_123number;

        return $this;
    }
}


