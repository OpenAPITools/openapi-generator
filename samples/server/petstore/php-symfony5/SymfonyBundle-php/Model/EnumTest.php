<?php
/**
 * EnumTest
 *
 * PHP version 7.1.3
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * OpenAPI Petstore
 *
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the EnumTest model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class EnumTest 
{
        /**
     * @var string|null
     * @SerializedName("enum_string")
     * @Assert\Choice({ "UPPER", "lower", "" })
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $enumString;

    /**
     * @var string
     * @SerializedName("enum_string_required")
     * @Assert\NotNull()
     * @Assert\Choice({ "UPPER", "lower", "" })
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $enumStringRequired;

    /**
     * @var int|null
     * @SerializedName("enum_integer")
     * @Assert\Choice({ 1, -1 })
     * @Assert\Type("int")
     * @Type("int")
     */
    protected $enumInteger;

    /**
     * @var double|null
     * @SerializedName("enum_number")
     * @Assert\Choice({ 1.1, -1.2 })
     * @Assert\Type("double")
     * @Type("double")
     */
    protected $enumNumber;

    /**
     * @var OpenAPI\Server\Model\OuterEnum|null
     * @SerializedName("outerEnum")
     * @Assert\Type("OpenAPI\Server\Model\OuterEnum")
     * @Type("OpenAPI\Server\Model\OuterEnum")
     */
    protected $outerEnum;

    /**
     * @var OpenAPI\Server\Model\OuterEnumInteger|null
     * @SerializedName("outerEnumInteger")
     * @Assert\Type("OpenAPI\Server\Model\OuterEnumInteger")
     * @Type("OpenAPI\Server\Model\OuterEnumInteger")
     */
    protected $outerEnumInteger;

    /**
     * @var OpenAPI\Server\Model\OuterEnumDefaultValue|null
     * @SerializedName("outerEnumDefaultValue")
     * @Assert\Type("OpenAPI\Server\Model\OuterEnumDefaultValue")
     * @Type("OpenAPI\Server\Model\OuterEnumDefaultValue")
     */
    protected $outerEnumDefaultValue;

    /**
     * @var OpenAPI\Server\Model\OuterEnumIntegerDefaultValue|null
     * @SerializedName("outerEnumIntegerDefaultValue")
     * @Assert\Type("OpenAPI\Server\Model\OuterEnumIntegerDefaultValue")
     * @Type("OpenAPI\Server\Model\OuterEnumIntegerDefaultValue")
     */
    protected $outerEnumIntegerDefaultValue;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->enumString = isset($data['enumString']) ? $data['enumString'] : null;
        $this->enumStringRequired = isset($data['enumStringRequired']) ? $data['enumStringRequired'] : null;
        $this->enumInteger = isset($data['enumInteger']) ? $data['enumInteger'] : null;
        $this->enumNumber = isset($data['enumNumber']) ? $data['enumNumber'] : null;
        $this->outerEnum = isset($data['outerEnum']) ? $data['outerEnum'] : null;
        $this->outerEnumInteger = isset($data['outerEnumInteger']) ? $data['outerEnumInteger'] : null;
        $this->outerEnumDefaultValue = isset($data['outerEnumDefaultValue']) ? $data['outerEnumDefaultValue'] : null;
        $this->outerEnumIntegerDefaultValue = isset($data['outerEnumIntegerDefaultValue']) ? $data['outerEnumIntegerDefaultValue'] : null;
    }

    /**
     * Gets enumString.
     *
     * @return string|null
     */
    public function getEnumString()
    {
        return $this->enumString;
    }

    /**
     * Sets enumString.
     *
     * @param string|null $enumString
     *
     * @return $this
     */
    public function setEnumString($enumString = null)
    {
        $this->enumString = $enumString;

        return $this;
    }

    /**
     * Gets enumStringRequired.
     *
     * @return string
     */
    public function getEnumStringRequired()
    {
        return $this->enumStringRequired;
    }

    /**
     * Sets enumStringRequired.
     *
     * @param string $enumStringRequired
     *
     * @return $this
     */
    public function setEnumStringRequired($enumStringRequired)
    {
        $this->enumStringRequired = $enumStringRequired;

        return $this;
    }

    /**
     * Gets enumInteger.
     *
     * @return int|null
     */
    public function getEnumInteger()
    {
        return $this->enumInteger;
    }

    /**
     * Sets enumInteger.
     *
     * @param int|null $enumInteger
     *
     * @return $this
     */
    public function setEnumInteger($enumInteger = null)
    {
        $this->enumInteger = $enumInteger;

        return $this;
    }

    /**
     * Gets enumNumber.
     *
     * @return double|null
     */
    public function getEnumNumber()
    {
        return $this->enumNumber;
    }

    /**
     * Sets enumNumber.
     *
     * @param double|null $enumNumber
     *
     * @return $this
     */
    public function setEnumNumber($enumNumber = null)
    {
        $this->enumNumber = $enumNumber;

        return $this;
    }

    /**
     * Gets outerEnum.
     *
     * @return OpenAPI\Server\Model\OuterEnum|null
     */
    public function getOuterEnum(): ?OuterEnum
    {
        return $this->outerEnum;
    }

    /**
     * Sets outerEnum.
     *
     * @param OpenAPI\Server\Model\OuterEnum|null $outerEnum
     *
     * @return $this
     */
    public function setOuterEnum(OuterEnum $outerEnum = null)
    {
        $this->outerEnum = $outerEnum;

        return $this;
    }

    /**
     * Gets outerEnumInteger.
     *
     * @return OpenAPI\Server\Model\OuterEnumInteger|null
     */
    public function getOuterEnumInteger(): ?OuterEnumInteger
    {
        return $this->outerEnumInteger;
    }

    /**
     * Sets outerEnumInteger.
     *
     * @param OpenAPI\Server\Model\OuterEnumInteger|null $outerEnumInteger
     *
     * @return $this
     */
    public function setOuterEnumInteger(OuterEnumInteger $outerEnumInteger = null)
    {
        $this->outerEnumInteger = $outerEnumInteger;

        return $this;
    }

    /**
     * Gets outerEnumDefaultValue.
     *
     * @return OpenAPI\Server\Model\OuterEnumDefaultValue|null
     */
    public function getOuterEnumDefaultValue(): ?OuterEnumDefaultValue
    {
        return $this->outerEnumDefaultValue;
    }

    /**
     * Sets outerEnumDefaultValue.
     *
     * @param OpenAPI\Server\Model\OuterEnumDefaultValue|null $outerEnumDefaultValue
     *
     * @return $this
     */
    public function setOuterEnumDefaultValue(OuterEnumDefaultValue $outerEnumDefaultValue = null)
    {
        $this->outerEnumDefaultValue = $outerEnumDefaultValue;

        return $this;
    }

    /**
     * Gets outerEnumIntegerDefaultValue.
     *
     * @return OpenAPI\Server\Model\OuterEnumIntegerDefaultValue|null
     */
    public function getOuterEnumIntegerDefaultValue(): ?OuterEnumIntegerDefaultValue
    {
        return $this->outerEnumIntegerDefaultValue;
    }

    /**
     * Sets outerEnumIntegerDefaultValue.
     *
     * @param OpenAPI\Server\Model\OuterEnumIntegerDefaultValue|null $outerEnumIntegerDefaultValue
     *
     * @return $this
     */
    public function setOuterEnumIntegerDefaultValue(OuterEnumIntegerDefaultValue $outerEnumIntegerDefaultValue = null)
    {
        $this->outerEnumIntegerDefaultValue = $outerEnumIntegerDefaultValue;

        return $this;
    }
}


