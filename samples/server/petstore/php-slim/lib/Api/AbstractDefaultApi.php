<?php
/**
 * AbstractDefaultApi
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPIServer\Api
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * OpenAPI Petstore
 *
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 * OpenAPI spec version: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */
namespace OpenAPIServer\Api;

/**
 * AbstractDefaultApi Class Doc Comment
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPIServer\Api
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */
abstract class AbstractDefaultApi
{

    /**
     * @var \Interop\Container\ContainerInterface Slim app container instance
     */
    protected $container;

    /**
     * Route Controller constructor receives container
     *
     * @param \Interop\Container\ContainerInterface $container Slim app container instance
     */
    public function __construct($container)
    {
        $this->container = $container;
    }


    /**
     * POST createXmlItem
     * Summary: creates an XmlItem
     * Notes: this route creates an XmlItem
     *
     * @param \Psr\Http\Message\ServerRequestInterface $request  Request
     * @param \Psr\Http\Message\ResponseInterface      $response Response
     * @param array|null                               $args     Path arguments
     *
     * @return \Psr\Http\Message\ResponseInterface
     */
    public function createXmlItem($request, $response, $args)
    {
        $body = $request->getParsedBody();
        $message = "How about implementing createXmlItem as a POST method in OpenAPIServer\Api\DefaultApi class?";
        throw new \Exception($message);

        return $response->write($message)->withStatus(501);
    }
}
