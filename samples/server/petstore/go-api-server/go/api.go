/*
 * OpenAPI Petstore
 *
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package petstoreserver

import (
	"net/http"
    "os"
)


// PetApiRouter defines the required methods for binding the api requests to a responses for the PetApi
type PetApiRouter interface { 
	AddPet(http.ResponseWriter, *http.Request)
	DeletePet(http.ResponseWriter, *http.Request)
	FindPetsByStatus(http.ResponseWriter, *http.Request)
	FindPetsByTags(http.ResponseWriter, *http.Request)
	GetPetById(http.ResponseWriter, *http.Request)
	UpdatePet(http.ResponseWriter, *http.Request)
	UpdatePetWithForm(http.ResponseWriter, *http.Request)
	UploadFile(http.ResponseWriter, *http.Request)
}
// StoreApiRouter defines the required methods for binding the api requests to a responses for the StoreApi
type StoreApiRouter interface { 
	DeleteOrder(http.ResponseWriter, *http.Request)
	GetInventory(http.ResponseWriter, *http.Request)
	GetOrderById(http.ResponseWriter, *http.Request)
	PlaceOrder(http.ResponseWriter, *http.Request)
}
// UserApiRouter defines the required methods for binding the api requests to a responses for the UserApi
type UserApiRouter interface { 
	CreateUser(http.ResponseWriter, *http.Request)
	CreateUsersWithArrayInput(http.ResponseWriter, *http.Request)
	CreateUsersWithListInput(http.ResponseWriter, *http.Request)
	DeleteUser(http.ResponseWriter, *http.Request)
	GetUserByName(http.ResponseWriter, *http.Request)
	LoginUser(http.ResponseWriter, *http.Request)
	LogoutUser(http.ResponseWriter, *http.Request)
	UpdateUser(http.ResponseWriter, *http.Request)
}

// PetApiServicer defines the api actions for the PetApi service
type PetApiServicer interface { 
    AddPet(Pet) (interface{}, error)
    DeletePet(int64, string) (interface{}, error)
    FindPetsByStatus([]string) (interface{}, error)
    FindPetsByTags([]string) (interface{}, error)
    GetPetById(int64) (interface{}, error)
    UpdatePet(Pet) (interface{}, error)
    UpdatePetWithForm(int64, string, string) (interface{}, error)
    UploadFile(int64, string, *os.File) (interface{}, error)
}

// StoreApiServicer defines the api actions for the StoreApi service
type StoreApiServicer interface { 
    DeleteOrder(string) (interface{}, error)
    GetInventory() (interface{}, error)
    GetOrderById(int64) (interface{}, error)
    PlaceOrder(Order) (interface{}, error)
}

// UserApiServicer defines the api actions for the UserApi service
type UserApiServicer interface { 
    CreateUser(User) (interface{}, error)
    CreateUsersWithArrayInput([]User) (interface{}, error)
    CreateUsersWithListInput([]User) (interface{}, error)
    DeleteUser(string) (interface{}, error)
    GetUserByName(string) (interface{}, error)
    LoginUser(string, string) (interface{}, error)
    LogoutUser() (interface{}, error)
    UpdateUser(string, User) (interface{}, error)
}
