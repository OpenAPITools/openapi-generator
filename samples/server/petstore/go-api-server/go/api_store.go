/*
 * OpenAPI Petstore
 *
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package petstoreserver

import (
	"encoding/json"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// A StoreAPIController binds http requests to an api service and writes the service results to the http response
type StoreAPIController struct {
	service StoreAPIServicer
}

// NewStoreAPIController creates a default api controller
func NewStoreAPIController(s StoreAPIServicer) Router {
	return &StoreAPIController{ service: s }
}

// Routes returns all of the api route for the StoreAPIController
func (c *StoreAPIController) Routes() Routes {
	return Routes{ 
		{
			"DeleteOrder",
			strings.ToUpper("Delete"),
			"/v2/store/order/{orderId}",
			c.DeleteOrder,
		},
		{
			"GetInventory",
			strings.ToUpper("Get"),
			"/v2/store/inventory",
			c.GetInventory,
		},
		{
			"GetOrderByID",
			strings.ToUpper("Get"),
			"/v2/store/order/{orderId}",
			c.GetOrderByID,
		},
		{
			"PlaceOrder",
			strings.ToUpper("Post"),
			"/v2/store/order",
			c.PlaceOrder,
		},
	}
}

// DeleteOrder - Delete purchase order by ID
func (c *StoreAPIController) DeleteOrder(w http.ResponseWriter, r *http.Request) { 
	params := mux.Vars(r)
	orderID := params["orderID"]
	result, err := c.service.DeleteOrder(orderID)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// GetInventory - Returns pet inventories by status
func (c *StoreAPIController) GetInventory(w http.ResponseWriter, r *http.Request) { 
	result, err := c.service.GetInventory()
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// GetOrderByID - Find purchase order by ID
func (c *StoreAPIController) GetOrderByID(w http.ResponseWriter, r *http.Request) { 
	params := mux.Vars(r)
	orderID, err := parseIntParameter(params["orderID"])
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	result, err := c.service.GetOrderByID(orderID)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// PlaceOrder - Place an order for a pet
func (c *StoreAPIController) PlaceOrder(w http.ResponseWriter, r *http.Request) { 
	body := &Order{}
	if err := json.NewDecoder(r.Body).Decode(&body); err != nil {
		w.WriteHeader(500)
		return
	}
	
	result, err := c.service.PlaceOrder(*body)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}
