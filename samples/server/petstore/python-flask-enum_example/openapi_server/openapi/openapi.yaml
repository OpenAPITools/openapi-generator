openapi: 3.0.0
info:
  description: This spec is mainly for testing enum functionality
  license:
    name: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  title: OpenAPI Enums
  version: 1.0.0
servers:
- url: /
paths:
  /enum-object:
    post:
      description: Test serialization of enum (int) properties with examples
      operationId: enum_object
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnumCornucopia'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EnumCornucopia'
          description: Output enum (int)
      tags:
      - fake
      x-openapi-router-controller: openapi_server.controllers.fake_controller
  /enums:
    get:
      description: To test enum parameters
      operationId: enums
      parameters:
      - description: Header parameter enum test (string array)
        explode: false
        in: header
        name: enum_header_string_array
        required: false
        schema:
          items:
            default: $
            enum:
            - '>'
            - $
            type: string
          type: array
        style: simple
      - description: Header parameter enum test (string)
        explode: false
        in: header
        name: enum_header_string
        required: false
        schema:
          default: -efg
          enum:
          - _abc
          - -efg
          - (xyz)
          type: string
        style: simple
      - description: Query parameter enum test (string array)
        explode: true
        in: query
        name: enum_query_string_array
        required: false
        schema:
          items:
            default: $
            enum:
            - '>'
            - $
            type: string
          type: array
        style: form
      - description: Query parameter enum test (string)
        explode: true
        in: query
        name: enum_query_string
        required: false
        schema:
          default: -efg
          enum:
          - _abc
          - -efg
          - (xyz)
          type: string
        style: form
      - description: Query parameter enum test (double)
        explode: true
        in: query
        name: enum_query_integer
        required: false
        schema:
          enum:
          - 1
          - -2
          format: int32
          type: integer
        style: form
      - description: Query parameter enum test (double)
        explode: true
        in: query
        name: enum_query_double
        required: false
        schema:
          enum:
          - 1.1
          - -1.2
          example: 1.1
          format: double
          type: number
        style: form
      requestBody:
        $ref: '#/components/requestBodies/inline_object'
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                enum_form_string_array:
                  description: Form parameter enum test (string array)
                  items:
                    default: $
                    enum:
                    - '>'
                    - $
                    type: string
                  type: array
                enum_form_string:
                  default: -efg
                  description: Form parameter enum test (string)
                  enum:
                  - _abc
                  - -efg
                  - (xyz)
                  type: string
              type: object
      responses:
        "400":
          description: Invalid request
        "404":
          description: Not found
      summary: To test enum parameters
      tags:
      - fake
      x-openapi-router-controller: openapi_server.controllers.fake_controller
components:
  requestBodies:
    inline_object:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/inline_object'
  schemas:
    EnumCornucopia:
      example:
        enum_string_required: UPPER
        enum_integer: 1
        outerEnumInteger: 2
        enum_string: UPPER
        decimal: "123.455"
        enum_number: -1.2
      properties:
        decimal:
          example: "123.455"
          format: number
          title: decimal
          type: string
        enum_string:
          enum:
          - UPPER
          - lower
          - ""
          title: enum_string
          type: string
        enum_string_required:
          enum:
          - UPPER
          - lower
          - ""
          title: enum_string_required
          type: string
        enum_integer:
          enum:
          - 1
          - -1
          example: 1
          format: int32
          title: enum_integer
          type: integer
        enum_number:
          enum:
          - 1.1
          - -1.2
          example: -1.2
          format: double
          title: enum_number
          type: number
        outerEnum:
          $ref: '#/components/schemas/OuterEnum'
        outerEnumInteger:
          $ref: '#/components/schemas/OuterEnumInteger'
        outerEnumDefaultValue:
          $ref: '#/components/schemas/OuterEnumDefaultValue'
        outerEnumIntegerDefaultValue:
          $ref: '#/components/schemas/OuterEnumIntegerDefaultValue'
        outerEnumNumber:
          $ref: '#/components/schemas/OuterEnumNumber'
        outerEnumStrange:
          $ref: '#/components/schemas/OuterEnumStrange'
      required:
      - enum_string_required
      title: EnumCornucopia
      type: object
    EnumMap:
      properties:
        map_of_enum_string:
          additionalProperties:
            enum:
            - UPPER
            - lower
            type: string
          type: object
      type: object
    EnumArrays:
      properties:
        just_symbol:
          enum:
          - '>='
          - $
          type: string
        array_enum:
          items:
            enum:
            - fish
            - crab
            type: string
          type: array
      type: object
    OuterEnumStrange:
      default: -efg
      enum:
      - _abc
      - -efg
      - (xyz)
      - with Spaces
      title: OuterEnumStrange
      type: string
    OuterEnum:
      enum:
      - placed
      - approved
      - delivered
      nullable: true
      title: OuterEnum
      type: string
    OuterEnumInteger:
      enum:
      - 0
      - 1
      - 2
      example: 2
      title: OuterEnumInteger
      type: integer
    OuterEnumDefaultValue:
      default: placed
      enum:
      - placed
      - approved
      - delivered
      title: OuterEnumDefaultValue
      type: string
    OuterEnumIntegerDefaultValue:
      default: 0
      enum:
      - 0
      - 1
      - 2
      title: OuterEnumIntegerDefaultValue
      type: integer
    OuterEnumNumber:
      enum:
      - 0
      - 1.1
      - 2.2
      title: OuterEnumNumber
      type: number
    OuterEnumStringNumber:
      enum:
      - "0"
      - "1"
      - "2.2"
      format: number
      type: string
    inline_object:
      properties:
        enum_form_string_array:
          description: Form parameter enum test (string array)
          items:
            default: $
            enum:
            - '>'
            - $
            type: string
          type: array
        enum_form_string:
          default: -efg
          description: Form parameter enum test (string)
          enum:
          - _abc
          - -efg
          - (xyz)
          type: string
      type: object
