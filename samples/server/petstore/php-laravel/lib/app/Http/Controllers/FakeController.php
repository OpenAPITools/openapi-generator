<?php declare(strict_types=1);

/**
 * OpenAPI Petstore
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 * PHP version 8.1
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 * Source files are located at:
 *
 * > https://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator/src/main/resources/php-laravel/
 */


namespace app.Http.Controllers;


interface FakeController {


    /**
     * Operation testClientModel
     *
     * To test \"client\" model
     * @param \app\Models\Client $client
     * @return \app\Models\Client
     */
    public function testClientModel(
            \app\Models\Client $client,
    ):
        \app\Models\Client
    ;


    /**
     * Operation testEndpointParameters
     *
     * Fake endpoint for testing various parameters 假端點 偽のエンドポイント 가짜 엔드 포인트
     * @param float $number
     * @param float $double
     * @param string $patternWithoutDelimiter
     * @param string $byte
     * @param null | int $integer
     * @param null | int $int32
     * @param null | int $int64
     * @param null | float $float
     * @param null | string $string
     * @param null | \SplFileObject $binary
     * @param null | \DateTime $date
     * @param null | \DateTime $dateTime
     * @param null | string $password
     * @param null | string $callback
     * @return  | 
     */
    public function testEndpointParameters(
            float $number,
            float $double,
            string $patternWithoutDelimiter,
            string $byte,
            ?int $integer,
            ?int $int32,
            ?int $int64,
            ?float $float,
            ?string $string,
            ?\SplFileObject $binary,
            ?\DateTime $date,
            ?\DateTime $dateTime,
            ?string $password,
            ?string $callback,
    ):
    ;


    /**
     * Operation testEnumParameters
     *
     * To test enum parameters
     * @param null | string[] $enumHeaderStringArray
     * @param null | string $enumHeaderString
     * @param null | string[] $enumQueryStringArray
     * @param null | string $enumQueryString
     * @param null | int $enumQueryInteger
     * @param null | float $enumQueryDouble
     * @param null | \app\Models\EnumClass[] $enumQueryModelArray
     * @param null | string[] $enumFormStringArray
     * @param null | string $enumFormString
     * @return  | 
     */
    public function testEnumParameters(
            ?array $enumHeaderStringArray,
            ?string $enumHeaderString,
            ?array $enumQueryStringArray,
            ?string $enumQueryString,
            ?int $enumQueryInteger,
            ?float $enumQueryDouble,
            ?array $enumQueryModelArray,
            ?array $enumFormStringArray,
            ?string $enumFormString,
    ):
    ;


    /**
     * Operation testGroupParameters
     *
     * Fake endpoint to test group parameters (optional)
     * @param int $requiredStringGroup
     * @param bool $requiredBooleanGroup
     * @param int $requiredInt64Group
     * @param null | int $stringGroup
     * @param null | bool $booleanGroup
     * @param null | int $int64Group
     * @return 
     */
    public function testGroupParameters(
            int $requiredStringGroup,
            bool $requiredBooleanGroup,
            int $requiredInt64Group,
            ?int $stringGroup,
            ?bool $booleanGroup,
            ?int $int64Group,
    ):
    ;


    /**
     * Operation fakeBigDecimalMap
     * @return \app\Models\FakeBigDecimalMap200Response
     */
    public function fakeBigDecimalMap(
    ):
        \app\Models\FakeBigDecimalMap200Response
    ;


    /**
     * Operation testAdditionalPropertiesReference
     *
     * test referenced additionalProperties
     * @param array<string,mixed> $requestBody
     * @return 
     */
    public function testAdditionalPropertiesReference(
            array $requestBody,
    ):
    ;


    /**
     * Operation testBodyWithBinary
     * @param \SplFileObject $body
     * @return 
     */
    public function testBodyWithBinary(
            \SplFileObject $body,
    ):
    ;


    /**
     * Operation testBodyWithFileSchema
     * @param \app\Models\FileSchemaTestClass $fileSchemaTestClass
     * @return 
     */
    public function testBodyWithFileSchema(
            \app\Models\FileSchemaTestClass $fileSchemaTestClass,
    ):
    ;


    /**
     * Operation testBodyWithQueryParams
     * @param string $query
     * @param \app\Models\User $user
     * @return 
     */
    public function testBodyWithQueryParams(
            string $query,
            \app\Models\User $user,
    ):
    ;


    /**
     * Operation fakeHealthGet
     *
     * Health check endpoint
     * @return \app\Models\HealthCheckResult
     */
    public function fakeHealthGet(
    ):
        \app\Models\HealthCheckResult
    ;


    /**
     * Operation fakeHttpSignatureTest
     *
     * test http signature authentication
     * @param \app\Models\Pet $pet
     * @param null | string $query1
     * @param null | string $header1
     * @return 
     */
    public function fakeHttpSignatureTest(
            \app\Models\Pet $pet,
            ?string $query1,
            ?string $header1,
    ):
    ;


    /**
     * Operation testInlineAdditionalProperties
     *
     * test inline additionalProperties
     * @param array<string,string> $requestBody
     * @return 
     */
    public function testInlineAdditionalProperties(
            array $requestBody,
    ):
    ;


    /**
     * Operation testInlineFreeformAdditionalProperties
     *
     * test inline free-form additionalProperties
     * @param \app\Models\TestInlineFreeformAdditionalPropertiesRequest $testInlineFreeformAdditionalPropertiesRequest
     * @return 
     */
    public function testInlineFreeformAdditionalProperties(
            \app\Models\TestInlineFreeformAdditionalPropertiesRequest $testInlineFreeformAdditionalPropertiesRequest,
    ):
    ;


    /**
     * Operation testJsonFormData
     *
     * test json serialization of form data
     * @param string $param
     * @param string $param2
     * @return 
     */
    public function testJsonFormData(
            string $param,
            string $param2,
    ):
    ;


    /**
     * Operation testNullable
     *
     * test nullable parent property
     * @param \app\Models\ChildWithNullable $childWithNullable
     * @return 
     */
    public function testNullable(
            \app\Models\ChildWithNullable $childWithNullable,
    ):
    ;


    /**
     * Operation fakeOuterBooleanSerialize
     * @param null | bool $body
     * @return bool
     */
    public function fakeOuterBooleanSerialize(
            ?bool $body,
    ):
        bool
    ;


    /**
     * Operation fakeOuterCompositeSerialize
     * @param null | \app\Models\OuterComposite $outerComposite
     * @return \app\Models\OuterComposite
     */
    public function fakeOuterCompositeSerialize(
            ?\app\Models\OuterComposite $outerComposite,
    ):
        \app\Models\OuterComposite
    ;


    /**
     * Operation fakeOuterNumberSerialize
     * @param null | float $body
     * @return float
     */
    public function fakeOuterNumberSerialize(
            ?float $body,
    ):
        float
    ;


    /**
     * Operation fakeOuterStringSerialize
     * @param null | string $body
     * @return string
     */
    public function fakeOuterStringSerialize(
            ?string $body,
    ):
        string
    ;


    /**
     * Operation fakePropertyEnumIntegerSerialize
     * @param \app\Models\OuterObjectWithEnumProperty $outerObjectWithEnumProperty
     * @return \app\Models\OuterObjectWithEnumProperty
     */
    public function fakePropertyEnumIntegerSerialize(
            \app\Models\OuterObjectWithEnumProperty $outerObjectWithEnumProperty,
    ):
        \app\Models\OuterObjectWithEnumProperty
    ;


    /**
     * Operation testStringMapReference
     *
     * test referenced string map
     * @param array<string,string> $requestBody
     * @return 
     */
    public function testStringMapReference(
            array $requestBody,
    ):
    ;


    /**
     * Operation testQueryParameterCollectionFormat
     * @param string[] $pipe
     * @param string[] $ioutil
     * @param string[] $http
     * @param string[] $url
     * @param string[] $context
     * @param string $allowEmpty
     * @param null | array<string,string> $language
     * @return 
     */
    public function testQueryParameterCollectionFormat(
            array $pipe,
            array $ioutil,
            array $http,
            array $url,
            array $context,
            string $allowEmpty,
            ?array $language,
    ):
    ;

}
