/*
 * OpenAPI Petstore
 *
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class NullableClass : IEquatable<NullableClass>
    {
        /// <summary>
        /// Gets or Sets IntegerProp
        /// </summary>
        [DataMember(Name="integer_prop", EmitDefaultValue=true)]
        public int? IntegerProp { get; set; }

        /// <summary>
        /// Gets or Sets NumberProp
        /// </summary>
        [DataMember(Name="number_prop", EmitDefaultValue=true)]
        public decimal? NumberProp { get; set; }

        /// <summary>
        /// Gets or Sets BooleanProp
        /// </summary>
        [DataMember(Name="boolean_prop", EmitDefaultValue=true)]
        public bool? BooleanProp { get; set; }

        /// <summary>
        /// Gets or Sets StringProp
        /// </summary>
        [DataMember(Name="string_prop", EmitDefaultValue=true)]
        public string? StringProp { get; set; }

        /// <summary>
        /// Gets or Sets DateProp
        /// </summary>
        [DataMember(Name="date_prop", EmitDefaultValue=true)]
        public DateOnly? DateProp { get; set; }

        /// <summary>
        /// Gets or Sets DatetimeProp
        /// </summary>
        [DataMember(Name="datetime_prop", EmitDefaultValue=true)]
        public DateTime? DatetimeProp { get; set; }

        /// <summary>
        /// Gets or Sets ArrayNullableProp
        /// </summary>
        [DataMember(Name="array_nullable_prop", EmitDefaultValue=true)]
        public List<Object> ArrayNullableProp { get; set; }

        /// <summary>
        /// Gets or Sets ArrayAndItemsNullableProp
        /// </summary>
        [DataMember(Name="array_and_items_nullable_prop", EmitDefaultValue=true)]
        public List<Object?> ArrayAndItemsNullableProp { get; set; }

        /// <summary>
        /// Gets or Sets ArrayItemsNullable
        /// </summary>
        [DataMember(Name="array_items_nullable", EmitDefaultValue=false)]
        public List<Object?> ArrayItemsNullable { get; set; }

        /// <summary>
        /// Gets or Sets ObjectNullableProp
        /// </summary>
        [DataMember(Name="object_nullable_prop", EmitDefaultValue=true)]
        public Dictionary?<string, Object> ObjectNullableProp { get; set; }

        /// <summary>
        /// Gets or Sets ObjectAndItemsNullableProp
        /// </summary>
        [DataMember(Name="object_and_items_nullable_prop", EmitDefaultValue=true)]
        public Dictionary?<string, Object?> ObjectAndItemsNullableProp { get; set; }

        /// <summary>
        /// Gets or Sets ObjectItemsNullable
        /// </summary>
        [DataMember(Name="object_items_nullable", EmitDefaultValue=false)]
        public Dictionary<string, Object?> ObjectItemsNullable { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class NullableClass {\n");
            sb.Append("  IntegerProp: ").Append(IntegerProp).Append("\n");
            sb.Append("  NumberProp: ").Append(NumberProp).Append("\n");
            sb.Append("  BooleanProp: ").Append(BooleanProp).Append("\n");
            sb.Append("  StringProp: ").Append(StringProp).Append("\n");
            sb.Append("  DateProp: ").Append(DateProp).Append("\n");
            sb.Append("  DatetimeProp: ").Append(DatetimeProp).Append("\n");
            sb.Append("  ArrayNullableProp: ").Append(ArrayNullableProp).Append("\n");
            sb.Append("  ArrayAndItemsNullableProp: ").Append(ArrayAndItemsNullableProp).Append("\n");
            sb.Append("  ArrayItemsNullable: ").Append(ArrayItemsNullable).Append("\n");
            sb.Append("  ObjectNullableProp: ").Append(ObjectNullableProp).Append("\n");
            sb.Append("  ObjectAndItemsNullableProp: ").Append(ObjectAndItemsNullableProp).Append("\n");
            sb.Append("  ObjectItemsNullable: ").Append(ObjectItemsNullable).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((NullableClass)obj);
        }

        /// <summary>
        /// Returns true if NullableClass instances are equal
        /// </summary>
        /// <param name="other">Instance of NullableClass to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(NullableClass other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    IntegerProp == other.IntegerProp ||
                    IntegerProp != null &&
                    IntegerProp.Equals(other.IntegerProp)
                ) && 
                (
                    NumberProp == other.NumberProp ||
                    NumberProp != null &&
                    NumberProp.Equals(other.NumberProp)
                ) && 
                (
                    BooleanProp == other.BooleanProp ||
                    BooleanProp != null &&
                    BooleanProp.Equals(other.BooleanProp)
                ) && 
                (
                    StringProp == other.StringProp ||
                    StringProp != null &&
                    StringProp.Equals(other.StringProp)
                ) && 
                (
                    DateProp == other.DateProp ||
                    DateProp != null &&
                    DateProp.Equals(other.DateProp)
                ) && 
                (
                    DatetimeProp == other.DatetimeProp ||
                    DatetimeProp != null &&
                    DatetimeProp.Equals(other.DatetimeProp)
                ) && 
                (
                    ArrayNullableProp == other.ArrayNullableProp ||
                    ArrayNullableProp != null &&
                    other.ArrayNullableProp != null &&
                    ArrayNullableProp.SequenceEqual(other.ArrayNullableProp)
                ) && 
                (
                    ArrayAndItemsNullableProp == other.ArrayAndItemsNullableProp ||
                    ArrayAndItemsNullableProp != null &&
                    other.ArrayAndItemsNullableProp != null &&
                    ArrayAndItemsNullableProp.SequenceEqual(other.ArrayAndItemsNullableProp)
                ) && 
                (
                    ArrayItemsNullable == other.ArrayItemsNullable ||
                    ArrayItemsNullable != null &&
                    other.ArrayItemsNullable != null &&
                    ArrayItemsNullable.SequenceEqual(other.ArrayItemsNullable)
                ) && 
                (
                    ObjectNullableProp == other.ObjectNullableProp ||
                    ObjectNullableProp != null &&
                    other.ObjectNullableProp != null &&
                    ObjectNullableProp.SequenceEqual(other.ObjectNullableProp)
                ) && 
                (
                    ObjectAndItemsNullableProp == other.ObjectAndItemsNullableProp ||
                    ObjectAndItemsNullableProp != null &&
                    other.ObjectAndItemsNullableProp != null &&
                    ObjectAndItemsNullableProp.SequenceEqual(other.ObjectAndItemsNullableProp)
                ) && 
                (
                    ObjectItemsNullable == other.ObjectItemsNullable ||
                    ObjectItemsNullable != null &&
                    other.ObjectItemsNullable != null &&
                    ObjectItemsNullable.SequenceEqual(other.ObjectItemsNullable)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (IntegerProp != null)
                    hashCode = hashCode * 59 + IntegerProp.GetHashCode();
                    if (NumberProp != null)
                    hashCode = hashCode * 59 + NumberProp.GetHashCode();
                    if (BooleanProp != null)
                    hashCode = hashCode * 59 + BooleanProp.GetHashCode();
                    if (StringProp != null)
                    hashCode = hashCode * 59 + StringProp.GetHashCode();
                    if (DateProp != null)
                    hashCode = hashCode * 59 + DateProp.GetHashCode();
                    if (DatetimeProp != null)
                    hashCode = hashCode * 59 + DatetimeProp.GetHashCode();
                    if (ArrayNullableProp != null)
                    hashCode = hashCode * 59 + ArrayNullableProp.GetHashCode();
                    if (ArrayAndItemsNullableProp != null)
                    hashCode = hashCode * 59 + ArrayAndItemsNullableProp.GetHashCode();
                    if (ArrayItemsNullable != null)
                    hashCode = hashCode * 59 + ArrayItemsNullable.GetHashCode();
                    if (ObjectNullableProp != null)
                    hashCode = hashCode * 59 + ObjectNullableProp.GetHashCode();
                    if (ObjectAndItemsNullableProp != null)
                    hashCode = hashCode * 59 + ObjectAndItemsNullableProp.GetHashCode();
                    if (ObjectItemsNullable != null)
                    hashCode = hashCode * 59 + ObjectItemsNullable.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(NullableClass left, NullableClass right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(NullableClass left, NullableClass right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
