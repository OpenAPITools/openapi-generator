/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.3.0-SNAPSHOT).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen")
@Validated
@Api(value = "test-headers-validation", description = "the test-headers-validation API")
public interface TestHeadersValidationApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /test-headers-validation : test headers validation
     * desc
     *
     * @param stringWithMinLength  (optional)
     * @param stringWithMaxLength  (optional)
     * @param stringWithLength  (optional)
     * @param stringWithPattern  (optional)
     * @return default response (status code 200)
     */
    @ApiOperation(value = "test headers validation", nickname = "headersValidationTest", notes = "desc", tags={ "verify-headers-validation", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "default response") })
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/test-headers-validation"
    )
    default ResponseEntity<Void> headersValidationTest(@Size(min = 32) @ApiParam(value = "") @RequestHeader(value = "stringWithMinLength", required = false) String stringWithMinLength,@Size(max = 32) @ApiParam(value = "") @RequestHeader(value = "stringWithMaxLength", required = false) String stringWithMaxLength,@Size(min = 32, max = 32) @ApiParam(value = "") @RequestHeader(value = "stringWithLength", required = false) String stringWithLength,@Pattern(regexp = "^([0-9a-fA-F]{32})$") @ApiParam(value = "") @RequestHeader(value = "stringWithPattern", required = false) String stringWithPattern) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
