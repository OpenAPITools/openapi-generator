/*
 * OpenAPI Petstore
 *
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package petstoreserver

import (
	"github.com/gin-gonic/gin"
)

type PetAPI struct {
}

// Post /v2/pet
// Add a new pet to the store 
func (api *PetAPI) AddPet(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Delete /v2/pet/:petId
// Deletes a pet 
func (api *PetAPI) DeletePet(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /v2/pet/findByStatus
// Finds Pets by status 
func (api *PetAPI) FindPetsByStatus(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /v2/pet/findByTags
// Finds Pets by tags 
// Deprecated
func (api *PetAPI) FindPetsByTags(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /v2/pet/:petId
// Find pet by ID 
func (api *PetAPI) GetPetById(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Put /v2/pet
// Update an existing pet 
func (api *PetAPI) UpdatePet(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /v2/pet/:petId
// Updates a pet in the store with form data 
func (api *PetAPI) UpdatePetWithForm(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Post /v2/pet/:petId/uploadImage
// uploads an image 
func (api *PetAPI) UploadFile(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

