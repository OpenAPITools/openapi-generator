/**
* OpenAPI Petstore
* This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
*
* The version of the OpenAPI document: 1.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import org.openapitools.client.models.*


/**
 * An order for a pets from the pet store
 * @param id 
 * @param petId 
 * @param quantity 
 * @param shipDate 
 * @param status Order Status
 * @param complete 
 */
object Orders : BaseTable<Order>("Order") {
    val id = long("id") /* null */
    val petId = long("petId") /* null */
    val quantity = int("quantity") /* null */
    val shipDate = datetime("shipDate") /* null */
    val status = text("status").transform({ Order.Status.valueOf(it ?: "placed") }, { it.value }) /* null */ /* Order Status */

    val complete = boolean("complete") /* null */

    /**
     * Create an entity of type Order from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = Order(
        id = row[id]  /* kotlin.Long? */,
        petId = row[petId]  /* kotlin.Long? */,
        quantity = row[quantity]  /* kotlin.Int? */,
        shipDate = row[shipDate]  /* java.time.LocalDateTime? */,
        status = row[status]  /* kotlin.String? */ /* Order Status */,
        complete = row[complete]  /* kotlin.Boolean? */
    )

    /**
    * Assign all the columns from the entity of type Order to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = Order()
    * database.update(Orders, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: Order) {
        this.apply {
            set(Orders.id, entity.id)
            set(Orders.petId, entity.petId)
            set(Orders.quantity, entity.quantity)
            set(Orders.shipDate, entity.shipDate)
            set(Orders.status, entity.status)
            set(Orders.complete, entity.complete)
        }
    }

}


