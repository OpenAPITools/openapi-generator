/*
 * OpenAPI Petstore
 *
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package petstoreserver

import (
	"encoding/json"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// A FakeClassnameTags123APIController binds http requests to an api service and writes the service results to the http response
type FakeClassnameTags123APIController struct {
	service FakeClassnameTags123APIServicer
}

// NewFakeClassnameTags123APIController creates a default api controller
func NewFakeClassnameTags123APIController(s FakeClassnameTags123APIServicer) Router {
	return &FakeClassnameTags123APIController{ service: s }
}

// Routes returns all of the api route for the FakeClassnameTags123APIController
func (c *FakeClassnameTags123APIController) Routes() Routes {
	return Routes{ 
		{
			"TestClassname",
			strings.ToUpper("Patch"),
			"/v2/fake_classname_test",
			c.TestClassname,
		},
	}
}

// TestClassname - To test class name in snake case
func (c *FakeClassnameTags123APIController) TestClassname(w http.ResponseWriter, r *http.Request) { 
	client := &Client{}
	if err := json.NewDecoder(r.Body).Decode(&client); err != nil {
		w.WriteHeader(500)
		return
	}
	
	result, err := c.service.TestClassname(*client)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}
