/*
 * OpenAPI Petstore
 *
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package petstoreserver

import (
	"net/http"
	"os"
	"os"
)


// AnotherFakeApiRouter defines the required methods for binding the api requests to a responses for the AnotherFakeApi
// The AnotherFakeApiRouter implementation should parse necessary information from the http request, 
// pass the data to a AnotherFakeApiServicer to perform the required actions, then write the service results to the http response.
type AnotherFakeApiRouter interface { 
	Call123TestSpecialTags(http.ResponseWriter, *http.Request)
}
// DefaultApiRouter defines the required methods for binding the api requests to a responses for the DefaultApi
// The DefaultApiRouter implementation should parse necessary information from the http request, 
// pass the data to a DefaultApiServicer to perform the required actions, then write the service results to the http response.
type DefaultApiRouter interface { 
	FooGet(http.ResponseWriter, *http.Request)
}
// FakeApiRouter defines the required methods for binding the api requests to a responses for the FakeApi
// The FakeApiRouter implementation should parse necessary information from the http request, 
// pass the data to a FakeApiServicer to perform the required actions, then write the service results to the http response.
type FakeApiRouter interface { 
	FakeHealthGet(http.ResponseWriter, *http.Request)
	FakeHttpSignatureTest(http.ResponseWriter, *http.Request)
	FakeOuterBooleanSerialize(http.ResponseWriter, *http.Request)
	FakeOuterCompositeSerialize(http.ResponseWriter, *http.Request)
	FakeOuterNumberSerialize(http.ResponseWriter, *http.Request)
	FakeOuterStringSerialize(http.ResponseWriter, *http.Request)
	TestBodyWithFileSchema(http.ResponseWriter, *http.Request)
	TestBodyWithQueryParams(http.ResponseWriter, *http.Request)
	TestClientModel(http.ResponseWriter, *http.Request)
	TestEndpointParameters(http.ResponseWriter, *http.Request)
	TestEnumParameters(http.ResponseWriter, *http.Request)
	TestGroupParameters(http.ResponseWriter, *http.Request)
	TestInlineAdditionalProperties(http.ResponseWriter, *http.Request)
	TestJsonFormData(http.ResponseWriter, *http.Request)
	TestQueryParameterCollectionFormat(http.ResponseWriter, *http.Request)
}
// FakeClassnameTags123ApiRouter defines the required methods for binding the api requests to a responses for the FakeClassnameTags123Api
// The FakeClassnameTags123ApiRouter implementation should parse necessary information from the http request, 
// pass the data to a FakeClassnameTags123ApiServicer to perform the required actions, then write the service results to the http response.
type FakeClassnameTags123ApiRouter interface { 
	TestClassname(http.ResponseWriter, *http.Request)
}
// PetApiRouter defines the required methods for binding the api requests to a responses for the PetApi
// The PetApiRouter implementation should parse necessary information from the http request, 
// pass the data to a PetApiServicer to perform the required actions, then write the service results to the http response.
type PetApiRouter interface { 
	AddPet(http.ResponseWriter, *http.Request)
	DeletePet(http.ResponseWriter, *http.Request)
	FindPetsByStatus(http.ResponseWriter, *http.Request)
	FindPetsByTags(http.ResponseWriter, *http.Request)
	GetPetById(http.ResponseWriter, *http.Request)
	UpdatePet(http.ResponseWriter, *http.Request)
	UpdatePetWithForm(http.ResponseWriter, *http.Request)
	UploadFile(http.ResponseWriter, *http.Request)
	UploadFileWithRequiredFile(http.ResponseWriter, *http.Request)
}
// StoreApiRouter defines the required methods for binding the api requests to a responses for the StoreApi
// The StoreApiRouter implementation should parse necessary information from the http request, 
// pass the data to a StoreApiServicer to perform the required actions, then write the service results to the http response.
type StoreApiRouter interface { 
	DeleteOrder(http.ResponseWriter, *http.Request)
	GetInventory(http.ResponseWriter, *http.Request)
	GetOrderById(http.ResponseWriter, *http.Request)
	PlaceOrder(http.ResponseWriter, *http.Request)
}
// UserApiRouter defines the required methods for binding the api requests to a responses for the UserApi
// The UserApiRouter implementation should parse necessary information from the http request, 
// pass the data to a UserApiServicer to perform the required actions, then write the service results to the http response.
type UserApiRouter interface { 
	CreateUser(http.ResponseWriter, *http.Request)
	CreateUsersWithArrayInput(http.ResponseWriter, *http.Request)
	CreateUsersWithListInput(http.ResponseWriter, *http.Request)
	DeleteUser(http.ResponseWriter, *http.Request)
	GetUserByName(http.ResponseWriter, *http.Request)
	LoginUser(http.ResponseWriter, *http.Request)
	LogoutUser(http.ResponseWriter, *http.Request)
	UpdateUser(http.ResponseWriter, *http.Request)
}


// AnotherFakeApiServicer defines the api actions for the AnotherFakeApi service
// This interface intended to stay up to date with the openapi yaml used to generate it, 
// while the service implementation can ignored with the .openapi-generator-ignore file 
// and updated with the logic required for the API.
type AnotherFakeApiServicer interface { 
	Call123TestSpecialTags(Client) (interface{}, error)
}


// DefaultApiServicer defines the api actions for the DefaultApi service
// This interface intended to stay up to date with the openapi yaml used to generate it, 
// while the service implementation can ignored with the .openapi-generator-ignore file 
// and updated with the logic required for the API.
type DefaultApiServicer interface { 
	FooGet() (interface{}, error)
}


// FakeApiServicer defines the api actions for the FakeApi service
// This interface intended to stay up to date with the openapi yaml used to generate it, 
// while the service implementation can ignored with the .openapi-generator-ignore file 
// and updated with the logic required for the API.
type FakeApiServicer interface { 
	FakeHealthGet() (interface{}, error)
	FakeHttpSignatureTest(Pet, string, string) (interface{}, error)
	FakeOuterBooleanSerialize(bool) (interface{}, error)
	FakeOuterCompositeSerialize(OuterComposite) (interface{}, error)
	FakeOuterNumberSerialize(float32) (interface{}, error)
	FakeOuterStringSerialize(string) (interface{}, error)
	TestBodyWithFileSchema(FileSchemaTestClass) (interface{}, error)
	TestBodyWithQueryParams(string, User) (interface{}, error)
	TestClientModel(Client) (interface{}, error)
	TestEndpointParameters(float32, float64, string, string, int32, int32, int64, float32, string, *os.File, string, time.Time, string, string) (interface{}, error)
	TestEnumParameters([]string, string, []string, string, int32, float64, []string, string) (interface{}, error)
	TestGroupParameters(int32, bool, int64, int32, bool, int64) (interface{}, error)
	TestInlineAdditionalProperties(map[string]string) (interface{}, error)
	TestJsonFormData(string, string) (interface{}, error)
	TestQueryParameterCollectionFormat([]string, []string, []string, []string, []string) (interface{}, error)
}


// FakeClassnameTags123ApiServicer defines the api actions for the FakeClassnameTags123Api service
// This interface intended to stay up to date with the openapi yaml used to generate it, 
// while the service implementation can ignored with the .openapi-generator-ignore file 
// and updated with the logic required for the API.
type FakeClassnameTags123ApiServicer interface { 
	TestClassname(Client) (interface{}, error)
}


// PetApiServicer defines the api actions for the PetApi service
// This interface intended to stay up to date with the openapi yaml used to generate it, 
// while the service implementation can ignored with the .openapi-generator-ignore file 
// and updated with the logic required for the API.
type PetApiServicer interface { 
	AddPet(Pet) (interface{}, error)
	DeletePet(int64, string) (interface{}, error)
	FindPetsByStatus([]string) (interface{}, error)
	FindPetsByTags([]string) (interface{}, error)
	GetPetById(int64) (interface{}, error)
	UpdatePet(Pet) (interface{}, error)
	UpdatePetWithForm(int64, string, string) (interface{}, error)
	UploadFile(int64, string, *os.File) (interface{}, error)
	UploadFileWithRequiredFile(int64, *os.File, string) (interface{}, error)
}


// StoreApiServicer defines the api actions for the StoreApi service
// This interface intended to stay up to date with the openapi yaml used to generate it, 
// while the service implementation can ignored with the .openapi-generator-ignore file 
// and updated with the logic required for the API.
type StoreApiServicer interface { 
	DeleteOrder(string) (interface{}, error)
	GetInventory() (interface{}, error)
	GetOrderById(int64) (interface{}, error)
	PlaceOrder(Order) (interface{}, error)
}


// UserApiServicer defines the api actions for the UserApi service
// This interface intended to stay up to date with the openapi yaml used to generate it, 
// while the service implementation can ignored with the .openapi-generator-ignore file 
// and updated with the logic required for the API.
type UserApiServicer interface { 
	CreateUser(User) (interface{}, error)
	CreateUsersWithArrayInput([]User) (interface{}, error)
	CreateUsersWithListInput([]User) (interface{}, error)
	DeleteUser(string) (interface{}, error)
	GetUserByName(string) (interface{}, error)
	LoginUser(string, string) (interface{}, error)
	LogoutUser() (interface{}, error)
	UpdateUser(string, User) (interface{}, error)
}
