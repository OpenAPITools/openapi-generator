/*
 * OpenAPI Petstore
 *
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package petstoreserver

import (
	"errors"
	"os"
)

// FakeApiService is a service that implents the logic for the FakeApiServicer
// This service should implement the business logic for every endpoint for the FakeApi API. 
// Include any external packages or services that will be required by this service.
type FakeApiService struct {
}

// NewFakeApiService creates a default api service
func NewFakeApiService() FakeApiServicer {
	return &FakeApiService{}
}

// FakeHealthGet - Health check endpoint
func (s *FakeApiService) FakeHealthGet() (interface{}, error) {
	// TODO - update FakeHealthGet with the required logic for this service method.
	// Add api_fake_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.
	return nil, errors.New("service method 'FakeHealthGet' not implemented")
}

// FakeHttpSignatureTest - test http signature authentication
func (s *FakeApiService) FakeHttpSignatureTest(pet Pet, query1 string, header1 string) (interface{}, error) {
	// TODO - update FakeHttpSignatureTest with the required logic for this service method.
	// Add api_fake_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.
	return nil, errors.New("service method 'FakeHttpSignatureTest' not implemented")
}

// FakeOuterBooleanSerialize - 
func (s *FakeApiService) FakeOuterBooleanSerialize(body bool) (interface{}, error) {
	// TODO - update FakeOuterBooleanSerialize with the required logic for this service method.
	// Add api_fake_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.
	return nil, errors.New("service method 'FakeOuterBooleanSerialize' not implemented")
}

// FakeOuterCompositeSerialize - 
func (s *FakeApiService) FakeOuterCompositeSerialize(outerComposite OuterComposite) (interface{}, error) {
	// TODO - update FakeOuterCompositeSerialize with the required logic for this service method.
	// Add api_fake_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.
	return nil, errors.New("service method 'FakeOuterCompositeSerialize' not implemented")
}

// FakeOuterNumberSerialize - 
func (s *FakeApiService) FakeOuterNumberSerialize(body float32) (interface{}, error) {
	// TODO - update FakeOuterNumberSerialize with the required logic for this service method.
	// Add api_fake_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.
	return nil, errors.New("service method 'FakeOuterNumberSerialize' not implemented")
}

// FakeOuterStringSerialize - 
func (s *FakeApiService) FakeOuterStringSerialize(body string) (interface{}, error) {
	// TODO - update FakeOuterStringSerialize with the required logic for this service method.
	// Add api_fake_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.
	return nil, errors.New("service method 'FakeOuterStringSerialize' not implemented")
}

// TestBodyWithFileSchema - 
func (s *FakeApiService) TestBodyWithFileSchema(fileSchemaTestClass FileSchemaTestClass) (interface{}, error) {
	// TODO - update TestBodyWithFileSchema with the required logic for this service method.
	// Add api_fake_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.
	return nil, errors.New("service method 'TestBodyWithFileSchema' not implemented")
}

// TestBodyWithQueryParams - 
func (s *FakeApiService) TestBodyWithQueryParams(query string, user User) (interface{}, error) {
	// TODO - update TestBodyWithQueryParams with the required logic for this service method.
	// Add api_fake_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.
	return nil, errors.New("service method 'TestBodyWithQueryParams' not implemented")
}

// TestClientModel - To test \&quot;client\&quot; model
func (s *FakeApiService) TestClientModel(client Client) (interface{}, error) {
	// TODO - update TestClientModel with the required logic for this service method.
	// Add api_fake_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.
	return nil, errors.New("service method 'TestClientModel' not implemented")
}

// TestEndpointParameters - Fake endpoint for testing various parameters 假端點 偽のエンドポイント 가짜 엔드 포인트 
func (s *FakeApiService) TestEndpointParameters(number float32, double float64, patternWithoutDelimiter string, byte_ string, integer int32, int32_ int32, int64_ int64, float float32, string_ string, binary *os.File, date string, dateTime time.Time, password string, callback string) (interface{}, error) {
	// TODO - update TestEndpointParameters with the required logic for this service method.
	// Add api_fake_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.
	return nil, errors.New("service method 'TestEndpointParameters' not implemented")
}

// TestEnumParameters - To test enum parameters
func (s *FakeApiService) TestEnumParameters(enumHeaderStringArray []string, enumHeaderString string, enumQueryStringArray []string, enumQueryString string, enumQueryInteger int32, enumQueryDouble float64, enumFormStringArray []string, enumFormString string) (interface{}, error) {
	// TODO - update TestEnumParameters with the required logic for this service method.
	// Add api_fake_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.
	return nil, errors.New("service method 'TestEnumParameters' not implemented")
}

// TestGroupParameters - Fake endpoint to test group parameters (optional)
func (s *FakeApiService) TestGroupParameters(requiredStringGroup int32, requiredBooleanGroup bool, requiredInt64Group int64, stringGroup int32, booleanGroup bool, int64Group int64) (interface{}, error) {
	// TODO - update TestGroupParameters with the required logic for this service method.
	// Add api_fake_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.
	return nil, errors.New("service method 'TestGroupParameters' not implemented")
}

// TestInlineAdditionalProperties - test inline additionalProperties
func (s *FakeApiService) TestInlineAdditionalProperties(requestBody map[string]string) (interface{}, error) {
	// TODO - update TestInlineAdditionalProperties with the required logic for this service method.
	// Add api_fake_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.
	return nil, errors.New("service method 'TestInlineAdditionalProperties' not implemented")
}

// TestJsonFormData - test json serialization of form data
func (s *FakeApiService) TestJsonFormData(param string, param2 string) (interface{}, error) {
	// TODO - update TestJsonFormData with the required logic for this service method.
	// Add api_fake_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.
	return nil, errors.New("service method 'TestJsonFormData' not implemented")
}

// TestQueryParameterCollectionFormat - 
func (s *FakeApiService) TestQueryParameterCollectionFormat(pipe []string, ioutil []string, http []string, url []string, context []string) (interface{}, error) {
	// TODO - update TestQueryParameterCollectionFormat with the required logic for this service method.
	// Add api_fake_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.
	return nil, errors.New("service method 'TestQueryParameterCollectionFormat' not implemented")
}
