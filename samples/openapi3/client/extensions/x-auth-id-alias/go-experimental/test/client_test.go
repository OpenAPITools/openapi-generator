/*
OpenAPI Extension x-auth-id-alias

Testing Client

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package x_auth_id_alias

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
)

func Test_x_auth_id_alias_jsonCheck(t *testing.T) {
	testCases := []testCase{
		{"application/json", true},
		{"application/vnd.org.application+json", true},
		{"application/hal+json", true},
		{"text/json", true},
		{"text/vnd.org.application+json", true},
		{"text/hal+json", true},

		{"application/bson", false},
		{"application/+json", false},
		{"text/bson", false},
		{"text/+json", false},

		{"zip/json", false},
	}

	for _, c := range testCases {
		assert.Equal(t, c.ShouldMatch, openapiclient.jsonCheck.MatchString(c.String))
	}
}

func Test_x_auth_id_alias_xmlCheck(t *testing.T) {
	testCases := []testCase{
		{"application/xml", true},
		{"application/vnd.org.application+xml", true},
		{"application/hal+xml", true},
		{"text/xml", true},
		{"text/vnd.org.application+xml", true},
		{"text/hal+xml", true},

		{"application/bmx", false},
		{"application/+xml", false},
		{"text/bmx", false},
		{"text/+xml", false},

		{"zip/xml", false},
	}

	for _, c := range testCases {
		assert.Equal(t, c.ShouldMatch, openapiclient.xmlCheck.MatchString(c.String))
	}
}

func Test_x_auth_id_alias_Client(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

}
