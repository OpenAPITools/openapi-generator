# coding: utf-8

"""
    openapi 3.1.0 sample spec

    sample spec for testing openapi functionality, built from json schema tests for draft2020-12  # noqa: E501

    The version of the OpenAPI document: 0.0.1
    Generated by: https://openapi-generator.tech
"""

import unittest

import unit_test_api
from unit_test_api.model.properties_whose_names_are_javascript_object_property_names import PropertiesWhoseNamesAreJavascriptObjectPropertyNames
from unit_test_api import configuration


class TestPropertiesWhoseNamesAreJavascriptObjectPropertyNames(unittest.TestCase):
    """PropertiesWhoseNamesAreJavascriptObjectPropertyNames unit test stubs"""
    _configuration = configuration.Configuration()

    def test_ignores_arrays_passes(self):
        # ignores arrays
        PropertiesWhoseNamesAreJavascriptObjectPropertyNames.from_openapi_data_oapg(
            [
            ],
            _configuration=self._configuration
        )

    def test_constructor_not_valid_fails(self):
        # constructor not valid
        with self.assertRaises((unit_test_api.ApiValueError, unit_test_api.ApiTypeError)):
            PropertiesWhoseNamesAreJavascriptObjectPropertyNames.from_openapi_data_oapg(
                {
                    "constructor":
                        {
                            "length":
                                37,
                        },
                },
                _configuration=self._configuration
            )

    def test_ignores_other_non_objects_passes(self):
        # ignores other non-objects
        PropertiesWhoseNamesAreJavascriptObjectPropertyNames.from_openapi_data_oapg(
            12,
            _configuration=self._configuration
        )

    def test_none_of_the_properties_mentioned_passes(self):
        # none of the properties mentioned
        PropertiesWhoseNamesAreJavascriptObjectPropertyNames.from_openapi_data_oapg(
            {
            },
            _configuration=self._configuration
        )

    def test_proto_not_valid_fails(self):
        # __proto__ not valid
        with self.assertRaises((unit_test_api.ApiValueError, unit_test_api.ApiTypeError)):
            PropertiesWhoseNamesAreJavascriptObjectPropertyNames.from_openapi_data_oapg(
                {
                    "__proto__":
                        "foo",
                },
                _configuration=self._configuration
            )

    def test_tostring_not_valid_fails(self):
        # toString not valid
        with self.assertRaises((unit_test_api.ApiValueError, unit_test_api.ApiTypeError)):
            PropertiesWhoseNamesAreJavascriptObjectPropertyNames.from_openapi_data_oapg(
                {
                    "toString":
                        {
                            "length":
                                37,
                        },
                },
                _configuration=self._configuration
            )

    def test_all_present_and_valid_passes(self):
        # all present and valid
        PropertiesWhoseNamesAreJavascriptObjectPropertyNames.from_openapi_data_oapg(
            {
                "__proto__":
                    12,
                "toString":
                    {
                        "length":
                            "foo",
                    },
                "constructor":
                    37,
            },
            _configuration=self._configuration
        )


if __name__ == '__main__':
    unittest.main()
