# coding: utf-8

"""
    openapi 3.0.3 sample spec

    sample spec for testing openapi functionality, built from json schema tests for draft6  # noqa: E501

    The version of the OpenAPI document: 0.0.1
    Generated by: https://openapi-generator.tech
"""

import unittest

import unit_test_api
from unit_test_api.model.boolean_type_matches_booleans import BooleanTypeMatchesBooleans
from unit_test_api import configuration


class TestBooleanTypeMatchesBooleans(unittest.TestCase):
    """BooleanTypeMatchesBooleans unit test stubs"""
    _configuration = configuration.Configuration()

    def test_an_empty_string_is_not_a_boolean_fails(self):
        # an empty string is not a boolean
        with self.assertRaises((unit_test_api.ApiValueError, unit_test_api.ApiTypeError)):
            BooleanTypeMatchesBooleans.from_openapi_data_oapg(
                "",
                _configuration=self._configuration
            )

    def test_a_float_is_not_a_boolean_fails(self):
        # a float is not a boolean
        with self.assertRaises((unit_test_api.ApiValueError, unit_test_api.ApiTypeError)):
            BooleanTypeMatchesBooleans.from_openapi_data_oapg(
                1.1,
                _configuration=self._configuration
            )

    def test_null_is_not_a_boolean_fails(self):
        # null is not a boolean
        with self.assertRaises((unit_test_api.ApiValueError, unit_test_api.ApiTypeError)):
            BooleanTypeMatchesBooleans.from_openapi_data_oapg(
                None,
                _configuration=self._configuration
            )

    def test_zero_is_not_a_boolean_fails(self):
        # zero is not a boolean
        with self.assertRaises((unit_test_api.ApiValueError, unit_test_api.ApiTypeError)):
            BooleanTypeMatchesBooleans.from_openapi_data_oapg(
                0,
                _configuration=self._configuration
            )

    def test_an_array_is_not_a_boolean_fails(self):
        # an array is not a boolean
        with self.assertRaises((unit_test_api.ApiValueError, unit_test_api.ApiTypeError)):
            BooleanTypeMatchesBooleans.from_openapi_data_oapg(
                [
                ],
                _configuration=self._configuration
            )

    def test_a_string_is_not_a_boolean_fails(self):
        # a string is not a boolean
        with self.assertRaises((unit_test_api.ApiValueError, unit_test_api.ApiTypeError)):
            BooleanTypeMatchesBooleans.from_openapi_data_oapg(
                "foo",
                _configuration=self._configuration
            )

    def test_false_is_a_boolean_passes(self):
        # false is a boolean
        BooleanTypeMatchesBooleans.from_openapi_data_oapg(
            False,
            _configuration=self._configuration
        )

    def test_an_integer_is_not_a_boolean_fails(self):
        # an integer is not a boolean
        with self.assertRaises((unit_test_api.ApiValueError, unit_test_api.ApiTypeError)):
            BooleanTypeMatchesBooleans.from_openapi_data_oapg(
                1,
                _configuration=self._configuration
            )

    def test_true_is_a_boolean_passes(self):
        # true is a boolean
        BooleanTypeMatchesBooleans.from_openapi_data_oapg(
            True,
            _configuration=self._configuration
        )

    def test_an_object_is_not_a_boolean_fails(self):
        # an object is not a boolean
        with self.assertRaises((unit_test_api.ApiValueError, unit_test_api.ApiTypeError)):
            BooleanTypeMatchesBooleans.from_openapi_data_oapg(
                {
                },
                _configuration=self._configuration
            )


if __name__ == '__main__':
    unittest.main()
