# coding: utf-8

"""
    openapi 3.0.3 sample spec

    sample spec for testing openapi functionality, built from json schema tests for draft6  # noqa: E501

    The version of the OpenAPI document: 0.0.1
    Generated by: https://openapi-generator.tech
"""

import unittest

import unit_test_api
from unit_test_api.model.object_properties_validation import ObjectPropertiesValidation


class TestObjectPropertiesValidation(unittest.TestCase):
    """ObjectPropertiesValidation unit test stubs"""

    def test_ignores_arrays_passes(self):
        # ignores arrays
        ObjectPropertiesValidation(
            [
            ]
        )

    def test_ignores_other_non_objects_passes(self):
        # ignores other non-objects
        ObjectPropertiesValidation(
            12        )

    def test_one_property_invalid_is_invalid_fails(self):
        # one property invalid is invalid
        with self.assertRaises((unit_test_api.ApiValueError, unit_test_api.ApiTypeError, TypeError)):
            ObjectPropertiesValidation(
                **{
                    
                    "foo":
                                                1,
                    
                    "bar":
                                                {
                        }
,
                }
            )

    def test_both_properties_present_and_valid_is_valid_passes(self):
        # both properties present and valid is valid
        ObjectPropertiesValidation(
            **{
                
                "foo":
                                        1,
                
                "bar":
                    
                    "baz",
            }
        )

    def test_doesn_t_invalidate_other_properties_passes(self):
        # doesn&#x27;t invalidate other properties
        ObjectPropertiesValidation(
            **{
                
                "quux":
                                        [
                    ]
,
            }
        )

    def test_both_properties_invalid_is_invalid_fails(self):
        # both properties invalid is invalid
        with self.assertRaises((unit_test_api.ApiValueError, unit_test_api.ApiTypeError, TypeError)):
            ObjectPropertiesValidation(
                **{
                    
                    "foo":
                                                [
                        ]
,
                    
                    "bar":
                                                {
                        }
,
                }
            )


if __name__ == '__main__':
    unittest.main()
