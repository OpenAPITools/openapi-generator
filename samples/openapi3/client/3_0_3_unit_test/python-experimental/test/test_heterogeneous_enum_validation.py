# coding: utf-8

"""
    openapi 3.0.3 sample spec

    sample spec for testing openapi functionality, built from json schema tests for draft6  # noqa: E501

    The version of the OpenAPI document: 0.0.1
    Generated by: https://openapi-generator.tech
"""

import unittest

import unit_test_api
from unit_test_api.model.heterogeneous_enum_validation import HeterogeneousEnumValidation


class TestHeterogeneousEnumValidation(unittest.TestCase):
    """HeterogeneousEnumValidation unit test stubs"""

    def test_extra_properties_in_object_is_invalid_fails(self):
        # extra properties in object is invalid
        with self.assertRaises((unit_test_api.ApiValueError, unit_test_api.ApiTypeError, TypeError)):
            HeterogeneousEnumValidation(
                **{
                    "foo":
                                                12,
                    "boo":
                                                42,
                }
            )

    def test_something_else_is_invalid_fails(self):
        # something else is invalid
        with self.assertRaises((unit_test_api.ApiValueError, unit_test_api.ApiTypeError, TypeError)):
            HeterogeneousEnumValidation(

                None            )

    def test_objects_are_deep_compared_fails(self):
        # objects are deep compared
        with self.assertRaises((unit_test_api.ApiValueError, unit_test_api.ApiTypeError, TypeError)):
            HeterogeneousEnumValidation(
                **{
                    "foo":
                        
                        False,
                }
            )

    def test_one_of_the_enum_is_valid_passes(self):
        # one of the enum is valid
        HeterogeneousEnumValidation(
            [
            ]
        )

    def test_valid_object_matches_passes(self):
        # valid object matches
        HeterogeneousEnumValidation(
            **{
                "foo":
                                        12,
            }
        )


if __name__ == '__main__':
    unittest.main()
