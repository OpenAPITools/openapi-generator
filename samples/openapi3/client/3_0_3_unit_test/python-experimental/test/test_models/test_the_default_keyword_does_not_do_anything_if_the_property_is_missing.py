# coding: utf-8

"""
    openapi 3.0.3 sample spec

    sample spec for testing openapi functionality, built from json schema tests for draft6  # noqa: E501

    The version of the OpenAPI document: 0.0.1
    Generated by: https://openapi-generator.tech
"""

import unittest

import unit_test_api
from unit_test_api.model.the_default_keyword_does_not_do_anything_if_the_property_is_missing import TheDefaultKeywordDoesNotDoAnythingIfThePropertyIsMissing
from unit_test_api import configuration


class TestTheDefaultKeywordDoesNotDoAnythingIfThePropertyIsMissing(unittest.TestCase):
    """TheDefaultKeywordDoesNotDoAnythingIfThePropertyIsMissing unit test stubs"""
    _configuration = configuration.Configuration()

    def test_missing_properties_are_not_filled_in_with_the_default_passes(self):
        # missing properties are not filled in with the default
        TheDefaultKeywordDoesNotDoAnythingIfThePropertyIsMissing.from_openapi_data_oapg(
            {
            },
            _configuration=self._configuration
        )

    def test_an_explicit_property_value_is_checked_against_maximum_passing_passes(self):
        # an explicit property value is checked against maximum (passing)
        TheDefaultKeywordDoesNotDoAnythingIfThePropertyIsMissing.from_openapi_data_oapg(
            {
                "alpha":
                    1,
            },
            _configuration=self._configuration
        )

    def test_an_explicit_property_value_is_checked_against_maximum_failing_fails(self):
        # an explicit property value is checked against maximum (failing)
        with self.assertRaises((unit_test_api.ApiValueError, unit_test_api.ApiTypeError)):
            TheDefaultKeywordDoesNotDoAnythingIfThePropertyIsMissing.from_openapi_data_oapg(
                {
                    "alpha":
                        5,
                },
                _configuration=self._configuration
            )


if __name__ == '__main__':
    unittest.main()
