# coding: utf-8

"""
    edu-sharing Repository REST API

    The public restful API of the edu-sharing repository.  # noqa: E501

    The version of the OpenAPI document: 1.1
    Generated by: https://openapi-generator.tech
"""

import re  # noqa: F401
import sys  # noqa: F401
import typing  # noqa: F401
import functools  # noqa: F401

from frozendict import frozendict  # noqa: F401

import decimal  # noqa: F401
from datetime import date, datetime  # noqa: F401
from frozendict import frozendict  # noqa: F401

from edu_sharing_client_api.schemas import (  # noqa: F401
    AnyTypeSchema,
    ComposedSchema,
    DictSchema,
    ListSchema,
    StrSchema,
    IntSchema,
    Int32Schema,
    Int64Schema,
    Float32Schema,
    Float64Schema,
    NumberSchema,
    UUIDSchema,
    DateSchema,
    DateTimeSchema,
    DecimalSchema,
    BoolSchema,
    BinarySchema,
    NoneSchema,
    none_type,
    Configuration,
    Unset,
    unset,
    ComposedBase,
    ListBase,
    DictBase,
    NoneBase,
    StrBase,
    IntBase,
    Int32Base,
    Int64Base,
    Float32Base,
    Float64Base,
    NumberBase,
    UUIDBase,
    DateBase,
    DateTimeBase,
    BoolBase,
    BinaryBase,
    Schema,
    NoneClass,
    BoolClass,
    _SchemaValidator,
    _SchemaTypeChecker,
    _SchemaEnumMaker
)


class StoredService(
    DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    name = StrSchema
    url = StrSchema
    icon = StrSchema
    logo = StrSchema
    inLanguage = StrSchema
    _items = StrSchema
    description = StrSchema
    
    
    class audience(
        ListSchema
    ):
    
        @classmethod
        @property
        def _items(cls) -> typing.Type['Audience']:
            return Audience

    @classmethod
    @property
    def provider(cls) -> typing.Type['Provider']:
        return Provider
    startDate = StrSchema
    
    
    class interfaces(
        ListSchema
    ):
    
        @classmethod
        @property
        def _items(cls) -> typing.Type['Interface']:
            return Interface
    
    
    class about(
        ListSchema
    ):
        _items = StrSchema
    id = StrSchema
    isAccessibleForFree = BoolSchema


    def __new__(
        cls,
        *args: typing.Union[dict, frozendict, ],
        name: typing.Union[name, Unset] = unset,
        url: typing.Union[url, Unset] = unset,
        icon: typing.Union[icon, Unset] = unset,
        logo: typing.Union[logo, Unset] = unset,
        inLanguage: typing.Union[inLanguage, Unset] = unset,
        _items: typing.Union[_items, Unset] = unset,
        description: typing.Union[description, Unset] = unset,
        audience: typing.Union[audience, Unset] = unset,
        provider: typing.Union['Provider', Unset] = unset,
        startDate: typing.Union[startDate, Unset] = unset,
        interfaces: typing.Union[interfaces, Unset] = unset,
        about: typing.Union[about, Unset] = unset,
        id: typing.Union[id, Unset] = unset,
        isAccessibleForFree: typing.Union[isAccessibleForFree, Unset] = unset,
        _configuration: typing.Optional[Configuration] = None,
        **kwargs: typing.Type[Schema],
    ) -> 'StoredService':
        return super().__new__(
            cls,
            *args,
            name=name,
            url=url,
            icon=icon,
            logo=logo,
            inLanguage=inLanguage,
            _items=_items,
            description=description,
            audience=audience,
            provider=provider,
            startDate=startDate,
            interfaces=interfaces,
            about=about,
            id=id,
            isAccessibleForFree=isAccessibleForFree,
            _configuration=_configuration,
            **kwargs,
        )

from edu_sharing_client_api.model.audience import Audience
from edu_sharing_client_api.model.interface import Interface
from edu_sharing_client_api.model.provider import Provider
