{-
   OpenAPI Petstore
   This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\

   OpenAPI spec version: 1.0.0

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git
   Do not edit this file manually.
-}


module Data.Body3 exposing (Body3, decoder, encoder)

import Byte exposing (Byte)
import DateOnly exposing (DateOnly)
import DateTime exposing (DateTime)
import Json.Decode as Decode exposing (Decoder)
import Json.Decode.Pipeline exposing (optional, required)
import Json.Encode as Encode


type alias Body3 =
    { integer : Maybe Int
    , int32 : Maybe Int
    , int64 : Maybe Int
    , number : Float
    , float : Maybe Float
    , double : Float
    , string : Maybe String
    , pattern_without_delimiter : String
    , byte : Byte
    , binary : Maybe String
    , date : Maybe DateOnly
    , dateTime : Maybe DateTime
    , password : Maybe String
    , callback : Maybe String
    }


decoder : Decoder Body3
decoder =
    Decode.succeed Body3
        |> optional "integer" (Decode.nullable Decode.int) Nothing
        |> optional "int32" (Decode.nullable Decode.int) Nothing
        |> optional "int64" (Decode.nullable Decode.int) Nothing
        |> required "number" Decode.float
        |> optional "float" (Decode.nullable Decode.float) Nothing
        |> required "double" Decode.float
        |> optional "string" (Decode.nullable Decode.string) Nothing
        |> required "pattern_without_delimiter" Decode.string
        |> required "byte" Byte.decoder
        |> optional "binary" (Decode.nullable Decode.string) Nothing
        |> optional "date" (Decode.nullable DateOnly.decoder) Nothing
        |> optional "dateTime" (Decode.nullable DateTime.decoder) Nothing
        |> optional "password" (Decode.nullable Decode.string) Nothing
        |> optional "callback" (Decode.nullable Decode.string) Nothing


encoder : Body3 -> Encode.Value
encoder model =
    Encode.object
        [ ( "integer", Maybe.withDefault Encode.null (Maybe.map Encode.int model.integer) )
        , ( "int32", Maybe.withDefault Encode.null (Maybe.map Encode.int model.int32) )
        , ( "int64", Maybe.withDefault Encode.null (Maybe.map Encode.int model.int64) )
        , ( "number", Encode.float model.number )
        , ( "float", Maybe.withDefault Encode.null (Maybe.map Encode.float model.float) )
        , ( "double", Encode.float model.double )
        , ( "string", Maybe.withDefault Encode.null (Maybe.map Encode.string model.string) )
        , ( "pattern_without_delimiter", Encode.string model.pattern_without_delimiter )
        , ( "byte", Byte.encoder model.byte )
        , ( "binary", Maybe.withDefault Encode.null (Maybe.map Encode.string model.binary) )
        , ( "date", Maybe.withDefault Encode.null (Maybe.map DateOnly.encoder model.date) )
        , ( "dateTime", Maybe.withDefault Encode.null (Maybe.map DateTime.encoder model.dateTime) )
        , ( "password", Maybe.withDefault Encode.null (Maybe.map Encode.string model.password) )
        , ( "callback", Maybe.withDefault Encode.null (Maybe.map Encode.string model.callback) )
        ]
