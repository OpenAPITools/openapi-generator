# coding: utf-8

"""
    OpenAPI Petstore

    This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""

import sys
from collections import namedtuple
import json
import unittest
from unittest.mock import patch
from urllib3.connection import HTTPHeaderDict

import petstore_api
from petstore_api.api.fake_api import FakeApi  # noqa: E501
from petstore_api.rest import RESTResponse

HTTPResponse = namedtuple(
    'urllib3_response_HTTPResponse',
    ['status', 'reason', 'data', 'getheaders', 'getheader']
)

headers = {'Content-Type': 'application/json'}
def get_headers():
    return {}
def get_header(name, default=None):
    return {}.get(name, default)


class TestFakeApi(unittest.TestCase):
    """FakeApi unit test stubs"""

    def setUp(self):
        self.api = FakeApi()  # noqa: E501

    def tearDown(self):
        pass

    @staticmethod
    def mock_response(body_value):
        http_response = HTTPResponse(
            status=200,
            reason='OK',
            data=json.dumps(body_value).encode('utf-8'),
            getheaders=get_headers,
            getheader=get_header
        )
        return RESTResponse(http_response)

    def test_user_group_impersonation(self):
        """Test case for passing multiple Impersonate-Group headers

        """
        from petstore_api.api_client import ApiClient
        api_client = ApiClient()

        with patch.object(api_client, 'request') as mock_method:
            mock_method.return_value = self.mock_response([])

            api_client.call_api(
                '/fake',
                'GET',
                collection_formats = {'Impersonate-Group': 'multi'},
                header_params = {
                    'Impersonate-Group': ['dev', 'admin'],
                },
            )

            mock_method.assert_called_with(
                'GET',
                'http://petstore.swagger.io:80/v2/fake',
                query_params=None,
                headers=HTTPHeaderDict([
                    ('Impersonate-Group', 'dev'),
                    ('Impersonate-Group', 'admin'),
                    ('User-Agent', 'OpenAPI-Generator/1.0.0/python'),
                ]),
                post_params=None,
                body=None,
                _preload_content=True,
                _request_timeout=None,
            )

if __name__ == '__main__':
    unittest.main()
