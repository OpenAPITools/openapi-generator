# coding: utf-8

"""
    OpenAPI Petstore

    This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import sys
import unittest

import petstore_api
from petstore_api.configuration import Configuration
try:
    from petstore_api.model import equilateral_triangle
except ImportError:
    equilateral_triangle = sys.modules[
        'petstore_api.model.equilateral_triangle']
try:
    from petstore_api.model import isosceles_triangle
except ImportError:
    isosceles_triangle = sys.modules[
        'petstore_api.model.isosceles_triangle']
try:
    from petstore_api.model import scalene_triangle
except ImportError:
    scalene_triangle = sys.modules[
        'petstore_api.model.scalene_triangle']
from petstore_api.model.triangle import Triangle
from petstore_api.model.shape_name import ShapeName


class TestTriangle(unittest.TestCase):
    """Triangle unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def testTriangle(self):
        """Test Triangle"""
        tri = Triangle(shape_type="Triangle", triangle_type="EquilateralTriangle")
        assert isinstance(tri, equilateral_triangle.EquilateralTriangle)
        tri = Triangle(shape_type="Triangle", triangle_type="IsoscelesTriangle")
        assert isinstance(tri, isosceles_triangle.IsoscelesTriangle)
        tri = Triangle(shape_type="Triangle", triangle_type="ScaleneTriangle")
        assert isinstance(tri, scalene_triangle.ScaleneTriangle)

    def testShapeNameInsideAllOf(self):
        """Test construction of a composed object where a constructor
           argument is selectively passed down to the associated
           allOf object"""

        shape_name = ShapeName("mytriangle")

        # Apply discard_unknown_keys so that setting property
        # ShapeName inside allOf instances that do not accept that
        # will discard it rather than throw and exception.
        configuration = Configuration(discard_unknown_keys=True)
        tri = equilateral_triangle.EquilateralTriangle(
            triangle_type="EquilateralTriangle",
            shape_type="Triangle",
            name=shape_name,
            _configuration = configuration,
        )
        assert tri.name == shape_name


if __name__ == '__main__':
    unittest.main()
