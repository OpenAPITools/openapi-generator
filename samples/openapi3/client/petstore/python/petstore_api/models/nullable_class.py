# coding: utf-8

"""
    OpenAPI Petstore

    This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\  # noqa: E501

    OpenAPI spec version: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from petstore_api.exceptions import (
    ApiKeyError,
    ApiTypeError,
    ApiValueError,
)
from petstore_api.model_utils import (  # noqa: F401
    OpenApiModel,
    date,
    datetime,
    file_type,
    get_simple_class,
    int,
    model_to_dict,
    none_type,
    str,
    type_error_message,
    validate_and_convert_types
)


class NullableClass(OpenApiModel):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
                            Optional and required variables only.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
                            Optional, required variables, and
                            additional properties.
      additional_properties_type (str): The attribute type for
                                        additional_properties variables only.
    """
    openapi_types = {
        'integer_prop': [int, none_type],  # noqa: E501
        'number_prop': [float, none_type],  # noqa: E501
        'boolean_prop': [bool, none_type],  # noqa: E501
        'string_prop': [str, none_type],  # noqa: E501
        'date_prop': [date, none_type],  # noqa: E501
        'datetime_prop': [datetime, none_type],  # noqa: E501
        'array_nullable_prop': [[(bool, date, datetime, dict, float, int, list, str)], none_type],  # noqa: E501
        'array_and_items_nullable_prop': [[(bool, date, datetime, dict, float, int, list, str, none_type)], none_type],  # noqa: E501
        'array_items_nullable': [[(bool, date, datetime, dict, float, int, list, str, none_type)]],  # noqa: E501
        'object_nullable_prop': [{str: (bool, date, datetime, dict, float, int, list, str)}, none_type],  # noqa: E501
        'object_and_items_nullable_prop': [{str: (bool, date, datetime, dict, float, int, list, str, none_type)}, none_type],  # noqa: E501
        'object_items_nullable': [{str: (bool, date, datetime, dict, float, int, list, str, none_type)}]  # noqa: E501
    }
    attribute_map = {
        'integer_prop': 'integer_prop',  # noqa: E501
        'number_prop': 'number_prop',  # noqa: E501
        'boolean_prop': 'boolean_prop',  # noqa: E501
        'string_prop': 'string_prop',  # noqa: E501
        'date_prop': 'date_prop',  # noqa: E501
        'datetime_prop': 'datetime_prop',  # noqa: E501
        'array_nullable_prop': 'array_nullable_prop',  # noqa: E501
        'array_and_items_nullable_prop': 'array_and_items_nullable_prop',  # noqa: E501
        'array_items_nullable': 'array_items_nullable',  # noqa: E501
        'object_nullable_prop': 'object_nullable_prop',  # noqa: E501
        'object_and_items_nullable_prop': 'object_and_items_nullable_prop',  # noqa: E501
        'object_items_nullable': 'object_items_nullable'  # noqa: E501
    }
    additional_properties_type = [bool, date, datetime, dict, float, int, list, str, none_type]  # noqa: E501

    def __init__(self, _check_type=False, _path_to_item=(), _configuration=None, **kwargs):  # noqa: E501
        """NullableClass - a model defined in OpenAPI



        Keyword Args:
            _check_type (bool): if True, values for parameters in openapi_types
                                will be type checked and a TypeError will be
                                raised if the wrong type is input.
                                Defaults to False
            _path_to_item (tuple/list): This is a list of keys or values to
                                drill down to the model in received_data
                                when deserializing a response
            _configuration (Configuration): the instance to use when
                                deserializing a file_type parameter.
                                If passed, type conversion is attempted
                                If omitted no type conversion is done.
            integer_prop (int, none_type): [optional]  # noqa: E501
            number_prop (float, none_type): [optional]  # noqa: E501
            boolean_prop (bool, none_type): [optional]  # noqa: E501
            string_prop (str, none_type): [optional]  # noqa: E501
            date_prop (date, none_type): [optional]  # noqa: E501
            datetime_prop (datetime, none_type): [optional]  # noqa: E501
            array_nullable_prop ([(bool, date, datetime, dict, float, int, list, str)], none_type): [optional]  # noqa: E501
            array_and_items_nullable_prop ([(bool, date, datetime, dict, float, int, list, str, none_type)], none_type): [optional]  # noqa: E501
            array_items_nullable ([(bool, date, datetime, dict, float, int, list, str, none_type)]): [optional]  # noqa: E501
            object_nullable_prop ({str: (bool, date, datetime, dict, float, int, list, str)}, none_type): [optional]  # noqa: E501
            object_and_items_nullable_prop ({str: (bool, date, datetime, dict, float, int, list, str, none_type)}, none_type): [optional]  # noqa: E501
            object_items_nullable ({str: (bool, date, datetime, dict, float, int, list, str, none_type)}): [optional]  # noqa: E501
        """

        self._data_store = {}
        self.discriminator = None
        self._check_type = _check_type
        self._path_to_item = _path_to_item
        self._configuration = _configuration

        for var_name, var_value in six.iteritems(kwargs):
            if var_name in self.openapi_types:
                # assign using .var_name to check against nullable and enums
                setattr(self, var_name, var_value)
            else:
                self.__setitem__(var_name, var_value)

    def __setitem__(self, name, value):
        if name in self.openapi_types:
            check_type = self._check_type
            required_types_mixed = self.openapi_types[name]
        else:
            check_type = True
            required_types_mixed = self.additional_properties_type

        path_to_item = []
        if self._path_to_item:
            path_to_item.extend(self._path_to_item)
        path_to_item.append(name)

        if get_simple_class(name) != str:
            error_msg = type_error_message(
                var_name=name,
                var_value=name,
                valid_classes=(str,),
                key_type=True
            )
            raise ApiTypeError(
                error_msg,
                path_to_item=path_to_item,
                valid_classes=(str,),
                key_type=True
            )

        if check_type:
            self._data_store[name] = validate_and_convert_types(
                value, required_types_mixed, path_to_item,
                configuration=self._configuration)
        else:
            self._data_store[name] = value

        # set a variable name value for json serialization
        if (name not in self.openapi_types and
                name not in self.attribute_map):
            self.attribute_map[name] = name

    def __getitem__(self, name):
        if name in self.openapi_types:
            return self._data_store.get(name)
        if name in self._data_store:
            return self._data_store[name]

        path_to_item = []
        if self._path_to_item:
            path_to_item.extend(self._path_to_item)
        path_to_item.append(name)
        raise ApiKeyError(
            "{0} has no key '{1}'".format(type(self).__name__, name),
            [name]
        )

    @property
    def integer_prop(self):
        """Gets the integer_prop of this NullableClass.  # noqa: E501


        Returns:
            (int, none_type): The integer_prop of this NullableClass.  # noqa: E501
        """
        return self._data_store.get('integer_prop')

    @integer_prop.setter
    def integer_prop(
            self, integer_prop):
        """Sets the integer_prop of this NullableClass.


        Returns:
            (int, none_type): The integer_prop of this NullableClass.  # noqa: E501
        """

        self.__setitem__(
            'integer_prop',
            integer_prop
        )

    @property
    def number_prop(self):
        """Gets the number_prop of this NullableClass.  # noqa: E501


        Returns:
            (float, none_type): The number_prop of this NullableClass.  # noqa: E501
        """
        return self._data_store.get('number_prop')

    @number_prop.setter
    def number_prop(
            self, number_prop):
        """Sets the number_prop of this NullableClass.


        Returns:
            (float, none_type): The number_prop of this NullableClass.  # noqa: E501
        """

        self.__setitem__(
            'number_prop',
            number_prop
        )

    @property
    def boolean_prop(self):
        """Gets the boolean_prop of this NullableClass.  # noqa: E501


        Returns:
            (bool, none_type): The boolean_prop of this NullableClass.  # noqa: E501
        """
        return self._data_store.get('boolean_prop')

    @boolean_prop.setter
    def boolean_prop(
            self, boolean_prop):
        """Sets the boolean_prop of this NullableClass.


        Returns:
            (bool, none_type): The boolean_prop of this NullableClass.  # noqa: E501
        """

        self.__setitem__(
            'boolean_prop',
            boolean_prop
        )

    @property
    def string_prop(self):
        """Gets the string_prop of this NullableClass.  # noqa: E501


        Returns:
            (str, none_type): The string_prop of this NullableClass.  # noqa: E501
        """
        return self._data_store.get('string_prop')

    @string_prop.setter
    def string_prop(
            self, string_prop):
        """Sets the string_prop of this NullableClass.


        Returns:
            (str, none_type): The string_prop of this NullableClass.  # noqa: E501
        """

        self.__setitem__(
            'string_prop',
            string_prop
        )

    @property
    def date_prop(self):
        """Gets the date_prop of this NullableClass.  # noqa: E501


        Returns:
            (date, none_type): The date_prop of this NullableClass.  # noqa: E501
        """
        return self._data_store.get('date_prop')

    @date_prop.setter
    def date_prop(
            self, date_prop):
        """Sets the date_prop of this NullableClass.


        Returns:
            (date, none_type): The date_prop of this NullableClass.  # noqa: E501
        """

        self.__setitem__(
            'date_prop',
            date_prop
        )

    @property
    def datetime_prop(self):
        """Gets the datetime_prop of this NullableClass.  # noqa: E501


        Returns:
            (datetime, none_type): The datetime_prop of this NullableClass.  # noqa: E501
        """
        return self._data_store.get('datetime_prop')

    @datetime_prop.setter
    def datetime_prop(
            self, datetime_prop):
        """Sets the datetime_prop of this NullableClass.


        Returns:
            (datetime, none_type): The datetime_prop of this NullableClass.  # noqa: E501
        """

        self.__setitem__(
            'datetime_prop',
            datetime_prop
        )

    @property
    def array_nullable_prop(self):
        """Gets the array_nullable_prop of this NullableClass.  # noqa: E501


        Returns:
            ([(bool, date, datetime, dict, float, int, list, str)], none_type): The array_nullable_prop of this NullableClass.  # noqa: E501
        """
        return self._data_store.get('array_nullable_prop')

    @array_nullable_prop.setter
    def array_nullable_prop(
            self, array_nullable_prop):
        """Sets the array_nullable_prop of this NullableClass.


        Returns:
            ([(bool, date, datetime, dict, float, int, list, str)], none_type): The array_nullable_prop of this NullableClass.  # noqa: E501
        """

        self.__setitem__(
            'array_nullable_prop',
            array_nullable_prop
        )

    @property
    def array_and_items_nullable_prop(self):
        """Gets the array_and_items_nullable_prop of this NullableClass.  # noqa: E501


        Returns:
            ([(bool, date, datetime, dict, float, int, list, str, none_type)], none_type): The array_and_items_nullable_prop of this NullableClass.  # noqa: E501
        """
        return self._data_store.get('array_and_items_nullable_prop')

    @array_and_items_nullable_prop.setter
    def array_and_items_nullable_prop(
            self, array_and_items_nullable_prop):
        """Sets the array_and_items_nullable_prop of this NullableClass.


        Returns:
            ([(bool, date, datetime, dict, float, int, list, str, none_type)], none_type): The array_and_items_nullable_prop of this NullableClass.  # noqa: E501
        """

        self.__setitem__(
            'array_and_items_nullable_prop',
            array_and_items_nullable_prop
        )

    @property
    def array_items_nullable(self):
        """Gets the array_items_nullable of this NullableClass.  # noqa: E501


        Returns:
            ([(bool, date, datetime, dict, float, int, list, str, none_type)]): The array_items_nullable of this NullableClass.  # noqa: E501
        """
        return self._data_store.get('array_items_nullable')

    @array_items_nullable.setter
    def array_items_nullable(
            self, array_items_nullable):
        """Sets the array_items_nullable of this NullableClass.


        Returns:
            ([(bool, date, datetime, dict, float, int, list, str, none_type)]): The array_items_nullable of this NullableClass.  # noqa: E501
        """

        self.__setitem__(
            'array_items_nullable',
            array_items_nullable
        )

    @property
    def object_nullable_prop(self):
        """Gets the object_nullable_prop of this NullableClass.  # noqa: E501


        Returns:
            ({str: (bool, date, datetime, dict, float, int, list, str)}, none_type): The object_nullable_prop of this NullableClass.  # noqa: E501
        """
        return self._data_store.get('object_nullable_prop')

    @object_nullable_prop.setter
    def object_nullable_prop(
            self, object_nullable_prop):
        """Sets the object_nullable_prop of this NullableClass.


        Returns:
            ({str: (bool, date, datetime, dict, float, int, list, str)}, none_type): The object_nullable_prop of this NullableClass.  # noqa: E501
        """

        self.__setitem__(
            'object_nullable_prop',
            object_nullable_prop
        )

    @property
    def object_and_items_nullable_prop(self):
        """Gets the object_and_items_nullable_prop of this NullableClass.  # noqa: E501


        Returns:
            ({str: (bool, date, datetime, dict, float, int, list, str, none_type)}, none_type): The object_and_items_nullable_prop of this NullableClass.  # noqa: E501
        """
        return self._data_store.get('object_and_items_nullable_prop')

    @object_and_items_nullable_prop.setter
    def object_and_items_nullable_prop(
            self, object_and_items_nullable_prop):
        """Sets the object_and_items_nullable_prop of this NullableClass.


        Returns:
            ({str: (bool, date, datetime, dict, float, int, list, str, none_type)}, none_type): The object_and_items_nullable_prop of this NullableClass.  # noqa: E501
        """

        self.__setitem__(
            'object_and_items_nullable_prop',
            object_and_items_nullable_prop
        )

    @property
    def object_items_nullable(self):
        """Gets the object_items_nullable of this NullableClass.  # noqa: E501


        Returns:
            ({str: (bool, date, datetime, dict, float, int, list, str, none_type)}): The object_items_nullable of this NullableClass.  # noqa: E501
        """
        return self._data_store.get('object_items_nullable')

    @object_items_nullable.setter
    def object_items_nullable(
            self, object_items_nullable):
        """Sets the object_items_nullable of this NullableClass.


        Returns:
            ({str: (bool, date, datetime, dict, float, int, list, str, none_type)}): The object_items_nullable of this NullableClass.  # noqa: E501
        """

        self.__setitem__(
            'object_items_nullable',
            object_items_nullable
        )

    def to_dict(self):
        """Returns the model properties as a dict"""
        return model_to_dict(self, serialize=False)

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, NullableClass):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
