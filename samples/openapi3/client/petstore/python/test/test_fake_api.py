"""
    OpenAPI Petstore

    This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import unittest

import petstore_api
from petstore_api.api.fake_api import FakeApi  # noqa: E501


class TestFakeApi(unittest.TestCase):
    """FakeApi unit test stubs"""

    def setUp(self):
        self.api = FakeApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_additional_properties_with_array_of_enums(self):
        """Test case for additional_properties_with_array_of_enums

        Additional Properties with Array of Enums  # noqa: E501
        """
        pass

    def test_array_model(self):
        """Test case for array_model

        """
        pass

    def test_array_of_enums(self):
        """Test case for array_of_enums

        Array of Enums  # noqa: E501
        """
        pass

    def test_boolean(self):
        """Test case for boolean

        """
        pass

    def test_composed_one_of_number_with_validations(self):
        """Test case for composed_one_of_number_with_validations

        """
        pass

    def test_download_attachment(self):
        """Test case for download_attachment

        downloads a file using Content-Disposition  # noqa: E501
        """
        pass

    def test_enum_test(self):
        """Test case for enum_test

        Object contains enum properties and array properties containing enums  # noqa: E501
        """
        pass

    def test_fake_health_get(self):
        """Test case for fake_health_get

        Health check endpoint  # noqa: E501
        """
        pass

    def test_get_inline_additionl_properties_ref_payload(self):
        """Test case for get_inline_additionl_properties_ref_payload

        """
        pass

    def test_mammal(self):
        """Test case for mammal

        """
        pass

    def test_number_with_validations(self):
        """Test case for number_with_validations

        """
        pass

    def test_object_model_with_ref_props(self):
        """Test case for object_model_with_ref_props

        """
        pass

    def test_string(self):
        """Test case for string

        """
        pass

    def test_string_enum(self):
        """Test case for string_enum

        """
        pass

    def test_test_body_with_file_schema(self):
        """Test case for test_body_with_file_schema

        """
        pass

    def test_test_body_with_query_params(self):
        """Test case for test_body_with_query_params

        """
        pass

    def test_test_client_model(self):
        """Test case for test_client_model

        To test \"client\" model  # noqa: E501
        """
        pass

    def test_test_endpoint_parameters(self):
        """Test case for test_endpoint_parameters

        Fake endpoint for testing various parameters 假端點 偽のエンドポイント 가짜 엔드 포인트   # noqa: E501
        """
        pass

    def test_test_enum_parameters(self):
        """Test case for test_enum_parameters

        To test enum parameters  # noqa: E501
        """
        pass

    def test_test_group_parameters(self):
        """Test case for test_group_parameters

        Fake endpoint to test group parameters (optional)  # noqa: E501
        """
        pass

    def test_test_inline_additional_properties(self):
        """Test case for test_inline_additional_properties

        test inline additionalProperties  # noqa: E501
        """
        pass

    def test_test_json_form_data(self):
        """Test case for test_json_form_data

        test json serialization of form data  # noqa: E501
        """
        pass

    def test_test_query_parameter_collection_format(self):
        """Test case for test_query_parameter_collection_format

        """
        pass

    def test_upload_download_file(self):
        """Test case for upload_download_file

        uploads a file and downloads a file using application/octet-stream  # noqa: E501
        """
        pass

    def test_upload_file(self):
        """Test case for upload_file

        uploads a file using multipart/form-data  # noqa: E501
        """
        pass

    def test_upload_files(self):
        """Test case for upload_files

        uploads files using multipart/form-data  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
