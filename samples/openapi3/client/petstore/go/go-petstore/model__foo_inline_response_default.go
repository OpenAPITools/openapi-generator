/*
OpenAPI Petstore

This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package petstore

import (
	"encoding/json"
)

// FooInlineResponseDefault struct for FooInlineResponseDefault
type FooInlineResponseDefault struct {
	String *Foo `json:"string,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _FooInlineResponseDefault FooInlineResponseDefault

// NewFooInlineResponseDefault instantiates a new FooInlineResponseDefault object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFooInlineResponseDefault() *FooInlineResponseDefault {
	this := FooInlineResponseDefault{}
	return &this
}

// NewFooInlineResponseDefaultWithDefaults instantiates a new FooInlineResponseDefault object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFooInlineResponseDefaultWithDefaults() *FooInlineResponseDefault {
	this := FooInlineResponseDefault{}
	return &this
}

// GetString returns the String field value if set, zero value otherwise.
func (o *FooInlineResponseDefault) GetString() Foo {
	if o == nil || o.String == nil {
		var ret Foo
		return ret
	}
	return *o.String
}

// GetStringOk returns a tuple with the String field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FooInlineResponseDefault) GetStringOk() (*Foo, bool) {
	if o == nil || o.String == nil {
		return nil, false
	}
	return o.String, true
}

// HasString returns a boolean if a field has been set.
func (o *FooInlineResponseDefault) HasString() bool {
	if o != nil && o.String != nil {
		return true
	}

	return false
}

// SetString gets a reference to the given Foo and assigns it to the String field.
func (o *FooInlineResponseDefault) SetString(v Foo) {
	o.String = &v
}

func (o FooInlineResponseDefault) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.String != nil {
		toSerialize["string"] = o.String
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *FooInlineResponseDefault) UnmarshalJSON(bytes []byte) (err error) {
	varFooInlineResponseDefault := _FooInlineResponseDefault{}

	if err = json.Unmarshal(bytes, &varFooInlineResponseDefault); err == nil {
		*o = FooInlineResponseDefault(varFooInlineResponseDefault)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "string")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFooInlineResponseDefault struct {
	value *FooInlineResponseDefault
	isSet bool
}

func (v NullableFooInlineResponseDefault) Get() *FooInlineResponseDefault {
	return v.value
}

func (v *NullableFooInlineResponseDefault) Set(val *FooInlineResponseDefault) {
	v.value = val
	v.isSet = true
}

func (v NullableFooInlineResponseDefault) IsSet() bool {
	return v.isSet
}

func (v *NullableFooInlineResponseDefault) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFooInlineResponseDefault(val *FooInlineResponseDefault) *NullableFooInlineResponseDefault {
	return &NullableFooInlineResponseDefault{value: val, isSet: true}
}

func (v NullableFooInlineResponseDefault) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFooInlineResponseDefault) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


