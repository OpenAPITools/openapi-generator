/*
OpenAPI Petstore

This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package petstore

import (
	"encoding/json"
)

// checks if the SomeOpsRequiringRefIntRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SomeOpsRequiringRefIntRequest{}

// SomeOpsRequiringRefIntRequest struct for SomeOpsRequiringRefIntRequest
type SomeOpsRequiringRefIntRequest struct {
	MyIDs []int32 `json:"MyIDs,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SomeOpsRequiringRefIntRequest SomeOpsRequiringRefIntRequest

// NewSomeOpsRequiringRefIntRequest instantiates a new SomeOpsRequiringRefIntRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSomeOpsRequiringRefIntRequest() *SomeOpsRequiringRefIntRequest {
	this := SomeOpsRequiringRefIntRequest{}
	return &this
}

// NewSomeOpsRequiringRefIntRequestWithDefaults instantiates a new SomeOpsRequiringRefIntRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSomeOpsRequiringRefIntRequestWithDefaults() *SomeOpsRequiringRefIntRequest {
	this := SomeOpsRequiringRefIntRequest{}
	return &this
}

// GetMyIDs returns the MyIDs field value if set, zero value otherwise.
func (o *SomeOpsRequiringRefIntRequest) GetMyIDs() []int32 {
	if o == nil || IsNil(o.MyIDs) {
		var ret []int32
		return ret
	}
	return o.MyIDs
}

// GetMyIDsOk returns a tuple with the MyIDs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SomeOpsRequiringRefIntRequest) GetMyIDsOk() ([]int32, bool) {
	if o == nil || IsNil(o.MyIDs) {
		return nil, false
	}
	return o.MyIDs, true
}

// HasMyIDs returns a boolean if a field has been set.
func (o *SomeOpsRequiringRefIntRequest) HasMyIDs() bool {
	if o != nil && !IsNil(o.MyIDs) {
		return true
	}

	return false
}

// SetMyIDs gets a reference to the given []int32 and assigns it to the MyIDs field.
func (o *SomeOpsRequiringRefIntRequest) SetMyIDs(v []int32) {
	o.MyIDs = v
}

func (o SomeOpsRequiringRefIntRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SomeOpsRequiringRefIntRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MyIDs) {
		toSerialize["MyIDs"] = o.MyIDs
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SomeOpsRequiringRefIntRequest) UnmarshalJSON(data []byte) (err error) {
	varSomeOpsRequiringRefIntRequest := _SomeOpsRequiringRefIntRequest{}

	err = json.Unmarshal(data, &varSomeOpsRequiringRefIntRequest)

	if err != nil {
		return err
	}

	*o = SomeOpsRequiringRefIntRequest(varSomeOpsRequiringRefIntRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "MyIDs")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSomeOpsRequiringRefIntRequest struct {
	value *SomeOpsRequiringRefIntRequest
	isSet bool
}

func (v NullableSomeOpsRequiringRefIntRequest) Get() *SomeOpsRequiringRefIntRequest {
	return v.value
}

func (v *NullableSomeOpsRequiringRefIntRequest) Set(val *SomeOpsRequiringRefIntRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSomeOpsRequiringRefIntRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSomeOpsRequiringRefIntRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSomeOpsRequiringRefIntRequest(val *SomeOpsRequiringRefIntRequest) *NullableSomeOpsRequiringRefIntRequest {
	return &NullableSomeOpsRequiringRefIntRequest{value: val, isSet: true}
}

func (v NullableSomeOpsRequiringRefIntRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSomeOpsRequiringRefIntRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


