# coding: utf-8

"""
    OpenAPI Petstore

    This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import sys
import unittest
from petstore_api.exceptions import ApiAttributeError

import petstore_api

try:
    from petstore_api.model import mole
except ImportError:
    mole = sys.modules["petstore_api.model.mole"]


class TestMole(unittest.TestCase):
    """Triangle unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def testMole(self):
        # includes required parameters that are `readOnly=False` and not defined `readOnly`
        my_mole = mole.Mole(smell="dirt", hearing=False)
        assert my_mole.smell == "dirt"
        assert my_mole.hearing is False

        # includes required parameters that `readOnly=False`, an optional `readOnly=False` and not defined `readOnly`
        my_mole = mole.Mole(smell="dirt", taste="kfc", hearing=True)
        assert my_mole.smell == "dirt"
        assert my_mole.taste == "kfc"
        assert my_mole.hearing is True

        # includes required parameters that `readOnly=False`, and required not defined `readOnly`, and an optional not defined
        my_mole = mole.Mole(smell="dirt", seeing_ghosts=True, hearing=False)
        assert my_mole.smell == "dirt"
        assert my_mole.seeing_ghosts is True
        assert my_mole.hearing is False

        # passing in required readOnly parameters raises an exception
        with self.assertRaises(ApiAttributeError):
            mole.Mole(smell="dirt", hearing=False, blind=True)

        # passing in optional readOnly parameters raises an exception
        with self.assertRaises(ApiAttributeError):
            mole.Mole(smell="dirt", hearing=False, touch=True)

        # passing in required an optional parameters with readOnly true or false works with from_openapi_data
        my_mole = mole.Mole._from_openapi_data(
            smell="dirt",
            taste="kfc",
            blind=True,
            touch=False,
            hearing=True,
            seeing_ghosts=False,
        )
        assert my_mole.smell == "dirt"
        assert my_mole.taste == "kfc"
        assert my_mole.blind is True
        assert my_mole.touch is False
        assert my_mole.hearing is True
        assert my_mole.seeing_ghosts is False


if __name__ == "__main__":
    unittest.main()
