/**
* OpenAPI Petstore
* This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
*
* The version of the OpenAPI document: 1.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.client.models


import kotlinx.serialization.*
import kotlinx.serialization.internal.CommonEnumSerializer
/**
 * 
 * @param number 
 * @param byte 
 * @param date 
 * @param password 
 * @param integer 
 * @param int32 
 * @param int64 
 * @param float 
 * @param double 
 * @param string 
 * @param binary 
 * @param dateTime 
 * @param uuid 
 * @param patternWithDigits A string that is a 10 digit number. Can have leading zeros.
 * @param patternWithDigitsAndDelimiter A string starting with 'image_' (case insensitive) and one to three digits following i.e. Image_01.
 */
@Serializable
data class FormatTest (
    @SerialName(value = "number") @Required val number: kotlin.Double,
    @SerialName(value = "byte") @Required val byte: org.openapitools.client.infrastructure.Base64ByteArray,
    @SerialName(value = "date") @Required val date: kotlin.String,
    @SerialName(value = "password") @Required val password: kotlin.String,
    @SerialName(value = "integer") val integer: kotlin.Int? = null,
    @SerialName(value = "int32") val int32: kotlin.Int? = null,
    @SerialName(value = "int64") val int64: kotlin.Long? = null,
    @SerialName(value = "float") val float: kotlin.Float? = null,
    @SerialName(value = "double") val double: kotlin.Double? = null,
    @SerialName(value = "string") val string: kotlin.String? = null,
    @SerialName(value = "binary") val binary: org.openapitools.client.infrastructure.OctetByteArray? = null,
    @SerialName(value = "dateTime") val dateTime: kotlin.String? = null,
    @SerialName(value = "uuid") val uuid: kotlin.String? = null,
    /* A string that is a 10 digit number. Can have leading zeros. */
    @SerialName(value = "pattern_with_digits") val patternWithDigits: kotlin.String? = null,
    /* A string starting with 'image_' (case insensitive) and one to three digits following i.e. Image_01. */
    @SerialName(value = "pattern_with_digits_and_delimiter") val patternWithDigitsAndDelimiter: kotlin.String? = null
)

