(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 *)

let fake_health_get () =
    let open Lwt in
    let uri = Request.build_uri "/fake/health" in
    let headers = Request.default_headers in
    Cohttp_lwt_unix.Client.get uri ~headers >>= fun (_resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap  Health_check_result.of_yojson) body

let fake_outer_boolean_serialize body =
    let open Lwt in
    let uri = Request.build_uri "/fake/outer/boolean" in
    let headers = Request.default_headers in
    let body = Request.write_json_body JsonSupport.of_bool body in
    Cohttp_lwt_unix.Client.post uri ~headers ~body >>= fun (_resp, body) ->
    Request.read_json_body_as (JsonSupport.to_bool) body

let fake_outer_composite_serialize outer_composite_t =
    let open Lwt in
    let uri = Request.build_uri "/fake/outer/composite" in
    let headers = Request.default_headers in
    let body = Request.write_json_body Outer_composite.to_yojson outer_composite_t in
    Cohttp_lwt_unix.Client.post uri ~headers ~body >>= fun (_resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap  Outer_composite.of_yojson) body

let fake_outer_number_serialize body =
    let open Lwt in
    let uri = Request.build_uri "/fake/outer/number" in
    let headers = Request.default_headers in
    let body = Request.write_json_body JsonSupport.of_float body in
    Cohttp_lwt_unix.Client.post uri ~headers ~body >>= fun (_resp, body) ->
    Request.read_json_body_as (JsonSupport.to_float) body

let fake_outer_string_serialize body =
    let open Lwt in
    let uri = Request.build_uri "/fake/outer/string" in
    let headers = Request.default_headers in
    let body = Request.write_json_body JsonSupport.of_string body in
    Cohttp_lwt_unix.Client.post uri ~headers ~body >>= fun (_resp, body) ->
    Request.read_json_body_as (JsonSupport.to_string) body

let test_body_with_file_schema file_schema_test_class_t =
    let open Lwt in
    let uri = Request.build_uri "/fake/body-with-file-schema" in
    let headers = Request.default_headers in
    let body = Request.write_json_body File_schema_test_class.to_yojson file_schema_test_class_t in
    Cohttp_lwt_unix.Client.put uri ~headers ~body >>= fun (_resp, body) -> return ()

let test_body_with_query_params query user_t =
    let open Lwt in
    let uri = Request.build_uri "/fake/body-with-query-params" in
    let headers = Request.default_headers in
    let uri = Uri.add_query_param' uri ("query", query) in
    let body = Request.write_json_body User.to_yojson user_t in
    Cohttp_lwt_unix.Client.put uri ~headers ~body >>= fun (_resp, body) -> return ()

let test_client_model client_t =
    let open Lwt in
    let uri = Request.build_uri "/fake" in
    let headers = Request.default_headers in
    let body = Request.write_json_body Client.to_yojson client_t in
    Cohttp_lwt_unix.Client.patch uri ~headers ~body >>= fun (_resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap  Client.of_yojson) body

let test_endpoint_parameters number double pattern_without_delimiter byte integer int32 int64 float string binary date date_time password callback =
    let open Lwt in
    let uri = Request.build_uri "/fake" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param body ("integer", Int32.to_string integer) in
    let body = Request.add_form_encoded_body_param body ("int32", Int32.to_string int32) in
    let body = Request.add_form_encoded_body_param body ("int64", Int64.to_string int64) in
    let body = Request.add_form_encoded_body_param body ("number", string_of_float number) in
    let body = Request.add_form_encoded_body_param body ("float", string_of_float float) in
    let body = Request.add_form_encoded_body_param body ("double", string_of_float double) in
    let body = Request.add_form_encoded_body_param body ("string", string) in
    let body = Request.add_form_encoded_body_param body ("pattern_without_delimiter", pattern_without_delimiter) in
    let body = Request.add_form_encoded_body_param body ("byte", Bytes.to_string byte) in
    let body = Request.add_form_encoded_body_param body ("binary", binary) in
    let body = Request.add_form_encoded_body_param body ("date", date) in
    let body = Request.add_form_encoded_body_param body ("date_time", date_time) in
    let body = Request.add_form_encoded_body_param body ("password", password) in
    let body = Request.add_form_encoded_body_param body ("callback", callback) in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.post uri ~headers ~body >>= fun (_resp, body) -> return ()

let test_enum_parameters enum_header_string_array enum_header_string enum_query_string_array enum_query_string enum_query_integer enum_query_double enum_form_string_array enum_form_string =
    let open Lwt in
    let uri = Request.build_uri "/fake" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add_multi headers "enum_header_string_array" (List.map Enums.show_inline_object_2_enum_form_string_array enum_header_string_array) in
    let headers = Cohttp.Header.add headers "enum_header_string" (Enums.show_enumclass enum_header_string) in
    let uri = Uri.add_query_param uri ("enum_query_string_array", List.map Enums.show_inline_object_2_enum_form_string_array enum_query_string_array) in
    let uri = Uri.add_query_param' uri ("enum_query_string", Enums.show_enumclass enum_query_string) in
    let uri = Uri.add_query_param' uri ("enum_query_integer", Enums.show_enum_query_integer enum_query_integer) in
    let uri = Uri.add_query_param' uri ("enum_query_double", Enums.show_enum_number enum_query_double) in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_params body ("enum_form_string_array", List.map Enums.show_inline_object_2_enum_form_string_array enum_form_string_array) in
    let body = Request.add_form_encoded_body_param body ("enum_form_string", Enums.show_enumclass enum_form_string) in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.get uri ~headers ~body >>= fun (_resp, body) -> return ()

let test_group_parameters required_string_group required_boolean_group required_int64_group string_group boolean_group int64_group =
    let open Lwt in
    let uri = Request.build_uri "/fake" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "required_boolean_group" (string_of_bool required_boolean_group) in
    let headers = Cohttp.Header.add headers "boolean_group" (string_of_bool boolean_group) in
    let uri = Uri.add_query_param' uri ("required_string_group", Int32.to_string required_string_group) in
    let uri = Uri.add_query_param' uri ("required_int64_group", Int64.to_string required_int64_group) in
    let uri = Uri.add_query_param' uri ("string_group", Int32.to_string string_group) in
    let uri = Uri.add_query_param' uri ("int64_group", Int64.to_string int64_group) in
    Cohttp_lwt_unix.Client.delete uri ~headers >>= fun (_resp, body) -> return ()

let test_inline_additional_properties request_body =
    let open Lwt in
    let uri = Request.build_uri "/fake/inline-additionalProperties" in
    let headers = Request.default_headers in
    let body = Request.write_json_body (JsonSupport.of_map_of JsonSupport.of_string) request_body in
    Cohttp_lwt_unix.Client.post uri ~headers ~body >>= fun (_resp, body) -> return ()

let test_json_form_data param param2 =
    let open Lwt in
    let uri = Request.build_uri "/fake/jsonFormData" in
    let headers = Request.default_headers in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param body ("param", param) in
    let body = Request.add_form_encoded_body_param body ("param2", param2) in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.get uri ~headers ~body >>= fun (_resp, body) -> return ()

