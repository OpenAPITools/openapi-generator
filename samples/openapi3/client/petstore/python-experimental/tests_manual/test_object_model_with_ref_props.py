# coding: utf-8

"""
    OpenAPI Petstore

    This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import sys
import unittest

import petstore_api
from petstore_api.enums import Enum
from petstore_api.model.object_model_with_ref_props import ObjectModelWithRefProps
from petstore_api.model.number_with_validations import NumberWithValidations


class TestObjectModelWithRefProps(unittest.TestCase):
    """ObjectModelWithRefProps unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def testObjectModelWithRefProps(self):
        """Test ObjectModelWithRefProps"""
        self.assertEqual(ObjectModelWithRefProps.myNumber, NumberWithValidations)
        self.assertEqual(ObjectModelWithRefProps.myString._types, (str,))
        self.assertEqual(ObjectModelWithRefProps.myBoolean._types, (bool,))

        inst = ObjectModelWithRefProps(myNumber=15.0, myString="a", myBoolean=True)
        assert isinstance(inst, ObjectModelWithRefProps)
        assert isinstance(inst, dict)
        assert set(inst.keys()) == {"myNumber", "myString", "myBoolean"}
        assert inst.myNumber == 15.0
        assert isinstance(inst.myNumber, NumberWithValidations)
        assert inst.myString == "a"
        assert isinstance(inst.myString, ObjectModelWithRefProps.myString)
        assert inst.myBoolean.value == True
        assert inst.myBoolean.name == "TRUE"
        assert isinstance(inst.myBoolean, ObjectModelWithRefProps.myBoolean)
        assert isinstance(inst.myBoolean, Enum)


if __name__ == '__main__':
    unittest.main()
