# coding: utf-8

"""
    OpenAPI Petstore

    This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""

import re  # noqa: F401
import sys  # noqa: F401
import typing  # noqa: F401
import functools  # noqa: F401

from frozendict import frozendict  # noqa: F401

import decimal  # noqa: F401
from datetime import date, datetime  # noqa: F401
from frozendict import frozendict  # noqa: F401
import uuid  # noqa: F401

from petstore_api import schemas  # noqa: F401


class ObjectWithDecimalProperties(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        class properties:
            length = schemas.DecimalSchema
            width = schemas.DecimalSchema
        
            @classmethod
            @property
            def cost(cls) -> typing.Type['Money']:
                return Money
        additional_properties = schemas.AnyTypeSchema
    
    length: MetaOapg.properties.length
    width: MetaOapg.properties.width
    cost: 'Money'

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict, ],
        length: typing.Union[MetaOapg.properties.length, str, schemas.Unset] = schemas.unset,
        width: typing.Union[MetaOapg.properties.width, str, schemas.Unset] = schemas.unset,
        cost: typing.Union['Money', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[MetaOapg.additional_properties, dict, frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes, ],
    ) -> 'ObjectWithDecimalProperties':
        return super().__new__(
            cls,
            *args,
            length=length,
            width=width,
            cost=cost,
            _configuration=_configuration,
            **kwargs,
        )

from petstore_api.model.money import Money
