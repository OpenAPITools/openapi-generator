# coding: utf-8

"""
    OpenAPI Petstore

    This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

import nulltype  # noqa: F401

from petstore_api.model_utils import (  # noqa: F401
    AnyTypeSchema,
    DictSchema,
    ListSchema,
    StrSchema,
    IntSchema,
    FloatSchema,
    DateSchema,
    DateTimeSchema,
    BoolSchema,
    FileSchema,
    class_property,
    cached_property,
    isoparse,
    none_type,
)



class FormatTest(DictSchema):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Attributes:
    integer (int,): 
    int32 (int,): 
    int64 (int,): 
    number (float,): 
    float (float,): 
    double (): 
    string (str,): 
    byte (str,): 
    binary (): 
    date (date,): 
    dateTime (datetime,): 
    uuid (str,): 
    uuidNoExample (str,): 
    password (str,): 
    pattern_with_digits (str,): A string that is a 10 digit number. Can have leading zeros.
    pattern_with_digits_and_delimiter (str,): A string starting with &#39;image_&#39; (case insensitive) and one to three digits following i.e. Image_01.
    _additional_properties (Schema): the definition used for additional properties
        that are not defined in _properties
    """


    class integer(IntSchema):

        _validations = {
            'inclusive_maximum': 100,
            'inclusive_minimum': 10,
            'multiple_of': [2],
        }



    class int32(IntSchema):

        _validations = {
            'inclusive_maximum': 200,
            'inclusive_minimum': 20,
        }

    int64 = IntSchema


    class number(FloatSchema):
        _required = True

        _validations = {
            'inclusive_maximum': 543.2,
            'inclusive_minimum': 32.1,
            'multiple_of': [32.5],
        }



    class _float(FloatSchema):

        _validations = {
            'inclusive_maximum': 987.6,
            'inclusive_minimum': 54.3,
        }

    locals()['float'] = _float
    del locals()['_float']


    class double(FloatSchema):

        _validations = {
            'inclusive_maximum': 123.4,
            'inclusive_minimum': 67.8,
        }



    class string(StrSchema):

        _validations = {
            'regex': [{
                'pattern': r'[a-z]',  # noqa: E501
                'flags': (re.IGNORECASE)
            }],
        }



    class byte(StrSchema):
        _required = True

    binary = FileSchema


    class _date(DateSchema):
        _required = True

    locals()['date'] = _date
    del locals()['_date']
    dateTime = DateTimeSchema
    uuid = StrSchema
    uuidNoExample = StrSchema


    class password(StrSchema):
        _required = True

        _validations = {
            'max_length': 64,
            'min_length': 10,
        }



    class pattern_with_digits(StrSchema):

        _validations = {
            'regex': [{
                'pattern': r'^\d{10}$',  # noqa: E501
            }],
        }



    class pattern_with_digits_and_delimiter(StrSchema):

        _validations = {
            'regex': [{
                'pattern': r'^image_\d{1,3}$',  # noqa: E501
                'flags': (re.IGNORECASE)
            }],
        }

    _additional_properties = AnyTypeSchema

