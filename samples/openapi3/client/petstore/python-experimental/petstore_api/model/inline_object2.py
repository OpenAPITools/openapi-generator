# coding: utf-8

"""
    OpenAPI Petstore

    This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

import nulltype  # noqa: F401

from petstore_api.model_utils import (  # noqa: F401
    AnyTypeSchema,
    DictSchema,
    ListSchema,
    StrSchema,
    IntSchema,
    FloatSchema,
    DateSchema,
    DateTimeSchema,
    BoolSchema,
    FileSchema,
    class_property,
    cached_property,
    isoparse,
    none_type,
)



class InlineObject2(DictSchema):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Attributes:
    enum_form_string_array (list,): Form parameter enum test (string array)
    enum_form_string (str,): Form parameter enum test (string)
    _additional_properties (Schema): the definition used for additional properties
        that are not defined in _properties
    """



    class enum_form_string_array(ListSchema):


        class _items(StrSchema):
            _default_value = "$"

            _enum_info_by_value = {
                ">": ("GREATER_THAN", str),
                "$": ("DOLLAR", str),
            }

            @class_property
            def GREATER_THAN(cls):
                return cls._enum_by_value[">"].GREATER_THAN

            @class_property
            def DOLLAR(cls):
                return cls._enum_by_value["$"].DOLLAR



    class enum_form_string(StrSchema):
        _default_value = "-efg"

        _enum_info_by_value = {
            "_abc": ("_ABC", str),
            "-efg": ("EFG", str),
            "(xyz)": ("XYZ", str),
        }

        @class_property
        def _ABC(cls):
            return cls._enum_by_value["_abc"]._ABC

        @class_property
        def EFG(cls):
            return cls._enum_by_value["-efg"].EFG

        @class_property
        def XYZ(cls):
            return cls._enum_by_value["(xyz)"].XYZ

    _additional_properties = AnyTypeSchema

