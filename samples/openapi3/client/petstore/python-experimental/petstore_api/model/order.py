# coding: utf-8

"""
    OpenAPI Petstore

    This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""

import re  # noqa: F401
import sys  # noqa: F401
import typing  # noqa: F401
import functools  # noqa: F401

from frozendict import frozendict  # noqa: F401

import decimal  # noqa: F401
from datetime import date, datetime  # noqa: F401
from frozendict import frozendict  # noqa: F401

from petstore_api import schemas  # noqa: F401


class Order(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    id = schemas.Int64Schema
    petId = schemas.Int64Schema
    quantity = schemas.Int32Schema
    shipDate = schemas.DateTimeSchema
    
    
    class status(
        schemas.SchemaEnumMakerClsFactory(
            enum_value_to_name={
                "placed": "PLACED",
                "approved": "APPROVED",
                "delivered": "DELIVERED",
            }
        ),
        schemas.StrSchema
    ):
        
        @classmethod
        @property
        def PLACED(cls):
            return cls("placed")
        
        @classmethod
        @property
        def APPROVED(cls):
            return cls("approved")
        
        @classmethod
        @property
        def DELIVERED(cls):
            return cls("delivered")
    complete = schemas.BoolSchema


    def __new__(
        cls,
        *args: typing.Union[dict, frozendict, ],
        id: typing.Union[id, schemas.Unset] = schemas.unset,
        petId: typing.Union[petId, schemas.Unset] = schemas.unset,
        quantity: typing.Union[quantity, schemas.Unset] = schemas.unset,
        shipDate: typing.Union[shipDate, schemas.Unset] = schemas.unset,
        status: typing.Union[status, schemas.Unset] = schemas.unset,
        complete: typing.Union[complete, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Type[schemas.Schema],
    ) -> 'Order':
        return super().__new__(
            cls,
            *args,
            id=id,
            petId=petId,
            quantity=quantity,
            shipDate=shipDate,
            status=status,
            complete=complete,
            _configuration=_configuration,
            **kwargs,
        )
