/*
 * OpenAPI Petstore
 *
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package petstore

import (
	"encoding/json"
	"fmt"
)

// Fruit struct for Fruit
type Fruit struct {
	FruitInterface interface {  }
}

func (s Fruit) MarshalJSON() ([]byte, error) {
	return json.Marshal(s.FruitInterface)
}

func (s *Fruit) UnmarshalJSON(src []byte) error {
	var err error
	var unmarshaledApple *Apple = &Apple{}
	err = json.Unmarshal(src, unmarshaledApple)
	if err == nil {
		s.FruitInterface = unmarshaledApple
		return nil
	}
	var unmarshaledBanana *Banana = &Banana{}
	err = json.Unmarshal(src, unmarshaledBanana)
	if err == nil {
		s.FruitInterface = unmarshaledBanana
		return nil
	}
	return fmt.Errorf("No oneOf model could be deserialized from payload: %s", string(src))
}
type NullableFruit struct {
	value *Fruit
	isSet bool
}

func (v NullableFruit) Get() *Fruit {
	return v.value
}

func (v *NullableFruit) Set(val *Fruit) {
	v.value = val
	v.isSet = true
}

func (v NullableFruit) IsSet() bool {
	return v.isSet
}

func (v *NullableFruit) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFruit(val *Fruit) *NullableFruit {
	return &NullableFruit{value: val, isSet: true}
}

func (v NullableFruit) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFruit) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
