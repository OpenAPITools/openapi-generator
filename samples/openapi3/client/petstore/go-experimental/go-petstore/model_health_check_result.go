/*
 * OpenAPI Petstore
 *
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi
import (
	"encoding/json"
)
// HealthCheckResult Just a string to inform instance is up and running. Make it nullable in hope to get it as pointer in generated model.
type HealthCheckResult struct {
	NullableMessage *string `json:"NullableMessage,omitempty"`
	isExplicitNullNullableMessage bool `json:"-"`
}

// GetNullableMessage returns the NullableMessage field if non-nil, zero value otherwise.
func (o *HealthCheckResult) GetNullableMessage() string {
	if o == nil || o.NullableMessage == nil {
		var ret string
		return ret
	}
	return *o.NullableMessage
}

// GetNullableMessageOk returns a tuple with the NullableMessage field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *HealthCheckResult) GetNullableMessageOk() (string, bool) {
	if o == nil || o.NullableMessage == nil {
		var ret string
		return ret, false
	}
	return *o.NullableMessage, true
}

// HasNullableMessage returns a boolean if a field has been set.
func (o *HealthCheckResult) HasNullableMessage() bool {
	if o != nil && o.NullableMessage != nil {
		return true
	}

	return false
}

// SetNullableMessage gets a reference to the given string and assigns it to the NullableMessage field.
func (o *HealthCheckResult) SetNullableMessage(v string) {
	o.NullableMessage = &v
}

// SetNullableMessageExplicitNull (un)sets NullableMessage to be considered as explicit "null" value
// when serializing to JSON (pass true as argument to set this, false to unset)
// The NullableMessage value is set to nil even if false is passed
func (o *HealthCheckResult) SetNullableMessageExplicitNull(b bool) {
	o.NullableMessage = nil
	o.isExplicitNullNullableMessage = b
}

// MarshalJSON returns the JSON representation of the model.
func (o HealthCheckResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NullableMessage == nil {
		if o.isExplicitNullNullableMessage {
			toSerialize["NullableMessage"] = o.NullableMessage
		}
	} else {
		toSerialize["NullableMessage"] = o.NullableMessage
	}
	return json.Marshal(toSerialize)
}


