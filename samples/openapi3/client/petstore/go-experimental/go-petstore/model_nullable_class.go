/*
 * OpenAPI Petstore
 *
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package petstore

import (
	"bytes"
	"encoding/json"
)

// NullableClass struct for NullableClass
type NullableClass struct {
	IntegerProp *NullableInt32 `json:"integer_prop,omitempty"`
	NumberProp *NullableFloat32 `json:"number_prop,omitempty"`
	BooleanProp *NullableBool `json:"boolean_prop,omitempty"`
	StringProp *NullableString `json:"string_prop,omitempty"`
	DateProp *NullableString `json:"date_prop,omitempty"`
	DatetimeProp *NullableTime `json:"datetime_prop,omitempty"`
	ArrayNullableProp *[]map[string]interface{} `json:"array_nullable_prop,omitempty"`
	ArrayAndItemsNullableProp *[]map[string]interface{} `json:"array_and_items_nullable_prop,omitempty"`
	ArrayItemsNullable *[]map[string]interface{} `json:"array_items_nullable,omitempty"`
	ObjectNullableProp *map[string]map[string]interface{} `json:"object_nullable_prop,omitempty"`
	ObjectAndItemsNullableProp *map[string]map[string]interface{} `json:"object_and_items_nullable_prop,omitempty"`
	ObjectItemsNullable *map[string]map[string]interface{} `json:"object_items_nullable,omitempty"`
}

// GetIntegerProp returns the IntegerProp field value if set, zero value otherwise.
func (o *NullableClass) GetIntegerProp() NullableInt32 {
	if o == nil || o.IntegerProp == nil {
		var ret NullableInt32
		return ret
	}
	return *o.IntegerProp
}

// GetIntegerPropOk returns a tuple with the IntegerProp field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *NullableClass) GetIntegerPropOk() (NullableInt32, bool) {
	if o == nil || o.IntegerProp == nil {
		var ret NullableInt32
		return ret, false
	}
	return *o.IntegerProp, true
}

// HasIntegerProp returns a boolean if a field has been set.
func (o *NullableClass) HasIntegerProp() bool {
	if o != nil && o.IntegerProp != nil {
		return true
	}

	return false
}

// SetIntegerProp gets a reference to the given NullableInt32 and assigns it to the IntegerProp field.
func (o *NullableClass) SetIntegerProp(v NullableInt32) {
	o.IntegerProp = &v
}

// GetNumberProp returns the NumberProp field value if set, zero value otherwise.
func (o *NullableClass) GetNumberProp() NullableFloat32 {
	if o == nil || o.NumberProp == nil {
		var ret NullableFloat32
		return ret
	}
	return *o.NumberProp
}

// GetNumberPropOk returns a tuple with the NumberProp field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *NullableClass) GetNumberPropOk() (NullableFloat32, bool) {
	if o == nil || o.NumberProp == nil {
		var ret NullableFloat32
		return ret, false
	}
	return *o.NumberProp, true
}

// HasNumberProp returns a boolean if a field has been set.
func (o *NullableClass) HasNumberProp() bool {
	if o != nil && o.NumberProp != nil {
		return true
	}

	return false
}

// SetNumberProp gets a reference to the given NullableFloat32 and assigns it to the NumberProp field.
func (o *NullableClass) SetNumberProp(v NullableFloat32) {
	o.NumberProp = &v
}

// GetBooleanProp returns the BooleanProp field value if set, zero value otherwise.
func (o *NullableClass) GetBooleanProp() NullableBool {
	if o == nil || o.BooleanProp == nil {
		var ret NullableBool
		return ret
	}
	return *o.BooleanProp
}

// GetBooleanPropOk returns a tuple with the BooleanProp field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *NullableClass) GetBooleanPropOk() (NullableBool, bool) {
	if o == nil || o.BooleanProp == nil {
		var ret NullableBool
		return ret, false
	}
	return *o.BooleanProp, true
}

// HasBooleanProp returns a boolean if a field has been set.
func (o *NullableClass) HasBooleanProp() bool {
	if o != nil && o.BooleanProp != nil {
		return true
	}

	return false
}

// SetBooleanProp gets a reference to the given NullableBool and assigns it to the BooleanProp field.
func (o *NullableClass) SetBooleanProp(v NullableBool) {
	o.BooleanProp = &v
}

// GetStringProp returns the StringProp field value if set, zero value otherwise.
func (o *NullableClass) GetStringProp() NullableString {
	if o == nil || o.StringProp == nil {
		var ret NullableString
		return ret
	}
	return *o.StringProp
}

// GetStringPropOk returns a tuple with the StringProp field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *NullableClass) GetStringPropOk() (NullableString, bool) {
	if o == nil || o.StringProp == nil {
		var ret NullableString
		return ret, false
	}
	return *o.StringProp, true
}

// HasStringProp returns a boolean if a field has been set.
func (o *NullableClass) HasStringProp() bool {
	if o != nil && o.StringProp != nil {
		return true
	}

	return false
}

// SetStringProp gets a reference to the given NullableString and assigns it to the StringProp field.
func (o *NullableClass) SetStringProp(v NullableString) {
	o.StringProp = &v
}

// GetDateProp returns the DateProp field value if set, zero value otherwise.
func (o *NullableClass) GetDateProp() NullableString {
	if o == nil || o.DateProp == nil {
		var ret NullableString
		return ret
	}
	return *o.DateProp
}

// GetDatePropOk returns a tuple with the DateProp field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *NullableClass) GetDatePropOk() (NullableString, bool) {
	if o == nil || o.DateProp == nil {
		var ret NullableString
		return ret, false
	}
	return *o.DateProp, true
}

// HasDateProp returns a boolean if a field has been set.
func (o *NullableClass) HasDateProp() bool {
	if o != nil && o.DateProp != nil {
		return true
	}

	return false
}

// SetDateProp gets a reference to the given NullableString and assigns it to the DateProp field.
func (o *NullableClass) SetDateProp(v NullableString) {
	o.DateProp = &v
}

// GetDatetimeProp returns the DatetimeProp field value if set, zero value otherwise.
func (o *NullableClass) GetDatetimeProp() NullableTime {
	if o == nil || o.DatetimeProp == nil {
		var ret NullableTime
		return ret
	}
	return *o.DatetimeProp
}

// GetDatetimePropOk returns a tuple with the DatetimeProp field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *NullableClass) GetDatetimePropOk() (NullableTime, bool) {
	if o == nil || o.DatetimeProp == nil {
		var ret NullableTime
		return ret, false
	}
	return *o.DatetimeProp, true
}

// HasDatetimeProp returns a boolean if a field has been set.
func (o *NullableClass) HasDatetimeProp() bool {
	if o != nil && o.DatetimeProp != nil {
		return true
	}

	return false
}

// SetDatetimeProp gets a reference to the given NullableTime and assigns it to the DatetimeProp field.
func (o *NullableClass) SetDatetimeProp(v NullableTime) {
	o.DatetimeProp = &v
}

// GetArrayNullableProp returns the ArrayNullableProp field value if set, zero value otherwise.
func (o *NullableClass) GetArrayNullableProp() []map[string]interface{} {
	if o == nil || o.ArrayNullableProp == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.ArrayNullableProp
}

// GetArrayNullablePropOk returns a tuple with the ArrayNullableProp field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *NullableClass) GetArrayNullablePropOk() ([]map[string]interface{}, bool) {
	if o == nil || o.ArrayNullableProp == nil {
		var ret []map[string]interface{}
		return ret, false
	}
	return *o.ArrayNullableProp, true
}

// HasArrayNullableProp returns a boolean if a field has been set.
func (o *NullableClass) HasArrayNullableProp() bool {
	if o != nil && o.ArrayNullableProp != nil {
		return true
	}

	return false
}

// SetArrayNullableProp gets a reference to the given []map[string]interface{} and assigns it to the ArrayNullableProp field.
func (o *NullableClass) SetArrayNullableProp(v []map[string]interface{}) {
	o.ArrayNullableProp = &v
}

// GetArrayAndItemsNullableProp returns the ArrayAndItemsNullableProp field value if set, zero value otherwise.
func (o *NullableClass) GetArrayAndItemsNullableProp() []map[string]interface{} {
	if o == nil || o.ArrayAndItemsNullableProp == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.ArrayAndItemsNullableProp
}

// GetArrayAndItemsNullablePropOk returns a tuple with the ArrayAndItemsNullableProp field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *NullableClass) GetArrayAndItemsNullablePropOk() ([]map[string]interface{}, bool) {
	if o == nil || o.ArrayAndItemsNullableProp == nil {
		var ret []map[string]interface{}
		return ret, false
	}
	return *o.ArrayAndItemsNullableProp, true
}

// HasArrayAndItemsNullableProp returns a boolean if a field has been set.
func (o *NullableClass) HasArrayAndItemsNullableProp() bool {
	if o != nil && o.ArrayAndItemsNullableProp != nil {
		return true
	}

	return false
}

// SetArrayAndItemsNullableProp gets a reference to the given []map[string]interface{} and assigns it to the ArrayAndItemsNullableProp field.
func (o *NullableClass) SetArrayAndItemsNullableProp(v []map[string]interface{}) {
	o.ArrayAndItemsNullableProp = &v
}

// GetArrayItemsNullable returns the ArrayItemsNullable field value if set, zero value otherwise.
func (o *NullableClass) GetArrayItemsNullable() []map[string]interface{} {
	if o == nil || o.ArrayItemsNullable == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.ArrayItemsNullable
}

// GetArrayItemsNullableOk returns a tuple with the ArrayItemsNullable field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *NullableClass) GetArrayItemsNullableOk() ([]map[string]interface{}, bool) {
	if o == nil || o.ArrayItemsNullable == nil {
		var ret []map[string]interface{}
		return ret, false
	}
	return *o.ArrayItemsNullable, true
}

// HasArrayItemsNullable returns a boolean if a field has been set.
func (o *NullableClass) HasArrayItemsNullable() bool {
	if o != nil && o.ArrayItemsNullable != nil {
		return true
	}

	return false
}

// SetArrayItemsNullable gets a reference to the given []map[string]interface{} and assigns it to the ArrayItemsNullable field.
func (o *NullableClass) SetArrayItemsNullable(v []map[string]interface{}) {
	o.ArrayItemsNullable = &v
}

// GetObjectNullableProp returns the ObjectNullableProp field value if set, zero value otherwise.
func (o *NullableClass) GetObjectNullableProp() map[string]map[string]interface{} {
	if o == nil || o.ObjectNullableProp == nil {
		var ret map[string]map[string]interface{}
		return ret
	}
	return *o.ObjectNullableProp
}

// GetObjectNullablePropOk returns a tuple with the ObjectNullableProp field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *NullableClass) GetObjectNullablePropOk() (map[string]map[string]interface{}, bool) {
	if o == nil || o.ObjectNullableProp == nil {
		var ret map[string]map[string]interface{}
		return ret, false
	}
	return *o.ObjectNullableProp, true
}

// HasObjectNullableProp returns a boolean if a field has been set.
func (o *NullableClass) HasObjectNullableProp() bool {
	if o != nil && o.ObjectNullableProp != nil {
		return true
	}

	return false
}

// SetObjectNullableProp gets a reference to the given map[string]map[string]interface{} and assigns it to the ObjectNullableProp field.
func (o *NullableClass) SetObjectNullableProp(v map[string]map[string]interface{}) {
	o.ObjectNullableProp = &v
}

// GetObjectAndItemsNullableProp returns the ObjectAndItemsNullableProp field value if set, zero value otherwise.
func (o *NullableClass) GetObjectAndItemsNullableProp() map[string]map[string]interface{} {
	if o == nil || o.ObjectAndItemsNullableProp == nil {
		var ret map[string]map[string]interface{}
		return ret
	}
	return *o.ObjectAndItemsNullableProp
}

// GetObjectAndItemsNullablePropOk returns a tuple with the ObjectAndItemsNullableProp field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *NullableClass) GetObjectAndItemsNullablePropOk() (map[string]map[string]interface{}, bool) {
	if o == nil || o.ObjectAndItemsNullableProp == nil {
		var ret map[string]map[string]interface{}
		return ret, false
	}
	return *o.ObjectAndItemsNullableProp, true
}

// HasObjectAndItemsNullableProp returns a boolean if a field has been set.
func (o *NullableClass) HasObjectAndItemsNullableProp() bool {
	if o != nil && o.ObjectAndItemsNullableProp != nil {
		return true
	}

	return false
}

// SetObjectAndItemsNullableProp gets a reference to the given map[string]map[string]interface{} and assigns it to the ObjectAndItemsNullableProp field.
func (o *NullableClass) SetObjectAndItemsNullableProp(v map[string]map[string]interface{}) {
	o.ObjectAndItemsNullableProp = &v
}

// GetObjectItemsNullable returns the ObjectItemsNullable field value if set, zero value otherwise.
func (o *NullableClass) GetObjectItemsNullable() map[string]map[string]interface{} {
	if o == nil || o.ObjectItemsNullable == nil {
		var ret map[string]map[string]interface{}
		return ret
	}
	return *o.ObjectItemsNullable
}

// GetObjectItemsNullableOk returns a tuple with the ObjectItemsNullable field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *NullableClass) GetObjectItemsNullableOk() (map[string]map[string]interface{}, bool) {
	if o == nil || o.ObjectItemsNullable == nil {
		var ret map[string]map[string]interface{}
		return ret, false
	}
	return *o.ObjectItemsNullable, true
}

// HasObjectItemsNullable returns a boolean if a field has been set.
func (o *NullableClass) HasObjectItemsNullable() bool {
	if o != nil && o.ObjectItemsNullable != nil {
		return true
	}

	return false
}

// SetObjectItemsNullable gets a reference to the given map[string]map[string]interface{} and assigns it to the ObjectItemsNullable field.
func (o *NullableClass) SetObjectItemsNullable(v map[string]map[string]interface{}) {
	o.ObjectItemsNullable = &v
}

type NullableNullableClass struct {
	Value NullableClass
	ExplicitNull bool
}

func (v NullableNullableClass) MarshalJSON() ([]byte, error) {
    switch {
    case v.ExplicitNull:
        return []byte("null"), nil
    default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableNullableClass) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
