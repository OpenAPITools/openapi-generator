/*
 * OpenAPI Petstore
 *
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package petstore

import (
	"encoding/json"
)

// ShapeInterface struct for ShapeInterface
type ShapeInterface struct {
	ShapeType string `json:"shapeType"`
}

// NewShapeInterface instantiates a new ShapeInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShapeInterface(shapeType string, ) *ShapeInterface {
	this := ShapeInterface{}
	this.ShapeType = shapeType
	return &this
}

// NewShapeInterfaceWithDefaults instantiates a new ShapeInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShapeInterfaceWithDefaults() *ShapeInterface {
	this := ShapeInterface{}
	return &this
}

// GetShapeType returns the ShapeType field value
func (o *ShapeInterface) GetShapeType() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ShapeType
}

// GetShapeTypeOk returns a tuple with the ShapeType field value
// and a boolean to check if the value has been set.
func (o *ShapeInterface) GetShapeTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ShapeType, true
}

// SetShapeType sets field value
func (o *ShapeInterface) SetShapeType(v string) {
	o.ShapeType = v
}

func (o ShapeInterface) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["shapeType"] = o.ShapeType
	}
	return json.Marshal(toSerialize)
}

type NullableShapeInterface struct {
	value *ShapeInterface
	isSet bool
}

func (v NullableShapeInterface) Get() *ShapeInterface {
	return v.value
}

func (v *NullableShapeInterface) Set(val *ShapeInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableShapeInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableShapeInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShapeInterface(val *ShapeInterface) *NullableShapeInterface {
	return &NullableShapeInterface{value: val, isSet: true}
}

func (v NullableShapeInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShapeInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
