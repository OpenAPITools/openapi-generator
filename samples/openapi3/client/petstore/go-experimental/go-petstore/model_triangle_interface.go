/*
 * OpenAPI Petstore
 *
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package petstore

import (
	"encoding/json"
)

// TriangleInterface struct for TriangleInterface
type TriangleInterface struct {
	TriangleType string `json:"triangleType"`
}

// NewTriangleInterface instantiates a new TriangleInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTriangleInterface(triangleType string, ) *TriangleInterface {
	this := TriangleInterface{}
	this.TriangleType = triangleType
	return &this
}

// NewTriangleInterfaceWithDefaults instantiates a new TriangleInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTriangleInterfaceWithDefaults() *TriangleInterface {
	this := TriangleInterface{}
	return &this
}

// GetTriangleType returns the TriangleType field value
func (o *TriangleInterface) GetTriangleType() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.TriangleType
}

// GetTriangleTypeOk returns a tuple with the TriangleType field value
// and a boolean to check if the value has been set.
func (o *TriangleInterface) GetTriangleTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TriangleType, true
}

// SetTriangleType sets field value
func (o *TriangleInterface) SetTriangleType(v string) {
	o.TriangleType = v
}

func (o TriangleInterface) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["triangleType"] = o.TriangleType
	}
	return json.Marshal(toSerialize)
}

type NullableTriangleInterface struct {
	value *TriangleInterface
	isSet bool
}

func (v NullableTriangleInterface) Get() *TriangleInterface {
	return v.value
}

func (v *NullableTriangleInterface) Set(val *TriangleInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableTriangleInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableTriangleInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTriangleInterface(val *TriangleInterface) *NullableTriangleInterface {
	return &NullableTriangleInterface{value: val, isSet: true}
}

func (v NullableTriangleInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTriangleInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
