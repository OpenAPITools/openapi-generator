/*
 * test
 * test
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.JSON;
import org.openapitools.client.model.MySchemaNameCharactersAllOf;
import org.openapitools.client.model.Parent;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for MySchemaNameCharacters
 */
public class MySchemaNameCharactersTest {
    private final MySchemaNameCharacters model = new MySchemaNameCharacters();

    /**
     * Model tests for MySchemaNameCharacters
     */
    @Test
    public void testMySchemaNameCharacters() {
        String objJson = "{ \"objectType\": \"MySchemaName._-Characters\", \"prop2\":\"some_value\" }";
        try {
            JSON j = new JSON();
            MySchemaNameCharacters obj = j.getMapper().readValue(objJson, MySchemaNameCharacters.class);
            Assertions.assertEquals(obj.getObjectType(), "MySchemaName._-Characters");
            Assertions.assertEquals(obj.getProp2(), "some_value");
        } catch (Exception ex) {
            Assertions.fail("Exception '" + ex.getMessage() + "' should not have been raised");
        }
    }

    /**
     * Test the property 'objectType'
     */
    @Test
    public void objectTypeTest() {
        // TODO: test objectType
    }

    /**
     * Test the property 'prop2'
     */
    @Test
    public void prop2Test() {
        // TODO: test prop2
    }

}
