dist: trusty
sudo: required
language: java
addons:
  apt:
    packages:
      - openjdk-6-jdk
jdk: openjdk6

cache:
  directories:
  - $HOME/.m2
  - $HOME/.ivy2
  - $HOME/.gradle/caches/
  - $HOME/.gradle/wrapper/
  - $HOME/samples/client/petstore/javascript/node_modules
  - $HOME/samples/client/petstore/php/OpenAPIToolsClient-php/vendor
  - $HOME/samples/client/petstore/ruby/vendor/bundle
  - $HOME/samples/client/petstore/python/.venv/
  - $HOME/samples/client/petstore/typescript-node/npm/node_modules
  - $HOME/samples/client/petstore/typescript-node/npm/typings/
  - $HOME/samples/client/petstore/typescript-fetch/tests/default/node_modules
  - $HOME/samples/client/petstore/typescript-fetch/tests/default/typings
  - $HOME/samples/client/petstore/typescript-fetch/builds/default/node_modules
  - $HOME/samples/client/petstore/typescript-fetch/builds/default/typings
  - $HOME/samples/client/petstore/typescript-fetch/builds/es6-target/node_modules
  - $HOME/samples/client/petstore/typescript-fetch/builds/es6-target/typings
  - $HOME/samples/client/petstore/typescript-fetch/builds/with-npm-version/node_modules
  - $HOME/samples/client/petstore/typescript-fetch/npm/with-npm-version/typings
  - $HOME/samples/client/petstore/typescript-angular/node_modules
  - $HOME/samples/client/petstore/typescript-angular/typings
  - $HOME/samples/server/petstore/rust-server/target
  - $HOME/perl5
  - $HOME/.cargo
  - $HOME/.stack

services:
  - docker

before_install:
  # show host table to confirm petstore.swagger.io is mapped to localhost
  - cat /etc/hosts

install:
   - jdk_switcher use openjdk6 
   - java -version

script:
  # fail fast
  - set -e
  # fail if templates/generators contain carriage return '\r'
  - /bin/bash ./bin/utils/detect_carriage_return.sh
  # fail if generators contain merge conflicts
  - /bin/bash ./bin/utils/detect_merge_conflict.sh
  # fail if generators contain tab '\t'
  - /bin/bash ./bin/utils/detect_tab_in_java_class.sh
  # run integration tests defined in maven pom.xml
  #- mvn --quiet clean install
  #- mvn --quiet verify -Psamples/client/petstore/java/jersey2-java6
  - ./mvnw -f samples/client/petstore/java/jersey2-java6 test
after_success:
#  # push to maven repo
#  - if [ $SONATYPE_USERNAME ] && [ -z $TRAVIS_TAG ] && [ "$TRAVIS_PULL_REQUEST" == "false" ]; then
#      if [ "$TRAVIS_BRANCH" = "master" ]; then
#        mvn clean deploy -DskipTests=true -B -U -P release --settings CI/settings.xml;
#        echo "Finished mvn clean deploy for $TRAVIS_BRANCH";
#        pushd .;
#        cd modules/openapi-generator-gradle-plugin;
#        ./gradlew -Psigning.keyId="$SIGNING_KEY" -Psigning.password="$SIGNING_PASSPHRASE" -Psigning.secretKeyRingFile="${TRAVIS_BUILD_DIR}/sec.gpg" -PossrhUsername="${SONATYPE_USERNAME}" -PossrhPassword="${SONATYPE_PASSWORD}" uploadArchives --no-daemon;
#        echo "Finished ./gradlew uploadArchives";
#        popd;
#      elif ([ "$TRAVIS_BRANCH" == "3.1.x" ] || [ "$TRAVIS_BRANCH" == "4.0.x" ]) ; then
#        mvn clean deploy --settings CI/settings.xml;
#        echo "Finished mvn clean deploy for $TRAVIS_BRANCH";
#        pushd .;
#        cd modules/openapi-generator-gradle-plugin;
#        ./gradlew -PossrhUsername="${SONATYPE_USERNAME}" -PossrhPassword="${SONATYPE_PASSWORD}" uploadArchives --no-daemon;
#        echo "Finished ./gradlew uploadArchives";
#        popd;
#      fi;
#    fi;
#  ## docker: build and push openapi-generator-online to DockerHub
#  - if [ $DOCKER_HUB_USERNAME ]; then echo "$DOCKER_HUB_PASSWORD" | docker login --username=$DOCKER_HUB_USERNAME --password-stdin && docker build -t $DOCKER_GENERATOR_IMAGE_NAME ./modules/openapi-generator-online && if [ ! -z "$TRAVIS_TAG" ]; then docker tag $DOCKER_GENERATOR_IMAGE_NAME:latest $DOCKER_GENERATOR_IMAGE_NAME:$TRAVIS_TAG; fi && if [ ! -z "$TRAVIS_TAG" ] || [ "$TRAVIS_BRANCH" = "master" ]; then docker push $DOCKER_GENERATOR_IMAGE_NAME && echo "Pushed to $DOCKER_GENERATOR_IMAGE_NAME"; fi; fi
#  ## docker: build cli image and push to Docker Hub
#  - if [ $DOCKER_HUB_USERNAME ]; then echo "$DOCKER_HUB_PASSWORD" | docker login --username=$DOCKER_HUB_USERNAME --password-stdin && docker build -t $DOCKER_CODEGEN_CLI_IMAGE_NAME ./modules/openapi-generator-cli && if [ ! -z "$TRAVIS_TAG" ]; then docker tag $DOCKER_CODEGEN_CLI_IMAGE_NAME:latest $DOCKER_CODEGEN_CLI_IMAGE_NAME:$TRAVIS_TAG; fi && if [ ! -z "$TRAVIS_TAG" ] || [ "$TRAVIS_BRANCH" = "master" ]; then docker push $DOCKER_CODEGEN_CLI_IMAGE_NAME && echo "Pushed to $DOCKER_CODEGEN_CLI_IMAGE_NAME"; fi; fi

env:
  - DOCKER_GENERATOR_IMAGE_NAME=openapitools/openapi-generator-online DOCKER_CODEGEN_CLI_IMAGE_NAME=openapitools/openapi-generator-cli NODE_ENV=test
