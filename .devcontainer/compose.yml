services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      # [Optional] You can use build args to set options. e.g. 'VARIANT' below affects the image in the Dockerfile
      args:
        VARIANT: '11'
        INSTALL_MAVEN: 'true'
        INSTALL_GRADLE: 'false'
        NODE_VERSION: 'lts/*'

    volumes:
      # This is where VS Code should expect to find your project's source code and the value of "workspaceFolder" in .devcontainer/devcontainer.json
      - ..:/workspace:cached

      # Uncomment the next line to use Docker from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker-compose for details.
      # - /var/run/docker.sock:/var/run/docker.sock

    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity

    # Runs app on the same network as the service container, allows "forwardPorts" in devcontainer.json function.
    # network_mode: service:petstore

    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)

    # Uncomment the next line to use a non-root user for all processes - See https://aka.ms/vscode-remote/containers/non-root for details.
    # user: vscode

    # Uncomment the next four lines if you will use a ptrace-based debugger like C++, Go, and Rust.
    # cap_add:
    #   - SYS_ADMIN
    security_opt:
      - seccomp:/var/lib/docker/codespacemount/workspace/openapi-generator/.devcontainer/chrome.json

  # You can include other services not opened by VS Code as well
  # petstore:
  #   image: swaggerapi/petstore
  #   restart: unless-stopped
  #   environment:
  #     SWAGGER_HOST: http://petstore.swagger.io
  #     SWAGGER_BASE_PATH: /v2

    # As in the "app" service, use "forwardPorts" in **devcontainer.json** to forward an app port locally.
